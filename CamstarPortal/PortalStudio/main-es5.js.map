{"version":3,"sources":["webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/alert/alert.component.ts","webpack:///src/app/alert/alert.modal.component.ts","webpack:///src/app/alert/alert.module.ts","webpack:///src/app/alert/alert.service.ts","webpack:///src/app/alert/alert.ts","webpack:///src/app/alert/index.ts","webpack:///src/app/app.module.ts","webpack:///src/app/authorization/authorization.module.ts","webpack:///src/app/authorization/authorization.service.ts","webpack:///src/app/authorization/index.ts","webpack:///src/app/authorization/login.dialog.component.ts","webpack:///src/app/authorization/login.dialog.component.html","webpack:///src/app/authorization/start.component.ts","webpack:///src/app/common/objects/common.ts","webpack:///src/app/common/objects/fieldDirectoryBase.ts","webpack:///src/app/common/objects/historyLog.ts","webpack:///src/app/common/objects/viewModel.ts","webpack:///src/app/common/services/convertor.service.ts","webpack:///src/app/common/services/dataAccessors.ts","webpack:///src/app/common/services/dataValue.service.ts","webpack:///src/app/common/services/label.service.ts","webpack:///src/app/common/services/local.service.ts","webpack:///src/app/common/services/metadata.service.ts","webpack:///src/app/common/services/pageGrouping.service.ts","webpack:///src/app/common/services/portal.service.ts","webpack:///src/app/common/services/portalSettings.service.ts","webpack:///src/app/common/services/studioStateService.ts","webpack:///src/app/common/services/wcf.service.ts","webpack:///src/app/core/app/app.component.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/index.ts","webpack:///src/app/core/routing.ts","webpack:///src/app/layout/design/control/controlBase.component.ts","webpack:///src/app/layout/design/control/controlContainer.component.ts","webpack:///src/app/layout/design/control/controlContainer.component.html","webpack:///src/app/layout/design/control/controlManager.ts","webpack:///src/app/layout/design/control/controlMapping.service.ts","webpack:///src/app/layout/design/control/templates/BooleanSwitch.component.ts","webpack:///src/app/layout/design/control/templates/BooleanSwitchDesign.html","webpack:///src/app/layout/design/control/templates/businessObject.component.ts","webpack:///src/app/layout/design/control/templates/BusinessObjectDesign.html","webpack:///src/app/layout/design/control/templates/button.component.ts","webpack:///src/app/layout/design/control/templates/ButtonDesign.html","webpack:///src/app/layout/design/control/templates/checkBox.component.ts","webpack:///src/app/layout/design/control/templates/CheckBoxDesign.html","webpack:///src/app/layout/design/control/templates/colorPicker.component.ts","webpack:///src/app/layout/design/control/templates/ColorPickerDesign.html","webpack:///src/app/layout/design/control/templates/containerList.component.ts","webpack:///src/app/layout/design/control/templates/ContainerListDesign.html","webpack:///src/app/layout/design/control/templates/containerListGrid.component.ts","webpack:///src/app/layout/design/control/templates/ContainerListGridDesign.html","webpack:///src/app/layout/design/control/templates/crystalReport.component.ts","webpack:///src/app/layout/design/control/templates/CrystalReportDesign.html","webpack:///src/app/layout/design/control/templates/dataCollection.component.ts","webpack:///src/app/layout/design/control/templates/DataCollectionDesign.html","webpack:///src/app/layout/design/control/templates/dateChooser.component.ts","webpack:///src/app/layout/design/control/templates/DateChooserDesign.html","webpack:///src/app/layout/design/control/templates/dropDownList.component.ts","webpack:///src/app/layout/design/control/templates/DropDownListDesign.html","webpack:///src/app/layout/design/control/templates/duration.component.ts","webpack:///src/app/layout/design/control/templates/DurationDesign.html","webpack:///src/app/layout/design/control/templates/fileInput.component.ts","webpack:///src/app/layout/design/control/templates/FileInputDesign.html","webpack:///src/app/layout/design/control/templates/generic.component.ts","webpack:///src/app/layout/design/control/templates/GenericDesign.html","webpack:///src/app/layout/design/control/templates/htmlPanel.component.ts","webpack:///src/app/layout/design/control/templates/HTMLPanelDesign.html","webpack:///src/app/layout/design/control/templates/iframe.component.ts","webpack:///src/app/layout/design/control/templates/IframeDesign.html","webpack:///src/app/layout/design/control/templates/image.component.ts","webpack:///src/app/layout/design/control/templates/ImageControlDesign.html","webpack:///src/app/layout/design/control/templates/inquiry.component.ts","webpack:///src/app/layout/design/control/templates/InquiryDesign.html","webpack:///src/app/layout/design/control/templates/instructionText.component.ts","webpack:///src/app/layout/design/control/templates/InstructionTextDesign.html","webpack:///src/app/layout/design/control/templates/jqDataGrid.component.ts","webpack:///src/app/layout/design/control/templates/JQDataGridDesign.html","webpack:///src/app/layout/design/control/templates/jqTabContainer.companent.ts","webpack:///src/app/layout/design/control/templates/CombinedControlDesign.html","webpack:///src/app/layout/design/control/templates/label.component.ts","webpack:///src/app/layout/design/control/templates/LabelDesign.html","webpack:///src/app/layout/design/control/templates/linkButton.component.ts","webpack:///src/app/layout/design/control/templates/LinkButtonDesign.html","webpack:///src/app/layout/design/control/templates/multiSelectPickList.component.ts","webpack:///src/app/layout/design/control/templates/MultiSelectPickListDesign.html","webpack:///src/app/layout/design/control/templates/namedObject.component.ts","webpack:///src/app/layout/design/control/templates/NamedObjectDesign.html","webpack:///src/app/layout/design/control/templates/pageTab.component.ts","webpack:///src/app/layout/design/control/templates/PageTabDesign.html","webpack:///src/app/layout/design/control/templates/piMetric.componen.ts","webpack:///src/app/layout/design/control/templates/PIMetricDesign.html","webpack:///src/app/layout/design/control/templates/plmVis.component.ts","webpack:///src/app/layout/design/control/templates/PlmVisWebDesign.html","webpack:///src/app/layout/design/control/templates/radioButton.component.ts","webpack:///src/app/layout/design/control/templates/RadioButtonDesign.html","webpack:///src/app/layout/design/control/templates/readOnly.component.ts","webpack:///src/app/layout/design/control/templates/ReadOnlyDesign.html","webpack:///src/app/layout/design/control/templates/revisionedObject.component.ts","webpack:///src/app/layout/design/control/templates/RevisionedObjectDesign.html","webpack:///src/app/layout/design/control/templates/ribbonContainer.companent.ts","webpack:///src/app/layout/design/control/templates/scaleControl.component.ts","webpack:///src/app/layout/design/control/templates/ScaleControlDesign.html","webpack:///src/app/layout/design/control/templates/scrollableMenu.component.ts","webpack:///src/app/layout/design/control/templates/ScrollableMenuDesign.html","webpack:///src/app/layout/design/control/templates/sectionDropDown.companent.ts","webpack:///src/app/layout/design/control/templates/sectionDropDownMobile.companent.ts","webpack:///src/app/layout/design/control/templates/slideMenu.component.ts","webpack:///src/app/layout/design/control/templates/SlideMenuDesign.html","webpack:///src/app/layout/design/control/templates/statusMessage.component.ts","webpack:///src/app/layout/design/control/templates/StatusMessageDesign.html","webpack:///src/app/layout/design/control/templates/textBox.component.ts","webpack:///src/app/layout/design/control/templates/TextBoxDesign.html","webpack:///src/app/layout/design/control/templates/textEditor.component.ts","webpack:///src/app/layout/design/control/templates/TextEditorDesign.html","webpack:///src/app/layout/design/control/templates/title.component.ts","webpack:///src/app/layout/design/control/templates/TitleDesign.html","webpack:///src/app/layout/design/control/templates/toggleContainer.companent.ts","webpack:///src/app/layout/design/control/templates/unknown.component.ts","webpack:///src/app/layout/design/control/templates/webPartsWrapperControl.companent.ts","webpack:///src/app/layout/design/control/templates/workflowNavigator.componen.ts","webpack:///src/app/layout/design/control/templates/WorkflowNavigatorDesign.html","webpack:///src/app/layout/design/design-root.component.ts","webpack:///src/app/layout/design/design-root.component.html","webpack:///src/app/layout/design/design.component.ts","webpack:///src/app/layout/design/design.component.html","webpack:///src/app/layout/design/design.module.ts","webpack:///src/app/layout/design/designPageflow.component.ts","webpack:///src/app/layout/design/designPageflow.component.html","webpack:///src/app/layout/design/gridWizard/gridWizard.component.ts","webpack:///src/app/layout/design/gridWizard/gridWizard.component.html","webpack:///src/app/layout/design/gridWizard/gridWizard.service.ts","webpack:///src/app/layout/design/gridWizard/gridWizard.ts","webpack:///src/app/layout/design/gridWizard/gridWizardFilter.ts","webpack:///src/app/layout/design/index.ts","webpack:///src/app/layout/design/objects/cellSelection.ts","webpack:///src/app/layout/design/objects/layoutCell.ts","webpack:///src/app/layout/design/objects/layoutManager.ts","webpack:///src/app/layout/design/objects/layoutMenuItem.ts","webpack:///src/app/layout/design/pipes/componentItemFilter.ts","webpack:///src/app/layout/design/pipes/hiddenItemFilter.ts","webpack:///src/app/layout/design/toolbar.component.ts","webpack:///src/app/layout/design/toolbar.component.html","webpack:///src/app/layout/design/whereUsed/whereUsed.component.html","webpack:///src/app/layout/design/whereUsed/whereUsed.component.ts","webpack:///src/app/layout/index.ts","webpack:///src/app/layout/layout.component.ts","webpack:///src/app/layout/layout.component.html","webpack:///src/app/layout/layout.module.ts","webpack:///src/app/layout/personalizationReport/personalizationReport.component.html","webpack:///src/app/layout/personalizationReport/personalizationReport.component.ts","webpack:///src/app/layout/startPage.component.ts","webpack:///src/app/layout/startPage.component.html","webpack:///src/app/layout/tabs.component.ts","webpack:///src/app/layout/tabs.component.html","webpack:///src/app/layout/traceLog/hierarchy.component.ts","webpack:///src/app/layout/traceLog/hierarchy.component.html","webpack:///src/app/layout/traceLog/index.ts","webpack:///src/app/layout/traceLog/rawText.component.ts","webpack:///src/app/layout/traceLog/resubmitRequest.component.ts","webpack:///src/app/layout/traceLog/serviceTraceView.component.ts","webpack:///src/app/layout/traceLog/serviceTraceView.component.html","webpack:///src/app/layout/traceLog/traceItem.component.ts","webpack:///src/app/layout/traceLog/traceLog.component.ts","webpack:///src/app/layout/traceLog/traceLog.component.html","webpack:///src/app/layout/traceLog/traceLog.module.ts","webpack:///src/app/layout/traceLog/traceLog.ts","webpack:///src/app/layout/traceLog/traceRawView.component.ts","webpack:///src/app/layout/xml/xmlTextEditor.component.ts","webpack:///src/app/menu/action-menu.component.ts","webpack:///src/app/menu/action-menu.component.html","webpack:///src/app/menu/actionManager.ts","webpack:///src/app/menu/index.ts","webpack:///src/app/menu/menu.module.ts","webpack:///src/app/menu/title-menu.component.ts","webpack:///src/app/menu/title-menu.component.html","webpack:///src/app/panel/index.ts","webpack:///src/app/panel/panel.component.ts","webpack:///src/app/panel/panel.component.html","webpack:///src/app/panel/panel.module.ts","webpack:///src/app/panel/panel.ts","webpack:///src/app/panel/panelSplitter.component.ts","webpack:///src/app/panel/panels/controlPanel.component.ts","webpack:///src/app/panel/panels/controlPanel.component.html","webpack:///src/app/panel/panels/dockArea.component.ts","webpack:///src/app/panel/panels/dockArea.component.html","webpack:///src/app/panel/panels/elementPanel.component.ts","webpack:///src/app/panel/panels/elementPanel.component.html","webpack:///src/app/panel/panels/fieldDirectory.component.ts","webpack:///src/app/panel/panels/fieldDirectory.component.html","webpack:///src/app/panel/panels/portalObjectPanel.component.ts","webpack:///src/app/panel/pipe/element.filter.ts","webpack:///src/app/panel/pipe/fieldDirectory.filter.ts","webpack:///src/app/panel/properties/nameValue.ts","webpack:///src/app/panel/properties/nameValue.html","webpack:///src/app/panel/properties/properties.ts","webpack:///src/app/panel/properties/property.filter.ts","webpack:///src/app/panel/properties/propertyConditions/condition.ts","webpack:///src/app/panel/properties/propertyConditions/conditionDisplay.ts","webpack:///src/app/panel/properties/propertyConditions/editCondition.ts","webpack:///src/app/panel/properties/propertyConditions/editCondition.html","webpack:///src/app/panel/properties/propertyConditions/expression.ts","webpack:///src/app/panel/properties/propertyConditions/expression.html","webpack:///src/app/panel/properties/propertyConditions/index.ts","webpack:///src/app/panel/properties/propertyConditions/initiator.ts","webpack:///src/app/panel/properties/propertyConditions/initiator.html","webpack:///src/app/panel/properties/propertyConditions/propertyCondition.ts","webpack:///src/app/panel/properties/propertyConditions/propertyCondition.html","webpack:///src/app/panel/properties/propertyConditions/propertyConditions.module.ts","webpack:///src/app/panel/properties/propertyConditions/valueCondition.ts","webpack:///src/app/panel/properties/propertyConditions/valueCondition.html","webpack:///src/app/panel/properties/propertyList.ts","webpack:///src/app/panel/properties/propertyList.html","webpack:///src/app/panel/properties/valueEditors/fieldExpression.ts","webpack:///src/app/panel/properties/valueEditors/fieldExpression.html","webpack:///src/app/panel/properties/valueEditors/fieldExpressionDialog.ts","webpack:///src/app/panel/properties/valueEditors/labelSearch.ts","webpack:///src/app/panel/properties/valueEditors/labelSearch.html","webpack:///src/app/panel/properties/valueEditors/margins.ts","webpack:///src/app/panel/properties/valueEditors/modalCollection.ts","webpack:///src/app/panel/properties/valueEditors/modalCollection.html","webpack:///src/app/panel/properties/valueEditors/modalContainer.ts","webpack:///src/app/panel/properties/valueEditors/modalContainer.html","webpack:///src/app/panel/properties/valueEditors/modalObject.ts","webpack:///src/app/panel/properties/valueEditors/pageActionRuleBuilder.component.ts","webpack:///src/app/panel/properties/valueEditors/pageActionRuleBuilder.component.html","webpack:///src/app/panel/properties/valueEditors/portalSettings.ts","webpack:///src/app/panel/properties/valueEditors/queryBuilder.component.ts","webpack:///src/app/panel/properties/valueEditors/queryBuilder.component.html","webpack:///src/app/panel/properties/valueEditors/selector.ts","webpack:///src/app/panel/properties/valueEditors/selector.html","webpack:///src/app/panel/properties/valueEditors/switchBox.ts","webpack:///src/app/panel/properties/valueEditors/targetMatrixRows.component.ts","webpack:///src/app/panel/properties/valueEditors/textBox.ts","webpack:///src/app/panel/properties/valueEditors/webiReports.component.ts","webpack:///src/app/shared/context-menu.directive.ts","webpack:///src/app/shared/dialog/confirm.dialog.component.ts","webpack:///src/app/shared/dialog/confirm.dialog.component.html","webpack:///src/app/shared/dialog/input.dialog.component.ts","webpack:///src/app/shared/dialog/input.dialog.component.html","webpack:///src/app/shared/directives/closable.directive.ts","webpack:///src/app/shared/directives/dialogDecor.directive.ts","webpack:///src/app/shared/directives/draggable.directive.ts","webpack:///src/app/shared/directives/droppable.directive.ts","webpack:///src/app/shared/drag.service.ts","webpack:///src/app/shared/drag.ts","webpack:///src/app/shared/index.ts","webpack:///src/app/shared/inputdialog-addGroup.directive.ts","webpack:///src/app/shared/pipe/label.pipe.ts","webpack:///src/app/shared/pipe/panel-name.pipe.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/studio/index.ts","webpack:///src/app/studio/studio.component.ts","webpack:///src/app/studio/studio.component.html","webpack:///src/app/studio/studio.module.ts","webpack:///src/app/studio/wizard/batchExportImport/batchExport.component.ts","webpack:///src/app/studio/wizard/batchExportImport/batchExport.component.html","webpack:///src/app/studio/wizard/batchExportImport/batchImport.component.ts","webpack:///src/app/studio/wizard/batchExportImport/batchImport.component.html","webpack:///src/app/studio/wizard/batchExportImport/batchProgressPopup.component.ts","webpack:///src/app/studio/wizard/index.ts","webpack:///src/app/studio/wizard/page/pageWizard.component.ts","webpack:///src/app/studio/wizard/page/pageWizard.component.html","webpack:///src/app/studio/wizard/wizard.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AlertComponent","changes","alerts","als","currentValue","statusAlerts","map","sa","alert","remove","alertToRemove","i","findIndex","a","time","splice","filter","modal","selector","template","AlertModalComponent","dialogRef","answer","close","$ev","closeSelectElement","execute","AlertModule","imports","declarations","entryComponents","providers","AlertService","_dialog","_labelService","_snackBar","status","addAlert","IsSuccess","success","danger","err","warning","title","openModalAlert","pipe","action","txt","choice","choices","textOrLabelOrStatus","Name","lbl","arguments","getLabelwithArguments","DefaultValue","getLabel","rs","Message","ExceptionData","Description","t","resolveText","getDefaultTitle","undefined","newAlerts","createAlert","push","snackBarConfig","type","panelClass","duration","ref","open","message","onAction","subscribe","alertType","modalAlert","modalRef","disableClose","am","componentInstance","messageText","messageClass","cancelBtnCaption","primaryBtnCaption","afterClosed","info","Alert","data","Date","now","AlertTypes","AppModule","bootstrap","AuthorizationModule","AuthorizationService","_portalService","isLoginSubject","verifyLogon","authorizationHeader","next","error","console","log","asObservable","username","password","domain","login","resultStatus","authorizationMessage","isLoggedIn","logout","response","header","LoginDialogComponent","_form","_portal","loginForm","group","required","context","dialogMessage","form","value","errorMessage","cancel","templateUrl","styles","StartComponent","_authService","_wcfService","_router","setAuthorization","dialog","initContext","isToken","indexOf","setAuthorizationHeader","authHeader","navigate","DesignModes","UIComponentRef","__type","isLocked","isInDeveloping","hasPublishContent","hasSystemContent","vals","colHeaderIndexes","gets","n","hdrIndex","h","toLowerCase","getb","r","name","description","owner","fullTypeName","dvlp","parseInt","isReference","componentName","w","isStatic","IsStatic","FullTypeName","properties","originalTypeName","PropertyRef","ControlDescriptor","uuid","pref","v","random","toString","substr","length","v1","v2","PortalResult","_data","_error","ChangeOriginators","UpdateDataTypes","CachedComponentType","UpdatedInfo","AnyUpdatedData","originator","timestamp","valueOf","__dataType","val","any","PropertyUpdatedData","old","path","property","ValueUpdatedData","propertyName","valueType","LayoutActions","TopMenuState","newPage","newWebpart","newPageflow","newMenu","newTab","newAction","newActionCategory","newActionRule","save","saveAll","undo","redo","copy","exportAll","run","publish","revert","extract","reloadWebPart","generate","batchExport","batchImport","switchTab","togglePanel","switchWorkspace","resetPanels","ExecuteCommand","cmd","element","PanelCommands","ObjectPanelsUpdatedData","panelName","command","none","objectPanels","StartPage","__unbound","LabelType","TypeCode","QueryType","DirectAccessSubmitResult","PersSectionType","RefreshLevel","RefreshInfo","level","StudioSubjects","menu","panel","layoutMenuUpdate","refresh","nameChanged","refreshElementPanel","deleteElement","propertyPanel","refreshRoot","dropAreas","TypeHandlerParameter","TypeHandler","prms","Parameters","prm","getShortType","Type","join","fullType","typeName","split","last","RevisionedObjectRef","revision","ror","revisionOfRecord","cdoTypeName","TypeProperty","TypeDescriptor","BatchImportExportSettings","LayoutBuilder","rows","cols","layout","columnNumber","rowNumber","tableCells","getTableCells","c","newCell","hidden","col","row","colSpan","rowSpan","isEmpty","isHidden","items","column","staticName","style","ctl","__arrayType","visible","index","getLayout","GroupDef","groupName","icon","groupKey","groupType","isOpen","count","PageGroupDef","deleted","PageGroupDefItem","WhereUsedItemListDef","wepPartName","o","key","setValue","oType","keyLc","fieldKey","Object","find","k","isContainerControl","controlTypeName","includes","DockPanel","DockTab","ContentSection","isIE","test","window","navigator","userAgent","ContextMenuItem","text","opt","checked","linePos","nameItem","ContextMenuItemTypes","ContextMenuItemPositions","FieldDirectoryBase","_studioService","search","pdsearch","list","pdlist","portal","studioState","it","_expanded","ChildItems","loadChildren","openCloseChildren","_selected","forEach","item","refreshTopMenu","onParametric","parametricPanel","loadParamtericData","itemIndex","l","Owner","_hidden","typeDescriptor","getFieldsDirectory","om","ds","OMTypeDescriptor","pddIgnore","ItemType","Root","TypeName","service","srv","IsExpand","setPadding","servicesLoaded","RelativeMode","_draggable","IsBrowseOnly","Metadata","Uid","Link","Service","Field","Property","FieldTypeCode","_imageClass","IsReadOnly","IsInherited","IsList","IsRequired","_nesting","padding","_padding","typeMapping","NamedObjectRef","ContainerRef","SubentityRef","NamedSubentityRef","String","Boolean","Int32","EncryptedField","DateTime","IsEnum","res","fExp","getFieldExpression","oldRel","fullExp","dataSubMode","gridDataMode","dataSubmissionMode","settings","allowDataNaigation","fieldExpressions","columns","editorSettings","editingMode","resolveGridColumns","suffix","HistoryOperation","HistoryLog","_undoStack","undoPointer","RecordCommand","propertyChange","lastRecord","specificData","tryToCombine","LogItem","operation","d","toDisplay","HistoryObjectType","ElementHistoryData","objectType","LayoutHistoryData","layoutBefore","layoutAfter","layoutOwner","Layout","PropertyHistoryData","instance","oldValues","newValues","isName","JSON","stringify","PropertyCategory","caption","OMType","IOMMetadata","IOMTypePosition","CodeBehindDescriptor","ListItemActions","ImageFile","WorkspaceItem","GridColumnDefinition","JQGridCustomScript","ConditionExpression","comparisonType","InitiatorDefinition","SetDataValueItemBase","SetDataValueItem","PropertyConditionExpression","isExpanded","ValueReference","DataMemberConnection","QueryGridParameter","QueryBoundGridParameter","DataContractConnectionType","QueryTypes","QueryData","QueryOptions","QueryParameter","ColumnData","BOAuthenticationType","ConnectionProfileData","HandlerParameter","GridDataModes","WhereUsedItem","HandlerItem","parameters","th","par","hp","s","isString","spl","replace","sp","ps","spp","hs","p","tp","h1","h2","ConvertorService","wp","propList","keyList","ks","root","rootWebparts","convertLayoutRefs","cleanReferencedItem","cell","refItem","findItemByName","_fullTypeName","tabDefinitions","maint","ns","Self","CDOTypeName","xt","warn","lastIndexOf","field","camelCase","Value","isArray","newarray","va","av","isNDORef","convertMaintChangesToModel","isObject","objVal","obj","metadataService","__ns","ch","ownerType","getMetadataType","_name","propValue","pArray","deletedCnt","sorted","sortBy","pv","ListItemAction","ListItemIndex","change","chVal","convertModelToMaintChanges","add","editor","provider","cdoType","startsWith","isNumber","isBoolean","tn","isNew","creatorType","getPropertyCreatorType","__index","tm","st","endsWith","isSystemType","convertSettingsToModel","pr","fn","converted","notNullable","convertModelToSettings","stObj","stType","isAllEmpty","__action","conv","toCamelCase","nf","specified","ignoredKeys","substring","DataAccessors","_studioStateService","_alertService","DataContract","PropertyAccessor","propertyContext","dc","getByKey","linkMap","dataContractMap","links","dataContractReturnMap","returnLinks","dataContract","dataMembers","DynamicWebParts","webParts","ValueReference_DependenceType","changed","connectionType","connectionName","enumValues","propertyProperty","px","requestDataModeProperty","eventProperty","keyProperty","displayedName","directive","options","RequestDataMode","event","requestDataMode","Control_Type","Cell_Column","Cell_ColumnSpan","Cell_Row","Cell_RowSpan","Cell_StyleProp","prop","GridDataMode","settingTypes","settingsType","Margin","thickness_get","thickness_set","Padding","SectionDefinition","lt","sec","section","dynamicWebParts","JQTabContainer_Tabs","maxIndex","tds","td","TagItemSource","tagItemSource","tagItemValue","propertyTagItemValue","SelectionDependsOnItem_DependenceType","dependenceType","dependenceValue","propertyDependenceValue","propertyMethod","propertyServiceName","propertyRequestDataMode","propertyEvent","Content_Layout","RevisionedObjectRef_accessor","ro","vt","GridColumns","pname","fexKey","oldFex","requestSelVal","columnsProperty","openDialog","fieldExp","activeRootElement","servKey","warningModal","mdlLabel","confirmModal","ok","errorModal","query_GridColumnsSetup","oldValue","query","queryParameters","__tempValue","params","obs","getAdHocQueryColumns","RowSetSize","getQueryColumns","ConnectionDefinition_FromWebPart","fromWebPartName","ConnectionDefinition_ToWebPart","toWebPartName","initVal","customScriptHandlers","resVal","isColumn","eventList","iv","Handler","SelectionDataSourceMap_SourceType","sourceType","mp","mapProperties","queryExecutionMode","SelectionDataSourceMap_QueryExecutionMode","SelectionDataSourceMap_Query","pp","PageContent_CSSClass","WebPart_HiddenRootProperty","isRoot","Event_HandlerSource","ctlProp","isClientEvent","handlerProp","EventHandlerMapItem_Handler","handlerItem","parse","toTypeHandler","oldHandler","fromTypeHandler","equals","propertyParameters","EventHandlerMapItem_Parameters","ClientGenericEventHandler_HandlerSource","Intelligence_ReportName","oldRepName","connProfile","conn","ServerDataMember","BOAuthTypeDataMember","Enterprise","propReportName","getReportParameters","crParameters","NameDataMember","propParameters","PageMappingTarget_TargetType","targetProp","LabelName","populating","textPropertyName","textValue","textProperty","TargetMatrixItem_Rows","pColumns","pImportFile","PIMetricQueryName","valType","accessor","setter","getter","names","m","left","top","right","bottom","parseFloat","pc","ValueProviderService","_metadataService","portalService","wcfService","consolidatedDependencies","updated","reload","is","upd","dependencies","cd","providerName","parseOptions","isFunction","call","empty","getCamstarServices","services","selectableServices","addEmptyItem","SelectableItem","ClassName","cache","enums","mdType","result","getRoot","allElements","addingItem","childItems","getAllElements","childCount","concat","Filters","el","fEl","parentPath","ret","addInlineControls","actions","getSessionDataContracts","getModelingInstanceRefs","elements","getSettings","intelligenceSettingsField","dataSourcesField","nameField","getSelectionValues","rpts","Rows","Set","Values","si","has","displayName","queryType","addEmpty","cacheKey","cachedList","getQueryData","queryList","q","Text","ParamCount","gridQueries","qtype","System","User","queryOptions","StartRow","isTrend","queryName","qParameters","param","typeOfHandler","cb","rootType","codeBehind","getActionHandlers","contracts","isTargetFilter","elem","pageName","__parent","mapItem","getPageMaps","first","dx","__mapParameters","x","toPromise","pageLoadedContracts","contractFilter","targetType","target","pageMappingActualParameters","pageDataContracts","gridSettings","sort","b","y","getSuggestedMappingParameters","rootParameters","getElement","getMappings","getImages","images","im","img","portalUrl","Source","ctrl","findElement","activeElement","typeDescriptorSection","typeDescriptors","buildListOfTypeDescriptor","getTypeDescriptor","handlerSource","ctrlName","wpOwner","findElementOwner","typeDesciptor","getExportableMaintServices","getSounds","soundFiles","soundFile","dataSources","getWebiReportsList","displayResultStatusModal","getTargetMatrices","desc","getMethodSignature","Cache","buttons","disabled","controls","parent","LabelService","load","getLangDictionary","labelName","defaultValue","args","_dictionary","substituteString","create","_categories","complete","getLabelCategories","categories","categoryId","labelSearchName","labelSearchText","getLabels","labels","getStudioLabels","LocalService","getStateFromLocalStorage","_localState","userProfile","displayCatalog","displayToolbox","displayProperty","displayTraceViewer","saveStateToLocalStorage","initializeState","removeElementHistory","elementRef","elementHistory","existingElement","eh","slice","oldName","SessionID","favProperties","fp","pnames","wName","pages","whereUsedPageList","whereUsedWebPartList","pageGroups","pageGroupName","pg","newGrpK","newName","existGrp","pageGroup","addPageGroup","isDelItem","existingGroup","existingLocalPages","addPageToGroup","Array","localStorageState","localStorage","getItem","historySize","pop","setItem","MetadataService","ready","__propertyCategories","propertyCategories","mergedObs","getMetadata","md","getDescriptions","getWorkspaces","ws","getWebPartsList","cs","AllTypes","propertyDescriptions","workspaces","nonVirtualWebparts","AllSettings","metadata","_types","basePropertyTypeLc","basePropertyTypeExt","ct","_abstract","pt","baseTypeNames","workspace","wsCode","ID","Code","bt","trimEnd","vp","withDependencies","namesp","getMetadataTypes","_namespace","addWithNS","sysTypes","pe","_typeDescriptors","PageGroupingService","_localService","_settingsService","systemGroups","grp","SpecialGroups","_pageAssignments","assignPages","dataType","below","page","g","getPageGroups","gr","selected","above","pageItems","pitems","removedGroup","grps","lgr","gk","localeCompare","removePageFromGroup","refreshGroups","nameLabelName","nameLabelText","studioSettings","getSectionData","kx","PageAssignment","pa","resetSettingsPageGroups","sgrp","removeGroup","namePage","nameGroup","allGrp","editPageGroup","PortalService","_http","_convertorService","_services_cache","_portalUrl","pwd","IsEncrypted","tzOffset","getTimezoneOffset","profile","Password","UTCOffset","body","resProc","LogonResult","_profile","setUserProfile","keepSessionAlive","getAuthorizationHeader","post","timeoutTime","setInterval","handleError","getUserProfile","resp","contract","DataMembersDataMember","categoryIds","labelCategoryIds","searchLabelName","searchText","searchLabelText","category","Category","codeBehindDef","typename","qName","isSelVal","op","getGridColumns","fileName","directory","dataBytes","xml","xmlDoc","DOMParser","parseFromString","nl","documentElement","getElementsByTagName","tg","itemParameters","attributes","pmref","getMilliseconds","subscriber","_getTargetMatrixItemFromXml","getAttribute","childNodes","localName","attrs","nameAttr","getNamedItem","captionAttr","textContent","cells","cx","ii","valAttr","colName","clx","c1","tvAttr","targetValue","pageMapping","sourcePagesField","actionField","responseOut","resField","getOperationUrl","getHeaders","parsedResponse","targetMatrixItem","initDocXml","de","cl","createElementNS","setAttribute","appendChild","rl","cll","oSerializer","XMLSerializer","serializeToString","metadataCall","wsps","Sequence","orderBy","Color","componentCacheType","getCachedComponentType","_nonVirtualWebPartsCache","fromControlWebPart","defaultPageRole","trLog","reverse","reports","reportName","excelData","excel","uriOfimage","toolboxImage","assembly","designImage","cdo","types","elementName","workspaceCode","componentCall","compToSave","cloneDeep","__maint","processPortalResponse","dataArray","inpParams","content","__statusMessage","errRes","isDirty","optPar","dataEncodeUTF16","buf","ArrayBuffer","bufView","Uint16Array","charCodeAt","dataUTF16","blob","Blob","msSaveBlob","url","URL","createObjectURL","document","createElement","display","href","click","isDev","xmlContent","Uint8Array","array","from","__xml","elementSerialize","elType","toContent","wpName","fromCharCode","messageLength","dataLength","ab","datablob","ExportTo","fd","FormData","opts","PostedFile","OverrideIfExists","SelectedWorkspaces","size","append","BatchImportResult","headers","errorXml","errText","startReason","endReason","startText","baseFieldExp","width","colType","editable","edProperties","FieldExpressions","Label","editorProperties","resultList","createGridColumn","retVal","Page","WebPart","Pageflow","Tab","Menu","Action","PortalSettingsService","_convertor","_alert","sectionNames","convSettings","languageSettingsField","languagesField","saveSettings","loadType","configTypes","sx","ss","sn","SettingSection","conf","cnvSettings","__name","mdTypes","CellVisitorContext","ItemVisitorContext","searchingItem","StudioStateService","panels","displayCellPosition","openedElements","cachedWebparts","hideStart","showSplash","subjects","_checkedElements","startPage","addOpenedElement","AllCheckedElements","doCheck","checkedSubj","tempCheckedElements","foundIndex","isDesignedElement","scaleValue","activateRootElement","activateElement","__selectedElement","refreshHowLong","oldSelectedOwner","findOwnerOfElement","refreshElement","removedWebParts","layoutActions","control","setDirty","findOwnerOfElementOrCell","panelType","ms","diffMin","Math","floor","days","howLongValue","hours","oe","__designMode","Controls","len","existingElementIndex","searchInput","displayMode","layoutManager","elementInDesign","__layoutManager","executeCommand","cellOwner","findCellOwner","findCellTabContainer","clearSelection","selectCell","activateCell","updateLayoutMenu","getCommands","oldElement","newElement","nameKey","rx","exec","getUniqueName","cellItem","nextKey","generateNewIndex","_ref","cont","vis","stop","cellIterator","hist","history","Control","Webpart","itemCmd","findCellById","cellId","addElement","removeElement","move","fromCellId","moveElement","replaceWebpart","pk","selectItem","visitor","tabContainer","tab","itemContainer","itemIterator","container","found","visitorContext","itemName","findCellByElement","removed","lm","removeCellItem","removeItem","hr","writeHistory","sourceElement","targetCell","sourceCell","sourceOwner","copyEl","targetOwner","removeElementFromCell","keysOfItems","getRefWebpartsFromState","findElementByCellId","elName","isUnique","isTabContainer","so","stack","getObjPath","__topMenu","componentRef","color","rootWs","pathParts","parentItem","startElement","primaryServiceType","getPrimaryService","rc","hItem","recordHistoryItem","exist","findOwnerOfItem","oldname","newname","renameLayoutRefs","__workspace","WCFService","_headers","ph","svc","force","selValeCache","inf","RequestSelectionValues","RequestSelectionValuesInfo","infoData","getData","Info","Environment","SelectionValues","requestData","rqData","request","getUrl","alertError","env","refs","fromSelectionValueRow","Headers","getCDOTypeName","cdoName","loadNDOInstance","ndo","RequestValue","__new","methods","ServiceMethod","Cdo","debugRequest","inputXml","DebugRequest","outputXml","wcfUrl","AppComponent","COMPONENTS","CoreModule","parentModule","initRoutes","component","pathMatch","appRoutes","appRoutingProviders","Routing","forRoot","enableTracing","ControlComponentBase","simpleControl","layoutContainerControl","_labelPositions","defaultPosition","controlManager","getControlProperty","isLayoutContainer","__element","changeDetection","OnPush","ControlContainerComponent","_cd","_studioState","_controlMappingService","_componentfactoryResolver","buildComponent","refreshSubscription","unsubscribe","destroy","setActiveTab","componentType","getControlComponent","componentFactory","resolveComponentFactory","controlHolder","clear","createComponent","getControlModel","collapsible","isCollapsed","showCollapsed","refreshComponent","markForCheck","stopPropagation","activateControl","read","ControlTab","Visible","labelText","LabelText","elementTabModel","Index","ControlManager","elementModel","elementType","controlProperties","setupTabs","intToArray","propertyValue","valueFound","propName","getOwnPropertyNames","intProp","fill","css","attr","margin","tabOrName","tabs","activeTab","isActive","getControlTabs","hasTabs","firstVisibleIndex","controlType","serverControlType","wpTypeName","emptyWp","created","toISOString","ControlMappingService","BooleanSwitchComponent","BusinessObjectComponent","ButtonComponent","CheckBoxComponent","ColorPickerComponent","ContainerListComponent","ContainerListGridComponent","CrystalReportComponent","DataCollectionComponent","DateChooserComponent","DropDownListComponent","DurationComponent","FileInputComponent","GenericComponent","HTMLPanelComponent","IframeComponent","ImageComponent","InquiryComponent","InstructionTextComponent","JQDataGridComponent","JQTabContainer","LabelComponent","LinkButtonComponent","MultiSelectPickListComponent","NamedObjectComponent","PageTabComponent","PIMetricComponent","PlmVisComponent","RadioButtonComponent","ReadOnlyComponent","RevisionedObjectComponent","RibbonContainer","ScaleControlComponentBase","ScrollableMenuComponent","SectionDropDown","SectionDropDownMobile","SlideMenuComponent","StatusMessageComponent","TextBoxComponent","TextEditorComponent","TitleComponent","ToggleContainer","UnknownComponent","WebPartsWrapperControl","WorkflowNavigatorComponent","DesignRootComponent","_drag","DesignModesEnum","refreshRootSubscription","designChanged","readonly","drop","dropZoneElement","parentElement","findLayoutCellById","addElementToCell","__root","customWorkspaceColor","getCustomWorkspaceColor","loadRefWebparts","croot","con","Xml","getRefWebparts","getWebpartElement","webpart","storeRefWebpart","addWebpartToItems","initDesign","wpr","__loaded","wps","mode","Design","xmlChanged","applyXmlChanges","isSuccess","$event","rootElement","applyXml","replaceElement","cmds","selection","getEnabledCommands","cmdEnabled","di","dndItem","dragModel","addDragData","fromElement","fromCell","addWebpartControl","newScaleVal","__zoomXml","titleLabel","messageLabel","copyLabel","referenceLabel","confirmContext","isPrimary","getWorkspaceCodeById","shortControlTypeName","nonVirtWP","isSelected","elementIconClass","detectChanges","controlElement","boxStyle","reloadXml","updatePropertyPanel","xmlText","elementToXml","__xmlChanged","PersonalizationReport","WhereUsed","styleUrls","DesignComponent","_alertservice","isRootWebpart","isParentReference","designClass","isTabbed","nonVirtualWp","isAlwaysCollapsed","studioSubjects","designElement","dropTypes","initDesignComponent","selectSubscription","getReferenceWebpartFromServer","__collapsed","ping","ctrlPressed","copyName","recordElementToHistory","addNewControl","addDataGridControl","createNewControl","controlInit","addControlToCell","wizardLabel","defaultLabel","newGrid","height","initializeNewGrid","grid","ownerWp","refreshControl","sel","setupReferenceWebpart","setDesignElement","controlMgr","reset","tabname","tabElement","getActiveTabElement","wsValue","wsVal","actTabName","tabToSelect","existingWebpart","actCell","ow","lc","findLayoutCell","linked","DesignModule","PageflowDesignComponent","_el","xmlns","nodeHeight","finalNodeKey","pfNodeType","pfTransitionType","valueUpdatedSubscription","vc","onPropertyChanged","svgElement","nativeElement","parentNode","tempLine","PfPathUI","x1","x2","y1","y2","paths","node","nodeType","PfNodeTypeEnum","Start","transition","targetNode","Activity","PfPageUI","nodeCoord","getNodeCordinates","location","isStart","trans","to","toLocation","calculatePathCoordinates","selectedNodeObj","isStartPage","selectedElement","nodeObj","selectedTransObj","getBoundingClientRect","ratioX","ratioY","some","pUI","off","getOffset","newNodeObj","createNodeObj","setStartPage","createTransitionObj","capturedNode","pageX","start","dy","pageY","isHeaderCaptured","moveNode","isBodyCaptured","insertPage","skipSvgClick","altKey","shiftKey","ctrlKey","selectedNode","deleteNode","selectedPath","deletePath","addNewPath","svgMouseUp","coord","getLocationCoordinates","PfNode","PfTransition","insertBefore","svgLinesContainer","locationXY","NaN","xy","nodeLayout","startNodeObj","getStartNodeObj","targetModel","addNewNode","onDrop","over","model","svgKeyUp","svgMouseMove","svgClick","PfNodeLayout","GridWizardComponent","fb","_dialogRef","gridModes","iconUrl","editModes","columnTypes","gridSelectionModes","gridForm","requestFieldExpressions","actionButtons","enableAdd","enableEdit","enableDelete","enableRefresh","enableExportData","visibleAdd","visibleEdit","visibleDelete","visibleRefresh","visibleExportData","queryText","definedQuery","mappings","state","checkAllColumn","selectedColumnType","titleText","rowId","selectionMode","submitDataMode","get","valueChanges","updateValueAndValidity","queryGroup","clearQueryParameters","back","valid","validate","initializeNextForm","gridName","isNameUnique","isControlNameUnique","okLabel","displayWarning","getEnumValue","selectionModeField","isRequiredOnSubmitField","isRequiredOnSubmit","allowDataNavigationField","allowDataNavigation","navigatorActions","validStatus","cancelLabel","warningContext","constructor","onQueryTypeChange","initColumnForm","initRowForm","initActionButtonForm","gridSourceType","formControlName","formControl","newdialog","dataMode","editMode","enable","qry","getQueryParameters","removeAt","loadColumnsFromFieldExpression","loadColumnsFromSelectionValues","loadColumnsFromQuery","fieldExpression","addService","loadColumns","selectionValuesExpressions","columnTypeIndex","columnType","f","serviceType","direction","columnsObj","getRawValue","oldControl","at","setControl","rowColumns","submitFields","columnName","submitField","displaySubmitDataMode","colExp","label","newDialog","stringVal","nvPairs","GridWizardService","GridDataSource","GridFieldExpression","GridQuery","GridEditMode","ItemList","SubEntityList","PredefinedQuery","AdHocQuery","Generic","DataTable","GridActionButton","requestFieldExpression","GridColumnSetup","GridName","Enable","disable","GridRow","selectedColumns","isRowID","submitMode","submitMappings","ColumnName","objectPropertyName","submitModeSpecified","submitColumnMappings","QueryParameters","ConnectionType","Key","GridColumn","GridWizardFilter","CellSelection","area","tbl","needRefresh","matrix","selectArea","end","lastRow","lastCol","mergedCellItems","isInsideSelection","values","_fromCell","selectedNumber","toggleCellPos","merge","removeColumn","removeRow","insertRowBefore","insertRowAfter","insertColumnBefore","insertColumnAfter","CellSelectionState","flatMatrix","flatten","LayoutCell","rowPos","colPos","sectionRowNumber","getCellStyle","Orientation","HorizontalAlignment","VerticalAlignment","LayoutManager","_historyLog","fillLayoutMatrix","_oldTblRows","allCells","ci","layoutModel","rowLength","colLength","isEqual","tblRows","undoCount","redoCount","currentIndex","collapsibleGroups","tc","j","select","itemKey","findKey","removedItems","ind","newItems","spanKey","indexToRemove","spannedCell","cr","removedCell","removedCells","range","removeMatrixColumn","transposedTbl","transpose","rowIndex","transposed","insertColumnMatrix","indexToInsert","rIndex","colIndex","cellHidden","nc","colInsertAtPosition","oldLayout","cloneLayout","mergeSelectedCells","splitSelectedCells","insertRow","insertColumn","newLayout","layoutChange","resetSelected","clone","clonedItems","createEmptyLayout","LayoutMenuItem","enabled","cp","_captions_and_labels","ComponentItemFilter","compItems","HiddenItemFilter","DesignToolbarComponent","onModeChanged","DesignModesValues","k1","match","_layoutMenuItems","layoutMenu","acts","activeMode","emit","ev","layoutCommand","__layoutMenu","sliderValueChanged","modeChanged","WhereUsedReportComponent","pageList","webPartList","loading","refFound","allPages","tempPages","allWebParts","tempWebParts","addPageList","isUsed","wsList","workSpace","setTimeout","checkPage","addWebPartList","checkWebParts","workspaceLbl","nameLbl","loadLabels","getElementRefs","getPageList","getWebPartList","checkLocalStorage","host","LayoutComponent","_element","onLoadElement","inArea","ke","act","activeName","activeType","lblMessage","removeElementFinally","__rootElement","showTraceViewer","LayoutModule","PersonalizationReportComponent","sections","webpartSections","dateStr","formattedStr","isNaN","hour","Number","min","ampm","year","month","day","getHours","minStr","cur","charAt","toUpperCase","vpSectionLbl","descrLbl","titleLbl","behaviorLbl","primarySvcLbl","lastModLbl","lastModByLbl","codeBehindLbl","createdByLbl","typeNameLbl","dataContractsLbl","connTypeLbl","keyLbl","propLbl","openWebPartLbl","controlNameLbl","controlLbl","getControls","ctrls","behaviorType","behaviorTypeMD","enumVals","vpInfoSection","DescriptionLbl","PageName","Title","TitleLbl","Behavior","BehaviorLbl","PrimaryServiceType","PrimaryServiceTypeLbl","LastModified","parseDateString","LastModifiedLbl","LastModifiedBy","LastModifiedByLbl","CodeBehind","CodeBehindLbl","CreatedBy","CreatedByLbl","IsOpen","VirtualPageInfoSection","TypeNameLbl","Workspace","WorkspaceLbl","DataContracts","getDataContractsForSection","wpsection","parseWebpartItem","WorkspaceContent","WebPartName","NameLbl","IsReference","OpenWebPartLbl","ControlLbl","cntrl","parseControlItem","ControlProperties","cntrlProps","parseProperties","props","propType","ary","toLocaleLowerCase","parsePropertyName","pType","valObj","valCntrl","cntrlMD","dcSection","HeaderRows","SortAsc","DataMembers","DataMembersLbl","refWebPart","StartPageComponent","getElementHistory","origin","pathname","cmdExecute","whatsNewLink","helpLink","cdnLink","LayoutTabsComponent","closeElement","closeAndSaveElement","yesLabel","noLabel","on","classList","contains","toggle","__elements","__activeElement","HierarchyComponent","onSelect","getNodeName","build","doSearch","divList","getElementsByClassName","searchString","startIndex","selectedItem","children","scrollIntoView","expanded","nx","childrenNumber","childrenField","listItem","RawTextComponent","viewOnly","textChange","isPlainText","arTxt","ResubmitRequestComponent","_wcf","isCommit","responseLines","debRequest","IncludeRRXML","IncludeTimestamps","TraceToResponseXML","DisableCommit","directAccessSubmit","requestTxt","doc","makeLinesFromXml","submitSuccess","submitMessage","nodeName","nodeValue","hasValue","hasChildren","trim","Response","Request","reqChanged","submit","ServiceTraceViewComponent","searchSubj","strace","getParam","np","getAttr","na","Attributes","Expression","firstParameter","traceItem","trace","DebugResponse","Trace","debugResponse","Ended","Started","endTime","getTime","startTime","EndedMemoryUsage","StartedMemoryUsage","makeNodeName","selectNode","rawViewOpen","resubmitOpen","TraceItemComponent","closed","downloadLinkBtn","querySelector","buildTraceToDownload","buildParameters","Children","buildServiceTraceToDownload","dr","Elapsed","isService","TraceLogComponent","_ch","logItems","serverItems","currentPage","activePage","pn","getTraceLog","getServerTraces","servs","TraceLogModule","TraceLog","TraceItem","ServerTraceItem","TraceItemParameter","TraceItemAttribute","textLine","TraceRawViewComponent","txtLines","hasChidren","getRawText","tr","XmlTextEditorComponent","onTextChanged","aceOptions","enableBasicAutocompletion","enableSnippets","enableLiveAutocompletion","zoom","fs","round","getEditor","setFontSize","activeElementName","onValueChanged","ActionMenuComponent","_portalSettingsService","_actionManager","updateMenu","actionManager","ActionManager","_cmd","portalSettings","getSections","sects","templateSection","_settings","copyTitleLabel","copyInputLabel","inputContext","inputs","elementInput","copyElement","addToElementHistory","addOrUpdateComponentRef","DEBUG_MODE","removeAllText","replaceSystemText","inp","activeComponent","win","focus","files","srcElement","xmlFile","reader","FileReader","onloadend","dataToImport","readAsArrayBuffer","displayHistoryLog","canExecute","isStartOrNotAvailable","isPage","isWebPart","isPageflow","isViewable","isRevertable","isTestable","isAvailableSave","isAnyElementDirty","isDisplayCatalog","isDisplayToolbox","isDisplayProperty","isDisplayTraceViewer","hasOwnProperty","workspaceIndexes","isSystem","isPublished","MenuModule","TitleMenuComponent","subtitle","addWorkspaceStyles","_root","_activeWS","reduce","prev","current","_wsWithContent","_minWS","apply","_activeWsWithContent","_countWsWithContent","selectedWS","createTextNode","head","sheet","insertRule","portalMode","hideTypeName","disableAdding","dial","wsID","changeWorkspace","backToPortal","PanelComponent","_compFactoryResolver","_dragService","dataSource","readOnly","refreshPanel","comp","resolveComponent","loadComponent","viewContainerRef","panelHolder","panelInstance","init","onDestroy","contentCreated","comps","refreshContent","createNew","viewMode","modeClass","inpControl","nameInput","onValChange","startInputName","PanelModule","PanelAction","PanelSettings","iconSrc","collapsed","showActions","showSearch","showNewAction","showRefresh","showName","actionClick","PanelUpdatedData","ReadOnlyLevel","PanelSplitterComponent","_render","panelBefore","draggingClass","started","splitterBar","firstElementChild","resizeEnsure","setStyle","sizeStyle","resizePanel","addClass","removeClass","endOfDrag","dragEnd","dragStart","doResize","isVertical","diffx","diffy","diffSize","initSize","rect","dragAction","onDragging","ControlPanelComponent","dropAreasSubs","designerDropList","dp","listModeLabel","tileModeLabel","detailModeLabel","imgClass","buildDefaultLayout","buildDefaultTabs","buildDefaultContainerListGrid","searchtext","nameFilter","defColumns","automation","shrinkColumnWidthToFit","pagesRequested","rowsPerPage","pager","position","DockAreaComponent","panelCommand","defaultPanel","dockPanels","expandedSection","ElementPanelComponent","_pageGroupingService","draggable","contextMenuItems","zone","defaultView","expandedGroup","isNewAction","rootSubjects","checkedElements","dataSourceName","initActions","refreshSubs","oldViewMode","panelSettings","searchInputSubs","dropAreaSubs","contextMenuEnabled","isItemSelectable","elementGroups","getWebPartGroups","webPartControls","gw","wa","newLabel","treeModeLabel","checkElement","isChecked","checkAll","preventDefault","getContextMenuItems","restoreSettings","contextMenuSelect","FieldDirectoryComponent","loadServices","dragData","togglePanels","PortalObjectPanelComponent","forceReload","observable","ElementFilter","re","FieldDirectorySearchFilter","includedNested","pure","NameValueComponent","rowMode","displayDescription","setFavorite","propCondInitiators","counter","valueChanged","openWizard","inputResized","modalButtonCaption","modalButtonClass","fixEditor","oldHistoryValue","newValue","recordPropertyHistory","valueUpdated","resizeClass","openModal","propertyDescr","_editorName","_oldDirective","instanceType","dialogOptions","favorite","__property","onSelectProperty","toggleFavorite","ModalPropertiesContext","PropertyFilter","complexFilter","groupMode","filtered","p2","favorites","grouped","p3","ng","every","gs","ConditionComponent","valueItem","ConditionDisplayComponent","_metadata","onEditCondition","lines","conditionComparisonEnum","dataMemberConnectionTypeEnum","buildCondition","condition","valueIfTrue","line","txtItem","buildExpression","cond","getField","buildComparison","bwCond","valName","connTypeValue","connType","buildFieldVal","initiators","buildInitiator","displayedFieldName","l1","indent","isLink","isBold","EditConditionComponent","condExp","editCondition","expressionValueChanged","ExpressionComponent","andOr","expression","exp","expressions","and","or","addRemoveGroup","InitiatorComponent","arrayOfSubjects","addSubjects","initiator","addInitiator","PropertyConditionsComponent","newConditionName","conditions","__shortDescription","getShortDesc","instType","ownerProperties","editConditionDialog","valueConditionDialog","getKey","value1","comparisonName","value2","addCondition","PropertyConditionModule","ValueConditionComponent","PropertyListComponent","_dataAccessors","_valueService","_chRef","selectedTab","ViewTabs","unset","showInternalTabs","isRowMode","isSidePanel","descriptionSections","_displayPagesEnabled","internalTabs","setPropertyValue","sidePanel","searchInputSubscription","searchFilter","nameInputSubscription","nv","onNameChanged","nameChangedSubscription","propertyPanelSubscription","onInstanceChanged","onPropertyChangeSubj","descriptionSubscription","descriptionName","descriptionText","pLc","_propertyType","groups","setupPanel","full","showDescription","searchPanelText","getFavProperties","instanceMetadataType","createProperties","populateValue","setValueProvider","createGroups","chain","union","uniq","cat","Group","order","getPropertyValue","callSetter","valueBehavior","nameComponent","behavior","isRefType","ep","nameProperty","selectableItems","getSelectableItems","wscolor","getWorkspaceColor","hasGetter","callGetter","propertyValues","getPropertyValues","dv","enumItem","touched","pl","foundPropKey","dependentProperties","getDependentProperties","pd","propertyChanged","inst","isNameValid","isElement","oldVal","newVal","setFavProperties","Default","ViewTab","FieldExpressionComponent","resultItems","selectResultItem","ri","addResultItem","primarySrv","FieldExpressionDialogComponent","getTitle","LabelSearchComponent","_formBuilder","resultMessage","isAlert","searchForm","selectedLabelName","selectedDefaultText","selectedLocalText","selectedValue","searchName","selectLabel","MarginsComponent","changeVal","ModalCollectionComponent","_chDetection","_studiStateService","hideTypeInName","modelingBehavior","basePropertyType","itemType","cdoRefType","propertyTypes","getSubTypes","_displayedName","selectType","isModelingBehavior","collection","__id","buildItems","propertyList","nameInputSubs","setInstanceName","activePropertyType","originalName","getInstanceName","touch","selectedType","parsed","activePropertyTypeName","newItem","generateNewName","onOver","nameLc","duplicationErrorLabel","dropInf","sourceIndex","targetIndex","moveDown","removedItem","mdl","leaveZone","__reordering","reorderingTop","ModalContainerComponent","propEditor","contentType","closing","beforeClose","ModalObjectComponent","showTypeSelector","lockTypeSelector","setActiveType","_activePropertyType","onChangePropertyType","PageActionRuleBuilderComponent","expItems","propChanged","operations","comparisons","leftValueTypes","Container","Resource","Event","ChangePackage","onFieldChanged","changeText","parseText","expProp","lv","leftValueField","fieldsDirectory","rv","rightValue","HasSelVal","ndoInstances","TimeStamp","expressionItem","lf","Integer","bitwiseOp","leftValueType","getLValue","comparisonOp","getRValue","addExp","bitOp","PortalSettingsComponent","portalSettingsLabel","getSettingsData","activeSection","QueryBuilderComponent","gridMode","queryParametersField","_scroll_to_selected","onBeforeClose","isPredefined","getQueryList","qparams","queryParameter","queryListElement","getAdHocQueryParameters","getPredefQueryParameters","qText","newPrms","typeAheadFilter","qs","existingParameter","qp","StaticValue","_filter","SelectorEditorComponent","showUploadBtn","fileDataReader","uploadedFiles","optionPanelWidth","acPatched","uploadDirectory","fileExtAccept","uploadType","fileItemType","fileDataReaderSubs","uploadFile","uploadedFileName","newFile","valChanged","mx","triggerUnPatch","acTrigger","triggerPatch","panelOpen","openPanel","closePanel","canvas","getElementById","canvasContext","getContext","font","maxOpt","maxBy","displayVal","measureText","isUserInput","displayedIcon","getPrototypeOf","comparer","getMaxWidth","fileElement","uploadFileCtl","file","fileReaderObs","onload","oldTriggerFunctions","_getHostWidth","oldWidth","_getOverlayPosition","ovrPos","withPositions","originX","originY","overlayX","overlayY","resized","SwitchBoxEditorComponent","TargetMatrixRowsComponent","excelDataReader","targetMatrixColumn","excelReaderSubs","targetMatrixFromExcel","tx","excelInputFileCtl","excelFile","targetMatrixRow","targetMatrixCell","addRow","inputFileChanged","inputFileBtnClick","inputType","toLocaleString","convertedValue","setFocus","textInputCtl","wizardDialog","modalWizard","WebiReportsComponent","intelligenceReports","selectedItemName","selectedItemIndex","ContextMenuPopupDirective","trigger","buildMenu","execContext","triggerElement","setProperty","clientX","clientY","menuData","focusFirstItem","openMenu","onContextMenu","ContextMenuInfo","ConfirmDialogComponent","DialogAction","ConfirmDialogContext","InputDialogComponent","input","alertMessage","DialogInput","InputDialogContext","ClosableDirective","_rd","onClose","foreColor","getComputedStyle","spanBtn","listen","onClick","createSvg","removeChild","createSvgLine","circle","createSvgCircle","slash","c2","rad","MouseDiff","DialogDecorDirective","resetPosizionOnResizing","minSize","modalWindow","dragHandle","moveId","moveWindow","moveIt","offsetWidth","offsetHeight","dialogHeight","dialogWidth","updateSize","createResizeHandle","dragId","resizeWindow","resizeIt","resizeHandle","newPos","offsetTop","offsetLeft","updatePosition","newSize","currentWidth","leftPanel","flexBasis","DragDataInfo","DraggableDirective","handleContainer","dragElement","reorder","hndClass","dragging","removeHandle","hnd","createHandle","contPos","offset","imgs","src","txtImgs","txtImg","className","createText","DropDataInfo","DroppableDirective","addZone","removeZone","ItemBase","zoneStyle","zId","DragItem","dragType","DropZone","dragTypes","DragService","_document","_draggables","_draggableWindows","_draggableResizables","_activeMoved","_activeResizable","_dragging","_mouseDown","_zones","initMouseHandlers","dragItem","removedIndex","acceptedTypes","elementId","z","getDragDropId","isZone","getDragOverInfo","dragOverZone","which","_startDragTime","startDragging","mouseUp","_last","_draggingItem","findZone","_lastZone","acceptableZones","accept","zxs","isInside","dropZoneIndex","findZoneIndex","findZoneElement","_lastZoneElement","dropIt","X","Y","getDraggabledItem","dragMode","dragModes","DragInfo","InputDialogAddGroupDirective","isSystemGroup","dockPanel","posDockPanel","backdropClass","addGroup","editGroup","moveToGroup","onMouseClick","LabelPipe","_label","defaultText","labelArgs","PanelNamePipe","MATMODULES","SharedModule","StudioComponent","_converter","_portalElementServiceMap","dockPanelsInit","actionExecute","deleteElementFinally","getPanelType","deletePageMap","deleteTargetMatrixItem","deleteMaint","CommitResult","opened","removeOpenedElement","removeComponentRef","updateComponentCache","displayError","setComponentRef","isReadOnly","setLoadedElement","loadObject","getSvcService","objectName","loaded","existing","activateExistingOpenedElement","getTargetMatrix","getPageMap","convertTargetMatrixToModel","setAll","replaceRoot","loadingElement","loadElement","isSwitchTab","saveRootElement","newCommands","respMessage","importRootElement","exportRootElement","deleteRoot","activateOpenedElement","menuGenerateCommand","batchExportDialog","batchImportDialog","cm","loadNewPageDialog","loadNewElement","loadNewPortalObject","selectedName","firstPublish","convertRefs","publishElement","createPagePermissions","displayResultStatus","loadElementAsync","confMsg","extractWebpart","historyDo","unbound","savePageMap","saveTargetMatrix","closeAfterSave","saveNDOInstance","devState","isNdo","compName","saveNDO","saveElement","isRenamed","renameComponentRef","renameElementHistory","closeOpenedElement","defautMsg","deletedFields","targets","Targets","Conditions","Links","pm","saveTargetMatrixItem","dockPanelName","toggleDisplayTraceViewer","getDockPanel","toggleDisplayCatalog","toggleDisplayToolbox","toggleDisplayProperty","importComponent","fdData","ServiceName","Location","createEmptyWebpartModel","addFieldDirectoryToWebPart","Position","Row","Column","typeDescr","exportComponent","progressPopup","closeAll","getPageByTemplateType","refWebPartNames","contr","exceptionType","exceptionMessage","stackTrace","changeMode","webpartOrError","_fn","splitter","compRef","maintType","StudioModule","BatchExportComponent","exportToFileEnabled","selectedItems","wsCodes","isSelectable","checkedSubs","exportToXml","exportToZip","validationMessage","ws1","Pages","p1","WebParts","Pageflows","exportFileType","BatchImportComponent","selectedFileName","overrideIfExists","currentTarget","selectedFile","inputFileTextKeyDown","overrideIfExistsClick","BatchProgressPopup","PageWizardComponent","_fb","_portalSettings","pageForm","serviceTypes","eproc","templateData","ModelingTemplatePage","ContainerWithEprocedureTemplatePage","ContainerTemplatePage","isEproc","WizardModule","environment","production","iwcf","unescape","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component, Input, OnChanges } from '@angular/core';\r\nimport { Alert } from './alert';\r\n\r\n@Component({\r\n    selector: 'csi-alert',\r\n    template: \r\n    `<div *ngFor=\"let al of statusAlerts\" [class]=\"al.class\" role=\"alert\" title=\"Click to close\" (click)=\"close(al)\">\r\n        <div class=\"alert-time\">{{al.time | date:'mediumTime'}}</div>\r\n        <div>{{al.message}}</div>\r\n     </div>`\r\n})\r\n\r\nexport class AlertComponent implements OnChanges {\r\n    @Input() alerts: Alert[];\r\n\r\n    // Alerts displayed in status area\r\n    statusAlerts: Alert[];\r\n\r\n    ngOnChanges(changes) {\r\n        if (changes.alerts) {\r\n            let als = (<Alert[]>changes.alerts.currentValue);\r\n            this.statusAlerts = als.map(sa => sa);\r\n        }\r\n    }\r\n\r\n    close(alert): void {\r\n        this.remove(alert);\r\n    }\r\n\r\n    remove(alertToRemove: Alert) {\r\n        let i = this.alerts.findIndex(a => a.time == alertToRemove.time);\r\n        if (i != -1) {\r\n            this.alerts.splice(i, 1);\r\n            this.statusAlerts = this.alerts.filter(a => !a.modal);\r\n        }\r\n    }\r\n}","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'csi-alert-modal',\n    template: \n    `<div class=\"csi-modal\">\n        <header [csi-closable]=\"'close'\" (onClose)=\"closeSelectElement($event)\">\n            <span class=\"title\">{{title}}</span>\n        </header>\n        <main><div class=\"alert\">{{messageText}}</div></main>\n        <footer>\n            <div class=\"btns\">\n                <span *ngIf=\"cancelBtnCaption\" class=\"default-btn\" (click)=\"execute('cancel')\">{{cancelBtnCaption}}</span>\n                <span class=\"primary-btn\" (click)=\"execute('primary')\">{{primaryBtnCaption}}</span>\n            </div>\n        </footer>\n    `\n})\n\nexport class AlertModalComponent {\n\n    public messageText: string;\n    public messageClass: string;\n    public title: string;\n    public cancelBtnCaption: string;\n    public primaryBtnCaption: string;\n\n    constructor(private dialogRef: MatDialogRef<AlertModalComponent>) {\n    }\n\n    execute(answer: string): void {\n        this.dialogRef.close(answer);\n    }\n\n    closeSelectElement($ev : Event){\n\n    }\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AlertService } from './alert.service';\r\nimport { AlertComponent } from './alert.component';\r\nimport { AlertModalComponent } from './alert.modal.component';\r\nimport { SharedModule } from '../shared';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        SharedModule\r\n    ],\r\n    declarations: [\r\n        AlertComponent,\r\n        AlertModalComponent\r\n    ],\r\n    exports: [\r\n        AlertComponent\r\n    ],\r\n    entryComponents:[\r\n        AlertModalComponent\r\n    ],\r\n    providers: [\r\n        AlertService\r\n    ]\r\n})\r\nexport class AlertModule {\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { IResultStatus, ILabel } from '../common/objects/common';\nimport { Alert, AlertTypes } from './alert';\nimport { LabelService } from '../common/services/label.service';\n\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Observable } from 'rxjs';\nimport {map } from 'rxjs/operators';\nimport { AlertModalComponent } from './alert.modal.component';\n\n@Injectable()\nexport class AlertService {\n\n    public alerts: Alert[] = [];\n\n    constructor(\n        private _dialog: MatDialog,\n        private _labelService: LabelService,\n        private _snackBar: MatSnackBar) {\n    }\n\n    public init() : void {\n        this.alerts = [];\n    }\n\n    public displayResultStatus(status: IResultStatus) {\n        this.addAlert(status.IsSuccess ? AlertTypes.success : AlertTypes.danger, status, false);\n    }\n\n\n    public error(err: string | IResultStatus | ILabel) {\n        this.addAlert(AlertTypes.danger, err, false);\n    }\n\n    public warning(err: string | IResultStatus | ILabel) {\n        this.addAlert(AlertTypes.warning, err, false);\n    }\n\n    public success(err: string | IResultStatus | ILabel) {\n        this.addAlert(AlertTypes.success, err, false);\n    }\n\n\n    public displayResultStatusModal(status: IResultStatus) {\n        this.addAlert(status.IsSuccess ? AlertTypes.success : AlertTypes.danger, status, true);\n    }\n\n    public warningModal(err: string | IResultStatus | ILabel, title?: string | ILabel): Observable<boolean> {\n        return this.openModalAlert(AlertTypes.warning, err, title).pipe(map(action => action == \"primary\"));\n    }\n    public errorModal(err: string | IResultStatus | ILabel, title?: string | ILabel) {\n        return this.openModalAlert(AlertTypes.danger, err, title);\n    }\n\n    public confirmModal(txt: string | ILabel, title?: string | ILabel): Observable<boolean>  {\n        return this.openModalAlert(AlertTypes.choice, txt, title).pipe(map(action => action == \"primary\"));\n    }\n\n    public choiceModal(txt: string | ILabel, title?: string | ILabel, choices?: ILabel[]): Observable<string>  {\n        return this.openModalAlert(AlertTypes.choice, txt, title, choices);\n    }\n\n    private resolveText(textOrLabelOrStatus: string | IResultStatus | ILabel): string {\n        let txt: string;\n\n        if (typeof textOrLabelOrStatus === \"string\")\n            txt = <string>textOrLabelOrStatus;\n        else if ((<ILabel>textOrLabelOrStatus).Name) {\n            let lbl = <ILabel>textOrLabelOrStatus;\n            txt = lbl.arguments ?\n                this._labelService.getLabelwithArguments(lbl.Name, lbl.DefaultValue, lbl.arguments) :\n                this._labelService.getLabel(lbl.Name, lbl.DefaultValue);\n        }\n        else {\n            let rs = <IResultStatus>textOrLabelOrStatus;\n            txt = rs.Message || (rs.ExceptionData && rs.ExceptionData.Description) || \"\";\n        }\n\n        return txt;\n    }\n\n    private createAlert(t: AlertTypes, err: string | IResultStatus | ILabel, modal: boolean, title?: string | ILabel): Alert {\n\n        let alert: Alert = new Alert(t, this.resolveText(err));\n        alert.modal = modal;\n        alert.title = this.getDefaultTitle(t);\n\n        if (title !== undefined) {\n            alert.title = this.resolveText(title);\n        }\n\n        return alert;\n    }\n\n    private addAlert(t: AlertTypes, err: string | IResultStatus | ILabel, modal: boolean): void {\n\n        let newAlerts = this.alerts.map<Alert>(a => a);\n        let alert = this.createAlert(t, err, modal);\n        if (alert) {\n            newAlerts.push(alert);\n            let snackBarConfig;\n\n            switch (alert.type) {\n                case 1:\n                    snackBarConfig = {\n                        panelClass: 'snack-bar-warning'\n                    };\n                    break;\n                case 3:\n                    snackBarConfig = {\n                        panelClass: 'snack-bar-success',\n                        duration: 3000\n                    };\n                    break;\n            }\n\n            let ref = this._snackBar.open(alert.message, 'Dismiss', snackBarConfig);\n            ref.onAction().subscribe(action => {\n            });\n        }                    \n        this.alerts = newAlerts;\n    }\n\n    private openModalAlert(alertType: AlertTypes, txt: string | IResultStatus | ILabel, title?: string | ILabel, choices?: ILabel[]): Observable<string> {\n        let modalAlert = this.createAlert(alertType, txt, true, title);\n\n        let modalRef = this._dialog.open(AlertModalComponent, {disableClose: true});\n        let am = modalRef.componentInstance;\n        am.messageText = modalAlert.message;\n        am.messageClass = modalAlert.class;\n        am.title = modalAlert.title;\n        am.cancelBtnCaption = (alertType == AlertTypes.choice) ? this._labelService.getLabel('PS_ACTION_CANCEL', 'Cancel') : '';\n        am.primaryBtnCaption = this._labelService.getLabel('PS_ACTION_OK', 'Ok');\n\n        if( !choices ){\n            am.cancelBtnCaption = (alertType == AlertTypes.choice) ? this._labelService.getLabel('PS_ACTION_CANCEL', 'Cancel') : '';\n            am.primaryBtnCaption = this._labelService.getLabel('PS_ACTION_OK', 'Ok');\n        }\n        else{\n            am.cancelBtnCaption = this._labelService.getLabel(choices[0].Name, choices[0].DefaultValue);\n            am.primaryBtnCaption = this._labelService.getLabel(choices[1].Name, choices[1].DefaultValue);\n        }\n        return modalRef.afterClosed();\n    }\n\n    private getDefaultTitle(alertType: AlertTypes): string {\n        let t = '';\n        switch (alertType) {\n            case AlertTypes.success:\n                t = 'Success'; break;\n            case AlertTypes.danger:\n                t = 'Error'; break;\n            case AlertTypes.warning:\n                t = 'Warning'; break;\n            case AlertTypes.choice:\n                t = 'Confirm'; break;\n            case AlertTypes.info:\n                t = 'Info'; break;\n        }\n        return t;\n    }\n\n}\n\n","//class\r\nexport class Alert {\r\n       \r\n    time: number;\r\n    modal: boolean = false;\r\n    title: string;\r\n\r\n    constructor(public type: AlertTypes, public message: string, data?: any) {\r\n        this.time = Date.now();\r\n    }\r\n\r\n    get class(): string {\r\n        return 'alert alert-' + AlertTypes[this.type] + ' alert-dismissible';\r\n    }\r\n}\r\n\r\n//enums\r\nexport enum AlertTypes { info, danger, warning, success, choice }","export * from './alert.module';","import { NgModule, enableProdMode } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule }   from '@angular/forms';\n\n//app modules\nimport { AuthorizationModule } from './authorization';\nimport { CoreModule } from './core';\nimport { SharedModule } from './shared';\nimport { StudioModule } from './studio';\n\n//app components\nimport { AppComponent }  from './core/app/app.component';\n\nenableProdMode();\n\n@NgModule({\n    imports: [\n        //angular modules\n        BrowserModule,\n        FormsModule,\n        //app modules\n        AuthorizationModule,\n        SharedModule,\n        CoreModule,\n        StudioModule\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { NgModule }      from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { LoginDialogComponent } from './login.dialog.component';\r\nimport { StartComponent } from './start.component';\r\nimport { AuthorizationService } from './authorization.service';\r\n\r\n@NgModule({\r\n    id: 'loginModule',\r\n    imports: [\r\n        CommonModule, \r\n        FormsModule, \r\n        ReactiveFormsModule,\r\n    ],\r\n    declarations: [\r\n        LoginDialogComponent,\r\n        StartComponent\r\n    ],\r\n    entryComponents: [\r\n        LoginDialogComponent\r\n    ],\r\n    providers: [\r\n        AuthorizationService\r\n    ]\r\n})\r\nexport class AuthorizationModule { }\r\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { PortalService } from '../common/services/portal.service';\n\n@Injectable()\nexport class AuthorizationService {\n    isLoginSubject = new BehaviorSubject<boolean>(undefined);\n    authorizationHeader: string;\n    authorizationMessage: string;\n\n    constructor(private _portalService: PortalService) {}\n\n    isLoggedIn(): Observable<boolean> {\n        this._portalService.verifyLogon()\n            .subscribe(\n                authorizationHeader => {\n                    if (authorizationHeader) {\n                        this.authorizationHeader = authorizationHeader;\n                        this.isLoginSubject.next(true);\n                    }\n                    else\n                        this.isLoginSubject.next(false);\n                },\n                error => {\n                    console.log(<any>error);\n            });\n        return this.isLoginSubject.asObservable();\n    }\n\n    login(username: string, password: string, domain:string): Observable<boolean> {\n        this._portalService.login(username, password, domain)\n        .subscribe(\n            resultStatus => {                \n                if(resultStatus.error)                     \n                    this.authorizationMessage = resultStatus.error.ExceptionData.Description;\n\n                if(resultStatus.data) {       \n                    this.authorizationHeader = resultStatus.data;               \n                    this.isLoginSubject.next(true);\n                }                \n            },\n            error => {\n                console.log(<any>error);\n            }            \n        );  \n        return this.isLoggedIn();    \n    }\n\n    logout(): void {\n        this._portalService.logout().subscribe(response=>{\n            if(response) {\n                this.authorizationHeader = null;\n                this.isLoginSubject.next(false);\n            }            \n        });        \n    }\n\n    setAuthorizationHeader(header: string): void {\n        if(header) {\n            this.authorizationHeader = header;\n            this.isLoginSubject.next(true);\n        }        \n    }\n    \n}","export * from './authorization.module';","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\n\nimport { PortalService } from '../common/services/portal.service';\n\n@Component({\n    selector: 'csi-login-dialog',\n    templateUrl: 'login.dialog.component.html',\n    styles: [\n        `.main-content {\n            padding: 15px;\n        }\n        .form-footer {\n            padding: 10px;\n        }`\n    ]\n})\n\nexport class LoginDialogComponent implements OnInit {    \n    public loginForm: FormGroup;\n    public dialogMessage: string;\n    public errorMessage: string;\n    constructor(    \n        private _form: FormBuilder,       \n        private _portal: PortalService,\n        private _dialog: MatDialogRef<LoginDialogComponent>) {        \n    }\n\n    ngOnInit(): void {\n        this.loginForm = this._form.group({            \n            username: ['', Validators.required],        // default id maybe set\n            password: ['', Validators.required],        // default password maybe set\n            domain: ['.', Validators.required],\n        });\n    }\n\n    initContext(context: any)\n    {        \n        if(context && context.message)\n             this.dialogMessage = context.message;\n    }    \n\n    login(): void {\n        let form = this.loginForm.value;\n        this._portal.login(form.username, form.password, form.domain)\n        .subscribe(resultStatus => {\n            if(resultStatus.error) {\n                this.errorMessage = resultStatus.error.ExceptionData.Description;\n            }\n                \n            if(resultStatus.data)\n                this._dialog.close(resultStatus.data); //authorizationHeader\n        })    \n    }\n\n    cancel(): void {\n        this._dialog.close();\n    }\n}\n\n\n","<div class=\"csi-modal\" [attr.title]=\"''\">\r\n    <header class=\"header\">\r\n        <span class=\"title\">Login</span>\r\n        <span class=\"close-icon\" (click)=\"cancel()\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></span>\r\n    </header>\r\n    <main class=\"main-content\">\r\n        <form novalidate (ngSubmit)=\"login()\" [formGroup]=\"loginForm\">\r\n            <section class=\"csi-modal-content\">\r\n                <div *ngIf=\"dialogMessage\" [innerHTML]=\"dialogMessage\"></div>\r\n                <div>\r\n                    <label class=\"control-label\">User Name</label>\r\n                    <div>\r\n                        <input type=\"text\" placeholder=\"User Name\" formControlName=\"username\" />\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <label class=\"control-label\">Password</label>\r\n                    <div>\r\n                        <input type=\"password\" placeholder=\"Password\" formControlName=\"password\" />\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <label class=\"control-label\">Domain</label>\r\n                    <div>\r\n                        <input type=\"text\" placeholder=\"Domain\" formControlName=\"domain\" />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section class=\"form-footer\">\r\n                <span class=\"default-btn\" (click)=\"cancel()\">Cancel</span>\r\n                <span>\r\n                <button class=\"primary-btn\" type=\"submit\" [disabled]=\"!loginForm.valid\">Login</button>\r\n            </span>\r\n            </section>\r\n            <section>\r\n                <div class=\"ls-label-data\" *ngIf=\"errorMessage\" [innerHTML]=\"errorMessage\"></div>\r\n            </section>\r\n        </form>\r\n    </main>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthorizationService } from './authorization.service';\nimport { WCFService } from '../common/services/wcf.service';\n\nimport { LoginDialogComponent } from './login.dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n    selector: 'csi-start',\n    template: ``\n})\n\nexport class StartComponent implements OnInit {\n    constructor(\n        private _authService: AuthorizationService,\n        public _dialog: MatDialog,\n        private _wcfService: WCFService,\n        private _router: Router) { }\n\n    ngOnInit(): void {\n        this._authService.isLoggedIn()\n            .subscribe(isLoggedIn => {\n                if (isLoggedIn) {\n                    this.setAuthorization(this._authService.authorizationHeader);\n                }\n                else if (isLoggedIn == false) {\n                    let dialog = this._dialog.open(LoginDialogComponent, { disableClose: true });\n                    //init context\n                    let context = { message: '' };\n                    dialog.componentInstance.initContext(context);\n                    dialog.afterClosed().subscribe(authorizationHeader => {\n                        if (authorizationHeader) {\n                            let isToken = authorizationHeader.indexOf('Bearer') > -1;\n                            if (isToken) {\n                                this.setAuthorization(authorizationHeader);\n                                this._authService.setAuthorizationHeader(authorizationHeader);\n                            }\n                        }\n                    });\n                }\n            });\n    }\n    private setAuthorization(authHeader: string) {\n        //this._studioService.setAuthorization(authHeader);\n        this._wcfService.setAuthorization(authHeader);\n        this._router.navigate(['studio']);\n    }\n}\n\n","import { Subject, Observable, BehaviorSubject } from 'rxjs';\nimport { HistoryLog } from './historyLog';\nimport _ from 'lodash';\nimport { IMetadataType, IPropertyMetadata } from './viewModel';\nimport { LayoutMenuItem } from '../../layout/design/objects/layoutMenuItem';\nimport { LayoutManager } from '../../layout/design/objects/layoutManager';\nimport { ICell } from '../../layout/design/objects/layoutCell';\n\nexport interface ILocalState {\n    userProfile: IUserProfile;\n    displayCatalog: boolean;\n    displayToolbox: boolean;\n    displayProperty: boolean;\n    displayTraceViewer: boolean;\n    elementHistory: IElementRef[];\n    favProperties: IFavoriteProperty[];\n    pageGroups: PageGroupDef[];\n    whereUsedPageList : WhereUsedItemListDef[];\n    whereUsedWebPartList : WhereUsedItemListDef[];\n}\n\nexport interface IUserProfile {\n    Name: string;\n    DebugRequest: any;\n    Dictionary: string;\n    Password: IEncryptedField;\n    ServerName: string;\n    SessionID: IEncryptedField;\n    UTCOffset: any /*TimeSpan */;\n}\nexport interface IEncryptedField {\n    IsEncrypted: boolean;\n    Value: string;\n}\n\nexport interface IFavoriteProperty {\n    typeName: string;\n    names: string[];\n}\n\n//Modal\nexport interface IModal {\n\n}\n\nexport enum DesignModes{\n    Controls=1, Design=2, View=3, Xml=4, PersonalizationReport=5, WhereUsed=6\n}\n\nexport interface IUIDesigner extends IElement {\n    isNew: boolean;\n    isReadOnly: boolean;\n    isViewable: boolean;\n    isTestable: boolean;\n    isRoot?: boolean;\n    componentRef: IUIComponentRef;\n    isDirty?: boolean;\n    history: HistoryLog;\n    scaleValue?: number;\n\n    __layoutMenu: LayoutMenuItem[];\n    __topMenu: TopMenuState;\n    __xmlChanged? : boolean;\n}\n\n\n//common objects\nexport interface IElement {\n    name: string;\n    type: string;\n    typeName: string;\n    items: any;\n    id?: string;\n    layout?: any;\n    map?: any;          // workspace property mappings\n    workspaceIndexes? : number[]; \n    isStatic?: boolean;\n    _fullTypeName? : string;\n    removedWebParts? : string[];\n\n    properties?: any;\n    isReference?: boolean;\n    __selectedElement?: IElement | ICell;\n    __designMode? : DesignModes;\n    __layoutManager?: LayoutManager;\n    __xml?: string;\n    __zoomXml?: number;\n    __workspace?: number;\n    __maint?: string;\n    __unbound?: string;\n    __collapsed? : boolean;\n    __type?: string; \n}\n\nexport interface IElementRef {\n    name: string;\n    type: string;\n    description?: string;\n}\n\nexport interface IUIComponentRef extends IElementRef {\n    isStatic: boolean;\n    isLocked: boolean;\n    isReference: boolean;\n    isInDeveloping: boolean;\n    hasPublishContent: boolean;\n    owner: string;\n    __mapParameters: string[];\n\n    readonly __type: string;\n}\n\nexport class UIComponentRef implements IUIComponentRef {\n\n    public readonly __type = 'UIComponentRef';\n\n    public fullTypeName : string;\n    public type : string;\n    public description : string;\n    public name : string;    \n    public categories : string[];\n    public isStatic : boolean;\n\n    public isLocked : boolean;\n    public isReference : boolean;\n    public owner : string;\n    public isInDeveloping : boolean;\n    public hasPublishContent : boolean;\n    public hasSystemContent : boolean;\n    public componentName : string;\n\n    public __mapParameters: string[];\n\n    public get lockMode() : boolean { return this.isLocked; };\n    public get editMode() { return this.isInDeveloping && !this.isLocked; }\n    public get isNotInDevelopingOnly() {return (this.hasPublishContent || this.hasSystemContent) && this.isInDeveloping; };\n\n    public static fromSelectionValueRow(vals : string[], colHeaderIndexes : IHeader[], t: string ) :UIComponentRef {\n        let gets = (n: string) : string => {\n            let hdrIndex = colHeaderIndexes.findIndex(h=> h.Name.toLowerCase() == n);\n            if( hdrIndex != -1 )\n                return vals[hdrIndex];\n            return \"\";\n        }\n        let getb = (n: string) : boolean => {\n            let hdrIndex = colHeaderIndexes.findIndex(h=> h.Name.toLowerCase() == n);\n            if( hdrIndex != -1 )\n                return vals[hdrIndex] === \"true\";\n            return false;\n        }\n        let r = new UIComponentRef();        \n        r.name = gets(\"name\");\n        r.type = t;\n        r.isLocked = getb(\"islocked\");\n        r.description = gets(\"description\");\n        r.owner = gets(\"owner\");\n        r.fullTypeName = gets(\"codebehindfile\");\n        let dvlp = gets(\"developercontentlength\");\n        r.isInDeveloping = dvlp ? (parseInt(dvlp) > 0) : false;\n        r.isReference = true;\n        r.componentName = r.name;\n        return r;\n    }\n    \n    public static fromControlWebPart(w: any){\n        let r = new UIComponentRef();        \n        r.name = w.Name;\n        r.type = 'Webpart';\n        r.isStatic = w.IsStatic;\n        r.fullTypeName = w.FullTypeName;\n        r.isLocked = false;\n        r.hasPublishContent = false;\n        r.isInDeveloping = false;\n        r.isReference = true;\n        r.owner = null;\n        r.componentName = r.name;\n        return r;\n    }\n\n    public static get metadata () : IMetadataType{\n        return <IMetadataType>{\n            properties : [\n                <IPropertyMetadata>{name: \"Name\", originalTypeName : \"string\" },\n                <IPropertyMetadata>{name: \"ComponentName\", originalTypeName : \"string\" },\n                <IPropertyMetadata>{name: \"Description\", originalTypeName : \"string\" },\n                <IPropertyMetadata>{name: \"FullTypeName\", originalTypeName : \"string\" },\n                <IPropertyMetadata>{name: \"IsLocked\", originalTypeName : \"boolean\" },\n                <IPropertyMetadata>{name: \"IsStatic\", originalTypeName : \"boolean\" },\n                <IPropertyMetadata>{name: \"IsInDeveloping\", originalTypeName : \"boolean\" },\n                <IPropertyMetadata>{name: \"Owner\", originalTypeName : \"string\" }\n            ]            \n        }\n    }\n}\n\nexport interface IWebpartRootElement extends IElement {\n    dynamicWebParts: any[];\n    isReference: boolean;\n}\n\nexport interface ICellItemRef {\n    _ref? : boolean;\n    id?: string;\n    type: string;\n    name: string;\n}\nexport interface IMetaData {\n    name: string;\n    type: string;\n}\n\nexport interface IControl {\n    name: string;\n    description: string;\n    toolboxImage: string;\n    designImage: string;\n    designType: string;\n    type: string;\n    typeName: string;\n    assembly: string;\n}\n\n\nexport interface ICamstarService {\n    ClassName: string;\n    Description: string;\n    Namespace: string;\n}\n\nexport interface IWizardState {\n    element: any;\n    next(form: any): IWizardState;\n    back(form: any): IWizardState;\n    save(form: any): any;\n    validate(form: any): string;\n}\n\n//classes\nexport class PropertyRef {\n    name: string;\n    displayedName?: string;\n}\n\n\nexport interface ISelectableItem {\n    name: string;\n    value: any;\n    type?: string;\n    typeName?: string;\n    level?: number;\n    childCount?: number;\n    disabled?: boolean;\n    fullType?: string;\n    img?: string;\n\n    parent?: ISelectableItem;\n}\n\nexport class ControlDescriptor {\n    TypeName: string;\n    Properties: any[];\n}\n\nexport class uuid {\n    static id(pref: string = \"\"): string {\n        if( pref ){\n            let v = _.random(0, 0xFFFF).toString(16);\n            return pref + \"0000\".substr(0, 4 - v.length) + v;\n        }\n        else{\n            let v1 = _.random(0, 0xFFFFFFFF).toString(16);\n            let v2 = _.random(0, 0xFFFFFFFF).toString(16);\n            return  \"00000000\".substr(0, 8 - v1.length) + v1 + \n                    \"00000000\".substr(0, 8 - v2.length) + v2;\n        }\n    }\n}\n\nexport class PortalResult<T> {\n    error: IResultStatus;\n    data: T;\n\n    constructor(_data : T = null, _error: IResultStatus = null){\n        this.data = <T>_data;\n        this.error = _error;\n    }\n}\n\nexport enum ChangeOriginators { propertyList, design, studio, editor };\nexport enum UpdateDataTypes { any, property, value, layout, command, objectPanels, propertyList, panel };\nexport enum CachedComponentType { WebPart, Page, Pageflow, PageMap, Action, ActionCategory, Tab, Menu, TargetMatrix, Settings };\n\nexport class UpdatedInfo {\n    timestamp: number;\n\n    constructor(public data: IUpdatedData = new AnyUpdatedData(), public originator?: ChangeOriginators) {\n        this.timestamp = new Date().valueOf();\n    }\n\n    touch(): void {\n        this.timestamp = new Date().valueOf();\n    }\n\n    is(t: UpdateDataTypes) {\n        if (this.data)\n            return t === this.data.__dataType;\n\n        return false;\n    }\n\n    DataOf<T extends IUpdatedData>(): T {\n        return <T>this.data;\n    }\n}\n\nexport interface IUpdatedData {\n    __dataType: UpdateDataTypes;\n}\n\nexport class AnyUpdatedData implements IUpdatedData {\n\n    __dataType: UpdateDataTypes = UpdateDataTypes.any;\n\n    constructor(public val?: any) {\n    }\n}\n\n\nexport class PropertyUpdatedData implements IUpdatedData {\n\n    __dataType: UpdateDataTypes = UpdateDataTypes.property;\n\n    constructor(public val: any, public old: any, public path: string) {\n    }\n\n    public isName(): boolean {\n        return (this.path && this.path.toLowerCase() == 'name');\n    }\n}\n\n\nexport class ValueUpdatedData implements IUpdatedData {\n\n    __dataType: UpdateDataTypes = UpdateDataTypes.value;\n\n    constructor(public propertyName: string, public val: any, public valueType?: string) {\n        this.propertyName = this.propertyName.toLowerCase();\n    }\n}\n\nexport enum LayoutActions {\n    none, new, add_control, add_webpart, delete_control, delete_webpart, move_item, change_property,\n    merge, split, insertRowBefore, insertRowAfter, insertColumnBefore, insertColumnAfter, removeRow, removeColumn, reset,\n    toggleCellPos\n}\n\nexport class TopMenuState {\n\n    // \"New\" dropdown\n    newPage: boolean = false;\n    newWebpart: boolean = false;\n    newPageflow: boolean = false;\n    newMenu: boolean = false;\n    newTab: boolean = false;\n    newAction: boolean = false;\n    newActionCategory: boolean = false;\n    newActionRule: boolean = false;\n\n    save: boolean = false;\n    saveAll: boolean = false;\n    undo: boolean = false;\n    redo: boolean = false;\n    copy: boolean = false;\n    delete: boolean = false;\n    import: boolean = false;\n    export: boolean = false;\n    exportAll: boolean = false;\n    run: boolean = false;\n    publish: boolean = false;\n    revert: boolean = false;\n    extract: boolean = false;\n    reloadWebPart: boolean = false;\n    generate: boolean = false;\n    batchExport: boolean = false;\n    batchImport: boolean = false;\n    switchTab: boolean = false;\n    togglePanel: boolean = false;\n    switchWorkspace: number = -1;\n    resetPanels = false;\n    element: IElement;\n    data: any;\n\n    constructor() {\n    }\n\n    setAll(v: boolean) {\n        this.save = v;\n        this.undo = v;\n        this.redo = v;\n        this.copy = v;\n        this.delete = v;\n        this.import = v;\n        this.export = v;\n        this.run = v;\n        this.publish = v;\n        this.revert = v;\n        this.extract = v;\n        this.reloadWebPart = v;\n\n        this.newPage = v;\n        this.newWebpart = v;\n        this.newMenu = v;\n        this.newTab = v;\n        this.newAction = v;\n        this.newActionCategory = v;\n        this.newActionRule = v;\n\n    }\n}\n\nexport class ExecuteCommand{\n\n    constructor(public cmd: string, public element: IElement, public data: any){        \n    }\n}\n\nexport enum PanelCommands { none, refresh }\n\nexport class ObjectPanelsUpdatedData implements IUpdatedData {\n\n    __dataType: UpdateDataTypes = UpdateDataTypes.objectPanels;\n\n    constructor(public panelName: string = null, public command: PanelCommands = PanelCommands.none) {\n    }\n}\n\nexport class StartPage implements IElement {\n    name: string;\n    id: string;\n    type: string;\n    typeName: string;\n    items: any[];\n\n    properties: any;\n    isDirty: boolean;\n    isReference: boolean;\n    selectedElement: IElement;\n    __unbound: string = \"StartPage\";\n\n    constructor(name: string, type: string) {\n        this.name = name;\n        this.type = type;\n    }\n}\n\nexport interface IRecordSet {\n    Headers: IHeader[];\n    Rows: IRow[];\n    TotalCount: number;\n}\nexport interface IHeader {\n    Name: string;\n    Label: ILabel;\n    TypeCode: TypeCode;\n}\nexport interface IRow {\n    Values: string[];\n}\nexport interface ILabel {\n    Name: string;\n    ID?: number;\n    Value?: string;\n    DefaultValue: string;\n    LabelType?: LabelType;\n    Category?: string;\n\n    arguments?: any[];\n}\nexport interface ISelectionValuesInfo {\n    Parameters: IQueryParameter[];\n    Options: IQueryOptions;\n}\nexport interface IQueryOptions {\n    RowSetSize?: number;\n    StartRow?: number;\n    QueryType?: QueryType;\n    ChangeCount?: number;\n    RequestRecordCount: boolean;\n    RequestRecordSetAndCount: boolean;\n    RequestHeadersOnly: boolean;\n    RequestHeadersAndRowCount: boolean;\n}\nexport interface IQueryParameter {\n    Name: string;\n    Value: string;\n}\nexport interface IInfo {\n    RequestValue: boolean;\n    RequestSelectionValues: boolean;\n    RequestSelectionValuesInfo: ISelectionValuesInfo;\n}\nexport enum LabelType {\n    System = 0,\n    User = 1\n}\nexport enum TypeCode {\n    Empty = 0,\n    Object = 1,\n    DBNull = 2,\n    Boolean = 3,\n    Char = 4,\n    SByte = 5,\n    Byte = 6,\n    Int16 = 7,\n    UInt16 = 8,\n    Int32 = 9,\n    UInt32 = 10,\n    Int64 = 11,\n    UInt64 = 12,\n    Single = 13,\n    Double = 14,\n    Decimal = 15,\n    DateTime = 16,\n    String = 18\n}\nexport enum QueryType {\n    System = 0,\n    User = 1\n}\n\nexport interface IExceptionDataType {\n    Code: number;\n    Description: string;\n    FailureContext: string;\n    Source: string;\n}\n\nexport interface IResultStatus {\n    IsSuccess: boolean;\n    Message: string;\n    ExceptionData?: IExceptionDataType;\n}\n\nexport interface IResponse {\n    Environment: any;\n    Value: any;\n}\n\nexport interface IApiResult {\n    status: IResultStatus;\n    content: string;\n}\n\nexport class DirectAccessSubmitResult {\n    result: IResultStatus;\n    response: string;\n}\n\n\nexport interface IPersSection {\n    Name: string;\n    NameLbl?: string;\n    Workspace?: string;\n    WorkspaceLbl?: string;\n    IsOpen: boolean;\n    Type?: string; /* PersSectionType enum */\n    Description?: string;\n    DescriptionLbl?: string;\n    LastModifiedBy?: string;\n    LastModified?: string;\n    TypeName?: string;\n    TypeNameLbl?: string;\n    Title?: string;\n    TitleLbl?: string;\n    DataContracts?: IPersDataContract[];\n\n}\n\nexport interface IPersDataContract extends IPersSection {\n    HeaderRows?: string[];\n    SortCol?: string;\n    SortAsc: boolean;\n    DataMembers: any[];\n    DataMembersLbl: string;\n}\n\nexport interface IPersVirtualPageInfoSection extends IPersSection {\n    PageName: string;\n    Behavior: string; /* Behavior Type enum */\n    BehaviorLbl: string;\n    PrimaryServiceType: string;\n    PrimaryServiceTypeLbl: string;\n    LastModified: string;\n    LastModifiedLbl: string;\n    LastModifiedBy: string;\n    LastModifiedByLbl: string;\n    CodeBehind: string;\n    CodeBehindLbl: string;\n    CreatedBy: string;\n    CreatedByLbl: string;\n}\n\nexport interface IPersWebPart extends IPersSection {\n    Controls?: any[];\n    WebPartName: string;\n    WorkspaceContent: IPersWebPart[];\n    CreatedBy?: string;\n    IsReference: boolean;\n    OpenWebPartLbl: string;\n    ControlLbl: string;\n}\n\nexport interface IPersControls extends IPersSection {\n    ControlProperties: any[];\n}\n\nexport interface IDesignControl{\n    element: IElement;\n    subjects?: StudioSubjects;\n    collapsible?: boolean;\n    isCollapsed?: boolean;\n    isReference?: boolean;\n}\n\nexport enum PersSectionType {\n    DataContract = 0,\n    WebPart,\n    VirtualPageInfoSection,\n    Control\n}\n\nexport enum RefreshLevel { layoutMode, layoutExec, full, property };\n\nexport class RefreshInfo {\n    constructor(public element: IElement, public level: RefreshLevel, public data: any = undefined) {\n    }\n}\n\nexport class StudioSubjects {\n    public menu: Subject<TopMenuState>;\n    public property: Subject<any>;\n    public panel: Subject<IUpdatedData>;\n    public layoutMenuUpdate: Subject<LayoutActions[]>;\n    public refresh: Subject<RefreshInfo>;\n    public refreshRoot: Subject<DesignModes>;\n    public nameChanged: Subject<string>;\n    public refreshElementPanel: Subject<string>;\n    public deleteElement : Subject<IUIComponentRef>;\n    public propertyPanel : BehaviorSubject<IUIComponentRef|any>;\n    public dropAreas : Subject<string[]>;\n    public execute: Subject<ExecuteCommand>;\n\n    constructor() {\n        this.menu = new Subject<TopMenuState>();\n        this.property = new Subject<any>();\n        this.panel = new Subject<IUpdatedData>();\n        this.layoutMenuUpdate = new Subject<LayoutActions[]>();\n        this.refresh = new Subject<RefreshInfo>();\n        this.nameChanged = new Subject<string>();\n        this.refreshElementPanel = new Subject<string>();\n        this.deleteElement = new Subject<IUIComponentRef>();\n        this.propertyPanel = new BehaviorSubject<IUIComponentRef|any>(null);\n        this.refreshRoot = new Subject<DesignModes>();\n        this.dropAreas = new Subject<string[]>();\n        this.execute = new Subject<ExecuteCommand>();\n    }\n}\n\nexport class TypeHandlerParameter {\n    Name: string;\n    Type: string;\n    Value: string;\n}\n\nexport class TypeHandler {\n    protected __type = \"TypeHandler\";\n    public Name: string;\n    public Parameters: TypeHandlerParameter[];\n\n    public getMethodSignature(): string {\n        let prms = this.Parameters.map(prm => prm.Name + ':' + TypeHandler.getShortType(prm.Type));\n        return `${this.Name}(${prms.join()})`;\n    }\n\n    public static getShortType = (fullType: string) => {\n        if (fullType) {\n            let typeName = fullType.split(',', 1)[0];\n            if (typeName)\n                return _.last(typeName.split('.'));\n        }\n        return '';\n    }\n\n    public comparer(i: ISelectableItem): boolean {\n        if (typeof i.value == \"object\") {\n            let h = <TypeHandler>i.value;\n            if (h.Name == this.Name && h.Parameters.length == this.Parameters.length)\n                return true;\n        }\n        return false;\n    }\n\n}\n\nexport class RevisionedObjectRef {\n    protected __type = \"RevisionedObjectRef\";\n    public name: string;\n    public revisionOfRecord: boolean;\n    public revision: string;\n    public cdoTypeName: string;\n\n    constructor(name: string, revision: string, ror: boolean) {\n        this.name = name;\n        this.revision = revision;\n        this.revisionOfRecord = ror;\n    }\n\n    public comparer(i: ISelectableItem): boolean {\n        if (typeof i.value == \"object\") {\n            let h = <RevisionedObjectRef>i.value;\n            if (h.cdoTypeName === this.cdoTypeName) {\n                if (h.name === this.name) {\n                    if (this.revision || h.revision)\n                        return this.revision === h.revision;\n                    return h.revisionOfRecord === this.revisionOfRecord;\n                }\n            }\n        }\n        return false;\n    }\n}\n\nexport class TypeProperty {\n    Description: string;\n    Name: string;\n    TypeName: string;\n    Writable: boolean;\n}\n\nexport class TypeDescriptor {\n    ClientEvents: string[];\n    ClientMethods: string[];\n    ClientProperties: string[];\n    Events: string[];\n    Handlers: TypeHandler[];\n    Properties: TypeProperty[];\n}\n\nexport class BatchImportExportSettings {\n    constructor() { };\n    Pages: string[];\n    WebParts: string[];\n    Pageflows: string[];\n    SelectedWorkspaces: string[];\n    OverrideIfExists: boolean;\n    ExportTo: number;\n    PostedFile?: any;\n}\n\nexport class LayoutBuilder {\n\n    public static getLayout(rows: number, cols: number): any {\n\n        let layout = {\n            __type: 'GridLayout',\n            columnNumber: cols,\n            rowNumber: rows,\n            tableCells: LayoutBuilder.getTableCells(rows, cols)\n        };\n        return layout;\n    }\n\n    public static getTableCells(rows, cols): any[] {\n        let tableCells = [];\n\n        for (let r = 0; r < rows; r++) {\n            tableCells.push([]);\n\n            for (let c = 0; c < cols; c++) {\n                tableCells[r].push(LayoutBuilder.newCell(r,c));\n            }\n        }\n\n        return tableCells;\n    }\n\n    public static newCell(r:number, c:number, hidden: boolean = false){\n        return <ICell>{\n            col: c, row: r,\n            colSpan: 1, rowSpan: 1,\n            isEmpty: true,\n            id: uuid.id('cell'),\n            isHidden: hidden,\n            items: {},\n            properties: {\n                __type: 'GridLayoutCell', \n                column: c, \n                row: r, \n                isStatic: false,\n                staticName :  r + '_' + c,\n                style: { __type: 'Style' } \n            },\n            name: 'cell_' + r + '_' + c,\n            type: 'cell', typeName: 'GridLayoutCell'\n        }\n    }\n\n    public static getDefaultTab(ctl: IElement): any {\n\n        return {\n            __arrayType: 'TabDefinition[]',\n            __type: 'TabDefinition',\n            name: 'TabDefinition0',\n            visible: true,\n            index: 0,\n            layout: LayoutBuilder.getLayout(2, 1)\n        };\n    }\n}\n\nexport class GroupDef {\n    constructor(\n        public groupName: string,\n        public icon: string,\n        public groupKey: string,\n        public items?: Observable<IUIComponentRef[]>,\n        public groupType?: string,\n        public isOpen?: boolean\n    ) { \n        if( groupKey )\n            this.groupKey = groupKey.toLowerCase();\n    }\n    public count: Observable<number> = null;\n}\n\nexport class PageGroupDef {\n    constructor( public groupName: string, public groupKey: string, public items?:PageGroupDefItem[],public deleted?:boolean) { \n        if( groupKey )\n            this.groupKey = groupKey.toLowerCase();\n    }\n}\n\nexport class PageGroupDefItem {\n    constructor( public name: string, public deleted?:boolean) { \n    }\n}\n\nexport class WhereUsedItemListDef {\n    constructor( public wepPartName: string, public items: any[] ) { \n    }\n}\n\nexport function val(o: any, key: string, setValue?: any, oType?: string): any {\n    if (o === undefined)\n        return undefined;\n\n    let keyLc = key.toLowerCase();\n    let fieldKey = Object.keys(o).find(k => k.toLowerCase() == keyLc) || key;\n    if (setValue !== undefined) {\n        if (oType !== undefined)\n            o.__type == oType;\n\n        if (setValue === null)\n            delete o[fieldKey];\n        else\n            o[fieldKey] = setValue;\n    }\n    return o ? o[fieldKey] : undefined;\n}\n\nexport function isContainerControl(controlTypeName: string) {\n    return _.includes(['ToggleContainer', 'SectionDropDown','SectionDropDownMobile', 'RibbonContainer', 'JQTabContainer', 'WebPartsWrapperControl'], controlTypeName);\n}\n\n//classes\nexport class DockPanel {\n    name: string;\n    label: string;\n    height?: string;\n\n    tabs: DockTab[];\n    activeTab?: DockTab;\n\n    visible?: boolean;\n    splitter?: string; // v=vertical, h=horizontal, 'n'=none\n\n}\n\nexport class DockTab {\n    name: string;\n    sections: ContentSection[];\n    expandedSection?: ContentSection;\n}\n\nexport class ContentSection {\n    name: string;\n    component: string;\n    isSelectable: boolean;\n    dataSource: string;\n}\n\nexport function isIE(){\n    return /Trident\\/|MSIE/.test(window.navigator.userAgent);\n}\n\n\n\nexport class ContextMenuItem{    \n    public checked: boolean;\n    public linePos : ContextMenuItemPositions;\n    public nameItem : string;\n    public key : string;\n\n    constructor(\n        public type: ContextMenuItemTypes, \n        public text: string, \n        opt? : any\n        ){\n\n        this.key = text && text.toLowerCase();\n        \n        if(opt){\n            if(typeof opt.checked != \"undefined\")\n                this.checked = opt.checked === true;\n            if(opt.linePos)\n                this.linePos = opt.linePos;\n            if(opt.nameItem)\n                this.nameItem = opt.nameItem;\n            if(opt.key)\n                this.key = (<string> opt.key).toLowerCase();\n        }\n    }\n}\n\n\nexport enum ContextMenuItemTypes { caption = \"caption\", checked = \"checked\", selected = \"selected\" }\nexport enum ContextMenuItemPositions { above=\"above\", below=\"below\" };\n","import { IOMTypeDescriptor, IOMMetadata, IOMTypePosition, OMType, FieldTypeCode } from './viewModel';\nimport { PortalService } from '../services/portal.service';\nimport { IElement, StudioSubjects, TopMenuState } from '../objects/common';\n\nimport _ from 'lodash';\nimport { StudioStateService } from '../services/studioStateService';\n\nexport class FieldDirectoryBase {\n\n    public search: string = '';\n    public pdsearch: string = '';\n    public parametricPanel: boolean;\n    public errorMessage: string;\n    public subjects: StudioSubjects;\n    // service list\n    public list: OMTypeDescriptor[] = [];\n\n    // parametric data list\n    public pdlist: OMTypeDescriptor[] = [];\n\n    // relative or absolute field expression mode has global meaning\n    public static RelativeMode: boolean = true;\n\n    public get relativeMode(): boolean {\n        return FieldDirectoryBase.RelativeMode;\n    }\n    public set relativeMode(r: boolean) {\n        FieldDirectoryBase.RelativeMode = r;\n    }\n\n    get readonly(): boolean { return false; }\n    protected portal: PortalService;\n    protected studioState: StudioStateService;\n\n    constructor(_portal: PortalService, _studioService: StudioStateService) {\n        this.portal = _portal;\n        this.studioState = _studioService;\n    }\n\n    public toggle(it: OMTypeDescriptor) {\n        it._expanded = !it._expanded;\n\n        if (it._expanded) {\n            if (!it.ChildItems) \n                this.loadChildren(it);            \n            else\n                this.openCloseChildren(it, true);\n        }\n        else {\n            this.openCloseChildren(it, false);\n        }\n    }\n    public select(it: OMTypeDescriptor) {\n        if (!it._selected) {\n            _.forEach(this.list, (item) => {\n                if (item._selected === true) {\n                    item._selected = false;\n                    return false;\n                }\n            });\n            it._selected = true;\n            const menu = new TopMenuState();\n            menu.generate = true;\n            menu.data = it;\n            this.studioState.refreshTopMenu(menu);\n        }\n    }\n\n    public togglePanels(onParametric: boolean) {\n        if (onParametric) {\n            // click on parametric - open if not opened\n            if (!this.parametricPanel) {\n                this.parametricPanel = true;\n                this.loadParamtericData();\n            }\n        }\n        else {\n            // click on services - open if not opened\n            if (this.parametricPanel) {\n                this.parametricPanel = false;\n            }\n        }\n    }\n\n    public openCloseChildren(owner: OMTypeDescriptor, open: boolean) {\n\n        let itemIndex = this.list.indexOf(owner);\n        for (var i = itemIndex+1; i < this.list.length; i++) {\n            let l = this.list[i];\n\n            if (l.Owner && l.Owner == owner)\n                l._hidden = !open;\n\n            if (l.ChildItems && l.ChildItems.length) {\n                this.openCloseChildren(l, open);\n            }\n        }\n    }\n\n\n    public loadChildren(typeDescriptor: OMTypeDescriptor) {\n\n        let itemIndex = _.findIndex(this.parametricPanel ? this.pdlist : this.list, typeDescriptor) + 1;\n\n        this.portal.getFieldsDirectory(typeDescriptor).subscribe(\n            (om) => {\n                if (om && om.ChildItems) {\n                    om.ChildItems.forEach(ds => {\n                        let c: OMTypeDescriptor = new OMTypeDescriptor(ds, typeDescriptor);\n                        c.Owner = typeDescriptor;\n                        if (!this.parametricPanel)\n                            this.list.splice(itemIndex++, 0, c);\n                        else\n                            this.pdlist.splice(itemIndex++, 0, c);\n                    });\n                    typeDescriptor.ChildItems = om.ChildItems;\n                }\n            }\n        );\n    }\n\n    public loadParamtericData(refresh?: boolean) {\n        let pddIgnore = ['DataPointDetails', 'DataPointSummary', 'ParametricData', 'DPCollection'];\n\n        if (refresh === true)\n            this.pdlist = [];\n\n        if (this.pdlist.length == 0) {\n            this.portal.getFieldsDirectory(<IOMTypeDescriptor>{\n                ItemType: OMType.Root, TypeName: 'ParametricData'}).subscribe(\n                service => {\n                    if (service && service.ChildItems) {\n                        service.ChildItems.forEach(srv => {\n                            if( pddIgnore.indexOf(srv.Name) == -1){\n                                let it = new OMTypeDescriptor();\n                                it.Name = srv.Name;\n                                it.TypeName = srv.TypeName;\n                                it.IsExpand = true;\n                                it.setPadding();\n                                this.pdlist.push(it);\n                            }\n                        });\n                    }\n                },\n                error => this.errorMessage = <any>error);\n        }\n    }\n\n    public loadServices(refresh?: boolean) {\n        if (refresh === true)\n            this.list = [];\n\n        if (this.list.length == 0) {\n            this.portal.getFieldsDirectory(<IOMTypeDescriptor>{\n                ItemType: OMType.Root, TypeName: 'Service'}).subscribe(\n                service => {\n                    if (service && service.ChildItems) {\n                        service.ChildItems.forEach(srv => {\n                            let it = new OMTypeDescriptor();\n                            it.Name = srv.Name;\n                            it.TypeName = srv.TypeName;\n                            it.IsExpand = true;\n                            it.setPadding();\n                            this.list.push(it);\n                        });\n                    }\n                    this.servicesLoaded();\n                },\n                error => this.errorMessage = <any>error);\n        }\n    }\n\n    servicesLoaded() {\n    }\n\n}\n\nexport class OMTypeDescriptor implements IOMTypeDescriptor {\n    ChildItems: IOMTypeDescriptor[];\n    FieldExpression: string;\n    Name: string;\n    TypeName: string;\n    ItemType: OMType;\n    IsExpand: boolean;\n    Link: string;\n    IsBrowseOnly: boolean;\n    Metadata: IOMMetadata;\n    Position: IOMTypePosition;\n    Uid: string;\n    Owner: IOMTypeDescriptor;\n    _selected: boolean;\n    // Nesting level\n    _nesting: number;\n    // image class\n    _imageClass: string;\n    //padding for indentation\n    _padding: string;\n    _expanded: boolean = false;\n    _hidden: boolean = false;\n    _draggable: boolean = false;\n\n    // dragData\n    type: string;\n    typeName: string;\n\n    constructor(ds?: IOMTypeDescriptor, owner?: OMTypeDescriptor) {\n        if (ds) {\n            this.IsBrowseOnly = ds.IsBrowseOnly;\n            this.Metadata = ds.Metadata;\n            this.TypeName = ds.TypeName;\n            this.ItemType = ds.ItemType;\n            this.Name = ds.Name;\n            this.Uid = ds.Uid;\n            this.Link = ds.Link;\n            this.IsExpand = ds.IsExpand;\n        }\n        else {\n            this.ItemType = OMType.Service;\n        }\n\n        this._draggable = this.ItemType == OMType.Field || this.ItemType == OMType.Property || this.ItemType == OMType.Link;\n\n        if (!this.Metadata) {\n            this.Metadata = <IOMMetadata>{ Description: '', FieldTypeCode: FieldTypeCode.Object };\n        }\n\n        this._imageClass = OMType[this.ItemType];\n        if (this.Metadata) {\n            if (this.Metadata.IsReadOnly)\n                this._imageClass += ' readonly';\n\n            if (this.Metadata.IsInherited)\n                this._imageClass += ' inherited';\n\n            if (this.Metadata.IsList)\n                this._imageClass += ' list';\n\n            if (this.Metadata.IsRequired)\n                this._imageClass += ' required';\n        }\n        if (owner) {\n            this.Owner = owner;\n            this._nesting = owner._nesting + 1;\n        }\n        else\n            this._nesting = 0;\n\n        this.setPadding();\n\n    }\n\n    public setPadding() {\n        let padding = this._nesting * 20 + 2;\n        if (!this.IsExpand) {\n            // the arrow is hidden for scalar. should compensate by padding\n            padding += 18;\n        }\n        this._padding = padding.toString() + 'px';\n    }\n\n    public addDragData(): void {\n        this.type = '';\n\n        let typeMapping = {\n            NamedObjectRef: 'NamedObject',\n            ContainerRef: 'ContainerListGrid',\n            RevisionedObjectRef: 'RevisionedObject',\n            SubentityRef: 'NamedSubentity',\n            NamedSubentityRef: 'NamedSubentity',\n            String: 'TextBox',\n            Boolean: 'CheckBox',\n            Int32: 'TextBox',\n            EncryptedField: 'TextBox',\n            DateTime: 'DateChooser'\n        };\n\n        this.type = typeMapping[this.TypeName];\n        if (!this.type)\n            this.type = \"TextBox\";\n\n        if (this.Metadata.IsEnum)\n            this.type = 'DropDownList';\n\n        if (this.Metadata.IsList)\n            this.type = 'JQDataGrid';\n\n        if (this.type != 'JQDataGrid' && this.type != 'ContainerListGrid')\n            this.typeName = \"Camstar.WebPortal.FormsFramework.WebControls.\" + this.type;\n        else\n            this.typeName = \"Camstar.WebPortal.FormsFramework.WebGridControls.\" + this.type;\n    }\n\n    public getFieldExpression(): string {\n        let owner: IOMTypeDescriptor = this.Owner;\n        let res: string = this.Name;\n        let type: string = '';\n\n        while (owner) {\n            if (owner.ItemType == OMType.Service) {\n                res = (!FieldDirectoryBase.RelativeMode ? owner.Name : '') + '.' + res;\n                break;\n            }\n            if (owner.ItemType == OMType.Type) {\n                type = ':' + owner.Name;\n            }\n            else {\n                res = owner.Name + type + '.' + res;\n                type = '';\n            }\n            owner = owner.Owner;\n        }\n\n        return res;\n    }\n\n    public controlInit(ctl: IElement, owner: IElement, portal: PortalService, ) {\n\n        if (!ctl.properties)\n            ctl.properties = {};\n\n        let fExp = this.getFieldExpression();\n\n        // Take full field expression\n        let oldRel = FieldDirectoryBase.RelativeMode;\n        FieldDirectoryBase.RelativeMode = false;\n        const fullExp = this.getFieldExpression();\n        FieldDirectoryBase.RelativeMode = oldRel;\n        const dataSubMode = fullExp.indexOf(\"ObjectChanges.\") != -1 ? 2 : 0;\n\n        if (ctl.typeName == 'JQDataGrid') {\n\n            ctl.properties = {\n                gridDataMode: 1 /*ItemList*/, \n                dataSubmissionMode:  dataSubMode,\n                settings: {\n                    __type: \"GridDataSettingsItemList\",\n                    allowDataNaigation: true,\n                    fieldExpressions: fExp,\n                    columns: [],\n                    editorSettings: {\n                        __type: \"JQGridEditorSettings\",\n                        editingMode: 0     // Inline\n                    }\n                }\n            };\n\n            portal.resolveGridColumns(fullExp).subscribe(\n                (columns) => {\n                    if (columns) {\n                        ctl.properties.settings.columns = columns;\n                    }\n                }\n            );\n\n        }\n        else {\n            ctl.properties.fieldExpressions = fExp;\n        }\n        if (this.Metadata.IsRequired)\n            ctl.properties.required = true;\n\n        if (owner) {\n            let n: string;\n            // generate new name\n            for (let index: number = 0; ; index++) {\n\n                let suffix = \"_\" + this.Name + (index ? index.toString() : '');\n                if (this.Owner) \n                    n = this.Owner.Name + suffix;                \n                else \n                    n = owner.name + suffix;\n\n                if (owner && owner.items && _.find(owner.items, (v,i) => v['name'] === n))\n                    continue;\n                else\n                    break;\n            }\n            ctl.name = n;\n        }\n    }\n\n}","import { uuid, IElement, LayoutActions } from './common';\r\nimport * as _ from 'lodash';\r\n\r\nexport enum HistoryOperation { undo=1, redo=2 };\r\n\r\nexport class HistoryLog {\r\n\r\n    private _undoStack: LogItem[] = [];\r\n\r\n    private undoPointer: number = 0;\r\n    public get undoCount(): number { return this.undoPointer; }\r\n    public get redoCount(): number { return this._undoStack.length - this.undoPointer; }\r\n\r\n    constructor() {\r\n        this.undoPointer = 0;\r\n    }\r\n\r\n    public recordHistoryItem(cmd: RecordCommand, data: IHistory): void {\r\n        // discard all items next to undoPointer\r\n        this._undoStack.splice(this.undoPointer, this._undoStack.length - this.undoPointer);\r\n\r\n        if (cmd == RecordCommand.propertyChange) {\r\n            let lastRecord = _.last(this._undoStack);\r\n            if (lastRecord && _.isFunction(lastRecord.specificData.tryToCombine)) {\r\n                // combine text changes into one transaction\r\n                if (lastRecord.specificData.tryToCombine(data))\r\n                    return;\r\n            }\r\n        }\r\n        this._undoStack.push(new LogItem(cmd, data));\r\n        this.undoPointer = this._undoStack.length;\r\n    }\r\n\r\n    public pop(operation: HistoryOperation): LogItem {\r\n        let c: LogItem;\r\n        if (operation == HistoryOperation.undo) {\r\n            c = this._undoStack[this.undoPointer - 1];\r\n            this.undoPointer--;\r\n        }\r\n        else {\r\n            c = this._undoStack[this.undoPointer];\r\n            this.undoPointer++;\r\n        }\r\n        return c;\r\n    }\r\n\r\n    public display(operation: string): string[] {\r\n        return this._undoStack\r\n            .filter((d, i) => operation == 'undo' ? (i < this.undoPointer) : (i >= this.undoPointer))\r\n            .map(l => l.toDisplay());\r\n    }\r\n}\r\n\r\nexport enum HistoryObjectType { Webpart, Control, Property, Layout };\r\n\r\nexport enum RecordCommand { add, remove, layoutChange, move, propertyChange, replace }\r\n\r\nexport interface IHistory {\r\n    objectType: HistoryObjectType,\r\n    toDisplay(): string;\r\n    tryToCombine?(data: IHistory): boolean;\r\n}\r\n\r\n// add, delete, move - Control, Webpart\r\nexport class ElementHistoryData implements IHistory {\r\n    public element: IElement;\r\n    public oldElement: IElement;\r\n    public cellId: string;\r\n    public fromCellId: string;\r\n\r\n    constructor(public objectType: HistoryObjectType) {\r\n    }\r\n\r\n    toDisplay(): string {\r\n        return `${this.element.name} of ${this.element.typeName}`;\r\n    }\r\n\r\n}\r\n\r\nexport class LayoutHistoryData implements IHistory {\r\n\r\n    public column: number;\r\n    public row: number;\r\n    public objectType: HistoryObjectType = HistoryObjectType.Layout;\r\n\r\n    constructor(public command: LayoutActions, public layoutBefore: any, public layoutAfter: any, public layoutOwner: IElement) {\r\n    }\r\n\r\n    toDisplay(): string {\r\n        let r = LayoutActions[this.command];\r\n        return r;\r\n    }\r\n}\r\n\r\ntype nv = { [name: string]: any };\r\n\r\nexport class PropertyHistoryData implements IHistory {\r\n    public objectType: HistoryObjectType = HistoryObjectType.Property;\r\n\r\n    constructor(public instance: any, public path: string, public oldValues: nv, public newValues: nv, public isName: boolean) {\r\n    }\r\n\r\n    toDisplay(): string {\r\n        return `${this.path} from ${JSON.stringify(this.oldValues)} to ${JSON.stringify(this.newValues)}`;\r\n    }\r\n\r\n    tryToCombine(data: IHistory): boolean {\r\n        let d = <PropertyHistoryData>data;\r\n        if (d.path == this.path) {\r\n            this.newValues[this.path] = d.newValues[d.path];\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n\r\nexport class LogItem {\r\n    public specificData: IHistory;\r\n    public id: string;\r\n\r\n    constructor(public command: RecordCommand, data: IHistory) {\r\n        this.id = uuid.id('log-');\r\n        this.specificData = data;\r\n    }\r\n\r\n    toDisplay(): string {\r\n        let r = RecordCommand[this.command]; \r\n        if (this.specificData)\r\n            r += (' ' + HistoryObjectType[this.specificData.objectType] + ' ' + this.specificData.toDisplay());\r\n\r\n        return r;\r\n    }\r\n}\r\n\r\n","import { ISelectableItem, TypeHandler, TypeHandlerParameter } from './common';\nimport { Observable } from 'rxjs';\nimport _ from 'lodash';\n\nexport interface IElement {\n    id: string;    \n    name: string;\n    type: string;\n    typeName: string;\n    properties: any[];\n    position: IPosition;\n    isDirty: boolean;\n}\n\nexport interface ICombinedElement extends IElement {\n    items: IElement[];\n    layout: any;\n    originalXml: string;\n}\n\nexport interface ILayout {\n}\n\nexport interface IGridLayout extends ILayout {\n    cells: any[];\n    colNumber: number;\n    rowNumber: number;\n\n    tableCells?: any[][];\n}\n\nexport interface IPosition {\n}\n\nexport interface IGridPosition extends IPosition {\n}\n\nexport interface IMetadataType {\n    _abstract: boolean;\n    _name: string;\n    _namespace: string;\n    _type: string;\n    _displayedName?: string;\n    baseTypeNames?: string[];\n    properties?: IPropertyMetadata[];\n    enumValues?: IMetadataEnumValue[];\n}\n\n\nexport interface IPropertyEditor {\n    directive: string;\n    options?: string[];\n\n    // parsed options\n    provider?: string;\n    filter?: string;\n    parameters?: string[];\n\n    // dynamic\n    selectableItems?: Observable<ISelectableItem[]>;\n}\n\nexport class PropertyCategory {\n    public description?: string;\n    public name: string;\n\n    constructor(public caption: string) {\n        this.name = this.caption.toLowerCase();\n    }\n}\n\nexport interface IPropertyMetadata {\n    category: string;\n    name: string;\n    originalTypeName?: string;\n    editor?: IPropertyEditor;\n    hidden?: boolean;\n    readOnly?: boolean;\n    required?: boolean;\n    enumValues?: any[];\n    displayedName?: string;\n    defaultValue?: string | number;\n    accessor?: string;\n    dependencies?: string[];\n    order?: number;\n    notNullable?: boolean;\n    favorite?: boolean;    \n\n    value?: any;\n    originalValue?: any;\n}\n\nexport interface ICamstarService {\n    ClassName?: string;\n    Description: string;\n    Namespace: string;\n}\n\nexport interface IMetadataEnumValue {\n    name: string;\n    value: any;\n}\n\nexport enum OMType {\n    Service = 0,\n    Link = 1,\n    Type = 2,\n    Property = 3,\n    Field = 4,\n    Root = 5\n}\n\n\nexport interface IOMTypeDescriptor {\n    ChildItems: IOMTypeDescriptor[];\n    FieldExpression: string;\n    Name: string;\n    TypeName: string;\n    ItemType: OMType;\n    IsExpand: boolean;\n    Link: string;\n    IsBrowseOnly: boolean;\n    Metadata: IOMMetadata;\n    Position: IOMTypePosition;\n    Uid: string;\n    Owner: IOMTypeDescriptor;\n}\n\nexport class IOMMetadata{\n    CDOTypeName: string;\n    CreateOnInitialize: boolean;\n    DefaultValue: string;\n    Description: string;\n    FieldTypeCode: FieldTypeCode;\n    HasSelVal: boolean;\n    IsEnum: boolean;\n    IsInherited: boolean;\n    IsList: boolean;\n    IsReadOnly: boolean;\n    IsRequired: boolean;\n    IsUserDefinedField: boolean;\n    LabelID: number;\n}\n\nexport enum FieldTypeCode {\n    Object = 0,\n    Integer = 1,\n    Float = 2,\n    Fixed = 3,\n    String = 4,\n    TimeStamp = 5,\n    Boolean = 6,\n    Decimal = 7,\n    Reference = 8,\n    Enumeration = 9\n}\n\n\nexport class IOMTypePosition {\n    Column: number;\n    ColumnSpan : number;\n    Row: number;\n    RowSpan: number;\n}\n\nexport class CodeBehindDescriptor {\n    ClassName: string;\n    Description: string;\n    Namespace: string;\n}\n\nexport enum ListItemActions { add, change, delete, replace }\n\nexport class ImageFile {\n    Name: string;\n    Source: string;\n}\n\nexport class WorkspaceItem {\n    Code: string;\n    Color: string;\n    Description: string;\n    ID: number;\n    Name: string;\n    Sequence: number;\n}\n\nexport class GridColumnDefinition {\n    __type: string;\n    name: string;\n    editable: boolean;\n    width: number;\n    required: boolean;\n    labelName: string;\n    editorProperties: {};\n}\n\nexport class JQGridCustomScript{\n    __type: string;\n    Name: string;\n    Handler: string;\n}\n\nexport class ConditionExpression {\n    public leftValueColumnName?: string;\n    public value1?: SetDataValueItem;\n    public value2?: SetDataValueItem;\n    public and?: ConditionExpression[];\n    public or?: ConditionExpression[];\n    public comparisonType?: number;\n\n    constructor() {\n        this.comparisonType = 0;\n    }\n\n    public __shortDescription: string;\n    public __type = \"ConditionExpression\";\n}\n\nexport class InitiatorDefinition {\n    public name: string;\n    public key: string;\n    public event: string;\n\n    protected __type = 'InitiatorDefinition';\n}\n\nexport class SetDataValueItemBase {\n    public key?: string;\n    public initiators?: InitiatorDefinition[];\n    public requestDataMode?: any;\n    public allowEmptyValue?: boolean;\n}\n\nexport class SetDataValueItem extends SetDataValueItemBase {\n    protected __type = 'SetDataValueItem';\n}\n\nexport class PropertyConditionExpression{\n    public property?: string;\n    public description?: string;\n    public condition?: ConditionExpression;\n    public valueIfTrue?: SetDataValueItem;\n\n    public isExpanded = false;\n\n    protected __arrayType = \"PropertyConditionExpression[]\";\n    protected __type = \"PropertyConditionExpression\";\n}\n\nexport class ValueReference{\n    public connectionType: DataContractConnectionType;\n    public key?: string;\n    public property?: string;\n    protected __type = \"ValueReference\";\n}\n\nexport class DataMemberConnection extends ValueReference {\n    public name: string;\n    protected __type = \"DataMemberConnection\";\n}\n\nexport class QueryGridParameter extends DataMemberConnection {\n    protected __type = \"QueryGridParameter\";\n}\n\nexport class QueryBoundGridParameter extends ValueReference {\n    public name: string;\n    public type: string;\n    \n    protected __type = \"QueryBoundGridParameter\";\n}\n\nexport enum DataContractConnectionType{\n    Control,\n    None,\n    PageDataContract,\n    SessionDataContract,\n    SessionVariable,\n    FieldExpression,\n    StaticValue,\n    GridItem\n}\n\nexport enum QueryTypes {System, User}\n\nexport class QueryData {\n    public ID : string;\n    Text: string;\n    Decription: string;\n    ParamCount: number;    \n}\n\nexport class QueryOptions {\n    public ChangeCount? : number;\n    public QueryType : QueryTypes;\n    public RequestHeadersAndRowCount? : boolean;\n    public RequestHeadersOnly? : boolean;\n    public RequestRecordCount? : boolean;\n    public  RequestRecordSetAndCount? : boolean;\n    public RowSetSize? : number;\n    public StartRow? : number;\n}\n\nexport class QueryParameter{\n    Name: string;\n    Value: string;\n}\nexport class ColumnData{\n    public Name : string;\n    public LabelName : string;\n    public TypeCode : string;\n}\n\nexport type PropertyDescription = { [name: string] : string };\n\nexport type PropertyDescriptions = { [section: string] : PropertyDescription};\n\nexport enum BOAuthenticationType{ Enterprise, LDAP, WINAD}\n\nexport class ConnectionProfileData {\n    public ServerDataMember: string;\n    public BOAuthTypeDataMember: BOAuthenticationType;\n    public UserNameDataMember: string;\n    public PasswordDataMember: string;\n}\n\nexport class HandlerParameter {\n    protected __type: string = \"HandlerParameter\";\n    public name: string;\n    public type: string;\n    public value: SetDataValueItem;    \n}\n\nexport enum GridDataModes {\n    DataTable,\n    ItemList,\n    SubEntityList,\n    SelectionValues,\n    PredefinedQuery,\n    AdHocQuery,\n    Generic\n}\n\nexport class WhereUsedItem{\n    name: string;\n    workSpace: string;\n}\n\nexport class HandlerItem {\n    protected __type: string = \"HandlerItem\";\n    public name: string = \"\";\n    public parameters: HandlerParameter[] = [];\n\n    public static parse(s: string | HandlerItem) : HandlerItem{\n        // parse method and parameters\n        let h = new HandlerItem();\n        if( !s ){\n            h.name = '';\n            h.parameters = [];            \n        }\n        else{\n            if( _.isString(s) ){\n                let spl = s.split('(');\n                h.name = spl[0];\n                h.parameters = (spl[1] ? spl[1].replace(')', '').split(',') : [])\n                    .filter(sp=> !!sp)\n                    .map(ps=> {\n                            let spp = ps.split(':');\n                            return <HandlerParameter> {name: spp[0], type: spp[1], value: undefined } \n                    });\n                }\n            else{\n                let hs = s as HandlerItem;\n                h.parameters = hs.parameters;\n                h.name = hs.name;\n                // cut the parameters from the name\n                let i = h.name.indexOf('(');\n                if( i != -1)\n                    h.name = h.name.substr(0, i);\n            }\n        }\n        return h;\n    }\n\n    public get methodSignature() : string {\n        let prms = this.parameters.map(prm => prm.name  +':'+ HandlerItem.getShortType(prm.type));\n        return `${this.name}(${prms.join()})`;\n    }\n\n    public static getShortType = (fullType: string) => {\n        if(fullType ){\n            let typeName = fullType.split(',', 1)[0];\n            if( typeName )\n                return _.last(typeName.split('.'));\n        }\n        return '';\n    }\n\n    public toTypeHandler() : TypeHandler{\n        let th = new TypeHandler();\n        th.Name = this.name;\n        if( this.parameters )\n            th.Parameters = this.parameters.map(par=> {\n                let hp = new TypeHandlerParameter(); \n                hp.Name = par.name; \n                hp.Type = par.type;\n                return hp;\n            });\n\n        return th;\n    }\n\n    public static fromTypeHandler(th: TypeHandler) : HandlerItem{\n        let h = new HandlerItem();\n        if( !th )\n            return h;\n\n        h.name = th.Name;\n        h.parameters = \n            th.Parameters ? \n            th.Parameters.map(p=> { \n                let tp = new HandlerParameter(); \n                tp.name = p.Name; \n                tp.type = p.Type; \n                return tp;\n            } ) \n            : [];\n\n        return h;\n    }\n\n    public static equals(h1: HandlerItem, h2: HandlerItem) : boolean {\n        if( !h1 && !h2 )\n            return true;\n\n        else if( (!h1 && h2) || (h1 && !h2) )\n            return false;\n\n        else if( h1.name == h2.name && h1.parameters.length == h2.parameters.length)\n            return true;\n\n        return false;\n    }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { IElement } from '../objects/common';\nimport { IGridLayout, ListItemActions } from '../objects/viewModel';\nimport { MetadataService } from './metadata.service';\nimport _ from 'lodash';\n\n@Injectable()\nexport class ConvertorService {\n\n    constructor() {\n    }\n\n    private cleanReferencedItem(wp:IElement){\n\n        const propList = [\"name\",\"type\",\"typeName\",\"isReference\",\"_fullTypeName\",\"id\"];\n        let keyList = Object.keys(wp).filter( k=> propList.indexOf(k) == -1).map(ks=> ks );\n        keyList.forEach( k=> delete wp[k]);\n    }\n\n    private rootWebparts: IElement[];\n\n    // Used on saving and publishing\n    public convertRefs(root: IElement) {\n        if (root.layout && root.layout.__type === \"GridLayout\") {\n            this.rootWebparts = root.items;            \n            this.convertLayoutRefs(<IGridLayout>root.layout, root.items);\n        }\n\n        if (root.items) {\n            _.forEach(root.items, wp => {\n                if( wp.isReference){\n                    this.cleanReferencedItem(wp);\n                }\n                if (wp.layout && wp.layout.__type === \"GridLayout\")\n                    this.convertLayoutRefs(<IGridLayout>wp.layout, wp.items);\n            });\n        }\n    }\n\n    private convertLayoutRefs(layout: IGridLayout | any, items: IElement[]) {        \n        if (layout && layout.tableCells) {\n            _.forEach(layout.tableCells, row => {\n                _.forEach(row, cell => {\n                    if (cell.items) {\n                        _.forEach(cell.items, it => {\n                            let refItem = this.findItemByName(it.name, items);\n                            if (refItem) {\n                                it.typeName = refItem._fullTypeName;\n\n                                if (it.type.toLowerCase() == \"control\") {\n                                    if (refItem.typeName == \"JQTabContainer\") {\n                                        _.forEach(refItem.properties.tabDefinitions, t => {\n                                            this.convertLayoutRefs(t.layout, this.rootWebparts);\n                                        });\n                                    }\n                                    else if (refItem.layout) {\n                                        this.convertLayoutRefs(refItem.layout, this.rootWebparts);\n                                    }\n                                }\n                            }\n                        });\n                    }\n                });\n            });\n        }\n    }\n\n    public convertMaintChangesToModel(maint: any): any {\n\n        let ns = \"Camstar.WCF.ObjectStack\";\n        let type: string;\n\n        if (!maint.__type && maint.Self) {\n            maint.__type = maint.Self.CDOTypeName+':'+ns;\n        }\n        if (!type && maint.__type) {\n            let xt: string[] = (<string>maint.__type).split(':');\n            if (xt.length) {\n                type = xt[0];\n                ns = xt[1];\n            }\n        }\n\n        if (!type) {\n            console.warn('convertMaintChangesToModel: type unresolved', maint);\n            type = \"object\";\n        }\n        else {\n            let i = type.lastIndexOf(\"Maint\");\n            if (i != -1)\n                type = type.substr(0, i) + \"Changes\";\n        }\n        let res = { typeName: type, __type: type };\n        if (ns)\n            res['__ns'] = ns;\n\n        _.forEach(maint, (v, k) => {\n            let ks = k.split('_');\n            if (ks.length == 2) {\n                let field = ks[1];\n                if (field != \"ObjectToChange\") {\n                    field = _.camelCase(field);\n                    let val: any = undefined;\n                    if (v) {\n                        val = (v.Value) ? v.Value : v;\n                        if (!_.isEmpty(val)) {\n                            if (_.isArray(val)) {\n                                let newarray = [];\n                                _.forEach(val, (va, i) => {\n                                    let av;\n                                    if (this.isNDORef(va))\n                                        av = { name: va['Name'], __type: 'NamedObjectRef', CDOTypeName: va['CDOTypeName'] };\n                                    else\n                                        av = this.convertMaintChangesToModel(va);\n                                    av['__index'] = i;\n                                    newarray.push(av);\n                                });\n                                val = newarray;\n                            }\n                            else if (_.isObject(val)) {\n                                let objVal = <any>val;\n                                if (objVal.CDOTypeName !== undefined && objVal.Name !== undefined) {\n                                    // NDORef\n                                    val = objVal.Name;\n                                }\n                                else {\n                                    val = this.convertMaintChangesToModel(val);\n                                }\n                            }\n                        }\n                    }\n                    if (val)\n                        res[field] = val;\n                }\n            }\n        });\n\n        return res;\n    }\n\n\n    public convertModelToMaintChanges(obj, metadataService: MetadataService): any {\n        let ns = obj.__ns || 'Camstar.WCF.ObjectStack';\n        let ch = {\n            __type : obj.__type + ':' + ns\n        };\n\n        let ownerType = metadataService.getMetadataType(obj.typeName || obj.__type);\n        if (ownerType){\n            if( ownerType._name != \"NamedObjectRef\") {\n                _.forEach(ownerType.properties, p => {\n                    let n = p.name.toLowerCase();\n                    let propValue = _.find(obj, (v, k) => k.toString().toLowerCase() == n);\n                    if (propValue) {\n                        if (_.isArray(propValue)) {\n                            let pArray = [];\n\n                            // deleted items\n                            let deletedCnt = 0;\n                            let sorted = _.sortBy(propValue, [\"__index\"]);\n\n                            sorted.forEach(pv => {\n                                let i: number = pv['__index'];\n                                i -= deletedCnt;\n\n                                if (pv['__action'] == ListItemActions.delete) {\n                                    pArray.push({ ListItemAction: ListItemActions.delete, ListItemIndex: i });\n                                    deletedCnt++;\n                                }\n                                else if (pv['__action'] == ListItemActions.change) {\n                                    let chVal = this.convertModelToMaintChanges(pv, metadataService);\n                                    chVal['ListItemIndex'] = i;\n                                    pArray.push(chVal);\n                                }\n                                else if (pv['__action'] == ListItemActions.add) {\n                                    let chVal = this.convertModelToMaintChanges(pv, metadataService);\n                                    pArray.push(chVal);\n                                }\n                            });\n                            propValue = pArray;\n                        }\n                        else {\n                            if( p.editor && p.editor.provider && p.editor.provider == \"ndoInstances\") {\n                                let cdoType = p.editor.parameters[0];\n                                if( cdoType.startsWith(\"#\"))\n                                    cdoType = obj.CDOTypeName;\n                                propValue = { CDOTypeName: cdoType, Name: propValue };\n                            }\n                            else {\n                                if (_.isString(propValue) || _.isNumber(propValue) || _.isBoolean(propValue)) {\n                                    // Scalar field\n                                    propValue = { Value: propValue };\n                                }\n                                else {\n                                    // Object field\n                                    propValue = this.convertModelToMaintChanges(propValue, metadataService);\n                                    // check whether the value has just type only. it's considered as empty\n                                    let keys = _.keys(propValue);\n                                    if (keys.length ==0 || (keys.length == 1 && keys[0] == '__type'))\n                                        propValue = null;\n\n                                    // if property type == object type - delete the __type\n                                    let t: string = propValue && propValue['__type'];\n                                    if (t) {\n                                        let tn = t.split(':');\n                                        if (tn.length > 0 && tn[0] == p.originalTypeName) {\n                                            delete propValue['__type'];\n                                        }\n                                    }\n                                    if (propValue != null){\n                                        if(obj.isNew === true) {\n                                            propValue['FieldAction'] = 0; // 0 = create, 1- replace (default)\n                                        }\n                                        else{\n                                            // If the object exists then omit the type because it cannot be changed after creation\n                                            if(propValue['__type'])\n                                                delete propValue['__type'];\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        if (propValue != null) {\n                            let creatorType = metadataService.getPropertyCreatorType(ownerType, p);\n                            ch[creatorType._name + '_' + p.name] = propValue;\n                        }\n                    }\n                });\n            }\n            else{\n                // NamedObjectRef\n                ch['Name'] = obj.name || obj.Name;\n            }\n        }\n        if (obj['__index'] !== undefined && obj['__action'] !== undefined) {\n            if (obj['__action'] !== ListItemActions.add )\n                ch['ListItemIndex'] = obj.__index;\n            ch['ListItemAction'] = obj['__action']; // add, change, delete, replace\n            if( ownerType && ownerType._name === \"NamedObjectRef\")\n                delete ch['CDOTypeName'];\n            else\n                ch['CDOTypeName'] = obj.__type;\n        }\n        return ch;\n    }\n\n    public convertTargetMatrixToModel(tm: any, type?: string): any {\n        return tm;\n    }\n\n    public convertSettingsToModel(st : any, typeName: string, metadataService: MetadataService): any {\n\n        let res: any;\n        let isArray = _.endsWith(typeName, '[]');\n\n        if (_.isString(st) || _.isNumber(st) || _.isBoolean(st))\n            return st;\n\n        if (metadataService.isSystemType(typeName)) {\n            if (st === undefined) {\n                if (typeName.toLowerCase() == 'string')\n                    st = null;\n                return st;\n            }\n            if (!isArray)\n                return st;\n        }\n\n        if (isArray) {\n            res = [];\n            if (st) {\n                res = (<any[]>st).map( v => \n                    this.convertSettingsToModel(v, typeName.replace('[]', ''), metadataService)\n                );\n            }\n        }\n        else {\n            // it's object\n            let type = metadataService.getMetadataType(typeName);\n            res = {};\n\n            if( !type ){\n                console.error(\"Metadata: type not found\", typeName, st);\n                return res;\n            }\n\n            res.__type = typeName;\n\n            _.forEach(type.properties, pr => {\n                let fn = (pr.name + 'Field').toLowerCase();\n                let v = _.find(st, (v, k: string) => k.toLowerCase() == fn);\n\n                let converted = this.convertSettingsToModel(v, pr.originalTypeName, metadataService);\n                res[pr.name] = converted;\n\n                if (pr.originalTypeName.toLowerCase() == 'boolean') {\n                    pr.notNullable = true;\n                }\n            });\n        }\n        return res;\n    }\n\n    public convertModelToSettings(st): any {\n\n        let res: any;\n\n        if (_.isArray(st)) {\n            res = (<any[]>st).map(v => this.convertModelToSettings(v));\n        }\n\n        else if (_.isObject(st)) {\n            // it's object\n            let stObj = <any>st;\n            res = {};\n            let stType: string = stObj.__type;\n            if (_.isString(stType) && stType.indexOf('.') != -1)\n                stType = stType.split('.')[1];\n\n            delete stObj.name;\n            delete stObj.__type;\n\n            let isAllEmpty = true;\n            delete stObj.__action;\n\n            // add trailed 'Field'\n            _.forEach(st, (v, k) => {\n\n                let conv = this.convertModelToSettings(v);\n                if (_.isArray(conv))\n                    if (conv.length == 0)\n                        conv = null;\n\n                if (conv !== null && conv !== undefined)\n                    isAllEmpty = false;\n\n                let field = this.toCamelCase(k + 'Field');\n                res[field] = conv;\n\n                if (stType == 'GridSettings') {\n                    ['VisibleRows', 'PagesRequested'].forEach(nf => {\n                        if (k == nf) {\n                            let specified = !(st[nf] === null || st[nf] === undefined);\n                            res[this.toCamelCase(nf + 'FieldSpecified')] = specified;\n                            if (specified)\n                                isAllEmpty = false;\n                        }\n                    });\n                }\n            });\n\n            if (isAllEmpty) {\n                res = null;\n            }\n            else if (_.isArray(res) && res.length == 0) {\n                res = null;\n            }\n\n            if (stType == \"UIComponentDataContractLink\") {\n                if (res) {\n                    res['__deletedField'] = false;\n                    res['__deletedFieldSpecified'] = false;\n                }\n            }\n            else if (stType == \"DataSource\") {\n                if( res['loginPasswordField'] === undefined )\n                    res['loginPasswordField'] = \"\";\n            }\n        }\n        else {\n            res = st;\n        }\n\n        return res;\n    }\n\n    public elementSerialize(element: IElement) : string{\n        const ignoredKeys = [\"history\", \"__layoutManager\",\"__selectedElement\",\n        \"__xml\", \"__designMode\", \"__zoomXml\", \n        \"isRoot\", \"__layoutMenu\", \"__workspace\", \"scaleValue\", \"componentRef\", \"isDirty\", \"workspaceIndexes\",\n        \"activeElement\"];\n\n        return JSON.stringify(element, (k, v) => {\n            if (ignoredKeys.indexOf(k) != -1 ) \n                return undefined;\n            else\n                return v;\n            });\n    }\n\n    private toCamelCase(s: string) {\n        if (s.toLowerCase() == 'cdonamefield') {\n            s = 'CDONameField';\n        }\n\n        return s[0].toLowerCase() + s.substring(1);\n    }\n\n    private findItemByName(name: string, list: IElement[]) {\n        let item = null;\n        _.forEach(list, v => {\n            if (v.name == name) {\n                item = v;\n                return false;\n            }\n        });\n        return item;\n    }\n\n    private isNDORef(v): boolean {\n        if (v['CDOTypeName'] && v['ID'])\n            return true;\n        else\n            return false;\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { IPropertyMetadata, ListItemActions, JQGridCustomScript, QueryOptions, QueryParameter, HandlerItem, ConnectionProfileData, BOAuthenticationType} from '../objects/viewModel';\nimport { MetadataService } from './metadata.service';\nimport { LayoutBuilder, IElement, ILabel, val,  TypeHandler, RevisionedObjectRef, uuid} from '../objects/common';\nimport { AlertService } from '../../alert/alert.service';\n\nimport * as _ from 'lodash';\nimport { StudioStateService } from './studioStateService';\nimport { PortalService } from './portal.service';\n\n@Injectable()\nexport class DataAccessors {\n\n    constructor(private metadataService: MetadataService, private _studioStateService: StudioStateService,  private _alertService: AlertService, private _portalService : PortalService) {\n    }\n\n    public callSetter(v: any, instance: any, properties: IPropertyMetadata[], valType: string, property: IPropertyMetadata, populating: boolean): boolean {\n        let accessor: PropertyAccessor = this[property.accessor];\n        if (accessor && _.isFunction(accessor.setter)) {\n            accessor.setter(v, instance, properties, valType, property, populating);\n            return true;\n        }\n        return false;\n    }\n\n    public callGetter(propertyContext: any, property: IPropertyMetadata): any {\n        let accessor: PropertyAccessor = this[property.accessor];\n        if (accessor && _.isFunction(accessor.getter)) {\n            return accessor.getter(propertyContext, property);\n        }\n        return;\n    }\n\n    public hasGetter(property: IPropertyMetadata): any {\n        let accessor: PropertyAccessor = this[property.accessor];\n        return (accessor && _.isFunction(accessor.getter));\n    }\n\n    public DataContract = new PropertyAccessor(\n        (propertyContext: any, property: IPropertyMetadata) => {\n            if (propertyContext.properties) {\n                let dc = this.metadataService.getByKey(propertyContext.properties, 'dataContract');\n                if (dc)\n                    return this.metadataService.getByKey(dc, 'dataMembers');\n            }\n            else {                \n                let linkMap = null;\n                if( property.name == \"DataContractLinks\"){\n                    linkMap = val(propertyContext, \"dataContractMap\");\n                    return val(linkMap, \"links\");\n                }\n                else if( property.name == \"DataContractReturnLinks\"){\n                    linkMap = val(propertyContext, \"dataContractReturnMap\");\n                    return val(linkMap, \"returnLinks\");\n                }\n            }\n            return null;\n        },\n        (v: any, propertyContext: any, properties : IPropertyMetadata[], t: string, property: IPropertyMetadata) => {\n            let linkMap;\n            if( property?.name == \"DataContractLinks\"){\n                linkMap = val(propertyContext, \"dataContractMap\");\n                if( !linkMap )\n                    linkMap = (propertyContext.dataContractMap = {__type: \"UIComponentDataContractMap\" });\n                linkMap.links = v;\n                return;\n            }\n            else if(property?.name == \"DataContractReturnLinks\"){\n                linkMap = val(propertyContext, \"dataContractReturnMap\");\n                if( !linkMap )\n                    linkMap = (propertyContext.dataContractReturnMap = {__type: \"UIComponentDataContractReturnMap\" });\n                linkMap.returnLinks = v;\n                return;\n            }\n\n            if (!propertyContext.properties)\n                propertyContext.properties = {};\n\n            let dc = this.metadataService.getByKey(propertyContext.properties, 'dataContract');\n            if (dc)\n                dc['dataMembers'] = v;\n            else{\n                if( v !== null)\n                    propertyContext.properties.dataContract = { __type: 'UIComponentDataContract', dataMembers: v };\n                else\n                    propertyContext.properties.dataContract = null;\n            }\n        });\n\n    public DynamicWebParts = new PropertyAccessor(\n        (propertyContext: any) => {\n            let webParts = [];\n            if (propertyContext && propertyContext.items) {\n                _.forEach(propertyContext.items, w => {\n                    let wp = _.cloneDeep(w);\n                    wp.__type = w.typeName;\n                    webParts.push(wp);\n                });\n            }\n            return webParts;\n        });\n\n    public ValueReference_DependenceType = new PropertyAccessor(undefined,\n        (v: any, propertyContext: any, properties: IPropertyMetadata[]) => {\n            let changed = propertyContext.connectionType !== v;\n            \n            propertyContext.connectionType = v;\n            if( changed )\n                propertyContext.key = '';        \n\n\n            let connectionName = this.metadataService.getMetadataType('DataMemberConnectionType').enumValues[v].name;\n            let propertyProperty = properties.find(px => px.name.toLowerCase() == \"property\");\n            if (propertyProperty) {\n                if (connectionName == 'Control') {\n                    propertyProperty.editor.provider = \"elementProperties\";\n                    propertyProperty.hidden = false;\n                }\n                else {\n                    propertyProperty.hidden = true;\n                    propertyProperty.editor.provider = null;\n                }\n            }\n            let requestDataModeProperty = properties.find(px => px.name.toLowerCase() == \"requestdatamode\");\n            let eventProperty = properties.find(px => px.name.toLowerCase() == \"event\");\n\n            let keyProperty = properties.find( px => px.name.toLowerCase() == \"key\");\n            if (keyProperty) {\n                keyProperty.displayedName = connectionName;\n                keyProperty.value = null;\n                keyProperty.hidden = false;\n                keyProperty.editor.filter = null;\n                keyProperty.editor.directive = \"selector\";\n\n                if (eventProperty) eventProperty.hidden = true;\n                if (requestDataModeProperty) requestDataModeProperty.hidden = true;\n\n                if (connectionName == 'Control') {\n                    keyProperty.editor.provider = \"elements\";\n                    if (eventProperty) eventProperty.hidden = false;\n                    if (requestDataModeProperty) requestDataModeProperty.hidden = false;\n                }\n                else if (connectionName == 'PageDataContract') {\n                    //keyProperty.editor.provider = \"pageDataContracts\";\n                    keyProperty.editor.directive = \"text\";\n                    keyProperty.editor.provider = null;\n                }\n                else if (connectionName == 'SessionDataContract') {\n                    keyProperty.editor.provider = \"sessionDataContracts\";\n                }\n                else if (connectionName == 'FieldExpression') {\n                    keyProperty.editor.directive = \"text\";\n                    keyProperty.editor.provider = \"fieldExpression\";\n                }\n                else if (connectionName == 'StaticValue') {\n                    keyProperty.editor.directive = \"text\";\n                    keyProperty.editor.provider = null;\n                }\n                else if (connectionName == 'SessionVariable') {\n                    keyProperty.editor.directive = \"text\";\n                    delete keyProperty.editor.provider;\n                    delete keyProperty.editor.options;\n                }\n                else if (connectionName == 'GridItem') {\n                    keyProperty.editor.directive = \"text\";\n                    keyProperty.editor.provider = null;\n                }\n                else {\n                    keyProperty.editor.provider = null;\n                }\n\n                if (connectionName == 'None') {\n                    keyProperty.hidden = true;\n                    keyProperty.editor.directive = \"text\";\n                    keyProperty.editor.provider = null;\n                }\n            }\n        });\n\n\n    public RequestDataMode = new PropertyAccessor(undefined,\n        (v: any, propertyContext: any, properties: IPropertyMetadata[]) => {\n\n            let eventProperty = properties.find(p => p.name.toLowerCase() == 'event');\n            if (eventProperty) {\n                if (v === undefined || v === null) {\n                    propertyContext.event = null;\n                    eventProperty.hidden = true;\n                    return;\n                }\n                eventProperty.hidden = v !== 0;\n                propertyContext.requestDataMode = v;               \n            }\n        });\n       \n    public Control_Type = new PropertyAccessor(\n        (propertyContext: any) => {\n            if (propertyContext && propertyContext.typeName) {\n                return propertyContext.typeName;\n            }\n        });\n\n    // GridCell\n    public Cell_Column = new PropertyAccessor((propertyContext: any) => { if (propertyContext) { return propertyContext.col; } });\n    public Cell_ColumnSpan = new PropertyAccessor((propertyContext: any) => { if (propertyContext) { return propertyContext.colSpan; } });\n    public Cell_Row = new PropertyAccessor((propertyContext: any) => { if (propertyContext) { return propertyContext.row; } });\n    public Cell_RowSpan = new PropertyAccessor((propertyContext: any) => { if (propertyContext) { return propertyContext.rowSpan; } });\n\n    public Cell_StyleProp = new PropertyAccessor(\n            (propertyContext: any, prop: IPropertyMetadata) => { \n                let style = val(propertyContext.properties, \"style\");\n                let v = val(style, prop.name);\n                if(v === undefined){\n                    if(!(prop.editor && prop.editor.directive == \"enum\" ))\n                        v = '';\n                }\n                return v;\n            },\n            (v: any, propertyContext: any, properties: IPropertyMetadata[], t: string, prop:IPropertyMetadata) => {\n                let style = val(propertyContext.properties, \"style\");\n                if(!style)\n                    style = val(propertyContext.properties, \"style\", {__type: 'Style'});                \n                val(style, prop.name, v);\n            });\n    \n    public GridDataMode = new PropertyAccessor(undefined,\n        (v: any, propertyContext: any, properties: IPropertyMetadata[]) => {\n\n            if (propertyContext.properties.gridDataMode !== v) {\n                // process if changed\n                propertyContext.properties.gridDataMode = v;\n\n                const settingTypes: string[] = [\"GridDataSettingsDataTable\", \"GridDataSettingsItemList\", \"GridDataSettingsSubentityList\",\n                    \"GridDataSettingsSelVal\", \"GridDataSettingsPredefinedQuery\", \"GridDataSettingsAdHocQuery\", \"GridDataSettingsGeneric\"];\n\n                let settingsType = settingTypes[v];\n\n                // change type or create new grid Settings\n                if (propertyContext.properties.settings && propertyContext.properties.settings.__type === settingsType) {\n                    // no changes\n                }\n                else {\n                    propertyContext.properties.settings = { __type: settingsType };\n                }\n\n                let s = _.find(properties, p => p.name.toLowerCase() == 'settings');\n                if (s)\n                    s.value = propertyContext.properties.settings;\n            }\n        });\n\n    public Margin = new PropertyAccessor(\n        (propertyContext: any) => this.thickness_get('Margin', propertyContext),\n\n        (v: any, propertyContext: any, properties: IPropertyMetadata[]) =>\n            this.thickness_set('Margin', v, propertyContext, properties)\n    );\n\n    public Padding = new PropertyAccessor(\n        (propertyContext: any) => this.thickness_get('Padding', propertyContext),\n        \n        (v: any, propertyContext: any, properties: IPropertyMetadata[]) => \n            this.thickness_set('Padding', v, propertyContext, properties)\n    );\n\n    public SectionDefinition = new PropertyAccessor(\n        (propertyContext: any) => {\n\n            // convert layout to section\n            let lt = propertyContext.layout;\n            let sec = propertyContext.properties.section || { __type: 'SectionDefinition', layout: {__type: 'GridLayout'}, dynamicWebParts : []};\n            if (lt) {\n                sec.layout = _.cloneDeep(lt);\n                sec.dynamicWebParts = propertyContext.items || [];\n                return sec;\n            }\n        }\n    );\n\n    public JQTabContainer_Tabs = new PropertyAccessor(\n        // Getter -- maybe it's needed to collect internal web parts\n        (propertyContext: any) => {\n            return propertyContext.properties.tabDefinitions;\n        },\n\n        // Setter\n        (v: any, propertyContext: any) => {\n            // fix tab definition, add default values\n            let maxIndex = v.length;\n            let tds = _.filter(<any[]>v, td => td.__action !== ListItemActions.delete).map(t => {\n\n                if (!val(t, \"name\")) {\n                    t.name = 'TabDefinition' + maxIndex;\n                    t.index = maxIndex;\n                    maxIndex++;\n                }\n                if (!t.id)\n                    t.id = uuid.id('tab');\n\n                if (!t.layout) {\n                    t.layout = LayoutBuilder.getLayout(2, 1);\n                }\n\n                delete t.__action;\n                return t;\n            });\n\n            propertyContext.properties.tabDefinitions = tds;\n            delete propertyContext.properties.section;\n        }\n    );\n\n    public TagItemSource = new PropertyAccessor(undefined,\n        (v: any, propertyContext: any, properties: IPropertyMetadata[]) => {\n            if (v === undefined || v === null)\n                v = 0;\n\n            if (propertyContext.tagItemSource !== v) {\n                // changed\n                propertyContext.tagItemValue = '';\n            }\n\n            propertyContext.tagItemSource = v;\n\n            let propertyTagItemValue = _.find(properties, px => { return px.name.toLowerCase() == \"tagitemvalue\"; });\n            if (propertyTagItemValue) {\n                if (v == 0) {\n                    // Control\n                    propertyTagItemValue.displayedName = 'Control';\n                    propertyTagItemValue.editor.directive = \"selector\";\n                    propertyTagItemValue.editor.provider = \"elements\";\n                }\n                else if (v == 1) {\n                    // Session Variable\n                    propertyTagItemValue.displayedName = 'SessionVariable';\n                    propertyTagItemValue.editor.directive = \"text\";\n                    delete propertyTagItemValue.editor.provider;\n                    delete propertyTagItemValue.editor.options;\n                }\n            }\n        }\n    );\n\n    public SelectionDependsOnItem_DependenceType = new PropertyAccessor(undefined,\n        (v: any, propertyContext: any, properties: IPropertyMetadata[]) => {\n\n            let changed = propertyContext.dependenceType !== v;\n\n            propertyContext.dependenceType = v;\n            if( changed )\n                propertyContext.dependenceValue = '';\n            \n            let propertyDependenceValue = properties.find(p => p.name.toLowerCase() == \"dependencevalue\" );\n            let propertyMethod = properties.find(p => p.name.toLowerCase() == \"method\");\n            let propertyServiceName = properties.find(p => p.name.toLowerCase() == \"servicename\");            \n            let propertyRequestDataMode = properties.find(p => p.name.toLowerCase() == \"requestdatamode\" );\n            let propertyEvent = properties.find(p => p.name.toLowerCase() == \"event\" );\n            \n            if( propertyEvent ) propertyEvent.hidden = true;\n                \n            propertyDependenceValue.editor.filter = null;\n            propertyDependenceValue.editor.directive = \"selector\";\n            if (propertyMethod) propertyMethod.hidden = true;\n            if (propertyServiceName) propertyServiceName.hidden = true;\n\n            switch (v) {\n                case 0: // Control\n                    propertyDependenceValue.displayedName = 'Control';\n                    if( propertyRequestDataMode ) propertyRequestDataMode.hidden = false;\n                    propertyDependenceValue.editor.provider = \"elements\";\n                    if (propertyMethod) propertyMethod.hidden = false;\n                    if (propertyServiceName) propertyServiceName.hidden = false;\n                    break;\n                case 1: // Action\n                    propertyDependenceValue.displayedName = 'Action';\n                    propertyDependenceValue.editor.provider = \"elements\";\n                    propertyDependenceValue.editor.filter = \"actions\";\n                    if( propertyEvent ) propertyEvent.hidden = true;\n                    if( propertyRequestDataMode ) propertyRequestDataMode.hidden = true;\n                    break;\n                case 2: // fieldexpression\n                    propertyDependenceValue.displayedName = 'FieldExpression';\n                    propertyDependenceValue.editor.directive = \"text\";\n                    propertyDependenceValue.editor.provider = \"fieldExpression\";\n                    if( propertyEvent ) propertyEvent.hidden = true;\n                    if( propertyRequestDataMode ) propertyRequestDataMode.hidden = true;\n                    break;\n                case 3: // Session Data Contract\n                    propertyDependenceValue.displayedName = 'SessionDataContract';\n                    propertyDependenceValue.editor.provider = \"sessionDataContracts\";\n                    if( propertyEvent ) propertyEvent.hidden = true;\n                    if( propertyRequestDataMode ) propertyRequestDataMode.hidden = true;\n                    break;\n                case 4: // Session Variable\n                    propertyDependenceValue.displayedName = 'SessionVariable';\n                    propertyDependenceValue.editor.directive = \"text\";\n                    propertyDependenceValue.editor.provider = null;\n                    if( propertyEvent ) propertyEvent.hidden = true;\n                    if( propertyRequestDataMode ) propertyRequestDataMode.hidden = true;\n                    break;\n            }\n        });\n    \n    public Content_Layout = new PropertyAccessor(\n        (propertyContext: any) => {\n\n            let lt = propertyContext.layout;\n            return lt;\n        }\n    );\n\n    public RevisionedObjectRef_accessor = new PropertyAccessor(\n        (propertyContext: any, property: IPropertyMetadata) => {\n            let v = <RevisionedObjectRef>val(propertyContext.properties, property.name);\n            if (v) {\n                let ro = new RevisionedObjectRef(v.name, v.revision, v.revisionOfRecord);\n                ro.cdoTypeName = v.cdoTypeName;\n                return ro;\n            }\n            return v;\n        },\n        (v: any, propertyContext: any, properties: IPropertyMetadata[], vt: string, property: IPropertyMetadata) => {\n            val(propertyContext.properties, property.name, v);\n        }\n    );\n\n    public GridColumns = new PropertyAccessor(undefined,\n        (v: any, propertyContext: any, properties: IPropertyMetadata[], vt: string, property: IPropertyMetadata) => {\n            let pname = property.name.toLowerCase();\n            let fexKey = _.findKey(propertyContext, (pv, k: string) => k.toLowerCase() == pname);\n            let oldFex = fexKey ? propertyContext[fexKey] : null;\n            let requestSelVal = propertyContext.__type == \"GridDataSettingsSelVal\";\n\n            propertyContext[fexKey] = v;\n            property.value = v;\n\n            let columnsProperty = _.find(properties, p => p.name.toLowerCase() == 'columns');\n\n            // The dialog is called only if field expression is changed \n            let openDialog: boolean;\n            if (v)\n                openDialog = (v != oldFex);           \n            else \n                openDialog = false;\n\n            if (openDialog) {\n                let fieldExp: string = v;\n                if (fieldExp[0] == '.') {\n                    // add service \n                    let root: IElement = this._studioStateService.activeRootElement;\n                    let servKey = _.findKey(root.properties, (p, k) => k.toLowerCase() == 'primaryservicetype');\n                    if (servKey)\n                        fieldExp = root.properties[servKey] + fieldExp;\n                    else {\n                        this._alertService.warningModal(<ILabel>{ Name: 'PS_SERVICE_UNDEFINED', DefaultValue: 'Service name is not defined. Columns are not generated.' });\n                        return;\n                    }\n                }\n                let mdlLabel: ILabel = <ILabel>{ Name: 'PS_GENERATE_COLUMNS', arguments: [fieldExp], DefaultValue: 'Generate columns for {0} ?' };\n                this._alertService.confirmModal(mdlLabel).subscribe( ok => {\n                    if (ok) {\n                        this._portalService.resolveGridColumns(fieldExp, requestSelVal).subscribe(\n                            columns => {\n                                if (_.isArray(columns)) {\n                                    if (columnsProperty)\n                                        columnsProperty.value = columns;\n                                    propertyContext.columns = columns;\n                                }\n                                else {\n                                    // error\n                                    propertyContext[property.name] = property.value = null;\n                                    this._alertService.errorModal(columns);\n                                }\n                            }\n                        );\n                    }\n                });                \n            }\n        });\n\n    public query_GridColumnsSetup = new PropertyAccessor(undefined,\n        (v: any, propertyContext: any, properties: IPropertyMetadata[], vt: string, property: IPropertyMetadata) => {\n            let pname = property.name.toLowerCase();\n            let oldValue  = _.find(propertyContext, (pv, k: string) => k.toLowerCase() == pname);\n\n            if( !oldValue && (v === undefined || v==null))\n                return;\n\n            propertyContext[property.name] = v;\n            property.value = v;\n\n            let columnsProperty = _.find(properties, p => p.name.toLowerCase() == 'columns');\n            // replace parameters                        \n            let query = v;\n            if( pname==\"querytext\")\n                _.forEach(propertyContext.queryParameters, c=> {query = query.replace('?'+c.name, `'${c.__tempValue}'`); delete c.__tempValue; });\n\n            if (v !== oldValue) {\n                let mdlLabel: ILabel = <ILabel>{ Name: 'PS_GENERATE_COLUMNS', arguments: [v], DefaultValue: 'Generate columns for {0} ?' };\n                this._alertService.confirmModal(mdlLabel).subscribe( ok => {\n                    if (ok) {\n                        let params = _.map(propertyContext.queryParameters, (px:any) => <QueryParameter>{Name: px.name, Value : px.__tempValue });\n\n                        let obs = pname==\"querytext\" ? \n                            this._portalService.getAdHocQueryColumns(query, <QueryOptions>{RowSetSize: 1}) :\n                            this._portalService.getQueryColumns(query, <QueryOptions>{RowSetSize: 1}, params);\n\n                        obs.subscribe(\n                            columns => {                                \n                                if (_.isArray(columns)) {\n                                    if (columnsProperty)\n                                        columnsProperty.value = columns;\n                                    propertyContext.columns = columns;\n                                }\n                                else {\n                                    // error\n                                    propertyContext[property.name] = property.value = null;\n                                    this._alertService.errorModal(columns);\n                                }\n                            }\n                        );\n                    }\n                });                \n            }\n        });\n            \n    public ConnectionDefinition_FromWebPart = new PropertyAccessor(\n        (propertyContext: any) => {\n            return propertyContext.fromWebPartName;\n        },\n\n        (v: any, propertyContext: any, properties: IPropertyMetadata[], vt: string, property: IPropertyMetadata) => {\n            propertyContext.fromWebPartName = v;\n            properties.find(p => p.name.toLowerCase() == 'fromwebpartname').value = v;\n            property.value = v;\n        });\n\n    public ConnectionDefinition_ToWebPart = new PropertyAccessor(\n        (propertyContext: any) => {\n            return propertyContext.toWebPartName;\n        },\n\n        (v: any, propertyContext: any, properties: IPropertyMetadata[], vt: string, property: IPropertyMetadata) => {\n            propertyContext.toWebPartName = v;\n            properties.find(p => p.name.toLowerCase() == 'towebpartname').value = v;\n            property.value = v;\n        });\n\n    public JQGridCustomScript = new PropertyAccessor(\n        (propertyContext: any) => {\n            let initVal: JQGridCustomScript[] = propertyContext.customScriptHandlers;\n            // Processed only if we click in the modal collection editor\n            //delete propertyContext['__selectedInModalCollection'];\n            let resVal: JQGridCustomScript[];\n            initVal = initVal || [];\n            let isColumn = !(<string>propertyContext.__type).startsWith('GridDataSettings');\n            let eventList = isColumn ?\n                ['click', 'change', 'onAddCellAttributes'] :\n                ['renderCompleted', 'rowDeleted', 'editingStarted'];\n\n            resVal = eventList.map<JQGridCustomScript>(e =>\n                initVal.find(iv => iv.Name === e || iv['name'] === e) || \n                <JQGridCustomScript>{ Name: e, Handler: '', __type: 'JQGridCustomScript' }\n            );\n            return resVal;\n        },\n        (v: any, propertyContext: any, properties: IPropertyMetadata[], vt: string, property: IPropertyMetadata) => {\n            // cleanup empty handlers\n            propertyContext.customScriptHandlers = _.filter<JQGridCustomScript>(v, e => !_.isEmpty(e['Handler']) || !_.isEmpty(e['handler']) );\n        }\n    );\n\n    public SelectionDataSourceMap_SourceType = new PropertyAccessor(undefined,\n        (v: any, propertyContext: any, properties: IPropertyMetadata[]) => {\n            if (propertyContext.sourceType != v) {\n                propertyContext.sourceType = v;\n            }\n\n            let mp = this.mapProperties([\"StaticSource\", \"SetData\", \"Query\", \"QueryType\", \"QueryExecutionMode\", \"Parameters\"], properties);\n            _.forEach(mp, v => v.hidden = true);\n\n            switch (v) {\n                case 0: // StaticSource\n                    mp['StaticSource'].hidden = false;\n                    mp['QueryExecutionMode'].value = null;\n                    delete propertyContext.queryExecutionMode;\n                    break;\n                case 1: // SetData\n                    mp['SetData'].hidden = false;\n                    mp['QueryExecutionMode'].value = null;\n                    delete propertyContext.queryExecutionMode;\n                    break;\n                case 2: // Query\n                    mp['Query'].hidden = false;\n                    mp['QueryType'].hidden = false;\n                    mp['QueryExecutionMode'].hidden = false;\n                    mp['Parameters'].hidden = false;\n                    break;\n            }\n        });\n\n    public SelectionDataSourceMap_QueryExecutionMode = new PropertyAccessor(undefined,\n        (v: any, propertyContext: any, properties: IPropertyMetadata[]) => {\n\n            let changed = false;\n            if (propertyContext.queryExecutionMode!= v) {\n                propertyContext.queryExecutionMode = v;\n                changed = true;\n                propertyContext.query = '';\n            }\n\n            let mp = this.mapProperties([\"Query\", \"QueryType\"], properties);\n            _.forEach(mp, v => v.hidden = true);\n\n            switch (v) {\n                case 0: // adhoc\n                    mp['Query'].hidden = false;\n                    break;\n                case 1: // preDefined\n                    mp['QueryType'].hidden = false;\n                    mp['Query'].hidden = false;\n                    break;\n            }\n            if (changed) {\n                mp['Query'].value = '';\n            }\n        });\n\n    public SelectionDataSourceMap_Query = new PropertyAccessor(undefined,\n        (v: any, propertyContext: any, properties: IPropertyMetadata[]) => {\n            \n            if (val(propertyContext, \"query\") != v) {\n                val(propertyContext, \"query\", v);\n                let pp = properties.find(p=> p.name.toLowerCase() == \"parameters\");\n                if( pp ){\n                    pp.value = val(propertyContext, \"parameters\");\n                }\n            }\n        });\n            \n    public PageContent_CSSClass = new PropertyAccessor(\n        (propertyContext: any) => {\n            let st = val(propertyContext.properties, \"style\");\n            if( st )\n                return val(st, \"CSSClass\") || '';\n            return '';\n        },\n        (v: any, propertyContext: any, properties: IPropertyMetadata[]) => {\n            let st = val(propertyContext.properties, \"style\");\n            if(!st)\n                st = val(propertyContext.properties, \"style\", {__type: 'Style'});            \n            val(st, \"CSSClass\", v);\n        });\n    \n    public WebPart_HiddenRootProperty = new PropertyAccessor(\n        (propertyContext: any, property: IPropertyMetadata) => {\n            return val(propertyContext.properties, property.name) || '';\n        },\n        (v: any, propertyContext: any, properties: IPropertyMetadata[], t, property: IPropertyMetadata) => {\n            // Hide height/width for WebPart in root mode\n            if( propertyContext.isRoot === true) {\n                property.hidden = true;\n                return;\n            }\n            if( !propertyContext.properties )\n                propertyContext.properties = {};\n            \n            if( v === undefined || v === null)\n                v = \"\";\n            else\n                v = v.toString();\n\n            val(propertyContext.properties, property.name, v);\n        });\n\n        private mapProperties(names: string[], properties: IPropertyMetadata[]): { [name: string]: IPropertyMetadata } {\n        let res: { [name: string]: IPropertyMetadata } = {};\n        names.forEach(n => { res[n] = _.find(properties, p => p.name.toLowerCase() == n.toLowerCase()) });\n        return res;\n    }\n    \n    public Event_HandlerSource = new PropertyAccessor(undefined,\n        (v: any, propertyContext: any, properties: IPropertyMetadata[], t, property: IPropertyMetadata) => {\n            val(propertyContext, property.name, v);\n\n            let ctlProp = properties.find(p=> p.name.toLowerCase() == 'control');\n            if( ctlProp )\n                ctlProp.hidden = (v !== 1 /*Control*/);\n\n            let isClientEvent = property.enumValues.length <5;\n            let handlerProp = properties.find(p=> p.name.toLowerCase() == 'handler');\n            if( handlerProp ){\n                if( (isClientEvent && v ===2) || ( !isClientEvent && v === 5) /*static method*/ ){\n                    handlerProp.editor.directive = \"text\";\n                    handlerProp.editor.provider = null;\n                }\n                else{\n                    handlerProp.editor.directive = \"selector\";\n                    handlerProp.editor.provider = !isClientEvent ? \"handlers\" : \"clientHandlers\";\n                }\n            }\n        });\n\n    public EventHandlerMapItem_Handler = new PropertyAccessor(\n        (propertyContext: any, property: IPropertyMetadata) => {\n                let handlerItem : HandlerItem = HandlerItem.parse(val(propertyContext, property.name));\n                let th : TypeHandler = handlerItem.toTypeHandler();\n                if( property.editor.directive == \"text\"){\n                    return th ? th.Name: \"\";\n                }\n                return th ? th.Name : \"\";\n            },\n            (v: any, propertyContext: any, properties: IPropertyMetadata[], t, property: IPropertyMetadata) => {\n                // v is TypeHandler. Should be converted to HandlerItem\n                let oldHandler = HandlerItem.parse(val(propertyContext, \"Handler\"));\n                \n                let handlerItem : HandlerItem;\n                if( !_.isString(v))\n                    handlerItem = HandlerItem.fromTypeHandler(v as TypeHandler);\n                else {\n                    handlerItem = new HandlerItem();\n                    handlerItem.name = v as string;\n                    if( oldHandler )\n                        handlerItem.parameters = oldHandler.parameters;\n                }\n\n                if( !HandlerItem.equals(handlerItem, oldHandler)){\n                    // changed\n                    val(propertyContext, property.name, handlerItem.name ? handlerItem : null);\n                    // set new parameters\n                    let propertyParameters = properties.find( p=> p.name.toLowerCase() == \"parameters\");\n                    if( propertyParameters )\n                        propertyParameters.value = handlerItem.parameters.length > 0 ? handlerItem.parameters : null;;\n                }\n            }\n        );\n    \n        public EventHandlerMapItem_Parameters = new PropertyAccessor(\n            (propertyContext: any, property: IPropertyMetadata) => {\n                    let handlerItem = val(propertyContext, \"handler\");\n                    return handlerItem ?  val(handlerItem, \"parameters\") : null;\n                },\n                (v: any, propertyContext: any, properties: IPropertyMetadata[], t, property: IPropertyMetadata) => {\n                    let handlerItem = val(propertyContext, \"handler\");\n                    if( handlerItem )\n                        val(handlerItem, \"parameters\", v);\n                }\n            );\n\n        public ClientGenericEventHandler_HandlerSource = new PropertyAccessor(undefined,\n            (v: any, propertyContext: any, properties: IPropertyMetadata[], t, property: IPropertyMetadata) => {\n                val(propertyContext, property.name, v);\n    \n                let ctlProp = properties.find(p=> p.name.toLowerCase() == 'control');\n                if( ctlProp )\n                    ctlProp.hidden = (v !== 1 /*Control*/);\n    \n                let handlerProp = properties.find(p=> p.name.toLowerCase() == 'handler');\n                if( handlerProp ){\n                    if(v === 2 /* method */ ){\n                        handlerProp.editor.directive = \"text\";\n                        handlerProp.editor.provider = null;\n                    }\n                    else{\n                        handlerProp.editor.directive = \"selector\";\n                        handlerProp.editor.provider = \"handlers\";\n                    }\n                }\n            });\n        \n        public Intelligence_ReportName = new PropertyAccessor(undefined,\n                (v: any, propertyContext: any, properties: IPropertyMetadata[], t, property: IPropertyMetadata) => {\n                    let oldRepName = val(propertyContext.properties, \"ReportName\");\n                    if(v!== null && v !== oldRepName){\n                        let connProfile = val(propertyContext.properties, \"ConnectionProfile\");\n                        if( connProfile ){\n                            this._alertService.warning(<ILabel> {Name: \"PS_REQ_REPORT_PARAMS\",  DefaultValue : \"Requesting report parameters. Wait...\"});\n                            let conn = new ConnectionProfileData();\n                            conn.ServerDataMember = val( connProfile, \"Server\");\n                            conn.BOAuthTypeDataMember = val(propertyContext.properties, \"BOAuthentication\") || BOAuthenticationType.Enterprise;\n                            let propReportName = properties.find(p=> p.name.toLowerCase() ==  \"reportname\") as IPropertyMetadata;\n                            this._portalService.getReportParameters(conn, v).subscribe(prms=>{\n                                if( _.isArray(prms) ){\n                                    let crParameters = prms.map(pp=> {return {__type: \"CRParameter\", name: pp.NameDataMember};});\n                                    val(propertyContext.properties, propReportName.name, v);\n                                    let propParameters = properties.find(p=> p.name.toLowerCase() == \"parameters\") as IPropertyMetadata;\n                                    val(propertyContext.properties, propParameters.name, crParameters);\n                                    propParameters.value = crParameters;\n                                    this._alertService.success(<ILabel> {Name: \"PS_RECEIVED_REPORT_PARAMS\",  DefaultValue : \"Report parameters received.\"});\n                                }\n                                else{\n                                    val(propertyContext.properties, propReportName.name, v);\n                                    // prms is an error\n                                    this._alertService.error(prms);\n                                }\n                            });\n                        }\n                    }\n                });\n                    \n        public PageMappingTarget_TargetType = new PropertyAccessor(undefined,\n            (v: any, propertyContext: any, properties: IPropertyMetadata[]) => {\n\n                if (val(propertyContext, \"TargetType\") != v) \n                    val(propertyContext, \"TargetType\", v);\n                let targetProp = properties.find(p=> p.name.toLowerCase() == \"target\");\n\n                switch( v ){\n                    case 0: /*Page*/\n                        targetProp.editor.provider = \"ndoInstances\";\n                        targetProp.editor.parameters = [\"UIVirtualPage\"];\n                        break;\n                    case 1: /*Pageflow*/\n                        targetProp.editor.provider = \"ndoInstances\";\n                        targetProp.editor.parameters = [\"UIPageFlow\"];\n                        break;\n                    case 2: /*PageMappingItem*/\n                        targetProp.editor.provider = \"mappings\";\n                        targetProp.editor.parameters = null;\n                        break;\n                    default:\n                        targetProp.editor.provider = null;\n                        targetProp.editor.parameters = null;\n                        break;\n            }\n        });\n\n        public LabelName = new PropertyAccessor(undefined,\n            (v: any, propertyContext: any, properties: IPropertyMetadata[], t, property: IPropertyMetadata, populating: boolean) => {\n                val(propertyContext.properties, property.name, v);\n                if(populating !== true && property.editor.parameters && property.editor.parameters.length ){\n                    let textPropertyName = property.editor.parameters[0];\n                    let textValue = val(propertyContext.properties, textPropertyName);\n                    if( textValue ){\n                        let message = <ILabel>{Name: 'PS_LABEL_OVERRIDE', DefaultValue: 'The label text field associated with label name is not empty.  The text overides the label value.  Would you like to clear the text?'};\n                        this._alertService.confirmModal(message)\n                            .subscribe( ok => {\n                            if (ok) {\n                                // clear text\n                                val(propertyContext.properties, textPropertyName, null);\n                                let textProperty = properties.find( p=> p.name.toLowerCase() == textPropertyName.toLowerCase() );\n                                if( textProperty )\n                                    textProperty.value = null;\n                            }\n                        });                            \n                    }\n                }        \n            });\n\n        public TargetMatrixItem_Rows = new PropertyAccessor(undefined,\n            (v: any, propertyContext: any, properties: IPropertyMetadata[], t, property: IPropertyMetadata, populating: boolean) => {    \n                if( populating ){\n                    // trick to not display the value\n                    property.editor.directive = \"modal\";\n                }\n                else{\n                    val(propertyContext, property.name, v);\n                    let pColumns = properties.find(p=> p.name.toLowerCase() == \"columns\");\n                    pColumns.value = val(propertyContext, \"columns\");\n                    let pImportFile = properties.find(p=> p.name.toLowerCase() == \"importedfilename\");\n                    pImportFile.value = val(propertyContext, \"ImportedFileName\") || \"\";\n                }\n            }\n        );\n\n        public PIMetricQueryName = new PropertyAccessor(\n            undefined,\n            (v: any, propertyContext: any, properties: IPropertyMetadata[], valType, property) => {\n                if(property.name.toLowerCase().startsWith(\"trend\")){\n                    if( v !== val(propertyContext.properties, \"trendQueryName\")){\n                        // reset query parametres if value changed\n                        val(propertyContext.properties, \"trendQueryParameters\", null);\n                        val(propertyContext.properties, \"trendValueColumn\", null);\n                        val(propertyContext.properties, \"trendQueryName\", v);\n                    }\n                }\n                else{\n                    if( v !== val(propertyContext.properties, \"valueQueryName\")){\n                        // reset query parametres if value changed\n                        val(propertyContext.properties, \"valueQueryParameters\", null);\n                        val(propertyContext.properties, \"valueColumn\", null);\n                        val(propertyContext.properties, \"valueQueryName\", v);\n                    }\n                }\n            });            \n    \n        private thickness_get(field: string,  propertyContext: any){\n        let m : any;\n        if( propertyContext.__type === 'GridLayoutCell')\n            propertyContext = propertyContext.cell;\n            \n        if( propertyContext.__type === 'Style'){\n            // webpart or page\n            m = val(propertyContext, field);\n        }\n        else if(propertyContext.type === 'Webpart' || propertyContext.type === 'cell'){\n            let st = val(propertyContext.properties, \"style\");\n            if( st )\n                m = val(st, field);\n        }\n        else{\n            // for control\n            m = val(propertyContext, 'control'+field);\n        }\n            // left, top, rignt, bottom\n        return m ? [m.left, m.top, m.right, m.bottom].join() : '';\n    }\n\n    private thickness_set(field: string, v: any, propertyContext: any, properties: IPropertyMetadata[]){\n        if (v) {\n            // v = CSV array [left, top, rignt, bottom]\n            let pv: any[] = (<string>v).split(',').map(a => a ? parseFloat(a) : 0);\n            let m = { left: pv[0], top: pv[1], right: pv[2], bottom: pv[3], __type: field };\n            if( propertyContext.__type === 'Style'){\n                // webpart or page\n                val(propertyContext, field, m);\n            }\n            else if(propertyContext.type === 'Webpart' || propertyContext.type === 'cell' || propertyContext.__type === 'GridLayoutCell'){\n                let pc = propertyContext.__type === 'GridLayoutCell' ? propertyContext.cell : propertyContext;\n                if(!pc.properties)\n                    pc.properties = {};\n                let st = val(pc.properties, \"style\") || val(pc.properties, \"style\", {__type: 'Style'});\n                val(st, field, m);\n            }                \n            else{\n                // for control\n                val(propertyContext, 'control'+field, m);\n            }\n        }\n        else {\n            if( propertyContext.__type === 'Style'){\n                // webpart or page\n                val(propertyContext, field, null);\n            }\n            else if(propertyContext.type === 'Webpart'){\n                let st = val(propertyContext.properties, \"style\");\n                if( st )\n                    val(st, field, null);\n            }\n            else{\n                // for control\n                val(propertyContext, 'control'+field, null);\n            }\n        }\n    }\n}\n\nexport class PropertyAccessor {\n    constructor(\n        public getter: (propertyContext: any, property?: IPropertyMetadata) => any,\n        public setter?: (val: any, propertyContext: any, properties?: IPropertyMetadata[], valueType?: string, property?: IPropertyMetadata, populating?: boolean ) => void) {\n    }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { IPropertyMetadata, CodeBehindDescriptor, ImageFile, IOMTypeDescriptor, ConnectionProfileData, BOAuthenticationType, QueryOptions, QueryTypes } from '../objects/viewModel';\nimport { IElement, ISelectableItem, UpdatedInfo, UpdateDataTypes, PropertyUpdatedData, TypeDescriptor, TypeHandler, RevisionedObjectRef, IUIComponentRef, val, IResultStatus } from '../objects/common';\nimport { PortalService } from './portal.service';\nimport { MetadataService } from './metadata.service';\nimport { WCFService } from './wcf.service';\nimport { environment } from '../../../environments/environment';\nimport { Observable, from, of, empty} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport _ from 'lodash';\nimport { AlertService } from '../../alert/alert.service';\nimport { StudioStateService } from './studioStateService';\n\n@Injectable()\nexport class ValueProviderService {\n\n    static Cache = {};\n\n    constructor( @Inject(MetadataService) private _metadataService: MetadataService, \n                @Inject(StudioStateService) private _studioStateService: StudioStateService,\n                @Inject(PortalService) private portalService: PortalService,\n                @Inject(WCFService) private wcfService: WCFService,\n                @Inject(AlertService) private alert: AlertService\n            ) {\n    }\n\n    public consolidatedDependencies = {\n        '__elements__': ['actions', 'layout'],\n        '__contracts__':['dataMembers']\n    };\n\n    get cache(): any { return ValueProviderService.Cache; }\n\n    errorMessage: any;\n\n    public matchDependency(updated: UpdatedInfo, property: IPropertyMetadata): boolean {\n        let reload = false;\n        if (!updated.is(UpdateDataTypes.property)) {\n            return;\n        }\n        let upd = <PropertyUpdatedData>updated.data;\n        let path = upd.path.toLowerCase();\n        if (path == property.name.toLowerCase()) {\n            // ignore itself changes\n            reload = false;\n        }\n        else {\n            if (property.dependencies) {\n                property.dependencies.forEach(d => {\n                    if (d.toLowerCase() == path)\n                        reload = true;\n                    else {\n                        // test consolidated dependencies\n                        let cd = <string[]>this.consolidatedDependencies[d]\n                        if (cd && cd.indexOf(path) != -1)\n                            reload = true;\n                    }\n                });\n            }\n        }\n\n        return reload;\n    }\n\n    public getSelectableItems(property: IPropertyMetadata, instance: any): Observable<ISelectableItem[]> {\n        let providerName = property.editor.provider;\n        if( !providerName && property.editor.options){\n            // try to parse\n            this._metadataService.parseOptions(property);\n            providerName = property.editor.provider;\n        }\n\n        if( providerName ){\n            let provider: (p: IPropertyMetadata, f: (v: ISelectableItem[]) => void, instance?: any) => void = this[providerName];\n            if (_.isFunction(provider)) {\n                let pr = provider.call(this, property, instance);\n                if(pr instanceof Promise)\n                    return from(pr);\n                else\n                    return pr;\n            }\n        }\n\n        // error\n        console.error(\"No provider for \" + property.name);\n        let empty : ISelectableItem[] = [];\n        return from([empty]);\n    }\n\n    public camstarServices(property: IPropertyMetadata): Observable<ISelectableItem[]> {\n        return this.portalService.getCamstarServices().pipe(\n            map(services => {\n                var selectableServices: ISelectableItem[] = [];\n                this.addEmptyItem(property, selectableServices);\n                if (services) {\n                    services.forEach(srv => {\n                        selectableServices.push( new SelectableItem(srv.ClassName, srv.ClassName, srv.ClassName));\n                    });\n                }\n                this.cache[\"camstarServices\"] = selectableServices;\n                return selectableServices;\n            }));\n    }\n\n    public enum(property: IPropertyMetadata): Promise<ISelectableItem[]> {\n        let enums = property.enumValues;\n        let items: ISelectableItem[] = [];\n\n        this.addEmptyItem(property, items);\n\n        if (!enums) {\n            // load from metadata type \n            let mdType = this._metadataService.getMetadataType(property.originalTypeName);\n            if (mdType) {\n                enums = mdType.enumValues;\n            }\n        }\n        if (enums) {\n            enums.forEach(e =>\n                items.push(new SelectableItem(e.name, e.value, null))\n            );\n        }\n        return Promise.resolve<ISelectableItem[]>(items);\n    }\n\n    public elements(property: IPropertyMetadata): Promise<ISelectableItem[]>{\n        let filter: (arg0: ISelectableItem) => ISelectableItem;\n        let result: ISelectableItem[] = [];\n\n        let root = this._studioStateService.getRoot();\n        let allElements: ISelectableItem[] = [];\n        if (root.type == 'Webpart') {\n            let addingItem = new SelectableItem(root.name, root.name, root.typeName, 0);\n            addingItem.type = root.type;\n            addingItem.fullType = root['_fullTypeName'];\n\n            let childItems = this.getAllElements(root, 1, root.name);\n            addingItem.childCount = childItems.length;\n            allElements.push(addingItem);\n            allElements = allElements.concat(childItems);\n        }\n        else {\n            allElements = this.getAllElements(root);\n        }\n\n        this.addEmptyItem(property, result);\n\n        if (property.editor.filter)\n            filter = Filters[property.editor.filter];\n\n        allElements.forEach(el => {\n            let fEl = _.isFunction(filter) ? <ISelectableItem>filter(el) : el;\n            if (fEl)\n                result.push(fEl);\n        });\n\n        // Add dependency if it is not set\n        if (!property.dependencies)\n            property.dependencies = [\"__elements__\"];\n        return Promise.resolve<ISelectableItem[]>(result);\n    }\n\n    private getAllElements(element: IElement, level: number = 0, parentPath: string=''): ISelectableItem[] {\n        let ret: ISelectableItem[] = [] ;\n        if (element) {\n            _.sortBy(element.items, (i:any) => i.name)\n                .forEach(item => {\n                    let path = parentPath ? parentPath + '.' + item.name : item.name;\n\n                    let addingItem = new SelectableItem(item.name, path, item.typeName, level);\n                    addingItem.type = item.type;\n                    addingItem.fullType = item._fullTypeName;\n\n                    let childItems = this.getAllElements(item, level + 1, path);\n                    addingItem.childCount = childItems.length;\n                    ret.push(addingItem);\n                    ret = ret.concat(childItems);\n                });\n            if (element.typeName === 'JQDataGrid') {\n                if (element.properties) {\n                    let settings = element.properties.settings;\n                    if (settings && settings.columns) {\n                        let addInlineControls = settings.__type === \"GridDataSettingsItemList\" && settings.editorSettings && \n                            settings.editorSettings.editingMode === 0; // Inline.\n                        _.forEach(settings.columns, col => {\n                            let value = `${parentPath}.${element.name}.${col.name}`;\n                            ret.push(new SelectableItem(col.name, value, \"Control\", level));\n                            if (addInlineControls)\n                                ret.push(new SelectableItem(`${col.name}<Inline>`, `${value}<Inline>`, \"Control\", level));\n                        });\n                    }\n                }                \n            }\n\n            if (element.properties && element.properties.actions) {\n                // Add actions\n                ret.push(new SelectableItem('Actions', 'Actions', 'Actions', level, true));\n\n                element.properties.actions.forEach(a => {\n                    let it = new SelectableItem(a.name, 'Actions.' + a.name, a.__type, level + 1);\n                    it.type = 'actionButton';\n                    it.fullType = a._fullTypeName;\n                    ret.push(it);\n                });\n            }\n        }\n        return ret;\n    }\n\n    public sessionDataContracts(property: IPropertyMetadata): Observable<ISelectableItem[]> {\n        return this.portalService.getSessionDataContracts().pipe( map(\n            result => {\n                let res: ISelectableItem[] = [];\n                this.addEmptyItem(property, res);\n                _.forEach(result, (s) => res.push(new SelectableItem(s, s, 'sessionDataContract')));\n                this.cache[property.editor.provider] = res;\n                return res;\n            }));\n    }\n\n    public ndoInstances(property: IPropertyMetadata): Observable<ISelectableItem[]> {\n        return this.portalService.getModelingInstanceRefs(property.editor.parameters[0]).pipe(\n            map( elements => {\n                let res: ISelectableItem[] = [];\n                this.addEmptyItem(property, res);\n                _.forEach(elements, (e) => res.push(new SelectableItem(e.name, e.name, e.type)));\n                return res;\n            }));\n    }\n\n    public reportDataSources(property: IPropertyMetadata): Observable<ISelectableItem[]> {\n        return this.portalService.getSettings().pipe(map(s => {\n            let res: ISelectableItem[] = [];\n            if (s.intelligenceSettingsField &&  s.intelligenceSettingsField.dataSourcesField) {\n                _.forEach(s.intelligenceSettingsField.dataSourcesField, (s) => res.push(new SelectableItem(s.nameField)));\n            }\n            return res;\n        }));\n    }\n\n    public reportTemplates(property: IPropertyMetadata): Observable<ISelectableItem[]> {\n        return this.wcfService.getSelectionValues(\"ReportTemplateMaint\", \"ObjectToChange\", false).pipe(map(rpts => {\n            let res: ISelectableItem[] = [];\n            if (rpts.Rows) {\n                var names = new Set();\n                this.addEmptyItem(property, res);\n                _.forEach(rpts.Rows, row => {\n                    let name = row.Values[0];\n                    let revision = row.Values[1];\n                    let si: SelectableItem;\n                    if (!names.has(name)) {\n                        names.add(name);\n                        let val = new RevisionedObjectRef(name, null, true);\n                        val.cdoTypeName = \"ReportTemplate\";                    \n                        res.push(new SelectableItem(name, val));\n                    }\n                    let displayName = `${name}: ${revision}`;\n                    let val = new RevisionedObjectRef(name, revision, false);\n                    val.cdoTypeName = \"ReportTemplate\";\n                    si = new SelectableItem(displayName, val);\n                    si.level = 5;\n                    res.push(new SelectableItem(displayName, val));\n                });\n            }\n            return res;\n        }));        \n    }\n    \n    public gridQueries(property: IPropertyMetadata, instance: any): Observable<ISelectableItem[]> {     \n\n        let queryType = \"QueryList_System\";\n        let addEmpty = property.editor.parameters && property.editor.parameters.indexOf(\"emptyItem\")!=-1;\n\n        if(property.editor.parameters && property.editor.parameters.indexOf(\"userQuery\")!=-1)\n            queryType = \"QueryList_User\";\n        else if(instance.queryType === \"1\")\n            queryType = \"QueryList_User\";\n\n        const cacheKey = \"gridQueries.\" + queryType;\n        let cachedList = this.cache[cacheKey] as SelectableItem[];\n        if( cachedList && cachedList.length){\n            return of(cachedList);\n        }\n\n        return this.portalService.getQueryData(queryType).pipe(\n            map(result => {\n                let queryList: ISelectableItem[] = [];\n                if( addEmpty )\n                    this.addEmptyItem(property, queryList);\n\n                queryList = queryList.concat(\n                    result.map(q => {\n                        let s=new SelectableItem(q.Text, q.Text); \n                        s.childCount = q.ParamCount; \n                        return s;\n                    }));\n                this.cache[cacheKey] = queryList;\n                return queryList;\n            }));\n    }\n\n    public queryBuilder(property: IPropertyMetadata, instance: any): Observable<ISelectableItem[]> {     \n        return this.gridQueries(property, instance);\n    }\n\n    public queryColumns(property: IPropertyMetadata, instance: any): Observable<ISelectableItem[]> {     \n\n        let qtype : QueryTypes = QueryTypes.System;\n        if(property.editor.parameters && property.editor.parameters.indexOf(\"userQuery\")!=-1)\n            qtype = QueryTypes.User;\n        else if(instance.queryType === \"1\")\n            qtype = QueryTypes.User;\n\n        const queryOptions : QueryOptions = {\n            QueryType: qtype,\n            StartRow: 1,\n            RowSetSize: 1\n        };\n        const isTrend = property.name.toLowerCase().startsWith(\"trend\");\n        const queryName = val(instance.properties, (isTrend ? \"trend\" : \"value\") + \"QueryName\");\n        if(!queryName){\n            return of([]);\n        }\n        const qParameters : any[] = val(instance.properties, isTrend ? \"TrendQueryParameters\" : \"ValueQueryParameters\") || [];\n        const queryParameters = qParameters.map(param => { return { Name: param.name, Value: \"\" }});\n\n        return this.portalService.getQueryColumns(queryName, queryOptions, queryParameters).pipe(\n            map(result => \n                [new SelectableItem('','','')]\n                    .concat(result.map(q => new SelectableItem(q.name, q.name)))\n            ));\n    }\n\n    public actionHandlers(property: IPropertyMetadata): Promise<ISelectableItem[]> {\n        let typeOfHandler = property.editor.parameters[0];\n        let cb = new CodeBehindDescriptor();\n        let ret: Promise<ISelectableItem[]>;\n\n        let root = <any>this._studioStateService.getRoot();\n        let rootType = root.codeBehind;\n        if (!rootType)\n            rootType = root._fullTypeName;\n\n        if (rootType) {\n            let cacheKey = \"ActionHandlers,\" + typeOfHandler + \",\" + rootType;\n            if (this.cache[cacheKey]) {\n                ret = Promise.resolve<ISelectableItem[]>(this.cache[cacheKey]);\n            }\n            cb.Description = rootType;\n            this.portalService.getActionHandlers(cb, typeOfHandler).subscribe(\n                result => {\n                    let res: ISelectableItem[] = [];\n                    this.addEmptyItem(property, res);\n                    _.forEach(result, (s) => res.push(new SelectableItem(s, s, typeOfHandler + 'ActionHandler')));\n\n                    // cached type of handler and codeBehind type\n                    this.cache[cacheKey] = res;\n                    ret = Promise.resolve<ISelectableItem[]>(res);\n                }\n            );\n        }\n        if (!ret) \n            ret = Promise.resolve<ISelectableItem[]>([]);\n\n        return ret;\n    }\n\n    public pageDataContracts(property: IPropertyMetadata, instance: any): Promise<ISelectableItem[]> {\n\n        let root = <any>this._studioStateService.getRoot();\n        let contracts = [];\n        let isTargetFilter = (property.editor.filter === \"targetContracts\");\n\n        if (!isTargetFilter) {\n            if (root.properties && root.properties.dataContract && root.properties.dataContract.dataMembers) {\n\n                contracts = root.properties.dataContract.dataMembers.map((elem) => {\n                    if(elem.Name){\n                        elem.name = elem.Name;\n                        delete elem.Name;\n                    }\n                    return elem;\n                });\n            }\n        }\n        else {\n            let pageName;\n            if(instance.__parent && instance.__parent.__type == \"PageMappingAction\" ){ //\"FloatPageOpenAction\"\n                let mapItem = val(instance.__parent, \"mapItem\");\n                if( mapItem )\n                    return this.portalService.getPageMaps().pipe(\n                        map( s=> _.concat(\"\", _.first(s.filter(dx=> dx.name == mapItem)).__mapParameters)),\n                        map( prms => prms.map(x=> new SelectableItem(x, x, x)))\n                    ).toPromise();\n                else\n                    return Promise.resolve<ISelectableItem[]>([new SelectableItem(\"\",\"\",\"\")]);\n            }\n            pageName = val(instance.__parent, \"PageName\") as string;\n            if( pageName )\n                return this.pageLoadedContracts(pageName).toPromise();\n        }\n\n        let res: ISelectableItem[] = [];\n        this.addEmptyItem(property, res);\n        _.forEach(contracts, (c) => res.push(new SelectableItem(c.name, c.name, 'dataContract')));\n        return Promise.resolve<ISelectableItem[]>(res);\n    }\n\n    public contractDataMembers(property: IPropertyMetadata, instance: any): Promise<ISelectableItem[]> | Observable<ISelectableItem[]> {\n        let root = <any>this._studioStateService.getRoot();\n        // Get contract data members if page mapping item         \n        if( root.__type === \"PageMappingItem\") {\n            let contractFilter = property.editor.filter;            \n            if( contractFilter == \"targetContracts\"){\n                if(instance.__parent){\n                    let targetType = val(instance.__parent, \"TargetType\") as number;\n                    let target = val(instance.__parent, \"Target\") as string;\n                    switch(targetType){\n                        case 0: /*page*/       return this.pageLoadedContracts(target);\n                        case 1: /*pageflow*/   return this.pageMappingActualParameters(property); \n                        case 2: /*pageMapping*/return this.pageMappingActualParameters(property);\n                    }\n                }\n            }\n            else{   // contractFilter == \"sourceContracts\"\n                return this.pageMappingActualParameters(property);\n            }\n        }\n        else\n            return this.pageDataContracts(property, instance);\n    }\n\n    public gridColumns(property: IPropertyMetadata, instance: any): Observable<ISelectableItem[]> {\n        const gridSettings = instance.__parent;\n        if (gridSettings.columns) {\n            let columns: ISelectableItem[] = gridSettings.columns.filter( el => el.name != \"_dummy_\")\n                                                                 .map((el) => new SelectableItem(el.name));\n\n            columns.push(<ISelectableItem>{name: \"--index--\"},<ISelectableItem>{name: \"\"});\n            columns.sort(function(a,b){\n                    let x = a.name.toLowerCase();\n                    let y = b.name.toLowerCase();\n                    return x < y ? -1 : x > y ? 1 : 0;\n                });\n                                                                                                              \n            return of(columns);\n        }\n    }\n\n    public pageMappings(property: IPropertyMetadata): Observable<ISelectableItem[]> {\n        return this.portalService.getPageMaps().pipe(map(\n            (result : IUIComponentRef[]) => {\n                let res: ISelectableItem[] = [];\n                this.addEmptyItem(property, res);\n                _.forEach(result, (r : IUIComponentRef) => res.push(new SelectableItem(r.name, r.name, r.name)));\n                this.cache[\"pageMaps\"] = res;\n                return res;\n            }\n        ));\n    }\n\n    public pageMappingParameters(property: IPropertyMetadata): Observable<ISelectableItem[]> {\n        return this.portalService.getSuggestedMappingParameters().pipe(map(\n            result => {\n                let res: ISelectableItem[] = [];\n                this.addEmptyItem(property, res);\n                _.forEach(result, (s) => res.push(new SelectableItem(s, s, 'pageMappingParameter')));\n                this.cache[\"pageMappingParameters\"] = res;\n                return res;\n            }));\n    }\n    \n    public pageMappingActualParameters(property: IPropertyMetadata): Observable<ISelectableItem[]> {\n        let root = this._studioStateService.activeRootElement;\n        let rootParameters = val(root, \"Parameters\");\n        let res: ISelectableItem[] = [];\n        _.forEach(rootParameters, p => res.push(new SelectableItem(p.Name, p.Name, 'pageMappingParameter')));\n        return of(res);\n    }\n\n    public pageLoadedContracts(pageName: string) : Observable<ISelectableItem[]>{\n        return this.portalService.getElement(pageName, \"page\").pipe( map(e=>{\n            let dc = val(e.properties, \"dataContract\");      \n            if( dc ){\n                let dataMembers = val(dc, \"dataMembers\") as any[];\n                if( dataMembers ){\n                    let res : SelectableItem[] = [new SelectableItem('', '', '')];\n                    dataMembers.forEach(d=> res.push(new SelectableItem(val(d, \"name\"))));\n                    return res;\n                }\n            }\n            return [];\n        }));\n    }\n\n    public mappings(property: IPropertyMetadata): Observable<ISelectableItem[]> {\n        return this.portalService.getMappings().pipe(\n            map(m=> { \n                let r = this.addEmptyItem(property);                         \n                m.forEach(s=> r.push(new SelectableItem(s)));\n                return r;\n            }));\n    }\n\n    public imageFiles(property: IPropertyMetadata, instance: any): Observable<ISelectableItem[]> {\n        let obs : Observable<ISelectableItem[]>;\n        if( Object.keys(this.cache).find(k=> k == \"imageFiles\")){\n            // load from the cache\n            obs = of(this.cache[\"imageFiles\"]);\n        }\n        else{\n            obs = this.portalService.getImages().pipe(map(\n                images => {\n                    let res = _.concat(this.addEmptyItem(property),\n                        _.map<ImageFile, ISelectableItem>(images, im => <ISelectableItem>{ name: im.Name, value: im.Name, type: 'image', img: environment.portalUrl + '/' + im.Source, level: 0 }));\n                    this.cache[\"imageFiles\"] = res;\n                    return res;\n                }));\n            }\n        return obs;\n    }\n\n    public elementProperties(property: IPropertyMetadata, instance: any): Observable<ISelectableItem[]> {\n\n        let ctrl: IElement;\n        let typeName: string;\n        if (instance && property.dependencies && property.dependencies.length > 0) {\n            let c = null;\n            if( property.dependencies.find(d=> {\n                    let pv = val(instance, d);\n                    if(_.isString(pv))\n                        c =  this._studioStateService.findElement(pv);\n                    return c!==undefined && c!==null; \n                }) !== undefined\n            ){\n                ctrl = c;\n            }\n        }\n        else {\n            // for current active element\n            ctrl = this._studioStateService.activeElement;\n        }\n\n        if (ctrl) {\n            typeName = ctrl['_fullTypeName'] || ctrl['codeBehind'];\n            if (!typeName) {\n                if (ctrl.typeName != 'JQDataGrid')\n                    typeName = \"Camstar.WebPortal.FormsFramework.WebControls.\" + ctrl.typeName;\n                else\n                    typeName = \"Camstar.WebPortal.FormsFramework.WebGridControls.\" + ctrl.typeName;\n            }\n            let typeDescriptorSection = !_.isEmpty(property.editor.parameters) ? property.editor.parameters[0] : 'Properties';\n            let typeDescriptor = this._metadataService.typeDescriptors[typeName];\n            if (typeDescriptor) {\n                let res = this.buildListOfTypeDescriptor(property, typeName, typeDescriptorSection);\n                return of(res);\n            }\n\n            return this.portalService.getTypeDescriptor(typeName)\n                .pipe( map(\n                    result => {\n                    if (result) {\n                        // save descriptor into the cache\n                        this._metadataService.typeDescriptors[typeName] = result;\n                        return this.buildListOfTypeDescriptor(property, typeName, typeDescriptorSection);\n                    }\n                }));\n\n        }\n        else {\n            return of([]);\n        }\n    }\n\n    public handlers(property: IPropertyMetadata, instance: any): Observable<ISelectableItem[]> {\n        \n        let typeName: string;\n        let handlerSource = val(instance, \"handlerSource\");\n\n        switch(handlerSource){\n            case 0: /* self */\n                typeName  = this._studioStateService.activeElement['_fullTypeName'];\n                if( !typeName )\n                    typeName  = this._studioStateService.activeElement.codeBehind;\n                break;\n            case 1: /* control */{\n                    let ctrlName = val(instance, \"control\");\n                    if( ctrlName ){\n                        let ctrl =  this._studioStateService.findElement(ctrlName);\n                        if( ctrl )\n                            typeName = ctrl['_fullTypeName'];\n                    }\n                }\n                break;\n            case 2: /* web part */\n                {\n                    let wpOwner  = this._studioStateService.findElementOwner(this._studioStateService.activeRootElement, this._studioStateService.activeElement);\n                    if(wpOwner)\n                        typeName = wpOwner['codeBehind'] || wpOwner['_fullTypeName'];\n                }\n                break;\n            case 3: /* page */\n                typeName = \"Camstar.WebPortal.PortalFramework.WebPartPageBase\";\n                break;\n            case 4: /* service */\n                typeName = \"Camstar.WebPortal.FormsFramework.WCFService\";\n                break;\n            case 5: /* static method */\n                break;                \n        }\n\n        if(!typeName)\n            return of( [new SelectableItem(\"\",\"\",\"\")]);\n\n        let typeDesciptor = this._metadataService.typeDescriptors[typeName];\n        const section = \"Handlers\";\n        if (typeDesciptor) {\n            let res = this.buildListOfTypeDescriptor(property, typeName, section);\n            return of(res);\n        }\n        else{\n            return this.portalService.getTypeDescriptor(typeName)\n                .pipe( map(result => {\n                    if (result) {\n                        // save descriptor into the cache\n                        this._metadataService.typeDescriptors[typeName] = result;\n                        return this.buildListOfTypeDescriptor(property, typeName, section);\n                    }\n                }));        \n        }\n    }\n    \n    public clientHandlers(property: IPropertyMetadata, instance: any): Observable<ISelectableItem[]> {\n        \n        let typeName: string;\n        let handlerSource = val(instance, \"handlerSource\");\n\n        switch(handlerSource){\n            case 0: /* self */\n                typeName  = this._studioStateService.activeElement['_fullTypeName'];\n                break;\n            case 1: /* control */{\n                    let ctrlName = val(instance, \"control\");\n                    if( ctrlName ){\n                        let ctrl =  this._studioStateService.findElement(ctrlName);\n                        if( ctrl )\n                            typeName = ctrl['_fullTypeName'];\n                    }\n                }\n                break;\n            case 2: /* static method */\n                break;                \n        }\n    \n        if(!typeName)\n            return of([]);            \n\n        let typeDesciptor = this._metadataService.typeDescriptors[typeName];\n        const section = \"ClientMethods\" ;\n        if (typeDesciptor) {\n            let res = this.buildListOfTypeDescriptor(property, typeName, section);\n            return of(res);\n        }\n        else{\n            return this.portalService.getTypeDescriptor(typeName)\n                .pipe( map(result => {\n                    if (result) {\n                        // save descriptor into the cache\n                        this._metadataService.typeDescriptors[typeName] = result;\n                        return this.buildListOfTypeDescriptor(property, typeName, section);\n                    }\n                }));        \n        }\n    }\n\n    public exportableMaintServices(property: IPropertyMetadata): Observable<ISelectableItem[]> {\n        return this.portalService.getExportableMaintServices()\n            .pipe(map(services => {\n                var selectableServices: ISelectableItem[] = [];\n                this.addEmptyItem(property, selectableServices);\n                if (services) {\n                    services.forEach(srv => {\n                        selectableServices.push( new SelectableItem(srv, srv));\n                    });\n                }\n                this.cache[\"exportableMaintServices\"] = selectableServices;\n                return selectableServices;\n            }));\n    }\n\n    public soundFiles(property: IPropertyMetadata): Observable<ISelectableItem[]> {\n        return this.portalService.getSounds()\n            .pipe( map(soundFiles => {\n                var res : ISelectableItem[] = [];\n                this.addEmptyItem(property, res);\n                if (soundFiles) {\n                    soundFiles.forEach(soundFile => {\n                        res.push( new SelectableItem(soundFile.Name, soundFile.Name));\n                    });\n                }\n                return res;\n            }));\n    }\n\n    public intelligenceDataSources(property: IPropertyMetadata, instance: any): Observable<ISelectableItem[]>{\n        let result = this.addEmptyItem(property);\n        let dataSources = val(instance, \"DataSources\");\n        _.forEach( dataSources, ds=> result.push( new SelectableItem(val(ds, \"name\"))));\n        return of(result);\n    }\n\n    public intelligenceReports(property: IPropertyMetadata, instance: any): Observable<ISelectableItem[]>{\n        let connProfile = val(instance.properties, \"ConnectionProfile\");\n        if( connProfile ){\n            let conn = new ConnectionProfileData();\n            conn.ServerDataMember = val( connProfile, \"Server\");\n            conn.BOAuthTypeDataMember = val(instance.properties, \"BOAuthentication\") || BOAuthenticationType.Enterprise;\n            return this.portalService.getWebiReportsList(conn).pipe( map( d=> {\n                if( _.isArray(d) ){\n                    let result = this.addEmptyItem(property);\n                    (d as string[]).map( n=> result.push(new SelectableItem(n)));\n                    return result;\n                }\n                else{\n                    this.alert.displayResultStatusModal(d as IResultStatus);\n                    return [];\n                }\n            }));\n        }\n        return empty();\n    }\n\n    public fieldsDirectory(property: IPropertyMetadata, instance: any): Observable<ISelectableItem[]>{        \n        let result = this.addEmptyItem(property);\n        if(!property.editor.parameters[0] )\n            return of(result);\n\n        let tds = <IOMTypeDescriptor>{TypeName: property.editor.parameters[0]};\n        return this.portalService.getFieldsDirectory(tds).pipe( map( d=> {\n                if( d.ChildItems ){\n                    d.ChildItems.forEach( c=> result.push(new SelectableItem(c.Name, c)))\n                }\n                return result;\n            }\n        ));\n    }\n\n    public targetMatrices(property: IPropertyMetadata, instance: any): Observable<ISelectableItem[]> {\n        return this.portalService.getTargetMatrices().pipe(\n            map(\n                tm => [new SelectableItem(\"\",\"\",\"\")].concat(\n                    tm.map(t=> new SelectableItem(t.name)))\n\n            ));\n    }\n\n    public selValues(property: IPropertyMetadata, instance: any): Observable<ISelectableItem[]>{\n        let result = this.addEmptyItem(property);\n        \n        \n        let tds = <IOMTypeDescriptor>{TypeName: property.editor.parameters[0]};\n        return this.portalService.getFieldsDirectory(tds).pipe( map( d=> {\n             d.ChildItems.forEach( c=> result.push(new SelectableItem(c.Name, c)))\n             return result;\n            }\n        ));\n    }\n    \n    private buildListOfTypeDescriptor(property: IPropertyMetadata, typeName: string, section: string): ISelectableItem[] {\n        let desc = <TypeDescriptor>(this._metadataService.typeDescriptors);\n        desc[typeName];\n        return _.concat(this.addEmptyItem(property),\n            _.map(desc[section], px => {\n                let s = _.isString(px) ? px : val(px, \"Name\");\n                if( section == \"Handlers\"){\n                    let th = new TypeHandler();\n                    th.Name = s;\n                    th.Parameters = val(px,\"Parameters\");\n                    return new SelectableItem(th.getMethodSignature(), th);\n                }\n                return new SelectableItem(s);\n            }));\n    }\n\n    private addEmptyItem(property: IPropertyMetadata, items?: ISelectableItem[]): ISelectableItem[] {\n        let res: ISelectableItem[] = items || [];\n\n        if (property.required !== true) {           \n            // add empty item at the top of list\n            res.push(new SelectableItem('', '', ''));\n        }\n\n        return res;\n    }\n\n}\n\n\nclass Filters {\n\n    static buttons = (e: ISelectableItem) => {\n        if (e.type=='' || e.type == 'Webpart' || e.type == 'Actions' ||\n            (e.type == 'Control' && e.typeName.toLowerCase() == 'button') ||\n            (e.type == 'actionButton')) {\n\n            if (e.type == 'Webpart' || e.type == 'Actions')\n                e.disabled = true;\n            else\n                e.disabled = false;\n\n            return e;\n        }\n        return null;\n    }\n\n    static controls = (e: ISelectableItem) => {\n        if (e.type == '' || e.type == 'Webpart' || e.type == 'Control'){\n            if (e.type == 'Webpart')\n                e.disabled = true;\n            else\n                e.disabled = false;\n            return e;\n        }\n        return null;\n    }\n\n    static actions = (e: ISelectableItem) => {\n        if (e.type == '' || e.type == 'actionButton') {\n            return e;\n        }\n        return null;\n    }\n}\n\nexport class SelectableItem implements ISelectableItem {\n    constructor(public name: string, public value: any = undefined, public typeName: string = '', public level: number = 0, public disabled: boolean = false) {\n        if (value === undefined)\n            this.value = name;\n        this.type = typeName;\n    }\n    type: string;\n    childCount: number = 0;   \n    parent: ISelectableItem = null;\n    fullType: string;\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PortalService } from './portal.service';\n\n@Injectable()\nexport class LabelService {\n    constructor(private _portalService: PortalService) {\n        this.load();\n    }\n\n    public load(){\n        this.getLangDictionary();\n    }\n\n    public getLabel(labelName: string, defaultValue: any): string {\n        return this.getLabelwithArguments(labelName, defaultValue, null);\n    }\n\n    public getLabelwithArguments(labelName: string, defaultValue: string, args: any[]): string {\n        if (!defaultValue) return;\n        if (this._dictionary && this._dictionary[labelName]) {\n            if (args)\n                return this.substituteString(this._dictionary[labelName], args);\n            return this._dictionary[labelName];\n        }\n        if (args)\n            return this.substituteString(defaultValue, args);\n        return defaultValue;\n    }\n\n    public getLabelCategories(): Observable<any[]> {\n        return Observable.create(obs => {\n            if (this._categories) {\n                obs.next(this._categories)\n                obs.complete();\n            }\n            else {\n                this._categories = [];\n                this._portalService.getLabelCategories()\n                    .subscribe(categories => {\n                        this._categories = categories.sort(c=> c.name);\n                        obs.next(categories);\n                        obs.complete();\n                    },\n                    error => {\n                        console.log(<any>error);\n                    });\n            }\n        });\n    }\n\n    public getLabels(categoryId: string, labelSearchName: string, labelSearchText: string): Observable<any[]> {\n        return Observable.create(obs => {\n            this._portalService.getLabels(categoryId, labelSearchName, labelSearchText).subscribe(labels => {\n                obs.next(labels);\n                obs.complete()\n            },\n                error => {\n                    console.log(<any>error);\n                });\n        });\n    }\n\n    private substituteString(value: string, args: string[]): string {\n        for (let i = 0; i < args.length; i++) {\n            value = value.replace(`{${i}}`, args[i]);\n        }\n        return value;\n    }\n\n    private getLangDictionary(): void {\n        this._dictionary = [];\n        this._portalService.getStudioLabels()\n            .subscribe(labels => {\n                this._dictionary = labels;\n            },\n            error => {\n                console.log(<any>error);\n            });\n    }\n\n    private _dictionary: any;\n    private _categories: any;\n}","import { Injectable } from '@angular/core';\nimport { IElement, IElementRef, ILocalState, IUserProfile, IFavoriteProperty, PageGroupDef, WhereUsedItemListDef, PageGroupDefItem } from '../objects/common';\nimport _ from 'lodash';\n\n@Injectable()\n\nexport class LocalService {\n    _localState: ILocalState;\n\n    constructor() {\n        this.getStateFromLocalStorage();\n    }\n\n    getUserProfile(): IUserProfile {\n        return this._localState.userProfile;\n    }\n\n    isDisplayCatalog(): boolean {\n        return this._localState.displayCatalog;\n    }\n\n    isDisplayToolbox(): boolean {\n        return this._localState.displayToolbox;\n    }\n\n    isDisplayProperty(): boolean {\n        return this._localState.displayProperty;\n    }\n\n    isDisplayTraceViewer(): boolean {\n        return this._localState.displayTraceViewer;\n    }\n\n    setUserProfile(userProfile: IUserProfile): boolean {\n        this._localState.userProfile = userProfile;\n        this.saveStateToLocalStorage();\n        return true;\n    }\n\n    resetSettings(): void {\n        this.initializeState();\n        this.saveStateToLocalStorage();\n    }\n\n    toggleDisplayCatalog(): void {\n        this._localState.displayCatalog = !this._localState.displayCatalog;\n        this.saveStateToLocalStorage();\n    }\n\n    toggleDisplayToolbox(): void {\n        this._localState.displayToolbox = !this._localState.displayToolbox;\n        this.saveStateToLocalStorage();\n    }\n\n    toggleDisplayProperty(): void {\n        this._localState.displayProperty = !this._localState.displayProperty;\n        this.saveStateToLocalStorage();\n    }\n\n    toggleDisplayTraceViewer(): void {\n        this._localState.displayTraceViewer = !this._localState.displayTraceViewer;\n        this.saveStateToLocalStorage();\n    }\n\n\n    addToElementHistory(element: IElement): void {\n        //added if clause for restrict number of types for recent elements\n        if(element.type && ['page', 'webpart', 'pageflow'].indexOf(element.type.toLowerCase()) != -1) {\n            this.removeElementHistory(element);\n            let elementRef = { name: element.name, type: element.type };\n\n            if (this._localState.elementHistory)\n                this._localState.elementHistory = [elementRef, ...this._localState.elementHistory];\n            else\n                this._localState.elementHistory = [elementRef];\n            this.saveStateToLocalStorage();\n        }\n    }\n\n    removeElementHistory(elementRef: IElementRef): void {\n        if (this._localState.elementHistory) {\n            let existingElement = this._localState.elementHistory.find(eh => eh.name == elementRef.name && eh.type == elementRef.type);\n            if (existingElement) {\n                let index = this._localState.elementHistory.indexOf(existingElement);\n                if (index != -1) {\n                    this._localState.elementHistory.splice(index, 1);\n                }\n            }\n        }\n        this.saveStateToLocalStorage();\n    }\n\n    getElementHistory(): IElementRef[] {\n        if (!this._localState.elementHistory)\n            return null;\n        return this._localState.elementHistory.slice(0, 6);\n    }\n\n    renameElementHistory(element: IElement, oldName: string): void {\n        if (this._localState.elementHistory) {\n            let existingElement = this._localState.elementHistory.find(eh => eh.name == oldName && eh.type == element.type);\n            if (existingElement)\n                existingElement.name = element.name;\n        }\n        this.saveStateToLocalStorage();\n    }\n\n    public isLogged(): boolean {\n        if (this._localState && this._localState.userProfile && this._localState.userProfile.SessionID) {\n            return true;\n        }\n\n        return false;\n    }\n\n    public getFavProperties(typeName: string): string[] {\n        if (this._localState && this._localState.favProperties) {\n            let fp = this._localState.favProperties.find(p => p.typeName == typeName);\n            if (fp)\n                return fp.names;\n\n            return [];\n        }\n    }\n\n    public setFavProperties(t: string, pnames: string[]): void {\n        if (this._localState) {\n            if (!this._localState.favProperties)\n                this._localState.favProperties = [];\n\n            let fp = this._localState.favProperties.find(p => p.typeName == t);\n            if (!fp)\n                this._localState.favProperties = [<IFavoriteProperty>{ typeName: t, names: pnames }];\n            else\n                fp.names = pnames;\n            this.saveStateToLocalStorage();\n        }\n    }\n\n    public addPageList(wName: string, pages: any[]): void {\n        if (this._localState) {\n            if (this._localState.whereUsedPageList) {\n\n                this._localState.whereUsedPageList = this._localState.whereUsedPageList.filter(el => {\n                    return el.wepPartName !== wName;\n                })\n                this._localState.whereUsedPageList.push(new WhereUsedItemListDef(wName, pages))\n            }\n            else{\n                this._localState.whereUsedPageList = [new WhereUsedItemListDef(wName, pages)]\n            }\n\n            this.saveStateToLocalStorage();\n        }\n    }\n\n    public addWebPartList(wName: string, pages: any[]): void {\n        if (this._localState) {\n            if (this._localState.whereUsedWebPartList){\n\n                this._localState.whereUsedWebPartList = this._localState.whereUsedWebPartList.filter( el => {\n                    return el.wepPartName !== wName;\n                })\n                this._localState.whereUsedWebPartList.push(new WhereUsedItemListDef(wName, pages))\n            }\n            else{\n                this._localState.whereUsedWebPartList = [new WhereUsedItemListDef(wName, pages)]\n            }\n\n            this.saveStateToLocalStorage();\n        }\n    }\n\n    public getPageList(): any {\n        return this._localState.whereUsedPageList;\n    }\n\n    public getWebPartList(): any {\n        return this._localState.whereUsedWebPartList;\n    }\n\n    public getPageGroups(): PageGroupDef[] {\n        if (!this._localState.pageGroups) {\n            this._localState.pageGroups = [];\n        }\n        return this._localState.pageGroups;\n    }\n\n    public addPageGroup(pageGroupName: string, deleted?: boolean): void {\n        this._localState.pageGroups = this._localState.pageGroups || [];\n\n        let pg = this._localState.pageGroups.find(n => n.groupName == pageGroupName);\n        if (!pg) {\n            const newGrpK = pageGroupName.replace(/\\s/g, \"\").toLowerCase();\n            this._localState.pageGroups.push(\n                new PageGroupDef(pageGroupName, newGrpK, [], deleted));\n        }\n        if (pg && deleted) {\n            pg.deleted = deleted;\n        }\n        this.saveStateToLocalStorage();\n    }\n\n    public editPageGroup(newName: string, oldName: string): void {\n        if (this._localState.pageGroups) {\n            const existGrp = this._localState.pageGroups.find(el => el.groupName == oldName);\n            if (existGrp)\n                existGrp.groupName = newName;\n            existGrp.groupKey = newName.replace(/\\s/g, \"\").toLowerCase();           \n        }\n        this.saveStateToLocalStorage();\n    }\n\n    public addPageToGroup(pageName: string, pageGroup: string, deleted?: boolean): void {\n        const group = this._localState.pageGroups.find(n => n.groupName == pageGroup);\n        if (!group) {\n            this.addPageGroup(pageGroup);\n        }\n        let item = new PageGroupDefItem(pageName, deleted);\n        let isDelItem = this._localState.pageGroups.find(n => n.groupName == pageGroup).items.find(i => i.deleted == true);\n        if (!isDelItem)\n            this._localState.pageGroups.find(n => n.groupName == pageGroup).items.push(item);\n        else {\n            isDelItem.deleted = false;\n        }\n        this.saveStateToLocalStorage();\n    }\n\n    public removeGroup(pageGroup: string) {\n        if (this._localState.pageGroups) {\n            _.remove(this._localState.pageGroups, (eh) => eh.groupName == pageGroup);\n            this.saveStateToLocalStorage();\n        }\n    }\n\n    public removePageFromGroup(pageName: string, pageGroup: string): void {\n        this._localState.pageGroups = this._localState.pageGroups || [];\n        const existingGroup = this._localState.pageGroups.find(eh => eh.groupName == pageGroup);\n        let existingLocalPages : PageGroupDefItem[] = [];\n        if (existingGroup) \n            existingLocalPages= _.remove(existingGroup.items, n => n.name == pageName);\n        \n        if(!existingLocalPages.length || !existingGroup)\n            this.addPageToGroup(pageName, pageGroup, true);            \n        this.saveStateToLocalStorage();\n    }\n\n    public resetSettingsPageGroups(): void {\n        if (!this._localState)\n            this._localState = <ILocalState>{};\n        this._localState.pageGroups = new Array();\n    }\n\n    private initializeState(): void {\n        if (!this._localState)\n            this._localState = <ILocalState>{};\n\n        this._localState.displayCatalog = true;\n        this._localState.displayToolbox = true;\n        this._localState.displayProperty = true;\n        this._localState.displayTraceViewer = false;\n        this._localState.elementHistory = new Array();\n    }\n\n    private getStateFromLocalStorage(): void {\n        let localStorageState = localStorage.getItem('PS_LOCAL_SETTINGS');\n        this._localState = <ILocalState>JSON.parse(localStorageState);\n\n        //if localState hasn't be initialized\n        if (!this._localState)\n            this.initializeState();\n\n        this.saveStateToLocalStorage();\n    }\n\n    private saveStateToLocalStorage(): void {\n        // reduce element history to 10 recent items\n        const historySize = 5;\n        if (this._localState.elementHistory.length > historySize) {\n            let l = this._localState.elementHistory.length;\n            while (l-- > historySize)\n                this._localState.elementHistory.pop();\n        }\n        localStorage.setItem(\"PS_LOCAL_SETTINGS\", JSON.stringify(this._localState));\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { IMetadataType, IPropertyMetadata, PropertyCategory, PropertyDescriptions, WorkspaceItem } from '../objects/viewModel';\nimport { PortalService } from './portal.service';\nimport { Observable, merge} from 'rxjs';\nimport {map } from \"rxjs/operators\";\n\nimport _ from 'lodash';\nimport { UIComponentRef, IUIComponentRef } from '../objects/common';\n\nexport type PersonalizationTypes = { [name: string]: IMetadataType };\n\n\n@Injectable()\nexport class MetadataService {\n    public AllTypes: PersonalizationTypes;\n    public get _types(): PersonalizationTypes {return this.AllTypes;}\n    public AllSettings : any;    \n\n    private static _typeDescriptors: any = {};\n\n    private errorMessage: any;\n    public get typeDescriptors() { return MetadataService._typeDescriptors; }\n\n    public propertyDescriptions : PropertyDescriptions;\n    public propertyCategories : PropertyCategory[];    \n    public workspaces : WorkspaceItem[];\n    public nonVirtualWebparts : string[];\n\n    ready = false;\n\n    constructor(private _portalService: PortalService) {\n\n        this.propertyCategories = this.__propertyCategories.map( p=> new PropertyCategory(p));\n        let mergedObs = merge(\n            this._portalService.getMetadata().pipe(map(md => [\"metadata\", md])), \n            this._portalService.getDescriptions().pipe(map(ds => [\"descriptions\", ds])), \n            this._portalService.getWorkspaces().pipe(map(ws => [\"workspaces\", ws])), \n            this._portalService.getWebPartsList().pipe(map(ws => [\"webparts\", ws])),\n            this._portalService.getCamstarServices().pipe(map(cs=> [\"camstarServices\", cs])),\n            this._portalService.getSettings().pipe(map(cs=> [\"portalSettings\", cs])),\n        );\n      \n        mergedObs.subscribe((m:[string, any])=>{\n            let k = m[0];\n            if( k == \"metadata\"){\n                this.AllTypes = m[1]; \n                _.forEach(this.AllTypes, t=> _.forEach(t.properties, p=> this.parseOptions(p)));    \n            }\n            else if( k == \"descriptions\"){\n                this.propertyDescriptions = <PropertyDescriptions>m[1];\n            }\n            else if( k == \"workspaces\"){\n                this.workspaces = <WorkspaceItem[]>m[1];\n            }\n            else if( k == \"webparts\"){\n                this.nonVirtualWebparts = (<IUIComponentRef[]>m[1]).map(w=> w.name);\n            }\n            else if( k == \"camstarServices\"){\n                // Nothing to do\n            }\n            else if( k == \"portalSettings\"){\n                this.AllSettings = m[1];\n            }\n        },\n        (error) => {\n            this.errorMessage = <any>error;\n            console.error(this.errorMessage);\n        },\n        () => {\n            // Complete\n            this.ready = true;\n        } \n        );\n    }\n\n    public getMetadataType(typeName: string): IMetadataType {\n\n        // Even if the instance is null the property list is created by type\n        let metadata: IMetadataType = null;\n        if (typeName) {\n            typeName = typeName.replace('[]', '').toLowerCase();\n            metadata = <IMetadataType>this._types[typeName];\n            if (!metadata && typeName.startsWith('om.')) {\n                typeName = typeName.substr(3);\n                metadata = <IMetadataType>this._types[typeName];\n            }\n            else if(!metadata && typeName.toLowerCase() == \"UIComponentRef\".toLowerCase()) {\n                metadata = UIComponentRef.metadata;\n            }\n        }\n        return metadata;\n    }\n\n    public getSubTypes(typeName: string): IMetadataType[] {\n        let basePropertyTypeLc = typeName.toLowerCase();\n        let basePropertyTypeExt = basePropertyTypeLc + '@';\n        let res = [];\n        let ct = this._types[basePropertyTypeLc];\n        if (ct) {\n            // Include current type\n            if (ct._abstract !== true)\n                res.push(ct);\n\n            for (var c in this._types) {\n                let pt = this._types[c];\n                if (pt.baseTypeNames) {\n                    pt.baseTypeNames.forEach((b) => {\n                        if (b.toLowerCase() == basePropertyTypeLc || b.toLowerCase() == basePropertyTypeExt ) {\n                            if (pt._abstract !== true)\n                                res.push(pt);\n                        }\n                    });\n                }\n            }\n        }\n        return res;\n    }\n\n    public  getWorkspaceCodeById(workspace: number): string {\n        let wsCode = '';\n        if (workspace != -1) {\n            let ws = _.find(this.workspaces, w => w.ID == workspace);\n            if (ws)\n                wsCode = ws.Code;\n        }\n        return wsCode;\n    }\n\n    public getPropertyCreatorType(type: IMetadataType, property: IPropertyMetadata) {\n        let t = type;\n        if (type.baseTypeNames) {\n            type.baseTypeNames.forEach(bt => {\n                bt = _.trimEnd(bt, '@');\n                let tp = this.getMetadataType(bt);\n                if (tp && tp.properties) {\n                    if (tp.properties.find(vp => vp.name.toLowerCase() === property.name.toLowerCase())) {\n                        t = tp;\n                        return t;\n                    }\n                }\n            });\n        }\n        return t;\n    }\n\n    // Gets value by case-insensitive key\n    public getByKey(obj: any, k: string) {\n        if (obj) {\n            k = k.toLowerCase();\n            return _.find(obj, (v, name: string) => { return name.toLowerCase() == k; });\n        }\n        return undefined;\n    }\n\n    public getPrimaryService(){\n        return \"\";\n    }\n\n    public loadType(ns: string, typeName: string, withDependencies: boolean = true): Observable<PersonalizationTypes> {\n\n        ns = ns.toLowerCase();\n        let namesp: string = '';\n\n        switch (ns) {\n            case 'config':\n                namesp = 'Camstar.WebPortal.PortalConfiguration'; break;\n            case 'om':\n                namesp = 'Camstar.WCF.ObjectStack'; break;\n            case 'pers':\n            default:\n                break;\n        }\n\n        let pref = ns + '.';\n        return this._portalService.getMetadataTypes(namesp, [typeName]).pipe(\n            map( md => {\n                _.forEach(md, m => {\n                    m._namespace = ns;\n                    m.properties.forEach(p=>{\n                        if (!this.isSystemType(p.originalTypeName)) {\n                            let pt = this.getMetadataType(pref + p.originalTypeName);\n                            if (pt)\n                                p.originalTypeName = pref + p.originalTypeName;                                \n                        }\n                    });\n                    this.addWithNS(ns, m);\n                });\n                return md;\n            }));\n    }\n\n    public isSystemType(t: string): boolean {\n        const sysTypes: string[] = ['int32', 'boolean', 'string', 'number', 'int32[]', 'boolean[]', 'string[]', 'number[]'];\n        t = t.toLowerCase();\n        return sysTypes.indexOf(t) != -1;\n    }\n\n    public parseOptions(pr: IPropertyMetadata){\n        let pe = pr.editor;\n        if( pe && pe.options){\n            // Parse options\n            pr.editor.options.forEach(s => {\n                let p = s.split('=');\n                if (p.length > 1) {\n                    if (p[0] == 'provider')\n                        pe.provider = p[1];\n                    else if (p[0] == 'filter')\n                        pe.filter = p[1];\n                    else if (p[0] == 'parameter') {\n                        if (!pe.parameters) pe.parameters = [];\n                        pe.parameters.push(p[1]);\n                    }\n                }\n            });\n        }\n        if (pe && pe.directive == \"enum\" && !pr.enumValues) {\n            // Load enum values\n            if(pr.originalTypeName){\n                let t : IMetadataType = this.AllTypes[pr.originalTypeName.toLowerCase()];\n                if( t ) {\n                    pr.enumValues = t.enumValues;                    \n                }                    \n            }\n        }\n    }\n\n    private addWithNS(ns: string, m: IMetadataType) {\n        // modify property types\n        this._types[ns + '.' + m._name.toLowerCase()] = m;\n    }    \n\n    private __propertyCategories: string[] = [\"Equivalency\", \"General\", \"Behavior\", \"Appearance\", \"Layout\",    \n        \"System\", \"Data\", \"Selection Values\", \n        \"Predefined Buttons\", \"Dependency\", \"Paging\", \"History\", \"Report Settings\", \"Grid Options\", \n        \"Other\", \"Simple\", \"Advanced\", \"Favorites\"\n    ];\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { LocalService } from \"./local.service\";\r\nimport { ContextMenuItem, ContextMenuItemTypes, GroupDef, IUIComponentRef, ContextMenuItemPositions } from \"../objects/common\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { PortalService } from \"./portal.service\";\r\nimport { LabelService } from \"./label.service\";\r\nimport { StudioStateService } from \"./studioStateService\";\r\nimport { PortalSettingsService } from \"./portalSettings.service\";\r\nimport _ from 'lodash';\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\nexport class PageGroupingService {\r\n    private systemGroups = [\r\n        this.grp('PS_ALLPAGECATEGORY', 'All'),\r\n        this.grp('PS_CHGMGMTPAGECATEGORY', 'Change Management'),\r\n        this.grp('PS_GENERALPAGECATEGORY', 'General'),\r\n        this.grp('PS_MDLPAGECATEGORY', 'Modeling'),\r\n        this.grp('PS_QUALITYPAGECATEGORY', 'Quality'),\r\n        this.grp('PS_SHOPFLOORPAGECATEGORY', 'Shopfloor'),\r\n        this.grp('PS_UNDEFINEDPAGECATEGORY', 'Undefined')\r\n    ];\r\n\r\n    private SpecialGroups = [\"all\",\"undefined\"];\r\n    private _pageAssignments: PageAssignment[] = [];\r\n\r\n    constructor( _portalService: PortalService,\r\n            private _labelService: LabelService, \r\n            private _localService: LocalService,\r\n            private _settingsService : PortalSettingsService,\r\n            private _studioStateService:StudioStateService) {\r\n        \r\n        // load groups from Settings and merge with local storage\r\n        this.assignPages();\r\n    }\r\n    \r\n    public getContextMenuItems(dataType: string, data: string): ContextMenuItem[] {\r\n\r\n        let res = [new ContextMenuItem(ContextMenuItemTypes.caption, data, {linePos: ContextMenuItemPositions.below})];\r\n        if (dataType == 'page') {\r\n            const page = data;\r\n            const pageGroups = this.systemGroups.map(g=> new ContextMenuItem(ContextMenuItemTypes.checked, g.groupName, {key: g.groupKey}));\r\n            // get groups for the page\r\n            res = res.concat(pageGroups.filter(pg=>! this.SpecialGroups.includes(pg.key.toLowerCase())));\r\n            this._localService.getPageGroups().map(p => new GroupDef(p.groupName, 'fa-folder', p.groupKey))\r\n                .forEach(gr => {\r\n                    if (!pageGroups.find(n => n.text == gr.groupName))\r\n                        res.push(new ContextMenuItem(ContextMenuItemTypes.checked, gr.groupName, {key:gr.groupKey}));\r\n                });\r\n            res.push(new ContextMenuItem(ContextMenuItemTypes.selected, \"Add a new group\", {linePos : ContextMenuItemPositions.above, nameItem: page, key: \"addToNewGrp\"}));\r\n            res.forEach(r=> {\r\n                    if(r.type == ContextMenuItemTypes.checked){\r\n                        r.checked = !! this._pageAssignments.find(p=> p.name == page && p.groupKey == r.key);\r\n                        r.nameItem = page;\r\n                    }\r\n            });\r\n        }\r\n        else if (dataType == 'group') {\r\n            res.push(new ContextMenuItem(ContextMenuItemTypes.selected, \"Edit\", {nameItem: data, key: \"edit\"}));\r\n            res.push(new ContextMenuItem(ContextMenuItemTypes.selected, \"Remove\", {nameItem: data, key: \"remove\"}));\r\n            res.push(new ContextMenuItem(ContextMenuItemTypes.selected, \"Add a new group\", {linePos: ContextMenuItemPositions.above , nameItem: \"addGroup\", key: \"add\"}));\r\n            res.push(new ContextMenuItem(ContextMenuItemTypes.selected, \"Restore default settings\", {nameItem : data, key: \"restore\"}));\r\n        }\r\n        return res;\r\n    }\r\n\r\n    public getPageGroups(pageItems: Observable<IUIComponentRef[]>): Observable<GroupDef[]> {\r\n        return pageItems.pipe(map( pitems =>{\r\n            const removedGroup = this._localService.getPageGroups().filter(p=> p.deleted);\r\n\r\n            // system groups without removed\r\n            const grps = this.systemGroups.filter(g=> !removedGroup.find(r=> g.groupKey == r.groupKey));\r\n            // add local groups that not exists\r\n            this._localService.getPageGroups().forEach(lgr => {   \r\n                if (lgr.deleted !== true && !grps.find(n => n.groupName == lgr.groupName))\r\n                    grps.push(new GroupDef(lgr.groupName, 'fa-folder', lgr.groupKey));\r\n            });\r\n\r\n\r\n            // Fill group items\r\n            grps.forEach(g => {\r\n                const gk = g.groupKey;\r\n                if(gk == this.SpecialGroups[0] /*All*/){\r\n                    g.items = of(pitems);\r\n                }\r\n                else if(gk == this.SpecialGroups[1] /* Undefined */){\r\n                    g.items = of(pitems.filter(it => !this._pageAssignments.find(a=> a.name == it.name)));\r\n                    g.count = g.items.pipe(map(it => it.length));            \r\n                }\r\n                else {\r\n                    g.items = of(pitems.filter(it => this._pageAssignments.find(a=> a.name == it.name && a.groupKey == gk)));\r\n                }\r\n            });\r\n\r\n            return grps.sort((a, b) => a.groupName.localeCompare(b.groupName));\r\n        }));\r\n    }\r\n\r\n    public getWebPartGroups(): GroupDef[] {\r\n        return [\r\n            this.grp('PS_GENERALPAGECATEGORY', 'General'),\r\n            this.grp('PS_INTELLIGENCELBL', 'Intelligence'),\r\n            this.grp('PS_VIRTUALWEBPARTSCTGY', 'Virtual Web Parts')\r\n        ];\r\n\r\n    }\r\n\r\n    public toggle(item: ContextMenuItem) {\r\n        item.checked = !item.checked;\r\n        if (item.checked && item.type != ContextMenuItemTypes.selected) {\r\n            this._localService.addPageToGroup(item.nameItem, item.text);\r\n        }\r\n        else{\r\n            this.removePageFromGroup(item);\r\n        }\r\n\r\n        this.refreshGroups();\r\n    }\r\n\r\n    public isSystemGroup(name: string) : boolean{\r\n        return !!this.systemGroups.find(g=> g.groupName == name);\r\n    }\r\n\r\n    private grp(nameLabelName: string, nameLabelText: string, icon: string = 'fa-folder'): GroupDef {\r\n        let lbl = this._labelService.getLabel(nameLabelName, nameLabelText);\r\n        if (lbl.endsWith(\"({0})\"))\r\n            lbl = lbl.replace(\"({0})\", \"\");\r\n        let key = nameLabelText.replace(\" \", \"\").toLowerCase();\r\n\r\n        return new GroupDef(lbl, icon, key, null, null, false);\r\n    }\r\n\r\n    private assignPages(){\r\n        this._pageAssignments = [];\r\n        const studioSettings = this._settingsService.getSectionData(\"studioSettings\");\r\n        Object.keys(studioSettings)\r\n            .filter(kx=> /PagesField$/.test(kx) )\r\n            .forEach(k=>\r\n                studioSettings[k].forEach( \r\n                    (m:any) => this._pageAssignments.push(new PageAssignment(m.nameField, k.substr(7, k.length-17) /* remove default and PagesField */))\r\n                )\r\n        );\r\n\r\n        this._localService.getPageGroups().forEach(p=>{\r\n            if(p.items)\r\n                p.items.forEach(i=>{\r\n                    if(i.deleted === true)\r\n                        _.remove(this._pageAssignments, (pa) => pa.name == i.name && p.groupKey == pa.groupKey);\r\n                    else\r\n                        this._pageAssignments.push(new PageAssignment(i.name, p.groupKey));\r\n                });\r\n        });\r\n    }\r\n\r\n    public restoreSettings() {\r\n        this._localService.resetSettingsPageGroups();\r\n    }\r\n\r\n    public addGroup(name: string) {\r\n        this._localService.addPageGroup(name);\r\n        this.refreshGroups();\r\n    }\r\n\r\n    public removeGroup(groupName: string) {\r\n        const sgrp = this.systemGroups.find(n => n.groupName == groupName);\r\n        if (!sgrp) {\r\n            this._localService.removeGroup(groupName);\r\n        }\r\n        else {\r\n            // If system group = add group to local with deleted status\r\n            this._localService.addPageGroup(groupName, true)\r\n        }\r\n    }\r\n\r\n    public moveToGroup(namePage: string, nameGroup: string) {\r\n        const allGrp = this._localService.getPageGroups()\r\n        const gr = allGrp.find(n => n.groupName == nameGroup);\r\n        if (!gr) {\r\n            this._localService.addPageGroup(nameGroup);\r\n        }\r\n        this._localService.addPageToGroup(namePage, nameGroup);\r\n        this.refreshGroups();\r\n    }\r\n\r\n    public editGroup(newName: string, oldName: string) {\r\n        this._localService.editPageGroup(newName, oldName);\r\n        this.refreshGroups();\r\n    }\r\n\r\n    public removePageFromGroup(item: ContextMenuItem) {\r\n        this._localService.removePageFromGroup(item.nameItem, item.text);\r\n    }\r\n\r\n    private refreshGroups(){\r\n        this.assignPages();\r\n        this._studioStateService.refreshElementPanel(\"Page\");\r\n    }\r\n\r\n}\r\n\r\nclass PageAssignment{\r\n    constructor(public name: string, public groupKey: string){\r\n        this.groupKey = groupKey.toLowerCase();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, tap } from \"rxjs/operators\";\n\nimport _ from 'lodash';\n\nimport { environment } from '../../../environments/environment';\nimport { IUserProfile, IEncryptedField, PortalResult, IResultStatus, IUIComponentRef, IElement, ControlDescriptor, TypeDescriptor, ILabel, TypeCode, CachedComponentType, uuid, val, \n    IControl, IUIDesigner, BatchImportExportSettings, IApiResult, UIComponentRef } from '../objects/common';\nimport {\n    ICamstarService, IOMTypeDescriptor, CodeBehindDescriptor, ImageFile, WorkspaceItem, GridColumnDefinition,\n    QueryData, QueryOptions, QueryParameter\n} from '../objects/viewModel';\nimport { TraceLog, TraceItem } from '../../layout/traceLog/traceLog';\nimport { LocalService } from './local.service';\nimport { PersonalizationTypes } from './metadata.service';\n\nimport { ConvertorService } from './convertor.service';\n\ntype PortalResultObs<T> = Observable<PortalResult<T>>;\n\n@Injectable()\nexport class PortalService {\n\n    constructor(private _http: HttpClient, \n               private _localService: LocalService,\n               private _convertorService: ConvertorService\n         ) { \n    }\n\n    private _services_cache: ICamstarService[] = null;\n    private _nonVirtualWebPartsCache : IUIComponentRef[];\n\n    public login(username: string, password: string, domain: string): PortalResultObs<string> {\n        let pwd = <IEncryptedField>{ Value: password, IsEncrypted: false };\n        let tzOffset = (new Date()).getTimezoneOffset() / 60;\n\n        let profile = { Name: username, Password: pwd, UTCOffset: (tzOffset<0 ? (\"-PT\" + -tzOffset) : (\"PT\"+tzOffset)) +\"H\" };\n        let body = { profile: profile, domain: domain };\n\n        let resProc = (result: any)=>{\n            if (result.LogonResult.IsSuccess) {\n                this._profile = <IUserProfile>result.profile;\n                if( !this._profile.UTCOffset )\n                    this._profile.UTCOffset = \"PT0H\";\n                this._localService.setUserProfile(this._profile);\n                this.keepSessionAlive();\n                return new PortalResult(this.getAuthorizationHeader());\n            }\n            else {\n                return new PortalResult(null, <IResultStatus> result.LogonResult);\n            }\n        };\n\n        return <PortalResultObs<string>>this.post<PortalResult<string>>('Logon', body, resProc);\n    }\n\n    private keepSessionAlive(): void {\n        let timeoutTime = 300000;\n        setInterval(() => {\n            this.post<any>('SessionReset')\n                .subscribe(\n                    (response: any) => {\n                },\n                error => {\n                    this.handleError(error);\n                }\n                );\n        }, timeoutTime);\n    }\n\n    public checkUserLoggedIn(): boolean {\n        let profile = this._localService.getUserProfile();\n        if (profile)\n            return true;\n        return false;\n    }\n\n    public verifyLogon(): Observable<any> {\n        return this.post<IUserProfile>(\"VerifyLogon\", undefined, \"profile\")\n            .pipe(map(profile => {\n                if (profile) {\n                    this._profile = profile;\n                    this._localService.setUserProfile(this._profile);\n                    this.keepSessionAlive();\n                    return this.getAuthorizationHeader();\n                }\n                return undefined;\n            }), catchError(this.handleError));\n    }\n\n    public logout(): Observable<boolean> {\n        return this.post<boolean>('Logout', null, () => this._localService.setUserProfile(null));\n    }\n\n    public getCamstarServices(): Observable<ICamstarService[]> {\n        if( this._services_cache && this._services_cache.length ){\n            return of(this._services_cache);\n        }\n        return this.post<ICamstarService[]>('GetAvailableServices', null, \"services\")\n            .pipe(tap((services: ICamstarService[])=> this._services_cache = services));\n    }\n\n    public getSessionDataContracts(): Observable<any[]> {\n        return this.post<any[]>('GetSessionDataContract', null, (resp) => {\n            return resp.contract.DataMembersDataMember.map((c:any) => c.NameDataMember);\n        });\n    }\n\n    public getStudioLabels(): Observable<any> {\n        let parameters = {\n            categoryIds: \"81\", //Portal Studio Label Category\n        };\n        return this.post<any[]>('GetLabels', parameters)\n            .pipe(map(labels => labels.map( l =>{return { [l.Name] : l.Value };} )));\n    }\n\n    public getLabels(labelCategoryIds: string, searchLabelName: string, searchText: string): Observable<any[]> {\n        let parameters ={\n            categoryIds: labelCategoryIds,\n            searchLabelName: searchLabelName,\n            searchLabelText: searchText\n        };\n\n        return this.post<ILabel[]>(\"GetLabels\", parameters)\n            .pipe( map( labels => labels.map(l => {return {\n                    id: l.ID,\n                    name: l.Name,\n                    defaultValue: l.DefaultValue,\n                    value: l.Value,\n                    category: l.Category\n                };})));\n    }\n\n    public getLabelCategories(): Observable<any> {\n\n        return this.post<any[]>(\"GetLabelCategories\")\n            .pipe(map(categories => categories.map( c=> {return { name: c.Text, value: c.ID }; } )));\n    }\n\n    public getActionHandlers(codeBehindDef: CodeBehindDescriptor, typeOfHandler: string): Observable<any[]> {\n        return this.post<any[]>('Get' + typeOfHandler + 'ActionHandlers', { 'codeBehind': codeBehindDef }, \"handlers\");\n    }\n\n    public getTypeDescriptor(typename: string): Observable<TypeDescriptor> {\n        return this.post<TypeDescriptor>('GetTypeDescriptor', { 'typeName': typename }, \"type\");\n    }\n\n    public getFieldsDirectory(tds: IOMTypeDescriptor): Observable<IOMTypeDescriptor> {        \n        return this.post<IOMTypeDescriptor>('GetFieldsDirectory', { 'type': tds }, \"type\");\n    }\n\n    public getQueryData(qName: string): Observable<QueryData[]> {\n        return this.post<QueryData[]>('GetQueryList', { 'query': qName || '' }, \"list\");\n    }\n\n    public resolveObjectColumns(fieldExp: string): Observable<any[]> {\n        return this.post<any[]>('ResolveObjectColumns', { 'objectExpression': fieldExp }, \"headers\");\n    }\n\n    public resolveGridColumns(fieldExp: string, isSelVal = false): Observable<GridColumnDefinition[]> {\n        let op = isSelVal ? 'ResolveSelectionValuesColumns' : 'ResolveObjectColumns';\n\n        return this.post<GridColumnDefinition[]>(op, isSelVal ? { 'selvalExpression': fieldExp } : { 'objectExpression': fieldExp }, \"headers\")\n            .pipe(map( r => \n                this.getGridColumns(r, fieldExp))\n                );\n    }\n\n    public downloadFile(fileName: string, directory: string): Observable<any> {\n        return this.post<any>('Download', { 'filename': fileName, 'directory': directory }, \"content\");\n    }\n\n    public uploadFile(fileName: string, directory: string, dataBytes: Uint8Array): Observable<PortalResult<any>> {\n        return this.post<PortalResult<any>>('Upload', { 'filename': fileName, 'directory': directory, 'content': dataBytes })\n            .pipe(map( (r: any) => {\n                return new PortalResult(r);\n            }), catchError(this.handleError));\n    }\n\n    public getSettings(): Observable<any> {\n        return this.post<any>(\"GetSettings\");\n    }\n\n    public saveSettings(settings: any): Observable<IResultStatus> {\n        return this.post<IResultStatus>(\"SaveSettings\", { 'settings': settings });\n    }\n\n    public getExportableMaintServices(): Observable<string[]> {\n        return this.post<string[]>(\"GetExportableMaintServices\");\n    }\n\n    public getSounds(): Observable<ImageFile[]> {\n        return this.post<ImageFile[]>(\"GetSounds\", null, \"sounds\");\n    }\n\n\n    public getPageMaps(): Observable<IUIComponentRef[]> {\n        return this.post<string>(\"LoadPageMapping\", undefined, \"xml\")\n            .pipe(map((xml: string) => {\n                let xmlDoc = new DOMParser().parseFromString(xml, \"application/xml\");\n                let res: IUIComponentRef[] = [];\n                let nl = xmlDoc.documentElement.getElementsByTagName(\"PageMappingItem\");\n                _.forEach(nl, p => {\n                    let tg = p.getElementsByTagName(\"Parameters\");\n                    let itemParameters : string[] = [];\n                    _.forEach(tg, t=> itemParameters.push(t.attributes[\"Name\"].value) );\n\n                    if (p.attributes && p.attributes[\"Name\"]) {\n                        let pmref = new UIComponentRef();\n                        pmref.name = p.attributes[\"Name\"].value;\n                        pmref.type = 'pageMap';\n                        pmref.componentName = pmref.name;\n                        pmref.isReference = true;\n                        pmref.__mapParameters = itemParameters;\n                        res.push(pmref);                            \n                    }\n                });\n                return res;\n            }));\n    }\n\n    public getTargetMatrices(): Observable<IUIComponentRef[]> {\n        return this.post<string[]>(\"LoadAllTargetMatrixItems\", undefined, \"retVal\")\n            .pipe(map( (items:string[]) => {\n                    return _.map<string, IUIComponentRef>(items, s => {\n                        let tm = new UIComponentRef ();\n                        tm.isReference = true;\n                        tm.componentName = s;\n                        tm.name = s;\n                        tm.type = 'targetMatrix';\n                        return tm;\n                    });\n                }\n            ));\n    }\n\n    public getTargetMatrix(name: string): Observable<any> {\n        if (!name) {\n            // create new page map\n            let res = { __type: \"TargetMatrixItem\" };\n            name = \"TargetMatrixItem\" + '-' + new Date().getMilliseconds().toString(); // new name\n            res[\"name\"] = name;\n            return new Observable<any>(subscriber => subscriber.next(res));\n        }\n        return this.post<string>(\"LoadTargetMatrixItem\", { 'name': name }, \"xml\")\n            .pipe( map((xml:string) => this._getTargetMatrixItemFromXml(xml)));\n    }\n\n    private _getTargetMatrixItemFromXml(xml: string) : IElement{\n        let xmlDoc = new DOMParser().parseFromString(xml, \"text/xml\");\n        let name = xmlDoc.documentElement.getAttribute(\"Name\");\n        let res: IElement = <IElement>{\n            id: uuid.id(),\n            name: name,\n            type: 'TargetMatrixItem',\n            typeName: 'TargetMatrixItem',\n            items: {}\n        };\n\n        let rows = [];\n        let columns = [];\n\n        for(let i=0; i<xmlDoc.documentElement.childNodes.length; i++){\n            let p : any  = xmlDoc.documentElement.childNodes.item(i);\n            if (p.localName == \"Columns\") {\n                let attrs = (p as any).attributes;\n                if( attrs ){\n                    let nameAttr = attrs.getNamedItem('Name');\n                    let captionAttr = attrs.getNamedItem('Caption');\n                    columns.push({\n                        name: nameAttr && nameAttr.textContent, caption: captionAttr && captionAttr.textContent, __type: 'TargetMatrixColumn'\n                    });\n                }\n            }\n            else if (p.localName == \"Rows\") {\n                let cells = columns.map(cx=> { return {name: cx.name, value: null, __type: 'TargetMatrixCell'};});\n                for(let ii=0; ii<p.childNodes.length; ii++){\n                    let c = p.childNodes.item(ii) as any;\n                    if( c.attributes ){\n                        let nameAttr = c.attributes.getNamedItem('Name');\n                        let valAttr = c.attributes.getNamedItem('Value');\n                        let colName = nameAttr.textContent;\n                        let clx = cells.find(c1=> c1.name == colName);\n                        clx.value = valAttr && valAttr.textContent;\n                    }\n                }\n\n                let tvAttr = (p as any).attributes && (p as any).attributes.getNamedItem('TargetValue');\n                rows.push({\n                    targetValue: tvAttr && tvAttr.textContent,\n                    cells: cells,\n                    __type: 'TargetMatrixRow'\n                });\n            }\n        }\n        res['columns'] = columns;\n        res['rows'] = rows;\n        return res;\n    }\n\n    public getPageMap(name: string): Observable<any> {\n\n        if (!name) {\n            // create new page map\n            let res = { __type: \"PageMappingItem\" };\n            name = \"PageMappingItem\" + '-' + new Date().getMilliseconds().toString(); // new name\n            res[\"nameField\"] = name;\n            return new Observable<any>(subscriber => subscriber.next(res));\n        }\n\n        return this.post<any>(\"LoadPageMapItem\",{ 'name': name }, \"pageMap\");\n    }\n\n    public getSuggestedMappingParameters(): Observable<any> {\n        return this.post<any>(\"GetSuggestedMappingParameters\", undefined, \"parameters\");\n    }\n\n    public savePageMap(pageMapping: any): Observable<IResultStatus> {\n\n        let name = pageMapping['Name'];\n        pageMapping.nameField = pageMapping.Name;\n        delete pageMapping.Name;\n\n        if( pageMapping && pageMapping.sourcePagesField){\n            pageMapping.sourcePagesField.forEach((s:any) => s.actionField = null);\n        }\n\n        return this.post<IResultStatus>(\"SavePageMap\", { 'name': name, 'pageMap': pageMapping });\n    }\n\n    public deletePageMap(name: string): Observable<IResultStatus> {\n        return this.post('DeletePageItem', { 'name': name });\n    }\n\n    public deleteTargetMatrixItem(name: string): Observable<IResultStatus> {\n        return this.post('DeleteTargetMatrixItem', { 'name': name });\n    }\n\n    private post<T>(op: string, prms:any = null, responseOut : string | ((pr : any) => any) = undefined): Observable<T> {\n\n        let resField = op + \"Result\";\n        if( op.startsWith(\"metadata/\"))\n            resField = \"MetadataOperationResult\";\n        else if( op.startsWith(\"component/\"))\n            resField = \"ComponentOperationResult\";\n\n        return this._http.post<any>(this.getOperationUrl(op), prms && JSON.stringify(prms), this.getHeaders())\n            .pipe(map( parsedResponse => {\n                let ret : T;\n                \n                if( parsedResponse && parsedResponse[resField] !== undefined){\n                    if( responseOut ){\n                        // Function\n                        if( typeof responseOut == \"function\" ){\n                            ret = <T>( <((pr : any) => any)>responseOut)(parsedResponse);\n                        }\n                        else{\n                            // string\n                            ret = <T>parsedResponse[responseOut as string];                                            \n                        }\n                    }\n                    else{ \n                        // Field\n                        ret = <T> parsedResponse[resField];\n                    }    \n                }\n\n                return ret;\n\n            }), catchError(this.handleError));\n    }\n\n    public saveTargetMatrixItem(name: string, targetMatrixItem: any): Observable<IResultStatus> {\n\n        let initDocXml = \n        `<?xml version=\"1.0\" encoding=\"utf-16\"?>\n            <TargetMatrixItem xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" Name=\"${name}\" xmlns=\"camstar.com/Portal.Personalization.Model\">\n            </TargetMatrixItem>`;\n\n        let xmlDoc = new DOMParser().parseFromString(initDocXml, \"text/xml\");\n        let ns = \"camstar.com/Portal.Personalization.Model\";\n\n        let de = xmlDoc.documentElement;\n        let cols = val(targetMatrixItem, \"columns\");\n        _.forEach(cols, c=>{\n            let cl = xmlDoc.createElementNS(ns, \"Columns\");\n            cl.setAttribute(\"Name\", c.name);\n            cl.setAttribute(\"Caption\", c.caption);\n            de.appendChild(cl);\n        });\n\n        let rows = val(targetMatrixItem, \"rows\");\n        _.forEach(rows, r=>{\n            let rl = xmlDoc.createElementNS(ns, \"Rows\");\n            rl.setAttribute(\"TargetValue\", r.targetValue);\n            if( r.cells ){\n                r.cells.forEach((cell, index)=>{\n                    let cll = xmlDoc.createElementNS(ns, \"Cells\");\n                        cll.setAttribute(\"Name\", cell.name);\n                        cll.setAttribute(\"Value\", cell.value);\n                        rl.appendChild(cll);\n                    });\n            }\n            de.appendChild(rl);\n        });\n\n        let oSerializer = new XMLSerializer();\n        let xml = oSerializer.serializeToString(xmlDoc);\n\n        return this.post<IResultStatus>('SaveTargetMatrix', { 'name': name, 'xml': xml });\n    }\n\n    public getImages(): Observable<ImageFile[]> {\n        return this.post<ImageFile[]>('GetImages', undefined ,\"images\");\n    }\n\n    public getExposedProperties(controls: ControlDescriptor[]): Observable<ControlDescriptor[]> {\n        return this.post<ControlDescriptor[]>(this.getOperationUrl('GetExposedProperties'), { 'controls': controls });\n    }\n\n    public getWorkspaces(): Observable<WorkspaceItem[]> {\n        return this.metadataCall<WorkspaceItem[]>('workspaces')\n            .pipe( map( w => {\n                let wsps: WorkspaceItem[] = [<WorkspaceItem>{ ID: 0, Code: \"DEV\", Name: \"Developer\", Description: \"Developer Workspace\", Sequence: 0 }];\n                let ret = [wsps[0], ..._.orderBy(w, 'Sequence', 'desc')];\n                // Trim the opaque at the begining\n                ret.filter(w => w.Color).forEach(w => w.Color = '#' + w.Color.substr(3));                                             \n                return ret;\n            }));\n    }\n\n    public updateComponentCache(element: IElement): void {\n        let componentCacheType = this.getCachedComponentType(element);\n        if (componentCacheType !== null) {\n            let parameters = {\n                name: element.name,\n                type: componentCacheType\n            };\n            this.post<any>(\"UpdateCachedComponent\", parameters)\n                .subscribe((response: any) => {\n                },\n                error => {\n                    this.handleError(error);\n                });\n        }\n    }\n\n    public getWebPartsList(): Observable<IUIComponentRef[]> {\n        if( this._nonVirtualWebPartsCache ){\n            return of(this._nonVirtualWebPartsCache.map(w => UIComponentRef.fromControlWebPart(w)));\n        }\n        else{\n            return this.post<IUIComponentRef[]>('GetWebPartsList', undefined, \"webParts\")\n                .pipe(map((webParts : IUIComponentRef[]) => {\n                    this._nonVirtualWebPartsCache = webParts;\n                    return webParts.map(w => UIComponentRef.fromControlWebPart(w));\n                }));\n        }\n    }\n\n    public getQueryParameters(type: number, queryName: string): Observable<any> {\n        let query = \"\";\n        let parameters = [queryName];\n\n        if (type == 0) //System\n            query = 'ParamList_System';\n        else //User\n            query = 'ParamList_User';\n\n        return this.post<any>('GetParameterList', { 'query': query, parameters: parameters }, \"list\");\n    }\n\n    public getQueryColumns(query: string, options: QueryOptions, parameters: QueryParameter[]): Observable<GridColumnDefinition[]> {\n        return this.post<any[]>('GetQueryColumnsList', { 'query': query, 'options': options, 'parameters': parameters }, \"list\")\n            .pipe(map(columns => this.getGridColumns(columns)));\n    }\n\n    public getAdHocQueryColumns(query: string, options: QueryOptions): Observable<GridColumnDefinition[] | IResultStatus> {\n\n        return this.post<any[]>(\"GetAdHocQueryColumnsList\", { 'query': query, 'options': options }, \"headers\")\n            .pipe(map( (list:any[]) => this.getGridColumns(list) ));\n    }\n\n    public createPagePermissions(pageName: string, defaultPageRole: string): Observable<IResultStatus> {\n        return this.post<IResultStatus>('CreatePagePermissions', { 'pageName': pageName, 'defaultPageRole': defaultPageRole });\n    }\n\n\n    public getTraceLog(pageName: string): Observable<TraceLog> {\n        return this.post<TraceItem[]>('GetTraceLog', { 'pageName': pageName }, \"items\")\n            .pipe(map( (items : TraceItem[]) => {\n                    if(items){\n                        var trLog = new TraceLog();\n                        trLog.items = items.reverse();\n                        return trLog;\n                    }\n                    return null;\n                } ));\n    }\n\n    public getWebiReportsList(conn: any): Observable<string[]> {\n        return this.post<string[]>(\"GetWebiReportsList\", { profile: conn }, \"reports\")\n            .pipe(map((reports: string[]) => reports.sort()));\n    }\n\n    public getReportParameters(conn: any, reportName: string): Observable<any[]> {\n        return this.post<any[]>('GetWebiReportParameters', { profile: conn, reportName: reportName }, \"parameters\");\n    }\n\n    public getMappings(): Observable<string[]> {\n        return this.post<string[]>('GetSuggestedMappingNames', undefined, \"names\");\n    }\n\n    public targetMatrixFromExcel(excelData: Uint8Array): Observable<any> {\n        return this.post<any>('LoadFromExcel', { excel: excelData }, res=> this._getTargetMatrixItemFromXml(res.xml));\n    }\n\n\n    // Migrated from studio.service\n    public getControls(): Observable<IControl[]> {\n        const uriOfimage: string =  'Content/';\n        return  this.post<IControl[]>('GetControls')\n                    .pipe(map((controls : IControl[]) => \n                    controls.map((c)=>{ c.toolboxImage = uriOfimage + c.toolboxImage;\n                                        c.typeName=c.assembly +'.'+ c.type;\n                                        c.designImage = uriOfimage + c.designImage;    \n                                    return c;\n                                })));     \n    }\n\n    public getModelingInstanceRefs(cdo: string): Observable<IElement[]> {\n        return this.post<IElement[]>('GetInstanceReferences', { 'cdoName': cdo});\n    }\n\n    public getMetadata(): Observable<PersonalizationTypes> {\n        return this.metadataCall<PersonalizationTypes>(\"get\");\n    }\n\n    public getDescriptions(): Observable<any> {\n        return this.metadataCall<any>(\"descriptions\");\n    }\n\n    public getMetadataTypes(ns:string, types: string[]): Observable<PersonalizationTypes> {\n        return this.metadataCall<PersonalizationTypes>(\"types\", ns, types);\n    }\n\n    public getElement(elementName: string, type: string, workspaceCode: string = \"\"): Observable<IUIDesigner> {\n        return this.componentCall<IUIDesigner>(\"get\", elementName, type, workspaceCode);\n    }\n\n    public copyElement(element: IElement, newName: string, workspaceCode : string): Observable<IElement> {\n        \n        if (element.__unbound && element.__unbound !== \"NDO\") {\n            let compToSave = _.cloneDeep<IElement>(element);\n            compToSave.name = newName;\n            return of<IElement>(compToSave);\n        }\n\n        // Copy unbound elements must be implement\n\n        return this.componentCall<IElement>(\"copy\", element.name, element.type || element.__maint, workspaceCode, newName);\n        \n    }\n    private componentCall<T>(op: string, name: string, type: string, workspaceCode: string = \"\", data: string = null): Observable<T> {\n        let prm = {\n            'name': name, \n            'type': type.toLowerCase(), \n            'workspace' : workspaceCode,\n            'content': data\n        };\n\n        return this.post<IApiResult>('component/'+op, prm)\n            .pipe(map((response: any) => this.processPortalResponse(response)));\n    }\n\n    private metadataCall<T>(op: string, data: any = null, dataArray : string[] = []): Observable<T> {\n        let prm = {inpParams: [data].concat(dataArray)};\n\n        return this.post<IApiResult>('metadata/'+op, prm)\n            .pipe(\n                map((response: any) => this.processPortalResponse(response) )\n            );\n    }\n\n    private processPortalResponse(response: IApiResult) : any {    \n        if (response){\n            let res = response.status;\n            if(res.IsSuccess){\n                if(response.content){\n                    let content = JSON.parse(response.content); \n                        if (content.type !== undefined && (content.type == \"Page\" || content.type == \"Webpart\")) {\n                           if (response.status.Message) {\n                               content.__statusMessage = response.status.Message;\n                           }    \n                        }\n                        \n                    return content;\n                }\n                else\n                    return res;\n            }\n            else{\n                // The error handling must be improved\n                if( res.ExceptionData && res.ExceptionData.Description)\n                    alert(res.ExceptionData.Description);\n\n                return res;\n            }\n        }\n        else {\n            let errRes = <IResultStatus>{IsSuccess: false, Message: \"No result\"}\n            console.error(errRes.Message, response);\n            return errRes;\n        }\n    }\n\n    public getWebpartElement(elementName: string, type: string, workspaceCode: string): Observable<IUIDesigner|IResultStatus> {\n        // Should add             \n        return this.getElement(elementName, type, workspaceCode);\n    }\n\n    public getPageByTemplateType(template: string): Observable<IUIDesigner> {\n        return Observable.create(obs => {\n            let type = \"Page\";\n            if(template == \"blank\") {\n                this.getElement(null, type).subscribe(page=> { \n                    obs.next(page);\n                    obs.complete();     \n                });            \n            }\n            else {                                     \n                this.getElement(template, type).subscribe(page => {\n                    page.isDirty = true;\n                    page.isNew = true;\n                    obs.next(page);\n                    obs.complete(); \n                });                \n            } \n        });\n    }\n\n\n    public exportComponent(type: string, name: string, isNew: boolean = false, workspace: string): Observable<IApiResult> {\n       \n        let optPar = {\n            'type': type, \n            'name' : name, \n            'workspace' : workspace + \"\" === '' ? 'all' : workspace,\n            'isNew' : isNew.toString()\n        };\n\n        function dataEncodeUTF16(data) {\n            let buf = new ArrayBuffer(data.length*2);\n            let bufView = new Uint16Array(buf);\n            for (let i=0; i < data.length; i++) {\n                 bufView[i] = data.charCodeAt(i);\n            }\n            return bufView;\n        }\n\n        return this.post<any>('component/export', optPar) \n        .pipe(\n            map((data: any) => {\n                let dataUTF16 = dataEncodeUTF16(data.content);\n                let blob = new Blob([dataUTF16], {type: \"text/xml;charset=UTF-16;\"});    \n                let fileName = name + \".xml\";\n\n                // download file.\n                if (navigator.msSaveBlob) // IE10+\n                    navigator.msSaveBlob(blob, fileName);\n                else { // other browsers.\n                    let url = window.URL.createObjectURL(blob);\n                    if (\"download\" in document.createElement(\"a\")) {\n                        let a = document.createElement(\"a\");\n                        a.style.display = \"none\";\n                        a.href = url;\n                        a.setAttribute(\"download\", fileName);\n                        a.click();\n                    }\n                }\n\n                \n                return data;\n        \n            }\n        ));\n    }\n\n    public importComponent(type: string, name: string, isDev: boolean, xmlContent: ArrayBuffer): Observable<any> {\n        let data = new Uint8Array(xmlContent); \n        let array = Array.from(data);\n        \n        return this.post(\"ImportComponent\", {'type': type, 'name' : name, 'isDev': isDev, 'xmlData': array})\n        .pipe(map((response: any) => this.processPortalResponse(response)));\n    }\n\n    public applyXml(name: string, type: string, xmlContent: string): Observable<IUIDesigner> {  \n        return this.componentCall<IUIDesigner>(\"applyxml\", name, type, \"\", xmlContent);\n    }\n\n    public elementToXml(element: IElement, workspace : string): Observable<string> {\n        return this.componentCall<string>(\"toxml\", element.name, element.type, workspace, element[\"isNew\"] === true ? \"true\" : \"false\")\n            .pipe(tap(xml=> element.__xml = xml));\n    }\n\n    public removeElement(name: string, type: string): Observable<IResultStatus> {\n        return this.componentCall<IResultStatus>(\"delete\", name, type);\n    }\n\n    public publishElement(element: IElement): Observable<any> {\n        return this.componentCall<IResultStatus>(\"publish\", element.name, element.type, undefined, this._convertorService.elementSerialize(element));\n    }\n\n    public saveElement(element: IElement): Observable<IResultStatus> {        \n        return this.componentCall<IResultStatus>(\"save\", element[\"componentName\"], element.type, undefined, this._convertorService.elementSerialize(element));\n    }\n\n    public revert(name: string, elType: string, toContent: string): Observable<any> {\n        return this.componentCall<IResultStatus>(\"revert\", name, elType, undefined, toContent);\n    }\n\n    public isUsed(name: string, elType: string, wpName: string): Observable<any> {\n        return this.componentCall<IResultStatus>(\"isused\", name, elType, \"csi\", wpName);\n    }\n\n    public batchExport(settings: BatchImportExportSettings): Observable<IResultStatus> {\n        return this.post<ArrayBuffer>('BatchExport', { \"settings\" : settings} )   \n             .pipe(map((data: ArrayBuffer) => {\n                // received bytes with structure\n                //  1 - \"0\"-error ; \"1\" - success\n                //  XXXX - int length of message (hex format)\n                //  XXXXXXXX - long length of data (hex format)\n                //  data bytes\n\n                let ret = <IResultStatus>{IsSuccess: false, Message : \"\"};\n                let i = 0;\n                let s = String.fromCharCode(data[i++]);\n                ret.IsSuccess = s == \"1\";\n                for(s=\"\";i < 5; i++) s += String.fromCharCode(data[i])\n                \n                let messageLength = parseInt(s, 16);                 \n\n                for(s = \"\";i < (5+8); i++)\n                    s += String.fromCharCode(data[i])\n                \n                let dataLength = parseInt(s, 16);\n                for(s = \"\";i < (1+4+8+messageLength); i++)\n                    s += String.fromCharCode(data[i])\n                \n                ret.Message = s;\n                if( !ret.IsSuccess )\n                    return ret;\n\n                let ab = new Uint8Array(data, 1+4+8+messageLength, dataLength);\n                let datablob = new Blob([ab]).slice(1+4+8+messageLength);\n\n                let fileName = \"BatchExport\";\n                if(settings.ExportTo === 0) \n                    fileName += \".xml\"\n                else\n                    fileName += \".zip\";\n\n                // download file.\n                if (navigator.msSaveBlob) // IE10+\n                    navigator.msSaveBlob(datablob, fileName);\n                else { // other browsers.\n                    var url = window.URL.createObjectURL(datablob);\n                    let a = document.createElement(\"a\");\n                    if (\"download\" in a) {\n                        a.style.display = \"none\";\n                        a.href = url;                        \n                        a.setAttribute(\"download\", fileName);\n                        a.click();\n                    }\n                }\n\n                return ret;\n            }));\n    }\n\n    public batchImport(settings: BatchImportExportSettings): Observable<IResultStatus> {\n\n        const fd = new FormData();\n        const opts =  settings.PostedFile.name + \",\" + \n                settings.OverrideIfExists + \",\" + \n                settings.SelectedWorkspaces + \",\" +\n                settings.PostedFile.size;\n                \n        fd.append('options', settings.PostedFile, opts);        \n\n        return this._http.post<IResultStatus>(this._portalUrl + 'BatchImport', fd )\n            .pipe(map((resp : any) => <IResultStatus>resp.BatchImportResult ));\n    }\n\n    private getAuthorizationHeader(): string {\n        if (this._profile)\n            return 'Bearer ' + this._profile.Name + ';' + this._profile.SessionID.Value + ';' + this._profile.UTCOffset\n        return null;\n    }\n\n    private getOperationUrl(key: string): string {\n       \n        return this._portalUrl + key;\n    }\n\n    private getHeaders() : any\n    {\n        return {\n            headers: new HttpHeaders({'Content-Type' :'application/json', 'Accept' : 'application/json'})\n        };\n    }\n\n    private handleError(err: any) : never {\n        let errorXml = err.error as string;\n        // in a real world app, we may send the server to some remote logging infrastructure\n        // instead of just logging it to the console\n        let errText = '';\n        if (errorXml) {\n            // Brute parsing XML error response\n            let startReason = errorXml.indexOf('<Reason>');\n            if (startReason != -1) {\n                startReason += '<Reason>'.length;\n                let endReason = errorXml.indexOf('</Reason>', startReason);\n                if (endReason != -1) {\n                    errText = errorXml.substr(startReason, endReason - startReason);\n                    // extract <Text>....</Text>\n                    let startText = errText.indexOf('<Text');\n                    if (startText != -1) {\n                        startText += (errText.indexOf('>', startText) + 1);\n                        errText = errText.substr(startText, errText.lastIndexOf('</Text>') - startText);\n                    }\n                }\n            }\n        }\n\n        if (errText)\n            console.error(errText);\n        else\n            console.error(errorXml);\n\n        throw(new Error(errText || 'Server error'));\n    }\n\n    private createGridColumn(header: any, baseFieldExp: string, width: number = 150): GridColumnDefinition {\n\n        if (header.Name[0] == '$') {\n            let colType: string;\n            // parse name\n            //string.Format(\"${0},{1},{2},{3}\", IsReadOnly, IsRequired, TypeName, Name),\n            let sp = header.Name.substring(1).split(',');\n            let editable = sp[0] != 'True';\n            let typeName = sp[2];\n            let name = sp[3];\n\n            switch (typeName) {\n                case \"DateTime\":\n                    colType = 'JQDateChooser';\n                    break;\n                case \"Boolean\":\n                    colType = 'JQFieldCheckBox';\n                    width = 30;\n                    break;\n                case \"Enum\":\n                    colType = 'JQDropDownList';\n                    break;\n                case \"NamedObjectRef\":\n                    colType = 'JQNamedObject';\n                    break;\n                case \"NamedSubentityRef\":\n                    colType = 'JQNamedSubentity';\n                    break;\n                case \"RevisionedObjectRef\":\n                    colType = 'JQRevisionedObject';\n                    break;\n                default:\n                    colType = editable ? 'JQTextBox' : 'JQFieldReadonly';\n                    width = 200;\n                    break;\n            }\n\n            let edProperties = {};\n            if (colType == 'JQNamedObject')\n                edProperties = { __type: 'EditorPropertiesNDO', FieldExpressions: baseFieldExp + \".\" + name };\n            else if (colType == 'JQRevisionedObject')\n                edProperties = { __type: 'EditorPropertiesRDO', FieldExpressions: baseFieldExp + \".\" + name };\n            else\n                edProperties = null;\n\n            return <GridColumnDefinition>{\n                __type: colType,\n                name: name,\n                editable: editable,\n                width: width,\n                required: sp[1] == \"True\",\n                labelName: header.Label ? header.Label.Name : null,\n                editorProperties: edProperties\n            };\n        }\n        else {\n            let colType: string;\n            let code: TypeCode;\n            if (_.isString(header.TypeCode))\n                code = <TypeCode>TypeCode[(<string>header.TypeCode)];\n            else\n                code = header.TypeCode;\n\n            switch (code) {\n                case TypeCode.DateTime:\n                    colType = 'JQDateChooser';\n                    break;\n                case TypeCode.Boolean:\n                    colType = 'JQFieldCheckBox';\n                    width = 30;\n                    break;\n                default:\n                    colType = 'JQFieldReadonly';\n                    width = 200;\n                    break;\n            }\n\n            let lbl: string = header.LabelName;\n            if (header.Label)\n                lbl = (<ILabel>header.Label).Name;\n\n            return <GridColumnDefinition>{\n                __type: colType,\n                name: header.Name,\n                editable: false,\n                width: width,\n                required: false,\n                editorProperties: {},\n                labelName: lbl\n            };\n        }\n    }\n\n    private getGridColumns(resultList: any[], baseFieldExp: string = null): GridColumnDefinition[] {\n        if (resultList) {\n            let list: any[] = resultList; // .headers /*|| result.list || */[];\n            return list.map( h => this.createGridColumn(h, baseFieldExp));\n        }\n        return <GridColumnDefinition[]>[];\n    }    \n\n    private getCachedComponentType(element: IElement): CachedComponentType {\n        let retVal = null;\n        if (element) {\n            if (element.typeName) {\n                switch (element.typeName) {\n                    case \"PageContent\":\n                        retVal = CachedComponentType.Page;\n                        break;\n                    case \"WebPartDefinition\":\n                        retVal = CachedComponentType.WebPart;\n                        break;\n                    case \"PageFlowContent\":\n                        retVal = CachedComponentType.Pageflow;\n                        break;\n                    case \"PortalTabChanges\":\n                        retVal = CachedComponentType.Tab;\n                        break;\n                    case \"PortalMenuDefinitionChanges\":\n                        retVal = CachedComponentType.Menu;\n                        break;\n                    case \"ActionDefChanges\":\n                        retVal = CachedComponentType.Action;\n                        break;\n                }\n            }\n        }\n        return retVal;\n    }\n\n    private _profile: IUserProfile;\n    private _portalUrl = environment.portalUrl + '/PortalStudioService.svc/web/';\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { MetadataService } from './metadata.service';\nimport { PortalService } from './portal.service';\nimport { ConvertorService } from './convertor.service';\nimport { IMetadataType } from '../objects/viewModel';\nimport { AlertService } from '../../alert/alert.service';\nimport { val, ILabel } from '../../common/objects/common';\nimport {tap, concat, map} from \"rxjs/operators\";\n\nimport * as _ from 'lodash';\n\n@Injectable()\n\nexport class PortalSettingsService {\n\n    private settings: any = {};\n    private configTypes : {[name:string] : IMetadataType};     \n\n    constructor( @Inject(MetadataService) private _metadataService: MetadataService, \n            @Inject(PortalService) private _portalService: PortalService, \n            @Inject(ConvertorService) private _convertor: ConvertorService, \n            private _alert : AlertService) {\n    }\n    \n    public save(): Observable<any> {\n\n        let convSettings = this._convertor.convertModelToSettings(this.settings);\n\n        // Languages should not be null\n        if (!convSettings.languageSettingsField)\n            convSettings.languageSettingsField = {};\n\n        if (!convSettings.languageSettingsField.languagesField)\n            convSettings.languageSettingsField.languagesField = [];\n\n        return this._portalService.saveSettings(convSettings).pipe(\n            tap(ps=> {\n                if(ps.IsSuccess) \n                    this._alert.success(<ILabel> {Name: \"PS_PSETTINGS_SAVED\", DefaultValue: \"Portal Settings are saved correctly.\"});\n            }));\n    }\n\n    public getSections() : Observable<SettingSection[]> {\n        return this._metadataService.loadType('config', 'PortalSettings').pipe(\n            tap( md => { this.configTypes = md;} ), \n            concat(this._portalService.getSettings()),\n            tap(sx=> {this.settings = this.convSettings(sx);}),\n            map(ss => this.sectionNames.map(sn=> new SettingSection(sn, this.configTypes))));\n    }\n\n    private convSettings(conf:any){\n        // response is a dictionary\n     \n        let cnvSettings = this._convertor.convertSettingsToModel(conf, 'config.portalsettings', this._metadataService);\n        let settings = {};\n        delete cnvSettings.__type;\n        \n        _.forEach(cnvSettings, (v, n) => {\n            if (v === undefined || v === null)\n                v = {};\n\n            if (v['name'])\n                v.__name = true;\n            else\n                v.name = n;\n            settings[n] = v;\n        });\n        return settings;\n    }\n\n    public getSectionData(s: SettingSection | string) : any {\n        if(typeof s == \"string\"){\n            return this._metadataService.AllSettings[s + \"Field\"];\n        }\n\n        return val(this.settings, (<SettingSection>s).name);\n    }\n\n    public getSettingsData() {\n        return this.settings;\n    }\n\n    private sectionNames = [\"Default\", \"Studio\", \"Domain\", \"Theme\", \"Language\", \"TimeZone\", \"CurrentCulture\", \n            \"Grid\", \"Search\", \"SmartScanning\", \"Caching\", \"Intelligence\", \"CDOForms\", \"ExportGroups\", \n            \"StatusMessage\", \"Template\", \"Appearance\"];            \n}\n\nexport class SettingSection{\n    public type: IMetadataType;\n    public name : string;\n\n    constructor( n: string, mdTypes: {[name:string] : IMetadataType}){\n        this.name = n.toLowerCase() + 'settings';\n        this.type = mdTypes && mdTypes[this.name];\n    }\n}","import { IElement, IUIDesigner, IUIComponentRef, StartPage, StudioSubjects, UpdatedInfo, PropertyUpdatedData, val, ILabel, DesignModes, LayoutActions, TopMenuState} from '../objects/common';\nimport { WorkspaceItem, IPropertyMetadata } from '../objects/viewModel';\nimport { LayoutCell, ICell, ICellItem } from '../../layout/design/objects/layoutCell';\nimport { HistoryLog, LogItem, ElementHistoryData, LayoutHistoryData, RecordCommand, HistoryObjectType, PropertyHistoryData, HistoryOperation, IHistory } from '../objects/historyLog';\nimport * as _ from 'lodash';\nimport { map } from 'rxjs/operators';\nimport { of, Observable } from 'rxjs';\nimport { PanelSettings } from '../../panel/panel';\nimport { LayoutManager } from '../../layout/design/objects/layoutManager';\nimport { Injectable } from \"@angular/core\";\n\nexport class CellVisitorContext {\n    owner: IElement;\n    data: any;\n    tabContainer: IElement;\n\n    constructor(_data: any = {}) {\n        this.data = _data;\n    }\n};\nexport declare type CellVisitor = (cell: LayoutCell, context: CellVisitorContext) => boolean;\n\nexport class ItemVisitorContext {\n    owner: IElement;\n    data: any;\n    tabContainer: IElement;\n\n    constructor(public searchingItem: any, _data: any = {}) {\n        this.data = _data;\n    }\n};\nexport declare type ItemVisitor = (container: IElement, context: ItemVisitorContext) => boolean;\n\n@Injectable()\nexport class StudioStateService {\n    public openedElements: IElement[];\n    public cachedWebparts: IUIDesigner[];\n    public webPartList : any;\n\n    public activeRootElement: any;\n    \n    public get activeElement(): any {return this.getRoot() && this.getRoot().__selectedElement ; }\n    public set activeElement(e: any) {if(this.getRoot())  this.getRoot().__selectedElement = e; }\n\n    public get activeWorkspace(): number { return this.activeRootElement && this.activeRootElement.__workspace !== undefined ? this.activeRootElement.__workspace : -1; }\n    public set activeWorkspace(ws: number) { this.activeRootElement.__workspace = ws; }\n\n    public panels: IUIComponentRef[] = [];\n    public displayCellPosition = false;\n\n    public hideStart: boolean;\n    public showSplash: boolean;\n\n    public subjects: StudioSubjects;\n    public elementInDesign: IElement;\n\n    private _checkedElements: { n: string, t: string }[];\n \n    get checkedElements(){ return this._checkedElements;}\n    set checkedElements(val){ this._checkedElements = val;}\n\n    private workspaces: WorkspaceItem[];\n    _alertService: any;\n\n    constructor() {\n        this.openedElements = [];\n        this.cachedWebparts = new Array();\n        this.hideStart = false;\n        this.showSplash = true;\n        this.subjects = new StudioSubjects();\n        this._checkedElements = [];\n\n        //setup startPage\n        let startPage = new StartPage('Start Page', 'StartPage');\n        this.addOpenedElement(startPage);\n    }\n\n    public checkAll(AllCheckedElements:any, items: any, doCheck: boolean, checkedSubj: any) {\n        let tempCheckedElements;\n        items.forEach(items => {\n                AllCheckedElements = items.map(el => <any>{ n: el.name, t: el.type });\n            if (doCheck){\n                tempCheckedElements = this._checkedElements;\n                 AllCheckedElements = AllCheckedElements.filter(function(el){\n                    return tempCheckedElements.findIndex((item) => item.n === el.n) === -1;\n                });\n\n                this._checkedElements = this._checkedElements.concat(AllCheckedElements);\n            }\n            else{   \n                let AllCheckedElements = items.map(el => <any>{ n: el.name, t: el.type });\n                this._checkedElements = this._checkedElements.filter( function(el) { \n                    return AllCheckedElements.findIndex( (item) => item.n === el.n) === -1;\n                }n            };\n            checkedSubj.next(this._checkedElements);\n        }); \n    }\n\n    public checkElement(el: IUIComponentRef, checkedSubj: any): void {\n            let foundIndex = this._checkedElements.findIndex(e => e.n == el.name && e.t == el.type);\n            if (foundIndex != -1)\n            this._checkedElements.splice(foundIndex, 1);\n            else\n            this._checkedElements.push({ n: el.name, t: el.type });\n            \n            checkedSubj.next(this._checkedElements);\n    }\n\n    public isChecked(name: string, type: string): boolean {\n        return this._checkedElements.findIndex(e => e.n == name && e.t == type) != -1;\n    }\n\n    public getRoot(): IUIDesigner {\n        return <IUIDesigner>(this.activeRootElement);\n    }\n\n    public addOpenedElement(element: IElement): void {\n        if (element !== undefined) {\n            if( this.isDesignedElement(element) && (element as IUIDesigner).scaleValue === undefined)\n                (element as IUIDesigner).scaleValue = 100;\n\n            this.openedElements = [...this.openedElements, element];\n            this.activateRootElement(element);\n            this.activateElement(element);\n        }\n    }\n\n    public activateElement(element: IElement): void {\n        const root = this.getRoot();\n        if( !element || !element.type ){\n            root.__selectedElement = null;\n        }\n\n        if( element ){\n            if( !(element.__maint || element.__unbound)){\n                this.refreshHowLong(root);                \n                let oldSelectedOwner = root.__selectedElement ? this.findOwnerOfElement(<IElement> root.__selectedElement) : null;\n                root.__selectedElement = element as IElement;\n                this.refreshElement(this.findOwnerOfElement(element));\n                if( oldSelectedOwner ){\n                    this.refreshElement(oldSelectedOwner);\n                }\n            }\n        }\n\n        this.refreshTopMenu();\n    }\n\n    public removeItem(el: IElement, owner:IElement = null){\n        const k = _.findKey(owner.items, w=> w.name == el.name);\n        if(k){\n            delete owner.items[k];\n            if( el.type.toLowerCase() == \"webpart\"){\n                owner.removedWebParts = owner.removedWebParts || [];\n                owner.removedWebParts.push(el.name);\n            }\n        }\n    }\n\n    public activateCell(cell: ICell): void {\n\n        if( !cell )\n            return;\n\n        this.getRoot().__selectedElement = cell;\n\n        this.subjects.propertyPanel.next(cell);\n        this.refreshTopMenu();\n    }\n\n    public updateLayoutMenu(layoutActions: LayoutActions[]){\n        this.subjects.layoutMenuUpdate.next(layoutActions);\n    }\n\n    public refreshElement(element: any){\n        if( !element || (element && element.isRoot) )\n            this.refreshRoot();\n        else\n            this.subjects.refresh.next(element);\n    }\n\n    public refreshControl(control: IElement){\n        const owner = this.findOwnerOfElement(control);\n        this.subjects.refresh.next(owner);\n    }\n\n    public propertyChanged(p: [any, any, IPropertyMetadata, any]){\n        // let newValue : any = p[0];\n        // let oldValue : any = p[1];\n        // let property : IPropertyMetadata = p[2];\n        let instance : any = p[3];\n        this.setDirty();\n        let owner = this.findOwnerOfElementOrCell(instance);\n        if(owner)\n            this.refreshElement(owner);\n        this.refreshTopMenu();\n    }\n\n    public refreshElementPanel(panelType: string){\n        this.subjects.refreshElementPanel.next(panelType);\n    }\n\n    public refreshHowLong(element): void {\n        if (element && this.activeRootElement === element) {\n            let properties = this.activeRootElement.properties;\n            if (properties && properties[\"lastModified\"]) {\n                let ms = Date.parse(properties[\"lastModified\"]);\n                if (ms > 0) {\n                    let diffMin = Math.floor((Date.now() - ms) / (1000 * 60));\n                    let days = Math.floor(diffMin / (60 * 24));\n                    let howLongValue = \"\";\n                    if (days > 0) {\n                        howLongValue = days + \" days, \";\n                        diffMin -= days * 60 * 24;\n                    }\n                    let hours = Math.floor(diffMin / 60);\n                    if (hours > 0) {\n                        howLongValue += hours + \" hours, \";\n                        diffMin -= hours * 60;\n                    }\n                    if (diffMin >= 0)\n                        howLongValue += diffMin + \" mins\";\n                    properties[\"howLong\"] = howLongValue;\n                }                \n            }            \n        }\n    }\n\n    public activateRootElement(element: IElement = null): boolean {\n        if( !element )\n            element = this.getRoot();\n\n        //only activate existing elements\n        let existingElement = this.openedElements.find(oe => oe == element);\n        if (existingElement && existingElement != this.activeRootElement) {\n\n            if (this.activeRootElement && this.activeRootElement.id == existingElement.id)\n                return false;\n\n            this.activeRootElement = existingElement;\n\n            if (!this.activeRootElement.__designMode)\n                this.activeRootElement.__designMode = DesignModes.Controls;\n\n            return true;\n        }\n        return false;\n    }\n\n    public activateExistingOpenedElement(elementName: string): IElement {\n        var len = this.openedElements.length;\n        for (var i = 0; i < len; i++)\n            if (this.openedElements[i].name === elementName) {\n                this.activateRootElement(this.openedElements[i]);\n                return this.openedElements[i];\n            }\n        return null;\n    }\n\n    public replaceRoot(e:IUIDesigner){\n        let existingElementIndex =  this.openedElements.findIndex( oe => oe.name == e.name);\n        if( existingElementIndex != -1 ){\n            this.openedElements[existingElementIndex] = e;\n        }\n    }\n\n    public updatePropertyPanel(ref : any){\n        this.subjects.propertyPanel.next(ref);\n    }\n\n    public searchPanelText(panel:PanelSettings, txt: string){\n        panel.searchInput.next(txt);\n    }\n\n    public refreshRoot(displayMode?:DesignModes){\n        let r = this.getRoot();\n        this.subjects.refreshRoot.next(displayMode || r.__designMode);\n        if( r.type == \"Webpart\" )\n            this.subjects.refresh.next(<any>r);\n    }\n\n    public setDirty() {\n        this.getRoot().isDirty = true;\n        this.refreshTopMenu();    // just refresh the action menu\n    }\n\n    public layoutCommand(cmd:LayoutActions){\n        const layoutManager: LayoutManager = this.elementInDesign && this.elementInDesign.__layoutManager;\n        if( layoutManager ){\n            layoutManager.executeCommand(cmd);            \n            this.setDirty();\n            this.refreshElement(this.elementInDesign);\n        }\n    }\n\n    public selectCell(cell: LayoutCell){\n        let cellOwner = this.findCellOwner(cell);\n        if (cellOwner && cellOwner['__type'] == 'TabDefinition') {\n            cellOwner = this.findCellTabContainer(cell);\n        }\n        \n        if (cellOwner) {\n            if(this.elementInDesign && this.elementInDesign != cellOwner){\n                // clear old selecton\n                this.elementInDesign.__layoutManager.clearSelection();\n            }\n            this.elementInDesign = cellOwner;\n            let layoutManager: LayoutManager = cellOwner.__layoutManager;\n            if( layoutManager.selectCell(cell)){\n                this.activateCell(cell);\n                this.updateLayoutMenu(layoutManager.getCommands());\n            }            \n        }\n    }\n\n    public replaceElement(oldElement: IElement, newElement: IElement): void {\n        let index = _.findIndex(this.openedElements, ['name', newElement.name]);\n        if (index > -1) {\n            this.openedElements[index] = newElement;\n            this.activateRootElement(newElement);\n        }\n    }\n\n    public removeOpenedElement(element: IElement): void {\n        let index = this.openedElements.indexOf(element);\n        if (index > -1) {\n            //Remove from openedElements\n            this.openedElements.splice(index, 1);\n\n            //Reset Active Elements \n            if (this.openedElements.length > 0) {\n                let newElement = this.openedElements[this.openedElements.length - 1]\n                this.activateRootElement(newElement);\n                this.activateElement(newElement);\n            }\n            else {\n                this.activateElement(null);\n                this.activeRootElement = null;\n            }\n        }\n    }\n\n    public getUniqueName(name: string, items: any, nameKey: string = \"name\") : string {\n        let txt: string = name;\n        let index: number = 0;\n\n        // find digital tail of existing name\n        let rx = /(\\d+)(?!.*\\d)/.exec(name);\n        if(rx){\n            txt = name.substr(0, rx.index);\n            index = parseInt(rx[0]);\n        }\n\n        while(_.some(items, it => val(it, nameKey) === name)){\n            name = txt + (index++).toString();            \n        }\n\n        return name;\n    }\n\n    //Edit Element Methods        \n    public addElement(newElement: any, cell: LayoutCell | ICell): boolean {\n        let cellOwner = newElement.type == \"Webpart\" ? this.activeRootElement : this.findCellOwner(cell);\n        if (!cellOwner)\n            return false;\n        let newName = this.getUniqueName(newElement.name, cellOwner.items);\n        newElement.name = newName;\n        if(newElement.properties)\n            newElement.properties.name = newName;\n\n        cellOwner.items = cellOwner.items || {};\n        cellOwner.items[newElement.id] = newElement;\n\n        if( newElement.type == \"Webpart\"){\n            // Add items from the added element to the root\n            _.filter(newElement.items, it => !_.isEmpty(it.items))\n                .forEach(w=>cellOwner.items[w.id] = w);\n        }\n        \n        let cellItem: ICell = cell;\n        if (cell.cell)\n            cellItem = cell.cell;\n\n        // add reference to the cell items\n        cellItem.items = cellItem.items || {};        \n      let nextKey=  this.generateNewIndex(cellItem)\n\n        cellItem.items[nextKey] = \n            <ICellItem> {\n                _ref: true, \n                id: newElement.id, \n                name: newElement.name, \n                type: newElement.type.toLowerCase()  \n            };            \n        cellItem.isEmpty = false;\n\n        this.setDirty();\n     \n        return true;\n    }\n\n    public replaceWebpart(old: IElement, wp: IElement){\n        let owner = this.findOwnerOfElement(old);\n        let el = owner.items[old.id];\n\n        // replace exising\n        el.items = wp.items;\n        el.properties = wp.properties;\n        el.layout = wp.layout;\n        el.typeName = wp.typeName;                \n    }\n\n    public changeElementName(newName: string): void {\n        // If the name of page or webpart changed the name in the tab will not be changed until saving\n        if (this.activeElement != this.activeRootElement) {\n            // Sync changes in references\n            let cont: CellVisitorContext = new CellVisitorContext({ oldName: this.activeElement.name, newName: newName });\n            let vis: CellVisitor = (cell: LayoutCell, context: CellVisitorContext) => {\n                let stop = false;\n                _.forEach(cell.items, it => {\n                    if (it.name == cont.data.oldName) {\n                        it.name = cont.data.newName;\n                        stop = true;\n                    }\n                });\n                return stop;\n            };\n            this.cellIterator(this.activeRootElement, vis, cont);\n            this.activeElement[\"name\"] = newName;\n\n            this.subjects.nameChanged.next(newName);\n        }\n    }\n\n    public historyDo(op: HistoryOperation): Promise<UpdatedInfo> {\n        let upd = new UpdatedInfo();\n        let cell: LayoutCell;\n        let hist: HistoryLog = this.activeRootElement.history;\n        let item: LogItem = hist.pop(op);\n        if (item) {\n            let oType = item.specificData.objectType;\n            if (oType == HistoryObjectType.Control || oType == HistoryObjectType.Webpart) {\n                let data = <ElementHistoryData>(item.specificData);\n                let itemCmd = item.command;\n                if (op == HistoryOperation.redo) {\n                    // swap operation opposite\n                    if (itemCmd == RecordCommand.add)\n                        itemCmd = RecordCommand.remove;\n                    else if (itemCmd == RecordCommand.remove)\n                        itemCmd = RecordCommand.add;                    \n                }\n                let owner : IElement;\n                switch (itemCmd) {          \n                    case RecordCommand.remove:\n                        // The element should be added back to the cell\n                        cell = this.findCellById(this.activeRootElement, data.cellId);\n                        if (cell){\n                            this.addElement(data.element, cell);\n                            owner = this.findOwnerOfElementOrCell(cell);\n                        }\n                        break;\n                    case RecordCommand.add:\n                        // The element should be removed from the cell\n                        owner = this.findOwnerOfElementOrCell(data.element);\n                        this.removeElement(data.element);\n                        break;\n                    case RecordCommand.move:\n                        // The element should be moved from the cell to fromCell\n                        cell = this.findCellById(this.activeRootElement, op == HistoryOperation.undo ? data.fromCellId : data.cellId);\n                        if (cell){\n                            this.moveElement(data.element, cell);\n                            owner = this.findOwnerOfElement(data.element);\n                        }\n                        break;\n                    case RecordCommand.replace:\n                        if( op == HistoryOperation.undo)\n                            this.replaceWebpart(data.element, data.oldElement);\n                        else\n                            this.replaceWebpart(data.oldElement, data.element);\n                        break;\n                }\n                if( owner )\n                    this.refreshElement(owner);\n                else\n                    this.refreshRoot();\n            }\n            else if (oType == HistoryObjectType.Layout) {\n                let data = <LayoutHistoryData>(item.specificData);\n                data.layoutOwner.layout.tableCells = op == HistoryOperation.undo ? data.layoutBefore : data.layoutAfter;\n                this.refreshRoot();\n            }\n            else if (oType == HistoryObjectType.Property) {\n                let data = <PropertyHistoryData>(item.specificData);\n                if (item.command == RecordCommand.propertyChange) {\n                    // restore value\n                    let vals = op == HistoryOperation.undo ? data.oldValues : data.newValues;\n                    _.forEach(vals, (v, propertyName: string) => {\n                        propertyName = propertyName.toLowerCase();\n                        let properties = data.instance.properties || data.instance;\n                        let pk = _.findKey(properties, (v, k: string) => k.toLowerCase() == propertyName) || propertyName;\n                        upd.data = new PropertyUpdatedData(v, properties[pk], pk);\n                        properties[pk] = v;\n                    });\n                    this.selectItem(data.instance);\n                }\n            }\n        }\n\n        return Promise.resolve<UpdatedInfo>(upd);\n    }\n\n    public selectItem(item){\n        this.subjects.propertyPanel.next(item);\n    }\n\n    public cellIterator(cellOwner: IElement, visitor: CellVisitor, context: CellVisitorContext): boolean {\n        let stop = false;\n\n        if (!cellOwner.isReference && cellOwner.layout && cellOwner.layout.tableCells) {\n            _.forEach(cellOwner.layout.tableCells, rows => {\n                if (stop) return false;\n\n                _.forEach(rows, cell => {\n                    if (stop) return false;\n\n                    context.owner = cellOwner;\n                    stop = visitor(cell, context);\n                    if (stop) return false;\n                        \n                    _.forEach(cell.items, it => {\n                        if (stop) return false;\n                        if (it.layout) {\n                            stop = this.cellIterator(it, visitor, context);\n                            if (stop) return false;                                \n                        }                    \n\n                        let item = it;\n                        if (it._ref === true) {\n                            if (it.type == \"webpart\")\n                                item = _.find<IElement>(this.activeRootElement.items, i => i.name == it.name);\n                            else\n                                item = _.find<IElement>(cellOwner.items, i => i.name == it.name);\n\n                            if (!item) \n                                console.warn(it.name + ' is not found ', it);                                \n                        }\n                        if (item) {\n                            if (item.properties && item.properties.tabDefinitions) {\n                                context.tabContainer = item;\n                                _.forEach(item.properties.tabDefinitions, tab => {\n                                    stop = this.cellIterator(tab, visitor, context);\n                                    if (stop)\n                                        return false;\n                                });\n                            }\n                            else if (item.layout) {\n                                stop = this.cellIterator(item, visitor, context);\n                                if (stop) return false;\n                            }\n                        }\n                    });\n                });\n            });\n        }\n        return stop;\n    }\n\n    public itemIterator(itemContainer: IElement, visitor: ItemVisitor, context: ItemVisitorContext): boolean {\n        let stop = false;\n\n        if (itemContainer.items) {\n            stop = visitor(itemContainer, context);\n            if (stop) return true;\n\n            _.forEach(itemContainer.items, (item) => {\n                stop = this.itemIterator(item, visitor, context);\n                if (stop) return false;\n            });\n        }\n        return stop;\n    }\n\n    public findOwnerOfItem(el: IElement): IElement {\n\n        let visitor: ItemVisitor = (container: IElement, context: ItemVisitorContext): boolean => {\n            if (_.findKey(container.items, it => it == context.searchingItem)) {\n                context.data.found = container;\n                return true;       // stop iteration\n            }\n            return false; // continue iterating\n        };\n\n        let visitorContext = new ItemVisitorContext(el, { found: null });\n        if (this.itemIterator(this.activeRootElement, visitor, visitorContext))\n            return visitorContext.data.found;\n\n        return undefined;\n\n    }\n\n    public findItemByName(itemName : string): IElement {\n\n        let visitor: ItemVisitor = (container: IElement, context: ItemVisitorContext): boolean => {\n            let v = _.find(container.items, it => it.name == context.searchingItem)\n            if (v) {\n                context.data.found = v;\n                return true;       // stop iteration\n            }\n            return false; // continue iterating\n        };\n\n        let visitorContext = new ItemVisitorContext(itemName, { found: null });\n        if (this.itemIterator(this.activeRootElement, visitor, visitorContext))\n            return visitorContext.data.found;\n\n        return undefined;\n    }\n\n    public findChildElement(name: string, cellId?: string) : IElement {\n        let cell = this.findCellById(this.activeRootElement, cellId);\n        if( cell ){\n            let owner = this.findCellOwner(cell); // owner = webpart or page\n            if( owner )\n                return _.find(owner.items, c=> c.name == name);\n        }\n\n        return null;\n    }\n\n    public removeElement(element: IElement) {\n        //remove element from items list\n        let cell = this.findCellByElement(element);\n        let cellOwner = this.findCellOwner(cell);\n        let removed = false;\n        const lm = cellOwner.__layoutManager;        \n        \n        if( lm ){\n            removed = lm.removeCellItem(cell, element);\n            if( removed ) \n                this.removeItem(element, cellOwner);\n        }            \n    }\n\n    public removeElementFromCell(el?: IElement, action?:string){\n        el = el || this.activeElement;\n        let cell = this.findCellByElement(el);\n        let owner = this.findCellOwner(cell);\n\n        let removed = false;\n        const lm = owner.__layoutManager;        \n        if( lm ){\n            removed = lm.removeCellItem(cell, el);\n            if( removed ) \n                this.removeItem(el, owner);\n        }\n\n        this.getRoot().isDirty = removed;\n        if (removed) {\n            this.setDirty();\n\n            if(action !== \"move\"){\n                let hr = new ElementHistoryData(this.activeElement.type == 'Control' ? HistoryObjectType.Control : HistoryObjectType.Webpart);\n                hr.cellId = cell.id;\n                hr.element = this.activeElement;\n                this.writeHistory(RecordCommand.remove, hr);\n            }\n          \n            this.activateElement(owner);\n            this.refreshElement(owner);        \n            this.refreshTopMenu(); \n        }\n\n        return removed;\n    }\n\n    public moveElement(sourceElement: IElement, targetCell: LayoutCell, sourceCell?: LayoutCell, sourceOwner? : IElement, copyEl?: IElement ): boolean {\n        let ret = false;\n        if (sourceElement) {\n            sourceCell = sourceCell || this.findCellByElement(sourceElement);\n            sourceOwner = sourceOwner || this.findCellOwner(sourceCell);\n            let targetOwner = this.findCellOwner(targetCell);\n            if(sourceOwner.name == targetOwner.name ){\n                // move item in the same owner\n                const k = _.findKey(sourceCell.items, i=> i.name == sourceElement.name);\n                if(k && copyEl===undefined){\n                    let ref = sourceCell.items[k];\n                   delete sourceCell.items[k];\n                    if(!targetCell.items)\n                        targetCell.items = {};\n                    let nextKey=  this.generateNewIndex(targetCell)\n                    targetCell.items[nextKey] = ref;\n                    // add  to history !!!\n                }\n                if (copyEl) {\n                    this.addElement(copyEl, targetCell);\n                }   \n            }\n            else{\n                if( copyEl===undefined && this.removeElementFromCell(sourceElement, \"move\")){             \n                    this.addElement(sourceElement, targetCell); \n               }\n               else{\n                    this.addElement(copyEl, targetCell);\n               }               \n            }\n\n        if (sourceElement == this.activeElement)\n              this.activateElement(null);\n              ret = true;         \n        }\n\n        if( !ret )\n            window.alert(\"Move failed. Source item is not found.\");\n\n        return ret;\n    }\n    \n    public generateNewIndex(cell:any): number {\n        let keysOfItems = Object.keys(cell.items);\n        let nextKey = keysOfItems.length;\n        while(keysOfItems.includes(nextKey + \"\")){\n            nextKey = nextKey + 1;\n        }\n\n        return nextKey\n    }\n\n    public getRefWebpartsFromState(elementName: string): IUIDesigner {\n        let wp = this.cachedWebparts.find(ref => ref.name == elementName);\n        return wp ? _.cloneDeep(wp) : null;\n    }\n\n    public storeRefWebpart(element:IUIDesigner) {\n        const elementName = element.name;\n        if( !this.getRefWebpartsFromState(elementName)){\n            this.cachedWebparts = [...this.cachedWebparts, element];\n        }\n    }\n\n    public findCellOwner(cell: any): IElement {\n        return this.findElementByCellId(this.activeRootElement, cell.id);\n    }\n\n    public findCellTabContainer(cell: any): IElement {\n        return this.findElementByCellId(this.activeRootElement, cell.id, true);\n    }\n\n    public findCellByElement(element: IElement): LayoutCell {\n\n        let visitor: CellVisitor = (cell: LayoutCell, context: CellVisitorContext): boolean => {\n            let elName = context.data.elementName;\n            if (_.find(cell.items, it => it.name == elName)) {\n                context.data.found = cell;\n                return true;       // stop iteration\n            }\n            return false; // continue iterating\n        };\n\n        let visitorContext = new CellVisitorContext({ 'elementName': element.name, found: null });\n        if (this.cellIterator(this.activeRootElement, visitor, visitorContext))\n            return visitorContext.data.found;\n\n        return undefined;\n    }\n\n    public findOwnerOfElementOrCell(element: IElement | ICell | LayoutCell): any {\n        let e = element as any;\n        if( e.__type === \"GridLayoutCell\"){\n            return this.findCellOwner((e as LayoutCell).cell);\n        }\n        else if(e.type === \"cell\"){\n            return this.findCellOwner(e as ICell);\n        }\n        else{\n            return this.findOwnerOfElement(<IElement>element);\n        }\n    }\n        \n    public findOwnerOfElement(element: IElement): any {\n\n        let visitor: CellVisitor = (cell: LayoutCell, context: CellVisitorContext): boolean => {\n            let elName = context.data.elementName;\n            if (_.find(cell.items, it => it.name == elName)) {\n                context.data.found = context.owner;\n                return true;       // stop iteration\n            }\n            return false; // continue iterating\n        };\n\n        let visitorContext = new CellVisitorContext({ 'elementName': element.name, found: null });\n        if (this.cellIterator(this.activeRootElement, visitor, visitorContext))\n            return visitorContext.data.found;\n\n        return undefined;\n    }\n\n    public isControlNameUnique(cell: any, name: string, owner?: IElement): boolean {\n        let isUnique = true;\n        owner = owner || this.findCellOwner(cell);\n        if (owner && owner.items)\n            isUnique = !_.some(owner.items, it => it[\"name\"] == name);\n        return isUnique;\n    }\n\n    private findElementByCellId(element: any, cellId: string, isTabContainer = false): any {\n\n        let visitor: CellVisitor = (cell: LayoutCell, context: CellVisitorContext): boolean => {\n            if (cell.id == context.data.cellId) {\n                context.data.found = !isTabContainer ? context.owner : context.tabContainer;\n                return true;       // stop iteration\n            }\n\n            return false; // continue iterating\n        };\n\n        let visitorContext = new CellVisitorContext({ 'cellId': cellId, found: null });\n        if (this.cellIterator(element, visitor, visitorContext))\n            return visitorContext.data.found;       \n                \n        return undefined;\n    }\n\n    public findCellById(element: any, cellId: string): LayoutCell {\n\n        let visitor: CellVisitor = (cell: LayoutCell, context: CellVisitorContext): boolean => {\n            if (cell.id == context.data.cellId) {\n                context.data.found = cell;\n                return true;       // stop iteration\n            }\n            return false; // continue iterating\n        };\n\n        let visitorContext = new CellVisitorContext({ 'cellId': cellId, found: null });\n        if (this.cellIterator(element, visitor, visitorContext))\n            return visitorContext.data.found;\n\n        return undefined;\n    }\n\n    public getObjPath(o: any, so: any, stack: string[]): boolean{\n        let found = false;\n        if( so == o)\n            return true;\n        \n        if(typeof so != \"undefined\" && so != null && typeof so == \"object\"){\n            _.forEach( so, (v, k:any) => {\n                if( _.isNumber(k) )\n                    k = k.toString();\n                if( !k.startsWith(\"__\") && typeof v != \"undefined\" && v != null && typeof v == \"object\") {\n                    stack.push(k);\n                    if(this.getObjPath(o, v, stack) ){\n                        // found\n                        found = true; \n                        return false;\n                    }\n                    stack.pop();\n                    // continue searching\n                    return true;\n                }\n            });\n        }\n        return found;\n    }\n\n    public refreshTopMenu(menu?: TopMenuState): void {\n        if( menu )\n            this.getRoot().__topMenu = menu;\n        this.subjects.menu.next(this.getRoot().__topMenu);\n    }\n\n    setComponentRef(element: IUIDesigner): void {\n        if (element.type && this.panels) {\n            for (let el of this.panels) {\n                if (el.name === element.name && el.type === element.type) {\n                    element.componentRef = el;\n                    break;\n                }\n            }\n        }\n    }\n\n    removeComponentRef(componentRef: IUIComponentRef) {\n        if (componentRef && this.panels) {\n            let index = this.panels.indexOf(componentRef);\n            if (index > -1)\n                this.panels.splice(index, 1); // remove item\n        }\n    }\n\n    public addOrUpdateComponentRef(componentRef: IUIComponentRef) {\n        if (componentRef) {\n            let type = componentRef.type;\n            if (this.panels) {\n                let index = this.panels.map(item => { return (item.type === type) ? item.name : \"\" }).indexOf(componentRef.name);\n                if (index > -1) // update\n                    this.panels[index] = componentRef;\n                else // add\n                    this.panels.push(componentRef);\n            }\n        }\n    }\n\n    public renameComponentRef(componentRef: IUIComponentRef, oldName: string) {\n        if (componentRef) {\n            let type = componentRef.type;\n            if (this.panels) {\n                let index = this.panels.map(item => { return (item.type === type) ? item.name : \"\" }).indexOf(oldName);\n                if (index > -1) // update\n                    this.panels[index] = componentRef;\n            }\n        }\n    }\n\n    public getCustomWorkspaceColor(): string {\n        let color: string;\n        let rootWs: number = this.activeRootElement ? this.activeRootElement['__workspace'] : 0;\n        if (rootWs != 0) {\n            let ws = _.find(this.workspaces, w => w.ID == rootWs);\n            if (ws) \n                color = ws.Color;            \n        }\n        return color;\n    }\n\n    public isModelingBehavior() {\n        if (this.activeRootElement)\n            return !_.isEmpty(this.activeRootElement.__maint);\n\n        return false;\n    }\n    public getWorkspaceCodeById(workspace: number): string {\n        let wsCode = '';\n        if (workspace != -1) {\n            let ws = _.find(this.workspaces, w => w.ID == workspace);\n            if (ws)\n                wsCode = ws.Code;\n        }\n        return wsCode;\n    }\n    public isDesignedElement(element: IElement){\n        return [\"page\", \"webpart\", \"pageflow\"].findIndex(e=> (element.type || \"\").toLowerCase() == e) != -1;\n    }\n    public findElement(path: string, parent?: IElement): IElement {\n\n        if (!path)\n            return null;\n\n        let el: IElement = null;\n\n        if (parent === undefined)\n            parent = this.getRoot();\n\n        let pathParts = path.split('.');\n        let parentItem: IElement;\n        if (parent['isRoot'] && parent.type == 'Webpart')\n            parentItem = parent;\n        else\n            parentItem = _.find(parent.items, (it: IElement) => it.name == pathParts[0]);\n\n        if (parentItem) {\n            if (pathParts.length > 1)\n                el = _.find(parentItem.items, (it: IElement) => it.name == pathParts[1]);\n            else\n                el = parentItem;\n\n            if( pathParts.length > 2 ){\n                parentItem = el;\n                el = _.find(parentItem.items, (it: IElement) => it.name == pathParts[2]);\n            }\n        }\n        return el;\n    }\n\n    public findElementOwner(startElement: IElement, el: IElement): IElement {\n\n        let found: IElement = null;\n\n        if (startElement.items) {\n            _.forEach(startElement.items, (it) => {\n                if (!found) {\n                    if (it == el) {\n                        found = startElement;\n                    }\n                    else {\n                        if (it.items)\n                            found = this.findElementOwner(it, el);\n                    }\n                }\n            });\n        }\n        return found;\n    }\n\n    public getPrimaryService(el?: any): string {\n        if (el == undefined)\n            el = this.activeRootElement;\n        let ps: string = '';\n\n        if (el.properties && el.properties.primaryServiceType) {\n            return el.properties.primaryServiceType;\n        }\n\n        if (el.type == 'Webpart' && el.items) {\n            _.forEach(el.items, e => {\n                if (!ps) {\n                    ps = this.getPrimaryService(e);\n                }\n            });\n        }\n\n        return ps;\n    }\n\n    public writeHistory(rc: RecordCommand, hItem: IHistory): void {\n        let r = this.getRoot();\n        if (r) {\n            if (!r.history)\n                r.history = new HistoryLog();\n            r.history.recordHistoryItem(rc, hItem);\n        }\n    }\n\n    public isNameValid(name: string, instance: any) : Observable<boolean> {\n        let exist = false;\n        if(instance && instance.type){\n            let owner: IElement;\n            if(instance.type == \"Control\")\n                owner = this.findOwnerOfItem(this.activeElement);\n            else if(instance.type == \"Webpart\")\n                owner = this.activeRootElement;\n            else if(instance.type == \"Page\")\n                owner = null;\n            else{\n                console.error('validate name - unknown type', instance);\n            }\n\n            if( owner ){\n                if( _.find(owner.items, v => v.name == name && v.id != this.activeElement.id))\n                    exist = true;\n            }\n        }\n\n        if( exist ){\n            let err : ILabel = {\n                Name: 'PS_NAME_EXISTS_ERROR',\n                DefaultValue: '{0} with name {1} already exists. Changes are discarded.',\n                arguments:[instance.type, name]\n            };\n            return this._alertService.errorModal(err)\n                .pipe(map(d => false));           // always returns False - regardless of pressed button on the popup alert\n        }\n\n        return of(!exist);\n    }\n\n    public renameLayoutRefs(instance: any, oldname: string, newname: string) {\n        let owner: IElement;\n        if(instance.type === \"Control\")\n            owner = this.findOwnerOfItem(this.activeElement);\n        else if(instance.type === \"Webpart\")\n            owner = this.findOwnerOfElement(instance);\n\n        if( owner ){\n            let lm = owner.__layoutManager;\n            if( lm ){\n                lm.renameLayoutRefs(oldname, newname);\n            }\n            else{\n                console.log(\"no layout\", oldname);\n            }\n        }\n    }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {map} from \"rxjs/operators\";\n\nimport { IUIComponentRef, IUserProfile, IResultStatus, IInfo, IRecordSet, IResponse, DirectAccessSubmitResult, UIComponentRef } from '../objects/common';\nimport { AlertService } from '../../alert/alert.service';\n\nimport { environment } from '../../../environments/environment';\nimport * as _ from 'lodash';\n\n@Injectable()\nexport class WCFService {\n    private _headers = {headers: null};\n    userProfile: IUserProfile;\n\n    static selValeCache: { [name: string]: IRecordSet } = {};\n\n    constructor( @Inject(HttpClient) private _http: HttpClient, @Inject(AlertService) private _alertService: AlertService) {\n    }\n\n    //setAuthorization - sets authorization header security credentials after user is verified   \n    public setAuthorization(authorizationHeader: string): void {\n        this._headers.headers = new HttpHeaders({\"Content-Type\": \"application/json\"});\n        // parse auth header \n        let ph = authorizationHeader.substr('Bearer '.length).split(';');\n        // Name;SessionID;UTCOffset\n        this.userProfile = <IUserProfile>{\n            Name: ph[0],\n            SessionID: { IsEncrypted: true, Value: ph[1] },\n            UTCOffset: ph[2]\n        };\n    }\n\n    public getSelectionValues(svc: string, field: string, force: boolean = false): Observable<IRecordSet> {\n\n        if (!force) {\n            // check the cache\n            let rs = WCFService.selValeCache[svc];\n            if (rs) {\n                let rs = WCFService.selValeCache[svc];\n                return new Observable<IRecordSet>((s) => { s.next(rs); s.complete(); });\n            }\n        }\n\n        var inf: IInfo = <IInfo>{\n            RequestSelectionValues: true,\n            RequestSelectionValuesInfo: {\n                Parameters: [\n                    { Name: 'NameFilter', Value: '%' },\n                    { Name: 'SpecificTypeOnly', Value: 0 },\n                    { Name: 'WorkspaceCode', Value: environment.workspace }\n                ]\n            }\n        };\n\n        var infoData = {};\n        infoData[(svc + \"_Info_\" + field)] = inf;\n\n        return this.getData(svc, \"GetEnvironment\", { Info: infoData })\n            .pipe( map((r: IResponse) => {\n                if( r ){\n                    let rs = <IRecordSet>(r.Environment[svc + \"_Environment_\" + field].SelectionValues);\n                    WCFService.selValeCache[svc] = rs;\n                    return rs;\n                }\n                else{\n                    return null;\n                }\n            }));\n    }\n\n    private getData(svc: string, operation: string, requestData: any): Observable<IResponse> {\n\n        let rqData = {\n            userProfile: this.userProfile,\n            request: requestData\n        };\n\n        return this._http.post<any>(this.getUrl(svc, operation), JSON.stringify(rqData), this._headers)\n            .pipe(map( resp => {\n                let status = <IResultStatus>resp[operation + \"Result\"];\n                if (status.IsSuccess) {\n                    return resp.result;\n                }\n                else {\n                    this.alertError(status);\n                    return null;\n                }\n            }));\n    }\n\n    public getElementRefs(cdo: string, type: string, force?: boolean): Observable<IUIComponentRef[]> {\n        return this.getSelectionValues(cdo, 'ObjectListInquiry', force)\n            .pipe(map((env: IRecordSet) => {\n                let refs = (env.Rows || []).map(r => UIComponentRef.fromSelectionValueRow(r.Values, env.Headers, type ) );\n                return refs;\n            }));\n    }\n\n    public getElement(name: string, svc: string): Observable<any> {\n        if (!name) {\n            // create new empty object\n            let cdoType = this.getCDOTypeName(svc);\n            let cdoName =  cdoType == \"ActionDef\"? \"PageAction\" : cdoType;\n            name = cdoName + '-' + new Date().getMilliseconds().toString(); // new name\n            let res = { __type: this.getCDOTypeName(svc) + \"Changes\" };\n            res[cdoType + \"Changes_Name\"] = name;\n\n            return new Observable<any>(subscriber => subscriber.next(res));\n        }\n\n        return this.loadNDOInstance(name, svc)\n            .pipe(map((ndo: any) => ndo));\n    }\n\n    public loadNDOInstance(name: string, svc: string): Observable<any> {\n        var infoData = {};\n        infoData[(svc + \"_Info_\" + \"ObjectChanges\")] = <IInfo>{\n            RequestValue: true\n        };\n\n        let rqData = {\n            userProfile: this.userProfile,\n            request: { Info: infoData }\n        };\n\n        let cdo = _.camelCase(svc);\n        rqData[cdo] = {};\n        let maint = rqData[cdo];\n        maint[svc + '_ObjectToChange'] = { 'Name': name };\n\n        let operation = \"Load\";\n\n        return this._http.post<any>(this.getUrl(svc, operation), JSON.stringify(rqData), this._headers)\n            .pipe(map((resp: any) => {\n                let status = <IResultStatus>resp[operation + \"Result\"];\n                if (status.IsSuccess) {\n                    return resp.result.Value[svc + '_ObjectChanges'];\n                }\n                else {\n                    this.alertError(status);\n                    return null;\n                }\n            }));\n    }\n\n    public saveNDOInstance(name: string, svc: string, changes: any): Observable<any> {\n\n        let isNew: boolean = changes.__new !== undefined;\n\n        let maint = {};\n        maint[svc + '_ObjectToChange'] = { 'Name': name };\n\n        let methods = [\n            {\n                ServiceMethod: 3,   // Load\n                Cdo: maint\n            },\n            {\n                ServiceMethod: 9,   // execute\n                Cdo: changes\n            }\n        ];\n\n        if (isNew) {\n            methods[0].ServiceMethod = 5;       // new\n            methods[0].Cdo = undefined;\n        }\n\n        let rqData = {\n            userProfile: this.userProfile,\n            methods: methods\n        };\n\n        let operation = \"CommitTransaction\";\n        return this._http.post<any>(this.getUrl(svc, operation), JSON.stringify(rqData), this._headers)\n            .pipe(map((response: any) => {\n                let status = <IResultStatus>response[operation + \"Result\"];\n                if (status.IsSuccess) {\n                    return status;\n                }\n                else {\n                    this.alertError(status);\n                    return null;\n                }\n            }));\n    }\n\n    public deleteMaint(name: string, svc: string): Observable<IResultStatus> {\n\n        let maint = {};\n        maint[svc + '_ObjectToChange'] = { 'Name': name };\n\n        let methods = [\n            { \n                ServiceMethod: 0,   // delete\n                Cdo: maint\n            },\n            {\n                ServiceMethod: 9   // execute\n            }\n        ];\n\n        let rqData = {\n            userProfile: this.userProfile,\n            methods: methods\n        };\n\n        return this._http.post<IResultStatus>(this.getUrl(svc, \"CommitTransaction\"), JSON.stringify(rqData), this._headers);\n    }\n\n    public directAccessSubmit(request: string, debugRequest?: any): Observable<DirectAccessSubmitResult> {\n        let rqData = {\n            userProfile: this.userProfile,\n            inputXml: request\n        };\n\n        if (debugRequest)\n            rqData.userProfile.DebugRequest = debugRequest;\n\n        let operation = \"Submit\";\n\n        return this._http.post<any>(this.getUrl(\"DirectAccess\", operation), JSON.stringify(rqData), this._headers)\n            .pipe(map((resp: any) => {\n                let status = <IResultStatus>resp[operation + \"SubmitResult\"];\n                return <DirectAccessSubmitResult>{ result: status, response: resp.outputXml };\n            }));\n    }\n\n    private getUrl(svc: string, operation: string): string {\n        return environment.wcfUrl + '/' + svc + 'Service.svc/web/' + operation;\n    }\n\n    private getCDOTypeName(svc: string): string {\n        let res = svc;\n        if (svc.endsWith(\"Maint\"))\n            res = svc.substr(0, svc.length - \"Maint\".length);\n\n        if (svc == \"ActionMaint\")\n            res = \"ActionDef\";\n\n        return res;\n    }\n\n    // private handleError(error: Response) {\n\n    //     let err;\n    //     if (_.isFunction(error.json))\n    //         err = error.json().error || 'Server error';\n    //     else\n    //         err = 'Server error';\n\n    //     this.alertError(status);\n\n    //     return Observable.throw(err);\n    // }\n\n    private alertError(status: any) {\n        this._alertService.error(status);\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'csi-app',\n    template: '<router-outlet></router-outlet>'\n})\n\nexport class AppComponent {}","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { LocalService } from '../common/services/local.service';\nimport { PortalService } from '../common/services/portal.service';\nimport { WCFService } from '../common/services/wcf.service';\n\nimport { AppComponent } from './app/app.component';\n\nimport { Routing } from './routing';\nimport { StudioStateService } from '../common/services/studioStateService';\n\nexport const COMPONENTS = [\n    AppComponent,\n]\n\n@NgModule({\n    imports: [\n        CommonModule,\n        HttpClientModule,\n        MatDialogModule,\n        BrowserAnimationsModule,\n        Routing,\n    ],\n    exports: [\n        COMPONENTS,\n    ],\n    declarations: COMPONENTS,\n    providers: [\n        LocalService,\n        PortalService,\n        StudioStateService,\n        WCFService\n    ]\n})\n\nexport class CoreModule {\n    constructor( @Optional() @SkipSelf() parentModule: CoreModule) {\n        if (parentModule) {\n            throw new Error(\n                'CoreModule is already loaded. Import it in the AppModule only');\n        }\n    }\n}\n\n","export * from './core.module';","import { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule, ExtraOptions } from '@angular/router';\r\n\r\nimport { StartComponent } from '../authorization/start.component';\r\nimport { StudioComponent } from '../studio/studio.component';\r\n\r\nconst initRoutes: Routes = [\r\n    { path: 'studio', component: StudioComponent },\r\n    { path: '', component: StartComponent, pathMatch: 'prefix' },\r\n    { path: '**', component: StartComponent}\r\n];\r\n\r\nconst appRoutes: Routes = [\r\n    ...initRoutes\r\n]\r\n\r\nexport const appRoutingProviders: any[] = [];\r\nexport const Routing: ModuleWithProviders<RouterModule> = RouterModule.forRoot(appRoutes, <ExtraOptions>{ enableTracing: false });\r\n","import { Component, Input, ChangeDetectionStrategy, HostBinding, OnInit } from '@angular/core'\nimport { IElement, StudioSubjects, IDesignControl } from '../../../common/objects/common';\nimport { ControlManager } from './controlManager';\n\n@Component({\n    selector: 'csi-control',\n    template: '<div></div>',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class ControlComponentBase implements OnInit, IDesignControl {\n    @Input(\"element\") __element: any;\n    @Input() subjects: StudioSubjects;\n    @HostBinding('class.csi-control-image') simpleControl: boolean = false;\n    @HostBinding('class.csi-control-LayoutContainer') layoutContainerControl: boolean = false;\n\n    controlManager: ControlManager;\n\n    get element(): IElement { return this.__element; }\n    set element(v: IElement) { this.__element = v; }\n    isReference:boolean;\n    get labelClass() : string {\n        return 'label-' + this._labelPositions[this.controlManager.getControlProperty(\"labelPosition\", 0)] + \n            ((this.controlManager.getControlProperty(\"required\") === true) ? \" field-required\" : \"\");\n    }\n\n    getLabelClass(defaultPosition: number){\n        return 'label-' + this._labelPositions[this.controlManager.getControlProperty(\"labelPosition\", defaultPosition)] + \n            ((this.controlManager.getControlProperty(\"required\") === true) ? \" field-required\" : \"\");\n    }\n\n    ngOnInit(): void {\n        this.controlManager = new ControlManager(this.element);\n        this.simpleControl = !this.isLayoutContainer(this.element);\n        this.layoutContainerControl = !this.simpleControl;             \n    }\n\n    isLayoutContainer(element: IElement): boolean {\n        return element.layout || element.typeName == \"JQTabContainer\";\n    }\n\n    private _labelPositions = [\"top\", \"bottom\", \"left\", \"right\", \"hidden\"];\n}\n\n","import { Component, ComponentRef, Input, ChangeDetectorRef, ChangeDetectionStrategy, ViewContainerRef, ViewChild, OnInit, OnDestroy } from '@angular/core'\nimport { ComponentFactoryResolver } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport {debounceTime, filter} from \"rxjs/operators\";\n\nimport { IElement, StudioSubjects, isContainerControl, RefreshInfo, IDesignControl, DesignModes } from '../../../common/objects/common';\nimport { ControlManager, ControlTab } from './controlManager';\nimport { ControlMappingService } from './controlMapping.service';\nimport { DesignComponent } from '../design.component';\nimport { StudioStateService } from '../../../common/services/studioStateService';\n\n@Component({\n    selector: 'csi-control-container',\n    templateUrl: 'controlContainer.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    entryComponents: [DesignComponent]\n})\n\nexport class ControlContainerComponent implements OnInit, OnDestroy {\n    @Input(\"element\") __element: any;\n    @Input() showCollapsed: boolean;\n    @Input() subjects: StudioSubjects;\n    @Input() isReference : boolean;\n\n    @ViewChild('controlHolder', { read: ViewContainerRef, static: true }) controlHolder: ViewContainerRef;\n\n    componentRef: ComponentRef<IDesignControl>;\n\n    public controlManager: ControlManager;\n    private refreshSubscription: Subscription;\n\n    get element(): IElement { return this.__element; }\n    set element(v: IElement) { this.__element = v; }\n\n    constructor(\n        private _cd: ChangeDetectorRef, \n        private _studioState: StudioStateService,\n        private _controlMappingService: ControlMappingService,\n        private _componentfactoryResolver: ComponentFactoryResolver) {\n    }\n\n    ngOnInit() {\n        this.controlManager = new ControlManager(this.element);\n        this.buildComponent();\n    }\n\n    ngOnDestroy() {\n        if (this.componentRef) {\n            if (this.refreshSubscription)\n                this.refreshSubscription.unsubscribe();\n            this.componentRef.destroy();\n        }\n    }\n\n    setActiveTab(tab : string|ControlTab) {\n        if (this.controlManager.setActiveTab(tab))\n            this.buildComponent();\n        else\n            this._studioState.selectItem(this.element);\n    }\n\n    private buildComponent() {\n\n        if (this.componentRef)\n            this.componentRef.destroy();\n\n        const componentType = this._controlMappingService.getControlComponent(this.element.typeName);\n        if( componentType ){\n            const componentFactory = this._componentfactoryResolver.resolveComponentFactory<IDesignControl>(componentType);\n            this.controlHolder.clear();\n    \n            this.componentRef = this.controlHolder.createComponent<IDesignControl>(componentFactory, 0);\n            this.componentRef.instance.element = this.controlManager.getControlModel();\n\n            //Load active tab for design elements\n            if (isContainerControl(this.element.typeName)) {\n                this.componentRef.instance.collapsible = true;\n                this.componentRef.instance.isCollapsed = this.showCollapsed;\n                this.componentRef.instance.isReference = this.isReference;\n            }\n\n            this.componentRef.instance.subjects = this.subjects;\n            this.refreshSubscription = this.subjects\n                .refresh.pipe(\n                    filter(r => r.element == this.componentRef.instance.element),\n                    debounceTime(700))\n                .subscribe(r => this.refreshComponent(r));\n            this._cd.markForCheck();\n        }\n        else{\n            console.error(\"The component \" + this.element.typeName + \" was not resolved\");\n        }\n    \n    }\n\n    activateControl(event: Event){\n        if( this._studioState.getRoot().__designMode == DesignModes.Controls ){\n            this._studioState.activateElement(this.element);\n            event.stopPropagation();\n        }\n    }\n\n    private refreshComponent(r: RefreshInfo) {\n        this._cd.markForCheck();\n    }\n}\n","<div (click)=\"activateControl($event)\" >    \n    <ng-template #controlHolder></ng-template>\n</div>\n","import { IElement, LayoutBuilder, uuid } from '../../../common/objects/common';\nimport _ from 'lodash';\n\nexport class ControlTab {\n    index: number;\n    name: string;\n    labelText: string;\n    labelName: string;\n    visible: boolean;\n    elementTabModel: IElement;\n    isActive: boolean;\n\n    constructor(tab: any, index: number) {\n        this.visible = tab.visible || tab.Visible;\n\n        this.labelText = tab.labelText || tab.LabelText;\n        this.labelName = tab.labelName || tab.LabelName;\n\n        this.elementTabModel = {\n            name : tab.name || tab.Name,\n            id : uuid.id('tab'),\n            layout: tab.layout || tab.Layout,\n            type: \"Control\",\n            typeName: '',\n            items: {}\n        };\n\n        this.name = this.elementTabModel.name;\n        this.index = tab.index !== undefined ? tab.index : tab.Index;\n    }\n\n    getTitle(): string {\n        return this.labelText || this.labelName || this.name;\n    }\n}\n\nexport class ControlManager {\n    elementModel: IElement;\n    elementType: string;\n    controlProperties: { [name: string]: any; };\n    tabs: ControlTab[];\n    activeTab: ControlTab;\n    hasTabs: boolean;\n\n    constructor(element: IElement) {\n        this.elementModel = element;\n        this.elementType = element.typeName;\n        this.controlProperties = element.properties || {};\n\n        this.setupTabs();\n    }\n\n    getControlModel(): IElement {\n        return this.elementModel;\n    }\n\n    getControlProperty(name: string, defaultValue?: any, intToArray?: boolean): any {\n        var propertyValue = this.controlProperties[name];\n        if (propertyValue === undefined) {\n            let valueFound = false;\n\n            // then try to find case insensitive property value.\n            let obj = this.controlProperties;\n            for (let propName of name.split('.')) {\n                valueFound = false;\n                if (obj) {\n                    for (let p of Object.getOwnPropertyNames(obj)) {\n                        if (p.toLowerCase() === propName.toLowerCase()) {\n                            obj = propertyValue = obj[p];\n                            valueFound = true;\n                            break;\n                        }\n                    }\n                    if (!valueFound)\n                        obj = propertyValue = null;\n                }\n                else\n                    break;\n            }\n\n            if (!valueFound) {\n                switch (name) {\n                case 'label':\n                    propertyValue = this.getControlProperty('labelText') || this.getControlProperty('labelName') || this.elementModel.name;\n                    break;\n                case 'id':\n                    propertyValue = this.elementModel.id;\n                    break;\n                case 'typeName':\n                    propertyValue = this.elementType;\n                    break;\n                case 'width':\n                    propertyValue = this.getControlProperty('controlWidth');\n                    break;\n                case 'height':\n                    propertyValue = this.getControlProperty('controlHeight');\n                    break;\n                case 'margin':\n                    propertyValue = this.getControlProperty('controlMargin');\n                    break;\n                }\n            }\n        }\n        if (intToArray) {\n            let intProp = propertyValue || defaultValue;\n\n            if (_.isNumber(intProp)){\n                let i = parseInt(intProp.toString());\n                propertyValue = new Array(i).fill(1);\n            }\n        }\n        if (propertyValue === false)\n            return false;\n\n        return propertyValue || defaultValue;\n    }\n\n    getControlStyle(...attrs: string[]): any {\n        let css = {};\n        if (!attrs.length)\n            attrs = [\"width\", \"height\", \"margin\"];\n\n        for (let attr of attrs) {\n            switch (attr) {\n            case \"width\":\n            case \"height\":\n                let val = this.getControlProperty(attr);\n                if (val && _.isNumber(val))\n                    css[attr + \".px\"] = val;\n                break;\n            case \"margin\":\n                let margin = this.getControlProperty(\"margin\");\n                if (margin) {\n                    // returned by property grid\n                    if (typeof margin === 'string') {\n                        let items = margin.split(\",\");\n                        if (items.length === 4) {\n                            margin = {};\n                            margin.left = _.isNumber(items[0]) ? items[0] : 0;\n                            margin.top = _.isNumber(items[1]) ? items[1] : 0;\n                            margin.right = _.isNumber(items[2]) ? items[2] : 0;\n                            margin.bottom = _.isNumber(items[3]) ? items[3] : 0;\n                        }\n                    }\n\n                    if (margin.top)\n                        css[\"margin-top.px\"] = margin.top;\n                    if (margin.right)\n                        css[\"margin-right.px\"] = margin.right;\n                    if (margin.bottom)\n                        css[\"margin-bottom.px\"] = margin.bottom;\n                    if (margin.left)\n                        css[\"margin-left.px\"] = margin.left;\n                }\n                break;\n            }\n        }\n        \n        return css;\n    }\n\n    // if active tab is the same returns false ( means: noChanged )\n    public setActiveTab(tabOrName: ControlTab | string): boolean {\n        let tab: ControlTab;\n        if (_.isString(tabOrName)) {\n            tab = this.tabs.find(t => t.name == <string>tabOrName);\n        }\n        else {\n            tab = <ControlTab>tabOrName;\n        }\n        if (tab) {\n            if (this.activeTab && this.activeTab == tab){\n                return false;\n            }\n            this.activeTab = tab;\n            // reset active flag\n            this.tabs.forEach(t => t.isActive = false);\n            this.activeTab.isActive = true;\n        }\n        else {\n            this.activeTab = tab;\n            this.tabs.forEach(t => t.isActive = false);\n        }\n\n        // save active flag in model\n        this.elementModel['__activeTab'] = this.activeTab.name;\n        return true;\n    }\n\n    public getActiveTabElement() {\n        return this.activeTab ? this.activeTab.elementTabModel : null;\n    }\n\n    public getControlClass(){\n        return \"csi-\" + this.elementType;\n    }\n\n    public static createNewControl(controlType: string, serverControlType: string): IElement {\n        let newName = uuid.id(controlType + \"-\");\n        return <IElement>{\n            id: uuid.id(),\n            name: newName,\n            type: 'Control',\n            typeName: controlType,\n            items: null,\n            layout: null,\n            properties: { 'name': newName },\n            isReference: false,\n            _fullTypeName: serverControlType\n        };\n    }\n\n    public static createEmptyWebpartModel(wpName: string, rows: number, cols: number): any {\n        let wpTypeName = \"WebPartDefinition\";\n        let codeBehind = \"Camstar.WebPortal.WebPortlets.MatrixWebPart\";\n        let emptyWp = {\n            _fullTypeName: codeBehind,\n            id: uuid.id(),\n            name: wpName,\n            isReference: false,\n            items: null,\n            layout: LayoutBuilder.getLayout(rows, cols),\n            properties: {\n                __type: wpTypeName,\n                isReference: false,\n                name: wpName,\n                typeName: codeBehind,\n                created: new Date().toISOString()\n            },\n            type: \"Webpart\",\n            typeName: wpTypeName\n        };\n        return emptyWp;\n    }\n\n    private setupTabs(): void {\n        this.tabs = this.getControlTabs();\n        this.hasTabs = (this.tabs && this.tabs.length > 0);\n    }\n\n    private getControlTabs(): ControlTab[] {\n        var retVal: ControlTab[] = [];\n        var tabDefinitions = this.getControlProperty(\"tabDefinitions\", null);\n        if (tabDefinitions) {\n            retVal = _.map(tabDefinitions, (t, i:number) => new ControlTab(t, i));\n            let firstVisibleIndex = tabDefinitions.findIndex(t => t.visible);\n            if (firstVisibleIndex != -1)\n                retVal[firstVisibleIndex].isActive = true;        \n        }\n        return retVal;\n    }\n\n\n}","import { Type, Injectable } from '@angular/core';\r\nimport { IDesignControl } from '../../../common/objects/common';\r\n//import {COMPONENT_DIRECTIVES as Cmp} from './control.components';\r\nimport { BooleanSwitchComponent } from './templates/BooleanSwitch.component';\r\nimport { BusinessObjectComponent } from './templates/businessObject.component';\r\nimport { ButtonComponent } from './templates/button.component';\r\nimport { JQTabContainer } from './templates/jqTabContainer.companent';\r\nimport { RibbonContainer } from './templates/ribbonContainer.companent';\r\nimport { SectionDropDown } from './templates/sectionDropDown.companent';\r\nimport { ToggleContainer } from './templates/toggleContainer.companent';\r\nimport { WebPartsWrapperControl } from './templates/webPartsWrapperControl.companent';\r\n\r\nimport { WorkflowNavigatorComponent } from './templates/workflowNavigator.componen';\r\nimport { CheckBoxComponent } from './templates/checkBox.component';\r\nimport { ColorPickerComponent } from './templates/colorPicker.component';\r\nimport { ContainerListComponent } from './templates/containerList.component';\r\nimport { ContainerListGridComponent } from './templates/containerListGrid.component';\r\nimport { CrystalReportComponent } from './templates/crystalReport.component';\r\nimport { DataCollectionComponent } from './templates/dataCollection.component';\r\nimport { DateChooserComponent } from './templates/dateChooser.component';\r\nimport { DropDownListComponent } from './templates/dropDownList.component';\r\nimport { DurationComponent } from './templates/duration.component';\r\nimport { FileInputComponent } from './templates/fileInput.component';\r\nimport { GenericComponent } from './templates/generic.component';\r\nimport { HTMLPanelComponent } from './templates/htmlPanel.component';\r\nimport { IframeComponent } from './templates/iframe.component';\r\nimport { ImageComponent } from './templates/image.component';\r\nimport { InquiryComponent } from './templates/inquiry.component';\r\nimport { InstructionTextComponent } from './templates/instructionText.component';\r\nimport { JQDataGridComponent } from './templates/jqDataGrid.component';\r\nimport { LabelComponent } from './templates/label.component';\r\nimport { LinkButtonComponent } from './templates/linkButton.component';\r\nimport { MultiSelectPickListComponent } from './templates/multiSelectPickList.component';\r\nimport { NamedObjectComponent } from './templates/namedObject.component';\r\nimport { PageTabComponent } from './templates/pageTab.component';\r\nimport { PIMetricComponent } from './templates/piMetric.componen';\r\nimport { PlmVisComponent } from './templates/plmVis.component';\r\nimport { RadioButtonComponent } from './templates/radioButton.component';\r\nimport { ReadOnlyComponent } from './templates/readOnly.component';\r\nimport { RevisionedObjectComponent } from './templates/revisionedObject.component';\r\nimport { ScaleControlComponentBase } from './templates/scaleControl.component';\r\nimport { ScrollableMenuComponent } from './templates/scrollableMenu.component';\r\nimport { SlideMenuComponent } from './templates/slideMenu.component';\r\nimport { StatusMessageComponent } from './templates/statusMessage.component';\r\nimport { TextBoxComponent } from './templates/textBox.component';\r\nimport { TextEditorComponent } from './templates/textEditor.component';\r\nimport { TitleComponent } from './templates/title.component';\r\n\r\n\r\n@Injectable()\r\nexport class ControlMappingService {\r\n\r\n    constructor(){}\r\n\r\n    public getControlComponent(typeName: string): Type<IDesignControl> {\r\n        switch (typeName) {\r\n            case 'BooleanSwitch':\r\n                return BooleanSwitchComponent;\r\n            case 'WebiReport':\r\n                return BusinessObjectComponent;\r\n            case 'Button':\r\n            case 'FlyoutDropDown':\r\n                return ButtonComponent;\r\n            case 'CheckBox':\r\n                return CheckBoxComponent;\r\n            case 'ColorPicker':\r\n                return ColorPickerComponent;\r\n            case 'ContainerList':\r\n                return ContainerListComponent;\r\n            case 'ContainerListGrid':\r\n                return ContainerListGridComponent;\r\n            case 'CrystalReport':\r\n                return CrystalReportComponent;\r\n            case 'DataCollection':\r\n            case 'ShopFloorDCControl':\r\n                return DataCollectionComponent;\r\n            case 'DateChooser':\r\n                return DateChooserComponent;\r\n\r\n            case 'JQTabContainer':\r\n                return JQTabContainer;\r\n\r\n            case 'RibbonContainer':\r\n                return RibbonContainer;\r\n            case 'SectionDropDown':\r\n            case 'SectionDropDownMobile':\r\n                return SectionDropDown;\r\n            case 'ToggleContainer':\r\n                return ToggleContainer;\r\n            case 'WebPartsWrapperControl':\r\n                return WebPartsWrapperControl;\r\n            case 'BooleanDropDown':\r\n            case 'DropDownList':\r\n            case 'DiscoveryAreaControl':\r\n                return DropDownListComponent;\r\n            case 'Duration':\r\n                return DurationComponent;\r\n            case 'FileInput':\r\n            case 'FileBrowse':\r\n                return FileInputComponent;\r\n            case 'ChartControl':\r\n            case 'Checklist':\r\n            case 'Generic':\r\n            case 'LastChangeInfo':\r\n            case 'ModelingObjectList':\r\n            case 'SPCChartControl':\r\n            case 'UserFields':\r\n            case 'ViewDocumentsControl':\r\n            case 'WebPartContainer':\r\n            case 'WorkflowViewerControl':\r\n            case 'IntelligenceReportObject':\r\n            case 'Breadcrumb':             \r\n                return GenericComponent;\r\n            case 'PlmVisWebControl':\r\n                return PlmVisComponent;\r\n            case 'IFrame':\r\n            case 'PagePanel':\r\n                return IframeComponent;\r\n            case 'ImageControl':\r\n                return ImageComponent;\r\n            case 'InquiryControl':\r\n                return InquiryComponent;\r\n            case 'InstructionText':\r\n                return InstructionTextComponent;\r\n            case 'JQDataGrid':\r\n                return JQDataGridComponent;\r\n            case 'Label':\r\n                return LabelComponent;\r\n            case 'LinkButton':\r\n                return LinkButtonComponent;\r\n            case 'MultiSelectPickList':\r\n                return MultiSelectPickListComponent;\r\n            case 'NamedObject':\r\n            case 'NamedSubentity':\r\n                return NamedObjectComponent;\r\n            case 'PageTabContainer':\r\n                return PageTabComponent;\r\n            case 'PIMetric':\r\n                return PIMetricComponent;\r\n            case 'RadioButton':\r\n            case 'RadioButtonList':\r\n                return RadioButtonComponent;\r\n            case 'ReadOnly':\r\n            case 'ReadOnlyDate':\r\n            case 'ReadOnlyEnum':\r\n                return ReadOnlyComponent;\r\n            case 'RevisionedObject':\r\n                return RevisionedObjectComponent;\r\n            case 'Scales':\r\n                return ScaleControlComponentBase;\r\n            case 'ScrollableMenu':\r\n                return ScrollableMenuComponent;\r\n            case 'SlideMenu':\r\n            case 'TaskListSlideMenu':\r\n                return SlideMenuComponent;\r\n            case 'StatusMessage':\r\n                return StatusMessageComponent;\r\n            case 'TextBox':\r\n                return TextBoxComponent;\r\n            case 'TextEditor':\r\n                return TextEditorComponent;\r\n            case 'TitleControl':\r\n                return TitleComponent;\r\n            case 'WorkflowNavigator':\r\n                return WorkflowNavigatorComponent;\r\n            case 'HTMLPanel':\r\n                return HTMLPanelComponent;\r\n            default:\r\n                return GenericComponent;\r\n        }\r\n    }\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './BooleanSwitchDesign.html', selector: 'csi-bs' })\r\nexport class BooleanSwitchComponent extends ControlComponentBase { }\r\n","<div [id]='controlManager.getControlProperty(\"id\")' class=\"csi-booleanSwitchDesign {{getLabelClass(2)}}\" [style]='controlManager.getControlStyle(\"margin\", \"height\")'>\n    <span class=\"control-label\">{{controlManager.getControlProperty(\"label\")}}</span>\n    <div class=\"csi-booleanSwitchDesign-button\" [style]='controlManager.getControlStyle(\"width\")'>\n        <div class=\"csi-booleanSwitchDesign-left\">\n            <span>{{controlManager.getControlProperty(\"noLabelText\", \"No\")}}</span>\n        </div>\n        <div class=\"csi-booleanSwitchDesign-right\">\n            <span>{{controlManager.getControlProperty(\"yesLabelText\", \"Yes\")}}</span>\n        </div>\n    </div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './BusinessObjectDesign.html', selector: 'csi-bo' })\r\nexport class BusinessObjectComponent extends ControlComponentBase { }","<div [id]='controlManager.getControlProperty(\"id\")' [ngStyle]='controlManager.getControlStyle()' class=\"csi-crystalReportDesign\">\n    <table class=\"csi-crystalReportDesign-content\">\n        <tr class=\"csi-crystalReportDesign-caption\">\n            <td>\n                <span class=\"csi-crystalReportDesign-caption-label\">{{controlManager.getControlProperty(\"label\")}}</span>\n            </td>\n        </tr>\n        <tr class=\"csi-crystalReportDesign-body\">\n            <td>\n                <span>Intelligence Object</span>\n            </td>\n        </tr>\n    </table>\n</div>\n","import { ControlComponentBase } from \"../controlBase.component\";\r\nimport { Component } from \"@angular/core\";\r\n\r\n@Component({ templateUrl: './ButtonDesign.html', selector: 'csi-bt' })\r\nexport class ButtonComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' [ngStyle]='controlManager.getControlStyle()' class=\"csi-buttonDesign\">\n    {{controlManager.getControlProperty(\"label\")}}\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './CheckBoxDesign.html', selector: 'csi-cb' })\r\nexport class CheckBoxComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' class=\"csi-checkboxDesign {{getLabelClass(2)}}\" [ngStyle]='controlManager.getControlStyle(\"margin\")'>\n    \n    <span class=\"control-label\">\n        {{controlManager?.getControlProperty(\"label\")}}\n    </span>    \n    <div class=\"csi-checkboxDesign-chk\"></div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './ColorPickerDesign.html', selector: 'csi-cp' })\r\nexport class ColorPickerComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' [ngStyle]='controlManager.getControlStyle(\"margin\", \"height\")'\n            [class]='labelClass'>\n    <span class=\"control-label\">\n        {{controlManager.getControlProperty(\"label\")}}\n    </span>\n    <div class=\"csi-textboxDesign\"\n         [attr.readonly]='controlManager.getControlProperty(\"readOnly\", \"false\")'\n         [ngStyle]='controlManager.getControlStyle(\"width\")'></div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './ContainerListDesign.html', selector: 'csi-cl' })\r\nexport class ContainerListComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")'\n     [ngStyle]='controlManager.getControlStyle(\"margin\", \"height\")' [class]=\"labelClass\">\n    <span class=\"control-label\">\n        {{controlManager?.getControlProperty(\"label\")}}\n    </span>   \n    <div>\n        <div class=\"csi-picklistDesign\" [ngStyle]='controlManager.getControlStyle(\"width\")'>\n            <div class=\"csi-picklistDesign-image\"></div>\n        </div>\n    </div>\n</div>","import { ControlComponentBase } from \"../controlBase.component\";\r\nimport { Component } from \"@angular/core\";\r\n\r\n@Component({ templateUrl: './ContainerListGridDesign.html', selector: 'csi-cg' })\r\nexport class ContainerListGridComponent extends ControlComponentBase {}   ","<div [id]='controlManager.getControlProperty(\"id\")'\n     [ngStyle]='controlManager.getControlStyle(\"margin\", \"height\")' [class]=\"labelClass\">\n    <span [attr.req]='controlManager.getControlProperty(\"required\")' class=\"control-label\">\n        {{controlManager?.getControlProperty(\"label\")}}\n    </span> \n    <div>\n        <div class=\"csi-picklistDesign\" [ngStyle]='controlManager.getControlStyle()' \n             [ngStyle]='controlManager.getControlStyle(\"width\")'>\n            <div class=\"csi-picklistDesign-image\"></div>\n        </div>\n    </div>\n</div>","import { ControlComponentBase } from \"../controlBase.component\";\r\nimport { Component } from \"@angular/core\";\r\n\r\n@Component({ templateUrl: './CrystalReportDesign.html', selector: 'csi-cr' })\r\nexport class CrystalReportComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' [ngStyle]='controlManager.getControlStyle()' class=\"csi-crystalReportDesign\">\n    <table class=\"csi-crystalReportDesign-content\">\n        <tr class=\"csi-crystalReportDesign-caption\">\n            <td>\n                <span class=\"csi-crystalReportDesign-caption-label\">{{controlManager?.getControlProperty(\"label\")}}</span>\n                <div class=\"csi-crystalReportDesign-caption-images\">\n                    <div class=\"csi-crystalReportDesign-left\"></div>\n                    <div class=\"csi-crystalReportDesign-right\"></div>\n                </div>\n            </td>\n        </tr>\n        <tr class=\"csi-crystalReportDesign-body\">\n            <td>\n                <span>Report</span>\n            </td>\n        </tr>\n    </table>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './DataCollectionDesign.html', selector: 'csi-dc' })\r\nexport class DataCollectionComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' class=\"csi-dataCollectionDesign\"\n     [ngStyle]='controlManager.getControlStyle()'>\n    <span class=\"csi-dataCollectionDesign-label\">{{controlManager.getControlProperty(\"label\")}}</span>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './DateChooserDesign.html', selector: 'csi-dd' })\r\nexport class DateChooserComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")'\n     [ngStyle]='controlManager.getControlStyle(\"margin\", \"height\")' [class]=\"labelClass\">\n    <span class=\"control-label\">\n        {{controlManager.getControlProperty(\"label\")}}\n    </span>\n    <div [ngStyle]='controlManager.getControlStyle(\"width\")'>\n        <div class=\"csi-dateChooserDesign\"></div>\n        <div class=\"csi-dateChooserDesign-button\"></div>\n    </div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './DropDownListDesign.html', selector: 'csi-dl' })\r\nexport class DropDownListComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")'\n     [ngStyle]='controlManager.getControlStyle(\"margin\", \"height\")' [class]=\"labelClass\">\n    <span class=\"control-label\">\n        {{controlManager.getControlProperty(\"label\")}}\n    </span>\n    <div class=\"csi-picklistDesign-container\">\n        <div class=\"csi-picklistDesign\" [ngStyle]='controlManager.getControlStyle(\"width\")'>\n            <div class=\"csi-picklistDesign-image\"></div>\n        </div>\n    </div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './DurationDesign.html', selector: 'csi-du' })\r\nexport class DurationComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")'\n     [ngStyle]='controlManager.getControlStyle(\"margin\", \"height\")' [class]=\"labelClass\">\n        <span class=\"control-label\">\n        {{controlManager.getControlProperty(\"label\")}}\n    </span>\n    <div class=\"csi-textboxDesign\" [ngStyle]='controlManager.getControlStyle(\"width\")' style=\"width: 120px\" [attr.readonly]='controlManager.getControlProperty(\"readOnly\", \"false\")'></div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './FileInputDesign.html', selector: 'csi-fi' })\r\nexport class FileInputComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")'\n     [ngStyle]='controlManager.getControlStyle(\"margin\", \"height\")' [class]=\"labelClass\">\n    <span class=\"control-label\">\n            {{controlManager.getControlProperty(\"label\")}}</span>\n    <div class=\"csi-textboxDesign\" [ngStyle]='controlManager.getControlStyle(\"width\")' [attr.readonly]='controlManager.getControlProperty(\"readOnly\", \"false\")'></div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './GenericDesign.html', selector: 'csi-gd' })\r\nexport class GenericComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' class=\"csi-genericDesignControl\" \n     [ngStyle]='controlManager.getControlStyle()'>\n    <div>\n        {{controlManager.getControlProperty(\"typeName\")}}\n    </div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './HTMLPanelDesign.html', selector: 'csi-hp' })\r\nexport class HTMLPanelComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' class=\"csi-htmlPanelControl\" \n     [ngStyle]='controlManager.getControlStyle(\"width\", \"height\")'>\n    <div class=\"name\">{{controlManager.getControlProperty(\"name\")}}</div>\n    <div *ngIf=\"controlManager.getControlProperty('TemplateFile'); else htmlText\" class=\"file\">\n       TemplateFile: {{controlManager.getControlProperty('TemplateFile')}}\n    </div>\n    <ng-template #htmlText>\n        <div *ngIf=\"controlManager.getControlProperty('HTMLText')\" class=\"text\">\n                <pre>{{controlManager.getControlProperty('HTMLText')}}</pre>\n        </div>\n    </ng-template>\n    \n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './IframeDesign.html', selector: 'csi-if' })\r\nexport class IframeComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' [ngStyle]='controlManager.getControlStyle(\"margin\")' [class]=\"labelClass\">\n    <span class=\"control-label\">\n        {{controlManager.getControlProperty(\"label\")}}\n    </span>\n    <div class=\"csi-iframeDesign\" [ngStyle]='controlManager.getControlStyle(\"width\", \"height\")'><span>{{controlManager.getControlProperty(\"url\", \"No URL\")}}</span></div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './ImageControlDesign.html', selector: 'csi-ic' })\r\nexport class ImageComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' [ngStyle]='controlManager.getControlStyle(\"margin\", \"height\")' [class]=\"labelClass\">\n    <span class=\"control-label\">\n        {{controlManager?.getControlProperty(\"label\")}}\n    </span>        \n    <div class=\"csi-imageDesign\"></div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './InquiryDesign.html', selector: 'csi-id' })\r\nexport class InquiryComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")'\n     [ngStyle]='controlManager.getControlStyle(\"margin\", \"height\")' [class]=\"labelClass\">\n    <span class=\"control-label\">\n        {{controlManager?.getControlProperty(\"label\")}}\n    </span>    \n    <div class=\"csi-textboxDesign\" [ngStyle]='controlManager.getControlStyle(\"width\")' [attr.readonly]='controlManager.getControlProperty(\"readOnly\", \"false\")'></div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './InstructionTextDesign.html', selector: 'csi-it' })\r\nexport class InstructionTextComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")'\n     [ngStyle]='controlManager.getControlStyle(\"margin\")' [class]=\"labelClass\">\n    <span class=\"control-label\">\n        {{controlManager.getControlProperty(\"label\")}}\n    </span>\n    <div class=\"csi-instructionTextDesign\" [ngStyle]='controlManager.getControlStyle(\"width\", \"height\")'></div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './JQDataGridDesign.html', selector: 'csi-gr' })\r\nexport class JQDataGridComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' class=\"csi-gridDesign\"\n     [ngStyle]='controlManager.getControlStyle()'>\n    <div class=\"csi-gridDesign-caption\">\n        {{controlManager.getControlProperty(\"label\")}}\n    </div>\n    <table class=\"csi-gridDesign-table\">\n        <tr>\n            <th *ngFor=\"let col of controlManager.getControlProperty('settings.columns', [{name: 'Column1'}, {name: 'Column2'}, {name: 'Column3'}]); let i = index\"\n                [ngStyle]=\"{'width.px': col.width ? col.width : 150}\">\n                {{col.name}}\n            </th>\n            <th>&nbsp;</th>\n        </tr>\n\n        <tr *ngFor=\"let row of controlManager.getControlProperty('settings.visibleRows', 5, true); let i = index\" [ngClass]=\"{'csi-gridDesign-alternative': (i % 2 == 1)}\">\n            <td *ngFor=\"let j of controlManager.getControlProperty('settings.columns.length', 3, true)\">&nbsp;</td>\n            <td>&nbsp;</td>\n        </tr>\n    </table>\n    <div class=\"csi-gridDesign-paging\">\n        <div *ngIf=\"controlManager.getControlProperty('settings.navigator', 0) === 0 || controlManager.getControlProperty('settings.navigator', 0) === 1\"  class=\"csi-gridDesign-PagerIcon\"></div>\n        <div *ngIf=\"controlManager.getControlProperty('gridDataMode', 1) === 1\" class=\"csi-gridDesign-AddIcon\"></div>\n        <div *ngIf=\"controlManager.getControlProperty('gridDataMode', 1) === 1\" class=\"csi-gridDesign-EditIcon\"></div>\n        <div *ngIf=\"controlManager.getControlProperty('gridDataMode', 1) === 1\" class=\"csi-gridDesign-DeleteIcon\"></div>\n        <div *ngIf=\"controlManager.getControlProperty('settings.navigator', 0) !== 3\" class=\"csi-gridDesign-RefreshIcon\"></div>\n        <div *ngIf=\"controlManager.getControlProperty('settings.navigator', 0) !== 3\" class=\"csi-gridDesign-ExcelIcon\"></div>\n        <div *ngIf=\"controlManager.getControlProperty('settings.layout.sequenceColumn', null) !== null\" class=\"csi-gridDesign-DownIcon\"></div>\n        <div *ngIf=\"controlManager.getControlProperty('settings.layout.sequenceColumn', null) !== null\" class=\"csi-gridDesign-UpIcon\"></div>\n        <div *ngIf=\"controlManager.getControlProperty('settings.pager.displayTotalRecords', true)\" class=\"csi-gridDesign-ResultsText\">Results 0 - 0 of 0</div>\n    </div>\n</div>\n<!--<pre>{{ controlManager.elementModel.properties | json }}</pre>-->","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './CombinedControlDesign.html', selector: 'csi-tc'})\r\nexport class JQTabContainer extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' [ngStyle]='controlManager.getControlStyle(\"margin\")' \n        [class]=\"controlManager.getControlClass()\" >\n    <csi-design [element]='element' [isParentReference]=\"isReference\"></csi-design>\n</div>\n","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './LabelDesign.html', selector: 'csi-ld' })\r\nexport class LabelComponent extends ControlComponentBase { }","<div [id]='controlManager.getControlProperty(\"id\")'\n    [ngStyle]='controlManager.getControlStyle()' class=\"control-label\" >\n    {{controlManager.getControlProperty(\"label\")}}\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './LinkButtonDesign.html', selector: 'csi-lb' })\r\nexport class LinkButtonComponent extends ControlComponentBase { }","<div [id]='controlManager.getControlProperty(\"id\")' class=\"csi-linkButtonDesign\">\n    {{controlManager.getControlProperty(\"label\")}}\n</div>\n","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './MultiSelectPickListDesign.html', selector: 'csi-ms' })\r\nexport class MultiSelectPickListComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")'\n     [ngStyle]='controlManager.getControlStyle(\"margin\", \"height\")'  [class]=\"labelClass\">\n    <span class=\"control-label\">\n        {{controlManager.getControlProperty(\"label\")}}\n    </span>\n    <div class=\"csi-picklistDesign-container\">\n        <div class=\"csi-picklistDesign\" [ngStyle]='controlManager.getControlStyle(\"width\")'>\n            <div class=\"csi-picklistDesign-image\"></div>\n        </div>\n    </div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './NamedObjectDesign.html', selector: 'csi-no' })\r\nexport class NamedObjectComponent extends ControlComponentBase { }","<div [id]='controlManager.getControlProperty(\"id\")'\n     [ngStyle]='controlManager.getControlStyle(\"margin\", \"height\")' [class]=\"labelClass\">\n    <span class=\"control-label\">\n        {{controlManager.getControlProperty(\"label\")}}\n    </span>\n    <div class=\"csi-picklistDesign-container\">\n        <div class=\"csi-picklistDesign\" [ngStyle]='controlManager.getControlStyle(\"width\")'>\n            <div class=\"csi-picklistDesign-image\"></div>\n        </div>\n    </div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './PageTabDesign.html', selector: 'csi-pt' })\r\nexport class PageTabComponent extends ControlComponentBase { }","<div [id]='controlManager.getControlProperty(\"id\")' class=\"csi-pageTabDesign\"\n        [ngStyle]='controlManager.getControlStyle(\"width\", \"height\")'>\n    <div class=\"line\">\n        <div class=\"page-tab\">Page1</div>\n        <div class=\"page-tab page2\">Page2</div>\n        <div class=\"space\"> </div>\n    </div>\n    <div class=\"csi-contentContainer\"></div>\n</div>\n","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './PIMetricDesign.html', selector: 'csi-pi' })\r\nexport class PIMetricComponent extends ControlComponentBase { }","<div [id]='controlManager.getControlProperty(\"id\")' class=\"csi-piMetricDesign\">\n    {{controlManager.getControlProperty(\"piText\", \"PI Metric\")}}\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './PlmVisWebDesign.html', selector: 'csi-pl' })\r\nexport class PlmVisComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' class=\"csi-genericDesignControl\" \n     [ngStyle]='controlManager.getControlStyle()'>\n    <div>\n        3D Visualization\n    </div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './RadioButtonDesign.html', selector: 'csi-rb' })\r\nexport class RadioButtonComponent extends ControlComponentBase { }","<div [id]='controlManager.getControlProperty(\"id\")' class=\"csi-radioButtonDesign {{getLabelClass(2)}}\">\n    <span class=\"control-label\">\n        {{controlManager.getControlProperty(\"label\")}}\n    </span>    \n    <div class=\"csi-radioButtonDesign-btn\"></div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './ReadOnlyDesign.html', selector: 'csi-ro' })\r\nexport class ReadOnlyComponent extends ControlComponentBase { }","<div [id]='controlManager.getControlProperty(\"id\")' [ngStyle]='controlManager.getControlStyle(\"margin\", \"height\")' \n        [class]=\"labelClass\">\n    <span class=\"control-label\">\n        {{controlManager.getControlProperty(\"label\")}}\n    </span>\n    <div class=\"csi-textboxDesign\" [ngStyle]='controlManager.getControlStyle(\"width\")' readonly=\"readonly\"></div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './RevisionedObjectDesign.html', selector: 'csi-rv' })\r\nexport class RevisionedObjectComponent extends ControlComponentBase { }","<div [id]='controlManager.getControlProperty(\"id\")'\n     [ngStyle]='controlManager.getControlStyle(\"margin\", \"height\")' [class]='labelClass'>\n\n    <span class=\"control-label\">\n        {{controlManager.getControlProperty(\"label\")}}\n    </span>\n    <div class=\"csi-picklistDesign-container\">\n        <div class=\"csi-picklistDesign\" [ngStyle]='controlManager.getControlStyle(\"width\")'>\n            <div class=\"csi-picklistDesign-image\"></div>\n        </div>\n        <div style=\"position: relative\">\n            <div class=\"csi-picklistDesign-rev\"></div>\n            <div class=\"csi-picklistDesign-rev-chk\"></div>\n        </div>\n    </div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './CombinedControlDesign.html', selector: 'csi-rc' })\r\nexport class RibbonContainer extends ControlComponentBase {}","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './ScaleControlDesign.html', selector: 'csi-sc' })\r\nexport class ScaleControlComponentBase extends ControlComponentBase { }","<div [id]='controlManager.getControlProperty(\"id\")'>\n    <table class=\"csi-scaleDesign\">\n        <tr>\n            <td class=\"first\">\n                <div></div>\n            </td>\n            <td class=\"second\">\n                <div></div>\n            </td>\n            <td class=\"third\">\n                <div></div>\n            </td>\n            <td class=\"fourth\">\n                <div></div>\n            </td>\n        </tr>\n    </table>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './ScrollableMenuDesign.html', selector: 'csi-sm' })\r\nexport class ScrollableMenuComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' [class]=\"labelClass\"\n     [ngStyle]='controlManager.getControlStyle(\"margin\")'>\n    <span class=\"control-label\">\n        {{controlManager.getControlProperty(\"label\")}}\n    </span>\n    <div class=\"csi-iframeDesign\" [ngStyle]='controlManager.getControlStyle(\"width\", \"height\")'><span>{{controlManager.getControlProperty(\"url\", \"No URL\")}}</span></div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './CombinedControlDesign.html', selector: 'csi-sd' })\r\nexport class SectionDropDown extends ControlComponentBase {}","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './CombinedControlDesign.html', selector: 'csi-sdm' })\r\nexport class SectionDropDownMobile extends ControlComponentBase {}","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './SlideMenuDesign.html', selector: 'csi-sl' })\r\nexport class SlideMenuComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' [class]=\"labelClass\">\n    <span class=\"control-label\">\n        {{controlManager.getControlProperty(\"label\")}}\n    </span>\n    <div class=\"csi-slideMenuDesign\"></div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './StatusMessageDesign.html', selector: 'csi-sm' })\r\nexport class StatusMessageComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' class=\"csi-statusMessageDesign\">\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './TextBoxDesign.html', selector: 'csi-tb' })\r\nexport class TextBoxComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' [ngStyle]='controlManager.getControlStyle(\"margin\")'\n            [class]=\"labelClass\">\n    <span class=\"control-label\">\n        {{controlManager.getControlProperty(\"label\")}}\n    </span>\n    <div class=\"csi-textboxDesign\"\n         [attr.textMode]='controlManager.getControlProperty(\"textMode\", \"singleLine\")'\n         [ngStyle]='controlManager.getControlStyle(\"width\", \"height\")'\n         [attr.readonly]='controlManager.getControlProperty(\"readOnly\", \"false\")'>\n    </div>\n</div>\n<!--<pre>{{ controlManager.elementModel.properties | json }}</pre>-->","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './TextEditorDesign.html', selector: 'csi-tx' })\r\nexport class TextEditorComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' class=\"csi-textEditorDesign {{labelClass}}\" [ngStyle]='controlManager.getControlStyle()'>\n    <span class=\"control-label\">\n        {{controlManager.getControlProperty(\"label\")}}\n    </span>    \n    <div>\n        <table class=\"csi-textEditorDesign-table\">\n            <tr class=\"top\">\n                <td colspan=\"2\">\n                    <div class=\"topImg\"></div>\n                </td>\n                <td><div class=\"TopBkg\"></div></td>\n            </tr>\n            <tr class=\"mid\">\n                <td colspan=\"3\">\n                    <div></div>\n                </td>\n            </tr>\n            <tr class=\"bottom\">\n                <td>\n                    <div class=\"bottomImg\"></div>\n                </td>\n                <td colspan=\"2\">\n                    <div class=\"bottomBkg\"></div>\n                </td>\n            </tr>\n            <tr class=\"hiddenTr\">\n                <td class=\"first\">\n                    <div></div>\n                </td>\n                <td class=\"second\">\n                    <div></div>\n                </td>\n                <td>\n                    <div></div>\n                </td>\n            </tr>\n        </table>\n    </div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './TitleDesign.html', selector: 'csi-tt' })\r\nexport class TitleComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' class=\"csi-titleDesign\">\n    {{controlManager.getControlProperty(\"label\")}}\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './CombinedControlDesign.html', selector: 'csi-tg' })\r\nexport class ToggleContainer extends ControlComponentBase {}","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ template: `<div [style.border]=\"'solid red 1px'\">???? Unknown {{element.name}} ???</div>`, selector: 'csi-un' })\r\nexport class UnknownComponent extends ControlComponentBase {}","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './CombinedControlDesign.html', selector: 'csi-ww' })\r\nexport class WebPartsWrapperControl extends ControlComponentBase {}","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n\r\n\r\n\r\n@Component({ \r\n    templateUrl: 'WorkflowNavigatorDesign.html',\r\n    selector: 'csi-wn' })\r\n\r\n\r\nexport class WorkflowNavigatorComponent extends ControlComponentBase { }","<div [id]='controlManager.getControlProperty(\"id\")'\n     [ngStyle]='controlManager.getControlStyle(\"margin\", \"height\")' [class]=\"labelClass\">\n    <span class=\"control-label\">\n        {{controlManager.getControlProperty(\"label\")}}\n    </span>    \n    <div class=\"csi-picklistDesign-container\">\n        <div class=\"csi-picklistDesign\" [ngStyle]='controlManager.getControlStyle(\"width\")'>\n            <div class=\"csi-picklistDesign-image\"></div>\n        </div>\n        <div style=\"position: relative\">\n            <div class=\"csi-picklistDesign-rev\"></div>\n            <div class=\"csi-picklistDesign-rev-chk\"></div>\n        </div>\n    </div>\n</div>\n","import { Component, Input, OnChanges, OnDestroy, ChangeDetectionStrategy, ChangeDetectorRef, SimpleChanges} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport _ from 'lodash';\n\nimport { PortalService } from '../../common/services/portal.service';\nimport { LabelService } from '../../common/services/label.service';\nimport {\n    IElement, IUIDesigner, val, LayoutActions, IDesignControl, DesignModes, ICellItemRef, IResultStatus } from '../../common/objects/common';\nimport { LayoutManager } from './objects/layoutManager';\nimport { LayoutCell, ICell } from './objects/layoutCell';\nimport { ElementHistoryData, RecordCommand, HistoryObjectType } from '../../common/objects/historyLog';\nimport { ConfirmDialogComponent } from '../../shared/dialog/confirm.dialog.component';\nimport { Subscription, Observable, of, concat } from 'rxjs';\nimport { map } from \"rxjs/operators\";\nimport { StudioStateService } from '../../common/services/studioStateService';\nimport { MetadataService } from '../../common/services/metadata.service';\nimport { DragInfo } from '../../shared/drag';\nimport { DragService } from '../../shared/drag.service';\nimport { DropDataInfo } from '../../shared/directives/droppable.directive';\n\n@Component({\n  selector: 'csi-design-root',\n  templateUrl: './design-root.component.html',\n  styleUrls: ['./design.component.less','./design-root.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DesignRootComponent implements OnChanges, OnDestroy, IDesignControl{\n    @Input(\"root\") __root : IUIDesigner; \n\n    root: IUIDesigner;\n    element: IUIDesigner;\n\n    DesignModesEnum = DesignModes;\n\n    webPartItems: IElement[];\n    oldMode: any;\n    get layoutManager(): LayoutManager {return this.root.__layoutManager; }\n    set layoutManager(lm: LayoutManager) {this.root.__layoutManager = lm; }\n    elementIconClass: string;\n    isNew: boolean = false;\n    displayCellPosition() : boolean {return this._studioService.displayCellPosition;}\n    xmlText : Observable<string>;\n    get layoutActions() : Observable<LayoutActions[]> {return this._studioService.subjects.layoutMenuUpdate;}\n\n    get headerTitle() {return this.root.properties.title || this.root.properties.name; };\n\n    get mode(): DesignModes { return this.root ? this.root.__designMode : DesignModes.Controls; }\n    set mode(m: DesignModes) { this.root.__designMode = m; }\n\n    get readonly() { return this.root.__workspace !== 0; }\n\n    private refreshRootSubscription: Subscription;\n    \n    private customWorkspaceColor: string;\n\n    private get xmlChanged() {return this.root.__xmlChanged === true;};\n    private set xmlChanged(x: boolean) { this.root.__xmlChanged = x;};\n\n    constructor(\n        private _labelService: LabelService,\n        private _portalService: PortalService,\n        private _studioService: StudioStateService,\n        private _cd: ChangeDetectorRef,\n        private _metadataService: MetadataService,\n        public _dialog: MatDialog,\n        private _drag : DragService\n    ) {\n        this.refreshRootSubscription = this._studioService.subjects.refreshRoot\n            .subscribe(() => {\n                this.designChanged();\n            });\n    }\n\n    getDropZoneOptions(cell: any) : DropDataInfo {\n        return <DropDataInfo>{\n            types: \"webpart-element,webpart-ref\",\n            id: cell.id,\n            disabled: this.readonly,\n            drop: (d: DragInfo) => {\n                let cellId = d.dropZoneElement.parentElement.id;\n                let cell: LayoutCell = this.layoutManager.findLayoutCellById(cellId);         \n                this.addElementToCell(cell, d);\n            }\n        };\n    }\n\n    ngOnChanges(ch : SimpleChanges): void {\n        if( ch.__root){\n            this.customWorkspaceColor = this._studioService.getCustomWorkspaceColor();\n            this._drag.clear([\"control-ref\",\"webpart-element\"], [\"control-toolbox\",\"control-ref\",\"control-field\",\"webpart-element\",\"webpart-ref\"]);\n            this.loadRefWebparts(ch.__root.currentValue);\n        }\n    }\n\n    ngOnDestroy(): void {\n        if (this.refreshRootSubscription)\n            this.refreshRootSubscription.unsubscribe();\n    }\n\n    private loadRefWebparts(croot : IUIDesigner) {\n        let con : Observable<IUIDesigner|IResultStatus>;\n        let count=0; \n\n        if( croot.__designMode != DesignModes.Xml){\n\n            this.getRefWebparts(croot).forEach(w=>{\n                let ps = this._portalService.getWebpartElement(w, \"Webpart\", \"\");\n                if(!con)\n                    con = ps;\n                else\n                    con = concat(con, this._portalService.getWebpartElement(w, \"Webpart\", \"\"));\n                count++;\n            });\n\n        }\n\n        if( con ){\n            con.subscribe(wp => {\n                let webpart = <IUIDesigner>wp;\n                if (webpart.name && webpart.typeName) {\n                    this._studioService.storeRefWebpart(webpart);\n                    this.addWebpartToItems(croot, webpart);\n                }\n                else {\n                    // error of loading webpart\n                    //this._alertservice.error(<IResultStatus>(<any>webpart));\n                }\n\n                count--;\n                if( count == 0 ){\n                    this.root = croot;\n                    this.initDesign();\n                    this.designChanged();\n                }\n            });\n        }\n        else{\n            this.root = croot;\n            this.initDesign();\n            this.designChanged();            \n        }\n    }\n\n    private addWebpartToItems(croot: IUIDesigner,  webpart : IElement) : IElement{\n        // replace it in items\n        let wpr = _.find( croot.items, it=> it.name == webpart.name);\n        if( wpr ){\n            croot.items[wpr.id] = _.cloneDeep(webpart);\n            wpr = croot.items[wpr.id];\n            wpr.isReference = true;\n            wpr.__loaded = true;\n        } \n        return wpr;\n    }\n\n    private getRefWebparts(d:IUIDesigner) : string[]{\n        let wps :string[] = [];\n        if( d.items ){\n            wps = _.filter(d.items, (i)=> i.isReference).map( i=> i.name);\n        }\n        return wps;\n    }\n\n    getItemControl(item:any) : any{\n        const r = item.value as ICellItemRef;\n        const  items = this.root.items;\n\n        const c = items && _.find(items, (it)=> r.name == it.name);\n        if( !c )\n            console.error(\"not found\", r);\n        return c;\n    }\n\n    modeChanged(mode:DesignModes) {               \n        if(this._studioService.elementInDesign && this._studioService.elementInDesign.__layoutManager)\n            this._studioService.elementInDesign.__layoutManager.clearSelection();\n            \n        this._studioService.elementInDesign = undefined;\n\n        if(mode == DesignModes.Design){\n            this.updateLayoutMenu();\n        }\n\n        if(this.mode != DesignModes.Xml){\n            if( this.xmlChanged ) {\n                this.applyXmlChanges().subscribe(isSuccess=>{\n                    this.xmlChanged = !isSuccess;\n                    this.root.__xml = null;\n                });\n                return;\n            }\n            this.root.__xml = null;\n        }        \n\n        this._studioService.activateElement(this.root);\n        this._studioService.refreshRoot(mode);\n    }\n\n    activateElement(selected: IElement, s:string = \"un\"): void {\n        if (selected) \n            if (this.mode != DesignModes.Controls) \n                return;            \n        \n        this._studioService.activateElement(selected);\n        if( selected.type == \"Webpart\" || selected.type == \"Page\"){\n            this.designChanged();\n        }\n    }\n\n    selectCell($event: Event, cell : LayoutCell) {\n        if (this.mode == DesignModes.Design) {\n            this._studioService.selectCell(cell);\n            if( $event )\n                $event.stopPropagation();\n        }            \n    }\n\n    public applyXmlChanges() : Observable<boolean> {\n        let rootElement = this._studioService.getRoot();\n\n        return this._portalService.applyXml(rootElement.name, rootElement.type, rootElement.__xml)\n            .pipe(map( element => {\n                if (element) {\n                    this._studioService.replaceElement(rootElement, element);\n                    element.isDirty = true;\n                    element.isRoot = true;\n                    element.__workspace = 0; // DEV\n                    element.__xml = null;\n                    this._studioService.refreshRoot();\n                    this._studioService.refreshTopMenu();\n                    return true;\n                }\n            },\n            (error : any) => {\n                let errorMessage = this._labelService.getLabel('PS_ERROR_IMPORTING_MESSAGE', \"Error occurred on importing new item\");\n                console.error(error, errorMessage);\n                //this.displayError(errorMessage);\n                return false;\n            }));\n    }\n\n    private updateLayoutMenu (cmds: LayoutActions[] = null){\n        this._studioService.updateLayoutMenu(cmds || this.layoutManager.selection.getEnabledCommands().cmdEnabled);\n    }\n\n    private addElementToCell(cell:LayoutCell,  di:DragInfo): void {\n\n        let dndItem : any = di.dragModel;\n\n        if (!cell)\n            return;\n\n        if (this.mode != DesignModes.Controls) {\n            // Reset active element if not a control mode\n            this.activateElement(null);\n            return;\n        }\n\n        // dropping enabled only in control mode\n        if (!dndItem) {\n            return;\n        }\n\n        if (_.isFunction(dndItem.addDragData)) {\n            dndItem.addDragData();\n            if (!dndItem.type)\n                return;\n        }\n        if (dndItem.id) {\n            // find where the item was\n            let fromElement = this._studioService.findElementOwner(this._studioService.activeRootElement, dndItem);\n            let fromCell = this._studioService.findCellByElement(dndItem);\n            if (this._studioService.moveElement(dndItem, cell)) {\n                this._studioService.getRoot().isDirty = true;\n\n                this.activateElement(dndItem);\n\n                // record into the history\n                let hr = new ElementHistoryData(HistoryObjectType.Control);\n                hr.cellId = cell.id;\n                hr.element = dndItem;\n                hr.fromCellId = fromCell.id;\n                this._studioService.writeHistory(RecordCommand.move, hr);\n\n                // Send refresh request if source is another element\n                if (fromElement != this.root)\n                    this._studioService.refreshRoot();\n            }\n            this.designChanged();\n        }\n        else {\n            this.addWebpartControl(dndItem, cell);\n        }\n        this._studioService.setDirty();\n    }\n\n    sliderValueChanged(newScaleVal:number) {\n        if( this.mode == DesignModes.Xml){\n            this.root.__zoomXml = newScaleVal;\n        }\n\n        if (newScaleVal !== this.root.scaleValue) {\n            this.root.scaleValue = newScaleVal;\n        }\n    }\n\n     addWebpartControl(dndItem: any, cell: LayoutCell) {\n        if (!dndItem.isStatic) {\n            // virtual web part\n            let titleLabel = this._labelService.getLabel('PS_WEBPART_TITLE', 'Add Webpart');\n            let messageLabel = this._labelService.getLabel('PS_WEBPART_ADD', \"Do you want to add the web part as a local copy or a reference to its content?\");\n            let copyLabel = this._labelService.getLabel('PS_COPY', 'Copy ');\n            let referenceLabel = this._labelService.getLabel('PS_ACTION_REFERENCE', 'Reference');\n            let confirmContext = {\n                title: titleLabel,\n                message: messageLabel,\n                actions: [\n                    { action: 'copy', name: copyLabel, isPrimary: false },\n                    { action: 'reference', name: referenceLabel, isPrimary: false }]\n            };\n\n            let dialog = this._dialog.open(ConfirmDialogComponent, { disableClose: true });\n            dialog.componentInstance.initContext(confirmContext);\n            dialog.afterClosed().subscribe(res => {\n                if (res == \"cancel\") {\n                    return;\n                }\n                let isReference = (res == \"reference\");\n                let ws = this._metadataService.getWorkspaceCodeById(this._studioService.getRoot().__workspace);\n                this._portalService.getWebpartElement(dndItem.name, dndItem.type, ws)\n                    .subscribe(wp => {\n                        let webpart = <IUIDesigner>wp;\n                        webpart.properties.name = webpart.name;\n                        webpart.isReference = isReference;\n                        if( !webpart.isReference){\n                            // Remove some properties\n                            delete webpart.properties.componentName;\n                            delete webpart[\"devContentState\"];\n                            delete webpart[\"workspaceIndexes\"];\n                            delete webpart[\"isNew\"];\n                            delete webpart[\"isDirty\"];\n                            delete webpart[\"componentRef\"];\n                            delete webpart[\"isViewable\"];\n                            delete webpart[\"isTestable\"];\n                        }\n                        if (this._studioService.addElement(webpart, cell)) {\n                            let hr = new ElementHistoryData(HistoryObjectType.Webpart);\n                            hr.cellId = cell.id;\n                            hr.element = webpart;\n                            this._studioService.writeHistory(RecordCommand.add, hr);\n                            this._studioService.setDirty();\n                            this._studioService.refreshRoot();\n                        }\n                    });\n            });\n        }\n        else {\n            let shortControlTypeName = _.last(dndItem.fullTypeName.split('.')) as string;\n            let nonVirtWP = <IElement>{\n                name: dndItem.name, type: 'Webpart', isStatic: true,\n                isLocked: false, hasPublishContent: false, isInDeveloping: false, isReference: false, owner: null,\n                properties: {\n                    __type: shortControlTypeName,\n                    name: dndItem.name,\n                    isReference: false,\n                    typeName: dndItem.fullTypeName\n                },\n                items: null,\n                _fullTypeName: dndItem.fullTypeName,\n                typeName: shortControlTypeName\n            };\n            if (this._studioService.addElement(nonVirtWP, cell)) {\n                this._studioService.setDirty();\n                this._studioService.refreshRoot();\n            }\n        }\n    }\n\n    xmlTextChanged(txt:string) {\n        if(this._studioService.getRoot().isDirty === true){\n            this.root.__xml = txt;\n        }\n        else{\n            if(this.root.__xml != txt ){\n                this._studioService.setDirty();\n                this.root.__xml = txt;\n                this.xmlChanged = true;\n            }\n        }\n    }\n\n    isCellSelected(cell: ICell) {\n        if( this.mode == DesignModes.Design)\n            return cell.isSelected === true;\n\n        return false;\n    }\n\n    getProperty(control: IElement, name: string){\n        if( control.properties )\n            return val(control.properties, name);\n        return null;\n    }\n\n    get showEditorArea() : boolean {\n        return this.mode != DesignModes.Xml && \n            this.mode != DesignModes.PersonalizationReport && this.mode != DesignModes.WhereUsed && !!this.layoutManager;\n    }\n\n    private initDesign(): void {\n        if (this.root.type == 'Page')\n            this.elementIconClass = 'fa fa-list-alt';\n        else if (this.root.type == 'Webpart')\n            this.elementIconClass = 'fa fa-puzzle-piece';\n        else\n            this.elementIconClass = 'hidden';\n\n        this.mode = this.root.__designMode;\n        this.isNew = this.root.isNew === true;        \n\n        if( !this.layoutManager )\n            this.layoutManager = new LayoutManager(this.root, this._studioService.getRoot().history);\n\n        this.layoutManager.clearSelection();\n        this._cd.detectChanges();\n    }\n\n    getWsColor(controlElement: IElement, cell: LayoutCell) {\n        if (this.customWorkspaceColor) {\n            if (controlElement.map) {\n                let boxStyle = 'inset 0 0 5px ';\n                _.forEach(controlElement.map, v => {\n                    boxStyle += this.customWorkspaceColor;\n                });\n                return boxStyle;\n            }\n\n            if (cell && cell.isStatic === false) {\n                return 'inset 0 0 5px ' + this.customWorkspaceColor;\n            }\n        }\n        return null;\n    }\n\n    private designChanged(): void {\n        this.layoutManager.refresh();\n\n        if( this.root.__designMode == DesignModes.Xml){\n            this.reloadXml();\n        }\n        \n        if(this.root.__selectedElement)\n            this._studioService.updatePropertyPanel(this.root.__selectedElement);\n\n        this._cd.markForCheck();\n    }\n\n    private reloadXml(){\n        if(this.root.__xml)\n            this.xmlText = of<string>(this.root.__xml);\n        else\n            this.xmlText = this._portalService.elementToXml(this.root, this._metadataService.getWorkspaceCodeById(this.root.__workspace));\n    }\n\n}\n\n","\n<div *ngIf=\"root\">\n    <csi-design-toolbar [designElement]=\"root\" [layoutActions]=\"layoutActions | async\" \n        (onModeChanged)=\"modeChanged($event)\" ></csi-design-toolbar>\n</div>\n\n<div [attr.mode]=\"mode\" class=\"rootDesign csi-layoutManager\">\n    <div *ngIf='root;else loading' class=\"csi-design-element\">\n        <div class=\"csi-titleContainer\">\n            <div class=\"csi-title\" (click)='activateElement(root, \"wp\")'>\n                <span class=\"csi-layoutComponentTitle\">\n                    <i [class]=\"elementIconClass\" aria-hidden=\"true\"></i>{{headerTitle}}\n                </span>\n            </div>\n        </div>        \n\n        <div *ngIf=\"root.type=='Page' && showEditorArea;else showWebPart\" class=\"editor-area csi-control-area in\">\n            <div class=\"layout-grid-container\" [style.zoom]=\"(root.scaleValue / 100)\">\n                <table *ngIf=\"layoutManager.matrix\" class=\"csi-layoutTable\" [attr.active-mode]=\"mode\">\n                    <tr *ngFor='let row of layoutManager.matrix' class=\"cs-editor-layout-row\">\n                        <td *ngFor='let cell of row | hiddenItemFilter: false' (click)='selectCell($event, cell)' class=\"csi-cell\"\n                            [class.selected]=\"isCellSelected(cell)\" cols [id]=\"cell.id\" [rowSpan]='cell.rowSpan' [colSpan]='cell.colSpan'>\n                            <div class=\"cell-item-container webpart-container\" [ngStyle]=\"cell.cellStyle\"\n                                     [csi-droppable]=\"getDropZoneOptions(cell)\">\n                                <ng-container *ngFor=\"let item of cell.items | keyvalue\">\n                                    <div *ngIf=\"getItemControl(item) as ctl\" class=\"csi-embeddedComponent\" [attr.ref-name]=\"ctl.name\"\n                                    [csi-draggable]=\"{disabled: mode!= DesignModesEnum.Controls || readonly, type: 'webpart-element', id:ctl.id, model: ctl, hndClass: 'csi-layoutComponentTitle'}\">\n                                        <!--Webpart-->\n                                        <csi-design [element]=\"ctl\"></csi-design>\n                                    </div>    \n                                </ng-container>\n                            </div>\n                        </td>\n                        <td class=\"csi-hiddencell v\">\n                            <div></div>\n                        </td>\n                    </tr>\n                    <!--add empty row to render table properly-->\n                    <tr *ngIf='layoutManager.matrix.length > 0'>\n                        <td *ngFor='let cell of layoutManager.matrix[0]' class=\"csi-hiddencell h\">\n                            <div></div>\n                        </td>\n                        <td class=\"csi-hiddencell h v\">\n                            <div></div>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n\n        <ng-template #showWebPart>\n            <csi-design [element]='root' [isRootWebpart]=\"true\" *ngIf=\"showEditorArea\"></csi-design>\n        </ng-template>\n\n        <div class=\"csi-editor-xml\" *ngIf=\"mode==DesignModesEnum.Xml\">\n            <xml-textEditor [xml]='xmlText' [zoom]=\"root.__zoomXml\" (onTextChanged)=\"xmlTextChanged($event)\"></xml-textEditor>\n        </div>\n\n        <div *ngIf=\"mode==DesignModesEnum.PersonalizationReport\" class=\"csi-editor-pers-rep\">\n            <csi-pers-report [element]=\"root\"></csi-pers-report>\n        </div>\n\n        <div *ngIf=\"mode==DesignModesEnum.WhereUsed\" class=\"csi-editor-where-used\">\n            <where-used-report [name]=\"root?.name\"></where-used-report>\n        </div>\n\n    </div>\n\n    <ng-template #loading>\n        <div>Loading ....</div>\n    </ng-template>\n</div>\n","import { Component, Input, OnChanges, OnDestroy, ChangeDetectionStrategy, ChangeDetectorRef, SimpleChanges} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport _ from 'lodash';\nimport { Subscription } from 'rxjs';\n\nimport { PortalService } from '../../common/services/portal.service';\nimport { AlertService } from '../../alert/alert.service';\nimport { LabelService } from '../../common/services/label.service';\nimport {\n    IElement, IUIDesigner, IResultStatus, StudioSubjects, IDesignControl, DesignModes, ICellItemRef, uuid } from '../../common/objects/common';\nimport { LayoutManager } from './objects/layoutManager';\nimport { LayoutCell, ICell } from './objects/layoutCell';\nimport { ControlManager } from './control/controlManager';\nimport { ElementHistoryData, RecordCommand, HistoryObjectType } from '../../common/objects/historyLog';\nimport { GridWizardComponent } from './gridWizard/gridWizard.component';\nimport { ConfirmDialogComponent } from '../../shared/dialog/confirm.dialog.component';\nimport { StudioStateService } from '../../common/services/studioStateService';\nimport { MetadataService } from '../../common/services/metadata.service';\nimport { DragInfo } from '../../shared/drag';\nimport { DropDataInfo } from '../../shared/directives/droppable.directive';\n\n@Component({\n    selector: 'csi-design',\n    templateUrl: 'design.component.html',\n    styleUrls: ['design.component.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class DesignComponent implements OnChanges, OnDestroy, IDesignControl {\n    @Input(\"element\") __element: IUIDesigner;\n    @Input() isRootWebpart: boolean = false;       // is root webpart\n    @Input() isParentReference: boolean = false;\n    copyEl:IElement;\n\n    get element(): IUIDesigner { return this.__element; }\n\n    DesignModesEnum = DesignModes;\n\n    collapsible: boolean = false;\n    designElement: IElement;\n   \n    get isCollapsed() {return this.designElement.__collapsed; }\n\n    get isReference() {return this.designElement.isReference; }\n\n    get layoutManager(): LayoutManager {return this.designElement.__layoutManager; }\n    set layoutManager(lm: LayoutManager) {this.designElement.__layoutManager = lm; }\n\n    elementIconClass: string;\n    designClass = \"csi-layoutManager\";\n    isTabbed = false;    \n    controlMgr: ControlManager;\n    nonVirtualWp = false;\n    displayCellPosition() : boolean {return this._studioService.displayCellPosition;}\n\n    get headerTitle() {return this.designElement && this.designElement.properties && (this.designElement.properties.title || this.designElement.properties.name); };\n\n    get root() : IUIDesigner {return this._studioService.getRoot();}\n\n    get mode(): DesignModes { return this.root.__designMode; }\n    get readonly() { return this.root.__workspace !== 0; }\n\n    get cellItemParams() : any{\n        var r = {\n            items: null,\n            type: null,\n            linked:this.isReference\n        }\n        if( this.designElement.type == \"Webpart\"){\n            // look for controls\n            r.type = \"control\";\n            r.items = this.designElement.items;\n        }\n        else if(this.designElement.type == \"Control\"){\n            // look for webparts\n            r.type = \"webpart\";\n            if(this.designElement.isReference )\n                r.items = null;\n            else\n                r.items = this.root.items;\n        }\n        return r;\n    }\n\n    private refreshSubscription: Subscription;\n    private selectSubscription: Subscription;\n    private isAlwaysCollapsed:boolean = false;\n    \n    private get studioSubjects(): StudioSubjects { return this._studioService.subjects; }\n\n     constructor(\n        private _labelService: LabelService,\n        private _portalService: PortalService,\n        private _studioService: StudioStateService,\n        private _cd: ChangeDetectorRef,\n        private _alertservice: AlertService,\n        private _metadataService: MetadataService,\n        public _dialog: MatDialog\n    ) {\n        this.refreshSubscription = this.studioSubjects.refresh.subscribe(\n            (el: any) => {\n                if( el == this.designElement ){ \n                    this.designChanged();\n                }\n        });\n    }\n\n    getDropZoneOptions(cell: any ) : DropDataInfo {\n        let dropTypes:string;\n        if (this.designElement.type == \"Control\")\n            dropTypes = \"webpart-element,webpart-ref\";\n        else if (this.designElement.type == \"Webpart\")\n            dropTypes = \"control-toolbox,control-ref,control-field\";\n        return <DropDataInfo>{\n            disabled: this.readonly,\n            types: dropTypes,\n            id: cell.id,\n            drop: (d: DragInfo) => {                \n                let cellId = d.dropZoneElement.parentElement.id;\n                let cell: LayoutCell = this.layoutManager ? this.layoutManager.findLayoutCellById(cellId) : null;  \n                this.addElementToCell(cell, d);\n            }\n        }\n    }\n\n    ngOnChanges(ch : SimpleChanges): void {\n        if( ch.__element){\n            this.designElement = ch.__element.currentValue;\n            this.initDesignComponent();\n        }\n    }\n\n    ngOnDestroy(): void {\n        if (this.refreshSubscription)\n            this.refreshSubscription.unsubscribe();\n\n        if (this.selectSubscription)\n            this.selectSubscription.unsubscribe();        \n    }\n\n    activateElement(e: Event, selected: IElement): void {\n        if (selected) \n            if (this.mode != DesignModes.Controls) \n                return;                    \n        this._studioService.activateElement(selected);\n        if( e )\n            e.stopPropagation();\n    }\n\n    reloadReference(): void {\n        this.getReferenceWebpartFromServer();\n    }\n\n    toggleCollapse(): void {\n\n        if( this.isAlwaysCollapsed)\n            this.designElement.__collapsed = true;\n        else\n            this.designElement.__collapsed = !this.designElement.__collapsed;\n        this.ping();\n    }\n\n    selectCell($event: Event, cell : LayoutCell) {        \n        if (this.mode == DesignModes.Design) {\n            this._studioService.selectCell(cell);\n            if( $event )\n                $event.stopPropagation();\n        }            \n    }\n\n    private addElementToCell(cell:LayoutCell,  di:DragInfo): void {\n        let dndItem : any = di.dragModel;\n\n        if (!cell)\n            return;\n\n        if (this.mode != DesignModes.Controls) {\n            // Reset active element if not a control mode\n            this.activateElement(null, null);\n            return;\n        }\n\n        // dropping enabled only in control mode\n        if (!dndItem) {\n            return;\n        }\n\n        if (_.isFunction(dndItem.addDragData)) {\n            dndItem.addDragData();\n            if (!dndItem.type)\n                return;\n        }\n\n        // dndItem is IElement that is moved\n        if (dndItem.id) {\n            // find where the item was\n            let fromElement = this._studioService.findElementOwner(this._studioService.activeRootElement, dndItem);\n            let fromCell = this._studioService.findCellByElement(dndItem);\n            if(  di.ctrlPressed ){\n                this.copyEl=_.cloneDeep<IElement>(dndItem);              \n                let copyName= uuid.id(this.copyEl.typeName + \"-\");\n\n                this.copyEl.id=uuid.id();\n                this.copyEl.name=copyName;       \n                if(this.copyEl.properties){\n                    this.copyEl.properties.name=copyName;\n                }               \n            }      \n                if (this._studioService.moveElement(dndItem, cell, fromCell,undefined,this.copyEl)) {\n                    this._studioService.getRoot().isDirty = true;\n                      this.activateElement(null,dndItem);\n     \n                    // record into the history\n                    if(di.ctrlPressed){\n                        this.activateElement(null,this.copyEl);\n                        this.recordElementToHistory(cell.id,this.copyEl,fromCell.id,RecordCommand.add);\n                        this.copyEl=undefined;\n                    }    \n                    else{\n                        this.recordElementToHistory(cell.id,dndItem,fromCell.id,RecordCommand.move);\n                    }     \n                    // Send refresh request if source is another element\n                    if (fromElement != this.designElement)\n                        this._studioService.refreshRoot();                \n                }        \n        }\n        else {\n            // Dragged control or webpart\n            this.addNewControl(dndItem, cell);\n        }\n        this.setDirty();\n        this._studioService.refreshElement(this.designElement);\n    }\n\n   private recordElementToHistory(cellId:string,item:any,fromCellId:string,command:number){\n        let hr = new ElementHistoryData(HistoryObjectType.Control);\n        hr.cellId = cellId;\n        hr.element = item;\n        hr.fromCellId = fromCellId;\n        this._studioService.writeHistory(command, hr);\n    }\n\n    sliderValueChanged($event) {\n        let newScaleVal: number = $event;\n\n        if( this.mode == DesignModes.Xml){\n            this.designElement.__zoomXml = newScaleVal;\n        }\n\n        if (newScaleVal !== (this.designElement as IUIDesigner).scaleValue) {\n            (this.designElement as IUIDesigner).scaleValue = newScaleVal;\n        }\n    }\n\n    private addNewControl(dndItem: any, cell: LayoutCell) {\n        if (dndItem.type == \"Webpart\") {\n            this.addWebpartControl(dndItem, cell);\n        }\n        else if (dndItem.type == \"JQDataGrid\" && dndItem.toolboxImage) {\n            this.addDataGridControl(dndItem, cell);     // added by dragging from a control toolbox\n        }\n        else {\n            let control = ControlManager.createNewControl(dndItem.type, dndItem.typeName);\n            if (_.isFunction(dndItem.controlInit)) {\n                let owner = this._studioService.findCellOwner(cell);\n                dndItem.controlInit(control, owner, this._portalService);\n            }\n            this.addControlToCell(control, cell);\n        }\n    }\n\n    private addWebpartControl(dndItem: any, cell: LayoutCell) {\n        if (!dndItem.isStatic) {\n            // virtual web part\n            let titleLabel = this._labelService.getLabel('PS_WEBPART_TITLE', 'Add Webpart');\n            let messageLabel = this._labelService.getLabel('PS_WEBPART_ADD', \"Do you want to add the web part as a local copy or a reference to its content?\");\n            let copyLabel = this._labelService.getLabel('PS_COPY', 'Copy ');\n            let referenceLabel = this._labelService.getLabel('PS_ACTION_REFERENCE', 'Reference');\n            let confirmContext = {\n                title: titleLabel,\n                message: messageLabel,\n                actions: [\n                    { action: 'copy', name: copyLabel, isPrimary: false },\n                    { action: 'reference', name: referenceLabel, isPrimary: false }]\n            };\n\n            let dialog = this._dialog.open(ConfirmDialogComponent, { disableClose: true });\n\n            dialog.componentInstance.initContext(confirmContext);\n            dialog.afterClosed().subscribe(res => {\n                if (res == \"cancel\") {\n                    return;\n                }\n                let isReference = (res == \"reference\");\n                let ws = this._metadataService.getWorkspaceCodeById(this._studioService.getRoot().__workspace);\n                this._portalService.getWebpartElement(dndItem.name, dndItem.type, ws)\n                    .subscribe(wp => {\n                        let webpart = <IUIDesigner>wp;\n                        webpart.properties.name = webpart.name;\n                        webpart.isReference = isReference;\n                        if(this._studioService.addElement(webpart, cell)) {\n                            this._studioService.refreshElement(this.designElement);\n                        }\n                    });\n            });\n        }\n        else {\n            let shortControlTypeName = _.last(dndItem.fullTypeName.split('.')) as string;\n            let nonVirtWP = <IElement>{\n                name: dndItem.name, type: 'Webpart', isStatic: true,\n                isLocked: false, hasPublishContent: false, isInDeveloping: false, isReference: false, owner: null,\n                properties: {\n                    __type: shortControlTypeName,\n                    name: dndItem.name,\n                    isReference: false,\n                    typeName: dndItem.fullTypeName\n                },\n                items: null,\n                _fullTypeName: dndItem.fullTypeName,\n                typeName: shortControlTypeName\n            };\n            if (this._studioService.addElement(nonVirtWP, cell)) {\n                this.designChanged();\n                this.setDirty();\n            }\n        }\n    }\n\n    private addDataGridControl(dndItem: any, cell: LayoutCell) {\n        let titleLabel = this._labelService.getLabel('PS_GRID_ADD_TITLE', 'Grid Control Creation');\n        let messageLabel = this._labelService.getLabel('PS_GRID_ADD_MSG', 'How do you want to create the DataGrid control?');\n        let wizardLabel = this._labelService.getLabel('PS_GRID_WIZARD', 'Grid Wizard');\n        let defaultLabel = this._labelService.getLabel('PS_GRID_ADD_DEFAULT', 'Create a Default Grid');\n        let newGrid = ControlManager.createNewControl(dndItem.type, dndItem.typeName);\n        let confirmContext = {\n            title: titleLabel,\n            message: messageLabel,\n            actions: [\n                { action: 'wizard', name: wizardLabel, isPrimary: false },\n                { action: 'default', name: defaultLabel, isPrimary: false }]\n        };\n\n        let dialog = this._dialog.open(ConfirmDialogComponent, { disableClose: true });\n\n        dialog.componentInstance.initContext(confirmContext);\n        dialog.afterClosed().subscribe(res => {\n            if (res == \"wizard\") {\n                let dialog = this._dialog.open(GridWizardComponent, { width: '930px', height: '500px', disableClose: true });\n                dialog.componentInstance.initializeNewGrid(newGrid, cell);\n                dialog.afterClosed().subscribe(grid => {\n                    this.addControlToCell(grid, cell);\n                });\n            }\n            else\n                this.addControlToCell(newGrid, cell);\n        });\n    }\n\n    getItemControl(item:any) : any{\n        const r = item.value as ICellItemRef;\n        let items = this.designElement.items;\n        if( this.designElement.type == \"Control\"){\n            if( this.designElement.isReference ){\n                const ownerWp = this._studioService.findElementOwner(this.root, this.designElement);\n                if( ownerWp )\n                    items = ownerWp.items; \n            }\n            else{\n                items = this.root.items;                \n            }\n        }\n\n        const c = items && _.find(items, (it)=> r.name == it.name);\n        if( !c ){\n            // console.error(\"not found\", r);\n        }\n        if( this.designElement.isReference)\n            c.isReference = true;\n        return c;\n    }\n\n    private addControlToCell(control: IElement, cell: LayoutCell): void {\n        if (control) {\n            let isSuccess = this._studioService.addElement(control, cell);\n            if (isSuccess) {\n                let hr = new ElementHistoryData(HistoryObjectType.Control);\n                hr.cellId = cell.id;\n                hr.element = control;\n                this._studioService.writeHistory(RecordCommand.add, hr);\n                this.activateElement(null,control);\n                this._studioService.refreshControl(control);\n            }\n        }\n    }\n\n    isControlSelected(ct: IElement) {\n        let sel = false;\n        if( this._studioService.activeElement && this._studioService.activeElement.id == ct.id )\n            sel = true;\n\n        return sel;\n    }\n\n    isCellSelected(cell: ICell) {\n        if( this.mode == DesignModes.Design)\n            return cell.isSelected === true;\n\n        return false;\n    }\n\n    get showEditorArea() : boolean {\n        return this.mode != DesignModes.Xml && \n            this.mode != DesignModes.PersonalizationReport && \n            this.layoutManager && !this.isCollapsed;\n    }\n\n    private initDesignComponent(): void {\n        let el : IElement = this.designElement;\n        if (el.type == \"Webpart\" && this.isReference) {\n            //reference webpart\n            this.setupReferenceWebpart();\n        }\n        else if(el.type == \"Webpart\" && this._metadataService.nonVirtualWebparts.indexOf(el.name)!=-1){\n            this.designElement = el;\n            this.designElement.isReference = false;\n            this.designElement.layout = null;\n            this.layoutManager = null;\n            this.nonVirtualWp = true;\n            this.isAlwaysCollapsed = true;\n        }\n        else {\n            // embedded webpart or combined control \n            this.setDesignElement(this.designElement);\n        }\n        if (this.isTabbed) {\n            this.controlMgr = new ControlManager(this.designElement);\n            this.setActiveTab(this.designElement['__activeTab'] || (this.controlMgr.tabs.length && this.controlMgr.tabs[0].name));\n        }\n    \n        if (this.designElement && !this.designElement.isReference) {\n            if (this.designElement.type) {\n                if (this.designElement.type == 'Page')\n                    this.elementIconClass = 'fa fa-list-alt';\n                else if (this.designElement.type == 'Webpart')\n                    this.elementIconClass = !this.nonVirtualWp ? 'fa fa-puzzle-piece' : 'fa fa-thumb-tack';\n                else\n                    this.elementIconClass = 'hidden';\n            }\n            if( this.layoutManager )\n                this.layoutManager.reset();\n            this.designChanged();\n        }\n    }\n\n    private setActiveTab(tabname: string): void {\n        if (this.controlMgr.setActiveTab(tabname)) {\n            let tabElement = this.controlMgr.getActiveTabElement();\n            if (tabElement)\n                this.layoutManager = new LayoutManager(tabElement, this._studioService.getRoot().history);\n            this.ping();\n        }\n    }\n\n    private ping(){\n        this._cd.detectChanges();\n    }\n\n    getWsColor(controlElement: IElement, cell: LayoutCell) : string {\n        let cl = \"\";\n        if( controlElement && controlElement.map ){\n            _.forEach(controlElement.map, (wsValue:any, propName:string) => {\n                _.forEach(wsValue, (wsVal, wsCode)=>{\n                    const ws = this._metadataService.workspaces.find(w=> w.Code == wsCode);\n                    if( ws ){\n                        cl += (\" workspace-\" + ws.ID);\n                    }\n                });\n            }); \n        }\n\n        if (this.root.__workspace != 0) {\n            if(controlElement && !controlElement.isStatic){\n            }\n\n            if (cell && cell.isStatic === false) {\n                cl += (\" workspace-\" + this.root.__workspace);\n            }\n        }\n        return cl;\n    }\n\n    private designChanged(): void {\n        if( this.layoutManager )\n            this.layoutManager.refresh();\n\n        if (this.designElement.type == \"Control\") {\n\n            if (this.isTabbed) {\n                let actTabName = this.controlMgr.activeTab ? this.controlMgr.activeTab.name : '';\n                let tabToSelect;\n                if (actTabName) {\n                    tabToSelect = this.controlMgr.tabs.find(t => t.name == actTabName);\n                    if (!tabToSelect && this.controlMgr.tabs.length > 0)\n                        tabToSelect = this.controlMgr.tabs[0];\n                }\n\n                if (tabToSelect)\n                    this.setActiveTab(tabToSelect);\n            }\n        }\n        if(this.root.__selectedElement)\n            this._studioService.updatePropertyPanel(this.root.__selectedElement);\n        this.ping();\n    }\n\n    private setupReferenceWebpart(): void {\n        //check if reference web part already exist in studioState\n        let existingWebpart = this._studioService.getRefWebpartsFromState(this.designElement.name);\n\n        if (existingWebpart){            \n            existingWebpart.isReference = true;\n            this.setDesignElement(existingWebpart, true);\n        }        \n        else\n            this.getReferenceWebpartFromServer();\n    }\n\n    private addWebpartToItems(webpart : IUIDesigner) : IUIDesigner{\n        // replace it in items\n        let wpr = _.find( this.root.items, it=> it.name == webpart.name);\n        if( wpr ){\n            this.root.items[wpr.id] = _.cloneDeep(webpart);\n            wpr = this.root.items[wpr.id];\n            wpr.isReference = true;\n        } \n        return wpr;\n    }\n\n    private getReferenceWebpartFromServer(): void {\n        //get webpart from server\n        this._portalService.getWebpartElement(this.designElement.name, this.designElement.type, this._metadataService.getWorkspaceCodeById(this._studioService.getRoot().__workspace))\n            .subscribe(wp => {\n                let webpart = <IUIDesigner>wp;\n                if (webpart.name && webpart.typeName) {\n                    this._studioService.storeRefWebpart(webpart);\n                    this.addWebpartToItems(webpart);\n                    this.setDesignElement(webpart, true);\n                }\n                else {\n                    // error of loading webpart\n                    this._alertservice.error(<IResultStatus>(<any>webpart));\n                }\n                this.ping();\n            });\n    }\n\n    private setDesignElement(element: IElement, isReference: boolean = false) {\n        this.designElement = element;\n        this.designElement.isReference = isReference;\n        this.layoutManager = this.layoutManager || new LayoutManager(element, this.root.history);\n        this.isTabbed = element.typeName == 'JQTabContainer';\n        this.isAlwaysCollapsed = this.designElement.type == \"Control\" && this.designElement.isReference;\n\n        if( typeof this.designElement.__collapsed == \"undefined\" )\n            this.designElement.__collapsed = this.isAlwaysCollapsed;\n               \n        this.collapsible = !this.isTabbed; // && !this.isReference;\n\n        let actCell = this._studioService.activeElement;\n        if (actCell && actCell.type == 'cell') {\n            let ow = this._studioService.findCellOwner(actCell);\n            if (ow && ow.id == this.designElement.id) {\n                // the cell was selected before refresh. It must be re-selected after layout creation\n                let lc = this.layoutManager.findLayoutCell(actCell);\n                if (lc)\n                    this.selectCell(null, lc);\n            }\n        }\n    }\n    private setDirty() {\n        this._studioService.setDirty();\n    }\n}\n","<div [attr.mode]=\"mode\" class=\"csi-layoutManager\" [class.root-webpart]=\"isRootWebpart\" [class.activeElement]=\"isControlSelected(designElement)\"\n    [class.csi-editor-disabled-area]=\"isReference||nonVirtualWp\"\n    [class.non-virtual]=\"nonVirtualWp\"\n    [class.webpart-hidden]=\"designElement.properties && this.designElement.properties.hidden\">    \n    <div *ngIf='designElement' class=\"csi-design-element\">       \n        <div *ngIf=\"!isRootWebpart\" class=\"csi-titleContainer\" [hidden]='mode==DesignModesEnum.View'>\n\n            <div class=\"csi-title\" (click)='activateElement($event, designElement)'>\n                <div *ngIf='collapsible' class=\"csi-layoutCollapse\">\n                    <span class=\"expander\" (click)='toggleCollapse()'>\n                        <i [class]=\"!isCollapsed && !isParentReference ? 'fa fa-minus' : 'fa fa-plus'\" aria-hidden=\"true\"></i>\n                    </span>\n                </div>\n                <span *ngIf=\"isReference\">\n                    <i class=\"fa fa-link\" aria-hidden=\"true\"></i>\n                </span>\n                <span class=\"csi-layoutComponentTitle\">\n                    <i [class]=\"elementIconClass\" aria-hidden=\"true\"></i>{{headerTitle}}\n                </span>\n            </div>\n        </div>\n\n        <div class=\"editor-area csi-control-area in\" *ngIf='showEditorArea' [id]=\"designElement.id + '_controlArea'\">\n            <div *ngIf=\"isTabbed\" class=\"tab-control\">\n                <ul class=\"nav nav-tabs\">\n                    <li *ngFor='let tab of controlMgr.tabs' role=\"presentation\" [class.active]=\"tab.isActive\" [attr.title]=\"tab.getTitle()\">\n                        <div (click)='setActiveTab(tab)'>\n                            <span>{{tab.getTitle()}}</span>\n                        </div>                        \n                    </li>\n                </ul>\n            </div>\n            <div class=\"layout-grid-container\" [style.zoom]=\"(designElement.scaleValue / 100)\" *ngIf=\"!isParentReference\">\n                <table *ngIf=\"layoutManager?.matrix\" class=\"csi-layoutTable\" [attr.active-mode]=\"mode\">\n                    <tr *ngFor='let row of layoutManager?.matrix' class=\"cs-editor-layout-row\">\n                        <td *ngFor='let cell of row | hiddenItemFilter: false' (click)='selectCell($event, cell)' class=\"csi-cell\" [class.selected]=\"isCellSelected(cell)\" [id]=\"cell.id\"\n                            [colSpan]='cell.colSpan' [rowSpan]='cell.rowSpan' [attr.section-index]=\"cell.sectionRowNumber % 2\" cols>\n                            <div class=\"cell-item-container\" [csi-droppable]=\"getDropZoneOptions(cell)\" [ngStyle]=\"cell.cellStyle\"> \n                                <ng-container *ngFor=\"let item of cell.items | keyvalue\">\n                                    <div *ngIf=\"getItemControl(item) as ctl\" class=\"csi-embeddedComponent {{getWsColor(ctl,cell)}}\" [attr.ref-name]=\"item.value?.name\"\n                                        [class.vertical]=\"designElement.type == 'Control'\" \n                                        [csi-draggable]=\"{disabled: (readonly || isReference || mode!=DesignModesEnum.Controls), type: ctl.type.toLowerCase()+'-ref', id: ctl.id, model: ctl}\">\n                                        <div *ngIf=\"designElement.type=='Webpart';else webpartsForControls\">                                        \n                                            <!--Controls-->\n                                            <div class=\"csi-controlEditor\" [class.activeElement]=\"isControlSelected(ctl)\">\n                                                <csi-control-container [element]=\"ctl\" [isReference]=\"ctl.isReference\" [subjects]=\"studioSubjects\" [showCollapsed]=\"isReference===true\"></csi-control-container>\n                                            </div>\n                                        </div>\n                                        <ng-template #webpartsForControls>                                            \n                                            <!--Webparts-->\n                                            <div *ngIf=\"!designElement.isReference\">\n                                                <csi-design [element]=\"ctl\"></csi-design>\n                                            </div>\n                                        </ng-template>\n                                    </div>\n                                </ng-container>\n                            </div>\n                        </td>\n                        <td class=\"csi-hiddencell v\">\n                            <div></div>\n                        </td>\n                    </tr>\n                    <!--add empty row to render table properly-->\n                    <tr *ngIf='layoutManager?.matrix.length > 0'>\n                        <td *ngFor='let cell of layoutManager?.matrix[0]' class=\"csi-hiddencell h\">\n                            <div></div>\n                        </td>\n                        <td class=\"csi-hiddencell h v\">\n                            <div></div>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<ng-template #notFound>\n    <div>Not found</div>\n</ng-template>\n","import { NgModule, Optional, SkipSelf, }       from '@angular/core';\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { ControlContainerComponent } from './control/controlContainer.component';\nimport { DesignComponent } from './design.component';\nimport { PageflowDesignComponent } from './designPageflow.component';\n\n//app misc\nimport { ComponentItemFilter } from './pipes/componentItemFilter';\nimport { GridWizardComponent } from './gridWizard/gridWizard.component';\nimport { GridWizardFilter } from './gridWizard/gridWizardFilter';\nimport { GridWizardService } from './gridWizard/gridWizard.service';\nimport { HiddenItemFilter } from './pipes/hiddenItemFilter';\nimport { PersonalizationReportComponent } from '../personalizationReport/personalizationReport.component';\nimport { XmlTextEditorComponent } from '../xml/xmlTextEditor.component';\nimport { AceEditorModule} from 'ng2-ace-editor';\nimport { ControlMappingService } from './control/controlMapping.service';\nimport { ControlComponentBase } from './control/controlBase.component';\n// import { COMPONENT_DIRECTIVES as cmp,\n\n// } from './control/control.components';\nimport { BooleanSwitchComponent  } from './control/templates/BooleanSwitch.component';\nimport { BusinessObjectComponent } from './control/templates/businessObject.component';\nimport { ButtonComponent } from './control/templates/button.component';\nimport { JQTabContainer } from './control/templates/jqTabContainer.companent';\nimport { RibbonContainer } from './control/templates/ribbonContainer.companent';\nimport { SectionDropDown } from './control/templates/sectionDropDown.companent';\nimport { SectionDropDownMobile } from './control/templates/sectionDropDownMobile.companent';\nimport { ToggleContainer } from './control/templates/toggleContainer.companent';\nimport { WebPartsWrapperControl } from './control/templates/webPartsWrapperControl.companent';\nimport { WorkflowNavigatorComponent } from './control/templates/workflowNavigator.componen';\nimport { CheckBoxComponent } from './control/templates/checkBox.component';\nimport { ColorPickerComponent } from './control/templates/colorPicker.component';\nimport { ContainerListComponent } from './control/templates/containerList.component';\nimport { ContainerListGridComponent } from './control/templates/containerListGrid.component';\nimport { CrystalReportComponent } from './control/templates/crystalReport.component';\nimport { DataCollectionComponent } from './control/templates/dataCollection.component';\nimport { DateChooserComponent } from './control/templates/dateChooser.component';\nimport { DropDownListComponent } from './control/templates/dropDownList.component';\nimport { DurationComponent } from './control/templates/duration.component';\nimport { FileInputComponent } from './control/templates/fileInput.component';\nimport { GenericComponent } from './control/templates/generic.component';\nimport { HTMLPanelComponent } from './control/templates/htmlPanel.component';\nimport { IframeComponent } from './control/templates/iframe.component';\nimport { ImageComponent } from './control/templates/image.component';\nimport { InquiryComponent } from './control/templates/inquiry.component';\nimport { InstructionTextComponent } from './control/templates/instructionText.component';\nimport { JQDataGridComponent } from './control/templates/jqDataGrid.component';\nimport { LabelComponent } from './control/templates/label.component';\nimport { LinkButtonComponent } from './control/templates/linkButton.component';\nimport { MultiSelectPickListComponent } from './control/templates/multiSelectPickList.component';\nimport { NamedObjectComponent } from './control/templates/namedObject.component';\nimport { PageTabComponent } from './control/templates/pageTab.component';\nimport { PIMetricComponent } from './control/templates/piMetric.componen';\nimport { PlmVisComponent } from './control/templates/plmVis.component';\nimport { RadioButtonComponent } from './control/templates/radioButton.component';\nimport { ReadOnlyComponent } from './control/templates/readOnly.component';\nimport { RevisionedObjectComponent } from './control/templates/revisionedObject.component';\nimport { ScaleControlComponentBase } from './control/templates/scaleControl.component';\nimport { ScrollableMenuComponent } from './control/templates/scrollableMenu.component';\nimport { SlideMenuComponent } from './control/templates/slideMenu.component';\nimport { StatusMessageComponent } from './control/templates/statusMessage.component';\nimport { TextBoxComponent } from './control/templates/textBox.component';\nimport { TextEditorComponent } from './control/templates/textEditor.component';\nimport { TitleComponent } from './control/templates/title.component';\nimport { UnknownComponent } from './control/templates/unknown.component';\n\nimport { DesignToolbarComponent } from './toolbar.component';\nimport { DesignRootComponent } from './design-root.component';\n import { WhereUsedReportComponent } from './whereUsed/whereUsed.component';\n@NgModule({\n    imports: [\n        SharedModule,\n        AceEditorModule,\n    ],\n    declarations: [\n        ComponentItemFilter,\n        ControlContainerComponent,\n        DesignComponent,\n        GridWizardComponent,\n        PageflowDesignComponent,        \n        PersonalizationReportComponent,\n        XmlTextEditorComponent,\n        HiddenItemFilter,\n        GridWizardFilter,\n        ControlComponentBase,\n        DesignToolbarComponent,\n        DesignRootComponent,\n        BusinessObjectComponent,\n        ButtonComponent,\n        JQTabContainer,\n        RibbonContainer,\n        SectionDropDown,\n        SectionDropDownMobile,\n        ToggleContainer,\n        WebPartsWrapperControl,\n        BooleanSwitchComponent,\n        WorkflowNavigatorComponent,\n        CheckBoxComponent, \n        ColorPickerComponent ,\n        ContainerListComponent ,\n        ContainerListGridComponent ,\n        CrystalReportComponent ,\n        DataCollectionComponent ,\n        DateChooserComponent ,\n        DropDownListComponent ,\n        DurationComponent ,\n        FileInputComponent ,\n        GenericComponent ,\n        HTMLPanelComponent ,\n        IframeComponent,\n        ImageComponent ,\n        InquiryComponent ,\n        InstructionTextComponent ,\n        JQDataGridComponent ,\n        LabelComponent ,\n        LinkButtonComponent ,\n        MultiSelectPickListComponent ,\n        NamedObjectComponent ,\n        PageTabComponent ,\n        PIMetricComponent ,\n        PlmVisComponent ,\n        RadioButtonComponent ,\n        ReadOnlyComponent ,\n        RevisionedObjectComponent ,\n        ScaleControlComponentBase ,\n        ScrollableMenuComponent ,\n        SlideMenuComponent ,\n        StatusMessageComponent ,\n        TextBoxComponent ,\n        TextEditorComponent ,\n        TitleComponent ,\n        UnknownComponent ,\n        WhereUsedReportComponent,\n    ],\n    exports: [\n        DesignComponent,\n        DesignRootComponent,\n        PageflowDesignComponent,\n    ],\n    entryComponents: [\n        GridWizardComponent,\n      // COMPONENT_DIRECTIVES   \n    ],\n    providers: [\n        GridWizardService,\n        ControlMappingService\n    ]\n})\nexport class DesignModule {\n    constructor( @Optional() @SkipSelf() parentModule: DesignModule) {\n        if (parentModule) {\n            throw new Error(\n                'DesignModule is already loaded. Import it in the LayoutModule only');\n        }\n    }\n}\n\n\n\n\n\n\n","import { Component, Input, OnInit, OnChanges, OnDestroy, ChangeDetectionStrategy, ElementRef, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs'; \n\nimport { StudioSubjects, IUIDesigner, PropertyUpdatedData, UpdatedInfo, uuid,} from '../../common/objects/common';\nimport {DragInfo } from '../../shared/drag';\nimport _ from 'lodash';\nimport { StudioStateService } from '../../common/services/studioStateService';\n\n@Component({\n    selector: 'csi-designPageflow',\n    templateUrl: 'designPageflow.component.html',\n    styles: [`\n        :host {\n            display: flex;\n            flex-direction: column;\n        }\n        textarea {\n            height: 100%;\n            width: 100%;\n            overflow: auto;\n        }\n    \n        svg {\n            width: 100%;\n            overflow: auto;\n        }\n    \n        .pageflowDesigner.allowDrop {\n            background-color: rgb(222, 239, 220);\n        }\n    \n        .pageflowDesigner > div.csi-selectable-item {\n            display: none;\n        }\n    `],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class PageflowDesignComponent implements OnInit, OnChanges, OnDestroy {\n    @Input(\"element\") __element: any;\n\n    @ViewChild(\"svgbox\", {static: false}) svgElement : ElementRef;\n    @ViewChild(\"gLines\", {static: false}) svgLinesContainer : ElementRef;\n    \n    get element(): IUIPageflowDesigner { return this.__element; }\n    set element(v: IUIPageflowDesigner) { this.__element = v; }\n\n    xmlns: string = \"http://www.w3.org/2000/svg\";\n    \n    constructor(private _studioStateService: StudioStateService, _el: ElementRef) {\n        this.valueUpdatedSubscription = this.studioSubjects.property.subscribe(vc => this.onPropertyChanged(vc));        \n    }\n\n    ngOnInit(): void {\n        // IE drop issue fix.\n        if( this.svgElement && this.svgElement.nativeElement)\n            if (!this.svgElement.nativeElement.parentElement)\n                this.svgElement.nativeElement.parentElement = this.svgElement.nativeElement.parentNode;\n    }\n\n    ngOnChanges(ch): void {\n        this.initDesignComponent(this.element);\n        this.tempLine = new PfPathUI();\n        this.tempLine.x1 = this.tempLine.x2 = this.tempLine.y1 = this.tempLine.y2 = 0;\n        this.tempLine[\"hidden\"] = true;\n    }\n\n    ngOnDestroy(): void {\n        this.valueUpdatedSubscription.unsubscribe();\n    }\n\n    private initDesignComponent(element: IUIPageflowDesigner) {\n        this.pages = [];\n        this.paths = [];\n        element.node = element.properties[\"node\"];\n        if (element) {\n            if (!element.node)\n                element.node = [];\n\n            let startPage = '';\n            _.forEach(element.node, e => {\n                    if (e.nodeType === PfNodeTypeEnum.Start) {\n                        if (e.transition && e.transition.length == 1)\n                            startPage = e.transition[0].targetNode;\n                    }\n                    else if (e.nodeType === PfNodeTypeEnum.Activity) {\n                        let p = new PfPageUI();\n                        p.name = e.key;\n                        var nodeCoord = this.getNodeCordinates(e);\n                        p.x = nodeCoord[0];\n                        p.y = nodeCoord[1];\n                        if (!e.location)\n                            e.location = p.x + \",\" + p.y;\n\n                        p.isStart = p.name === startPage;\n                        this.pages.push(p);\n                        if (e.transition) {\n                            _.forEach(e.transition, (trans) => {\n                                if (trans.targetNode !== this.finalNodeKey) {\n                                    let path = new PfPathUI();\n                                    path.from = e.key;\n                                    path.to = trans.targetNode;\n                                    path.x1 = p.x;\n                                    path.y1 = p.y + this.nodeHeight / 2;\n                                    let toLocation = this.calculatePathCoordinates(trans.targetNode);\n                                    path.x2 = toLocation[0];\n                                    path.y2 = toLocation[1];\n\n                                    this.paths.push(path);\n                                }\n                            });\n                        }\n                    }\n                }\n            );\n        }\n    }\n\n    nodeSelected(e, node: PfPageUI) {\n        if (!node.selected) {\n            this.clearSelection();\n            node.selected = true;\n\n            let selectedNodeObj = _.find(this.element.node, n => n.key === node.name);\n            if (selectedNodeObj) {\n                selectedNodeObj.location = node.x + \",\" + node.y;\n                selectedNodeObj.isStartPage = node.isStart;\n                selectedNodeObj.type = this.pfNodeType;\n                this._studioStateService.selectItem(selectedNodeObj);\n                this.selectedElement = node;\n            }\n        }\n        e.stopPropagation();\n    }\n\n    pathSelected(e, path: PfPathUI) {\n        if (!path.selected) {\n            this.clearSelection();\n            path.selected = true;\n\n            let nodeObj = _.find(this.element.node, (n) => n.key === path.from);\n            if (nodeObj && nodeObj.transition) {\n                let selectedTransObj = _.find(nodeObj.transition, (trans) => trans.targetNode === path.to);\n                if (selectedTransObj) {\n                    selectedTransObj.type = this.pfTransitionType;\n                    this._studioStateService.selectItem(selectedTransObj);\n                    this.selectedElement = path;\n                }\n            }\n        }\n        e.stopPropagation();\n    }\n\n    private getOffset() : any{\n        let r = this.svgElement.nativeElement.getBoundingClientRect();\n        return {top: r.top, left: r.left, ratioX: r.width / 1000, ratioY: r.height / 600}\n    }\n\n    addNewNode(dndItem: any, x: number, y: number): void {        \n\n        if (dndItem && dndItem.name) {\n            if (!_.some(this.pages, ['name', dndItem.name])) // no duplicate node allowed.\n            {\n                let pUI = new PfPageUI();\n                pUI.name = dndItem.name;\n                let off = this.getOffset();\n                pUI.x = (x - off.left) / off.ratioX;\n                pUI.y = (y - off.top) / off.ratioY;\n                pUI.isStart = false;\n\n                var newNodeObj = this.createNodeObj(pUI);\n                this.pages.push(pUI);\n                if (this.pages.length === 1)\n                    this.setStartPage(pUI);\n\n                this.element.node.push(newNodeObj);\n                this.setDirty();\n            }\n        }\n    }\n\n    addNewPath(from: PfPageUI, to: PfPageUI): void {\n        if (from !== to) {\n            if (!_.some(this.paths, (path) => { path.from === from.name && path.to === to.name })) // no duplicate paths allowed.\n            {\n                let path = new PfPathUI();\n                path.from = from.name;\n                path.to = to.name;\n                path.x1 = from.x;\n                path.y1 = from.y + this.nodeHeight / 2;\n                path.x2 = to.x;\n                path.y2 = to.y + this.nodeHeight / 2;\n                this.paths.push(path);\n\n                let nodeObj = _.find(this.element.node, (n) => n.key === from.name);\n                if (nodeObj) {\n                    if (!nodeObj.transition)\n                        nodeObj.transition = [];\n                    nodeObj.transition.push(this.createTransitionObj(path));\n                }\n                this.setDirty();\n            }\n        }\n    }\n\n    svgMouseMove(e): void {\n        if (this.capturedNode) {\n            let dx = e.pageX - this.start.x;\n            let dy = e.pageY - this.start.y;\n            if (this.isHeaderCaptured) {\n                this.moveNode(this.capturedNode, this.capturedNode.x + dx, this.capturedNode.y + dy);\n            }\n            else if (this.isBodyCaptured) {\n                this.tempLine.x2 += dx;\n                this.tempLine.y2 += dy;\n                this.insertPage();\n            }\n\n            this.start = {x:e.pageX, y:e.pageY};\n            e.stopPropagation();\n        }\n    }\n\n    svgMouseUp(e): void {\n        if (this.capturedNode) {\n            this.isBodyCaptured = this.isHeaderCaptured = false;\n            this.tempLine[\"hidden\"] = true;\n            this.skipSvgClick = true;\n\n            if (this.capturedNode.selected) {\n                let selectedNodeObj = _.find(this.element.node, n => n.key === this.capturedNode.name);\n                if (selectedNodeObj) {\n                    selectedNodeObj.location = this.capturedNode.x + \",\" + this.capturedNode.y;    \n                    this._studioStateService.selectItem(selectedNodeObj);\n                }\n            }\n            \n            this.capturedNode = null;\n            e.stopPropagation();\n        }\n        else\n            this.skipSvgClick = false;\n    }\n\n    svgClick(e): void {\n        if (!this.skipSvgClick) {\n            this.clearSelection();\n            this._studioStateService.selectItem(this.element);\n        }\n        else\n            this.skipSvgClick = false;\n    }\n    \n    svgKeyUp(e): void {\n        if ((e.key == \"Delete\" || e.key == \"Del\") && !(e.altKey || e.shiftKey || e.ctrlKey)) {\n            let selectedNode = _.find(this.pages, (p) => p.selected);\n            if (selectedNode)\n                this.deleteNode(selectedNode);\n            else {\n                let selectedPath = _.find(this.paths, (p) => p.selected);\n                if (selectedPath)\n                    this.deletePath(selectedPath);\n            }\n        }\n        e.stopPropagation();\n    }\n\n    nodeHeaderMouseDown(e, node: PfPageUI): void {\n        this.capturedNode = node;\n        this.start = {x:e.pageX, y:e.pageY};\n        this.isHeaderCaptured = true;\n        e.stopPropagation();\n    }\n\n    nodeBodyMouseDown(e, node: PfPageUI): void {\n        this.capturedNode = node;\n        this.start = {x:e.pageX, y:e.pageY};\n        \n        this.tempLine.x1 = node.x;\n        this.tempLine.y1 = node.y + this.nodeHeight / 2;\n\n        let off = this.getOffset();\n        this.tempLine.x2 = (this.start.x - off.left) / off.ratioX;\n        this.tempLine.y2 = (this.start.y - off.top) / off.ratioY;\n        this.tempLine[\"hidden\"] = false;\n        this.isBodyCaptured = true;\n\n        e.stopPropagation();\n    }\n\n    nodeBodyMouseUp(e, node: PfPageUI): void {\n        if (this.isBodyCaptured) {\n            this.addNewPath(this.capturedNode, node);\n        }\n        this.svgMouseUp(e);\n        e.stopPropagation();\n    }\n\n    private onPropertyChanged(vc: UpdatedInfo) {\n        if (this.selectedElement && vc.data) {\n            let data = <PropertyUpdatedData>vc.data;\n            if (data.path) {\n                if (data.path === \"IsStartPage\") {\n                    if (data.val)\n                        this.setStartPage(this.selectedElement);\n                    else\n                        (<PfPageUI>this.selectedElement).isStart = false;\n                }\n                else if (data.path === \"Location\") {\n                    if (data.val) {\n                        let coord = this.getLocationCoordinates(data.val);\n                        if (coord)\n                            this.moveNode(this.selectedElement, coord[0], coord[1]);\n                    }\n                }\n            }\n        }\n    }\n\n    private createNodeObj(node: PfPageUI): PfNode {\n        let p = new PfNode();\n        p.key = node.name;\n        p.transition = [];\n        p.nodeType = PfNodeTypeEnum.Activity;\n        p.isStartPage = false;\n        p.location = node.x + \",\" + node.y;\n        p[\"__type\"] = this.pfNodeType;\n        return p;\n    }\n\n    private createTransitionObj(path: PfPathUI): PfTransition {\n        let trans = new PfTransition();\n        if (path)\n            trans.targetNode = path.to;\n        trans[\"__type\"] = this.pfTransitionType;\n        return trans;\n    }\n\n    private moveNode(node: PfPageUI, x, y) {\n        if (node) {\n            node.x = x;\n            node.y = y;\n            var pageName = node.name;\n            _.forEach(this.paths, (path) => {\n                if (path.from === pageName) {\n                    path.x1 = node.x;\n                    path.y1 = node.y + this.nodeHeight / 2;\n                }\n                else if (path.to === pageName) {\n                    path.x2 = node.x;\n                    path.y2 = node.y + this.nodeHeight / 2;\n                }\n            });\n            this.insertPage();\n            this.setDirty();\n        }\n    }\n\n    private insertPage(){\n        // TODO: remove when IE 11 will not be supported.\n        this.svgElement.nativeElement.insertBefore(this.svgLinesContainer.nativeElement, this.svgLinesContainer.nativeElement);                    \n    }\n\n    private deleteNode(node: PfPageUI): void {\n        _.remove(this.pages, (n) => n === node);\n        _.remove(this.paths, (path) => (path.from === node.name) || (path.to === node.name));\n        _.remove(this.element.node, (n) => n.key === node.name);\n        _.forEach(this.element.node, (n) => {\n            if (n.transition)\n                _.remove(n.transition, (trans) => trans.targetNode === node.name);\n        });\n        if (this.pages.length === 1)\n            this.setStartPage(this.pages[0]);\n\n        this.clearSelection();\n        this._studioStateService.selectItem(this.element);\n        this.setDirty();\n    }\n\n    private deletePath(path: PfPathUI): void {\n        _.remove(this.paths, (p) => p === path);\n        _.forEach(this.element.node, (n) => {\n            if (n.key === path.from && n.transition)\n                _.remove(n.transition, (trans) => trans.targetNode === path.to);\n        });\n        this.clearSelection();\n        this._studioStateService.selectItem(this.element);\n        this.setDirty();\n    }\n\n    private calculatePathCoordinates(key: string): number[] {\n        var coord = [0, 0];\n        let node = _.find(this.element.node, (node) => node.key === key);\n        if (node) {\n            coord = this.getNodeCordinates(node);\n            coord[1] += this.nodeHeight / 2;\n        }\n        return coord;\n    }\n\n    private getLocationCoordinates(locationXY: string): number[] {\n        var coord = [NaN, NaN];\n        if (locationXY) {\n            var xy = locationXY.split(',');\n            if (xy.length === 2) {\n                coord[0] = parseFloat(xy[0]);\n                coord[1] = parseFloat(xy[1]);\n            }\n        }\n        if (coord[0] !== NaN && coord[1] !== NaN)\n            return coord;\n\n        return null;\n    }\n\n    private getNodeCordinates(node: PfNode) {\n        var coord = [0, 0];\n        if (node.location)\n            coord = this.getLocationCoordinates(node.location);\n        else {\n            let nodeLayout = _.find(this.element.nodeLayout, (layout) => layout.key === node.key);\n            if (nodeLayout)\n                coord = [nodeLayout.x, nodeLayout.y];\n        }\n        return coord;\n    }\n\n    private setStartPage(node: PfPageUI) {\n        if (!node.isStart) {\n            _.forEach(this.pages, p => { p.isStart = false; });\n            node.isStart = true;\n\n            let startNodeObj = this.getStartNodeObj();\n            if (!startNodeObj.transition || !startNodeObj.transition.length) {\n                startNodeObj.transition = [];\n                startNodeObj.transition.push(this.createTransitionObj(null));\n            }\n            startNodeObj.transition[0].targetNode = node.name;\n        }\n    }\n\n    private clearSelection(): void {\n        _.forEach(this.pages, p => { p.selected = false; });\n        _.forEach(this.paths, p => { p.selected = false; });\n        this.selectedElement = null;\n    }\n\n    private getStartNodeObj(): PfNode {\n        return _.find(this.element.node, (n) => n.nodeType === PfNodeTypeEnum.Start);\n    }\n\n    private setDirty() {\n        if (!this.element.isDirty) {\n            this.element.isDirty = true;\n            this.studioSubjects.menu.next();    // just refresh the action menu\n        }\n    }\n\n    onDrop(d: DragInfo, targetModel:any){\n        this.addNewNode(d.dragModel, d.x, d.y);\n    }\n\n    getDropOptions(){\n        return {\n            id: uuid.id(),\n            disabled: false,\n            types: \"page-ref\", \n            drop:  (d,tm)=> this.onDrop(d,tm),\n            over:  (d : DragInfo,m) => {}, \n            model: null\n        };\n    }\n\n    \n    private get studioSubjects(): StudioSubjects { return this._studioStateService.subjects; }\n    private valueUpdatedSubscription: Subscription;\n    pages: PfPageUI[];\n    paths: PfPathUI[];\n    private start: { x: number; y: number};\n    private isHeaderCaptured: boolean;\n    private isBodyCaptured: boolean;\n    tempLine: PfPathUI;\n    private skipSvgClick: boolean;\n    private capturedNode: PfPageUI;\n    private selectedElement: any;\n    private nodeHeight = 100;\n    private finalNodeKey = \"--final--\";\n    private pfNodeType = \"PageFlowNode\";\n    private pfTransitionType = \"PageTransition\";\n}\n\nenum PfNodeTypeEnum {\n    Activity = 0,\n    Start = 1,\n    Finish = 2\n}\n\nclass PfTransition {\n    targetNode: string;\n    ruleCondition: any;\n    name: string;\n    type: string;\n}\n\nclass PfNode {\n    key: string;\n    nodeType: PfNodeTypeEnum; \n    transition: PfTransition[];\n    location: string;\n    isStartPage: boolean;\n    type: string;\n}\n\nclass PfNodeLayout {\n    key: string;\n    x: number;\n    y: number;\n}\n\nclass PfPageUI {\n    width: number;\n    x: number;\n    y: number;\n    isStart: boolean;\n    selected: boolean;\n    name: string;\n}\n\nclass PfPathUI {\n    from: string;\n    to: string;\n    name: string;\n    x1: number;\n    y1: number;\n    x2: number;\n    y2: number;\n    selected: boolean;\n}\n\ninterface IUIPageflowDesigner extends IUIDesigner {\n    node: PfNode[];\n    nodeLayout: PfNodeLayout[];\n}\n","<div class=\"pageflowDesigner\" [attr.tabindex]=\"0\" (keyup)=\"svgKeyUp($event)\" [csi-droppable]=\"getDropOptions()\">\r\n    <svg #svgbox [attr.xmlns]=\"xmlns\" (mousemove)=\"svgMouseMove($event)\" (mouseup)=\"svgMouseUp($event)\" (click)=\"svgClick($event)\" viewBox=\"0 0 1000 600\">\r\n        <defs>\r\n            <marker id=\"triangle\" viewBox=\"0 0 10 10\" refX=\"20\" refY=\"5\" markerWidth=\"12\" markerHeight=\"12\" orient=\"auto\" markerUnits=\"userSpaceOnUse\">\r\n                <path d=\"M 0 0 L 10 5 L 0 10 z\"/>\r\n            </marker>\r\n            <marker id=\"triangle-tempLine\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"12\" markerHeight=\"12\" orient=\"auto\" markerUnits=\"userSpaceOnUse\">\r\n                <path d=\"M 0 0 L 10 5 L 0 10 z\" />\r\n            </marker>\r\n            <marker id=\"triangle-selected\" viewBox=\"0 0 10 10\" refX=\"20\" refY=\"5\" markerWidth=\"12\" markerHeight=\"12\" orient=\"auto\" markerUnits=\"userSpaceOnUse\">\r\n                <path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"selected\" />\r\n            </marker>\r\n            <marker id=\"circle\" refX=\"3\" refY=\"3\" markerWidth=\"9\" markerHeight=\"9\" orient=\"auto\">\r\n                <circle cx=\"3\" cy=\"3\" r=\"3\" />\r\n            </marker>\r\n        </defs>\r\n        <g class=\"lines\" #gLines>\r\n            <line *ngIf=\"!tempLine['hidden']\" class=\"tempLine\" [attr.x1]=\"tempLine.x1\" [attr.y1]=\"tempLine.y1\" [attr.x2]=\"tempLine.x2\" [attr.y2]=\"tempLine.y2\"></line>\r\n            <line *ngFor=\"let line of paths\" class=\"line\" (click)=\"pathSelected($event, line)\" [attr.selected]=\"line.selected\" [attr.x1]=\"line.x1\" [attr.y1]=\"line.y1\" [attr.x2]=\"line.x2\" [attr.y2]=\"line.y2\" [attr.from]=\"line.from\" />\r\n        </g>\r\n        <g class=\"nodes\">\r\n            <g *ngFor=\"let node of pages\" class=\"node\" (click)=\"nodeSelected($event, node)\" [attr.transform]=\"'translate(' + node.x + ',' + node.y +')'\">\r\n                <g class=\"node-top\" (mousedown)=\"nodeHeaderMouseDown($event, node)\">\r\n                    <rect x=\"0\" y=\"0\" width=\"200\" height=\"30\" [attr.isStart]=\"node.isStart\" [attr.selected]=\"node.selected\"></rect>\r\n                    <text class=\"title\" x=\"5\" y=\"5\" dy=\"1em\">{{node.name}}</text>\r\n                </g>\r\n                <rect class=\"node-bottom\" x=\"0\" y=\"25\" width=\"200\" height=\"70\" (mousedown)=\"nodeBodyMouseDown($event, node)\" (mouseup)=\"nodeBodyMouseUp($event, node)\"></rect>\r\n            </g>\r\n        </g>\r\n    </svg>    \r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, FormArray } from '@angular/forms';\n\nimport { Observable } from 'rxjs';\nimport { IElement, IWizardState } from '../../../common/objects/common';\nimport { GridColumnDefinition, IMetadataEnumValue, GridDataModes } from '../../../common/objects/viewModel';\n\nimport { LabelService } from '../../../common/services/label.service';\nimport { MetadataService } from '../../../common/services/metadata.service';\nimport { PortalService } from '../../../common/services/portal.service';\n\nimport { GridDataSource } from './gridWizard';\nimport { ConfirmDialogComponent } from '../../../shared/dialog/confirm.dialog.component';\nimport { FieldExpressionDialogComponent } from '../../../panel/properties/valueEditors/fieldExpressionDialog';\nimport { LabelSearchComponent } from '../../../panel/properties/valueEditors/labelSearch';\n\nimport * as _ from 'lodash';\nimport { StudioStateService } from '../../../common/services/studioStateService';\n\n@Component({\n    selector: 'csi-grid-wizard',\n    styleUrls : ['gridWizard.component.less'],\n    templateUrl: 'gridWizard.component.html'\n})\nexport class GridWizardComponent implements OnInit {\n    public state: IWizardState;\n    public cell: any;\n    public gridForm: FormGroup;\n    public gridDataMode: string;\n    public gridSourceType: string;\n    public errorMessage: string = \"\";\n    \n    searchText: string;\n    private enums: { [t: string]: IMetadataEnumValue[] } = {};\n    private get settings() { return this.state.element.properties.settings; }\n\n    constructor(\n        private fb: FormBuilder,\n        private _dialog: MatDialog,\n        private _dialogRef: MatDialogRef<GridWizardComponent>,\n        private _labelService: LabelService,\n        private _metadataService: MetadataService,\n        private _portalService: PortalService,\n        private _studioStateService: StudioStateService\n    ) { }\n\n    ngOnInit(): void {\n        this.gridDataMode = 'ItemList';\n        this.gridForm = this.fb.group({\n            gridDataMode: this.gridDataMode,\n            editingMode: 'Disabled',\n            fieldExpressions: null,\n            requestFieldExpressions: null,\n            actionButtons: this.fb.group({\n                enableAdd: this.fb.control({ value: false, disabled: true }),\n                enableEdit: this.fb.control({ value: false, disabled: true }),\n                enableDelete: this.fb.control({ value: false, disabled: true }),\n                enableRefresh: true,\n                enableExportData: true,\n                visibleAdd: this.fb.control({ value: false, disabled: true }),\n                visibleEdit: this.fb.control({ value: false, disabled: true }),\n                visibleDelete: this.fb.control({ value: false, disabled: true }),\n                visibleRefresh: true,\n                visibleExportData: true,\n            }),\n            query: this.fb.group({\n                type: 0,\n                searchText: '',\n                queryText: '',\n                definedQuery: '',\n            }),\n            queryList: [],\n            parameters: this.fb.array([]),\n            columns: this.fb.array([]),\n            mappings: this.fb.array([]),\n            name: this.state.element.name,\n            checkAllColumn: false,\n            selectedColumnType: 'JQFieldReadonly',\n            titleText: '',\n            titleLabel: '',\n            rowId: \"auto\",\n            selectionMode: 'singleRowSelect',\n            submitDataMode: \"Disabled\"           \n        });\n        //Column\n        const checkAllColumn = this.gridForm.get('checkAllColumn');\n        checkAllColumn.valueChanges.subscribe(value => {\n            let cols = this.gridForm.get('columns').value;            \n            cols.forEach(col => col.selected = value);\n            \n            this.gridForm.get('columns').setValue(cols);\n            this.gridForm.updateValueAndValidity();\n        });    \n\n        // Search Text\n        let queryGroup = this.gridForm.get('query');\n        queryGroup.get('searchText').valueChanges.subscribe(x => { \n            this.searchText = x;\n            this.clearQueryParameters();\n        });     \n    }\n\n    initializeNewGrid(grid: IElement, cell: any) {\n        this.state = new GridDataSource(grid);\n        this.cell = cell;\n    }\n\n    backStep() {\n        this.state = this.state.back(this.gridForm);\n    }\n    \n    nextStep() {\n        let valid = this.validate();\n        if (valid) {\n            this.state = this.state.next(this.gridForm);\n            this.initializeNextForm();\n        }\n    }\n\n    save() {\n        let gridName = this.gridForm.get('name').value;\n        if (gridName.length > 0) {\n            let isNameUnique = this._studioStateService.isControlNameUnique(this.cell, gridName);\n            if (!isNameUnique) {\n                let titleLabel = this._labelService.getLabel('PS_DUPLICATION_ERROR', 'Duplication Error');\n                let messageLabel = this._labelService.getLabelwithArguments('PS_CONTROL_EXISITS_WARNING', 'The control with name {0} already exists.  The grid control cannot be created.', [gridName]);\n                let okLabel = this._labelService.getLabel('PS_OK', 'Ok');\n                let confirmContext = {\n                    title: titleLabel,\n                    message: messageLabel,\n                    actions: [{ action: 'ok', name: okLabel, isPrimary: true }]\n                };\n\n                this.displayWarning(confirmContext);\n                return;\n            }\n        }\n\n        let grid = this.state.save(this.gridForm);\n        // add and fix properties\n        let s = grid.properties.settings;\n        grid.properties.gridDataMode = GridDataModes[<string>this.gridDataMode];\n        delete s.gridDataMode;\n        if (s.editorSettings)\n            s.editorSettings.editingMode = this.getEnumValue('JQEditingModes', s.editorSettings.editingMode);\n        if (s.selectionModeField) {\n            s.selectionMode = s.selectionModeField;\n            delete s.selectionModeField;\n        }\n\n        if (s.isRequiredOnSubmitField) {\n            s.isRequiredOnSubmit = s.isRequiredOnSubmitField;\n            delete s.isRequiredOnSubmitField;\n        }\n        if (s.allowDataNavigationField) {\n            s.allowDataNavigation = s.allowDataNavigationField;\n            delete s.allowDataNavigationField;\n        }\n\n        if (s.navigatorActions && !_.isEmpty(s.navigatorActions)) {\n            s.navigatorActions.forEach(n => {\n                n.__type = 'JQNavigatorAction';\n                n.Action = this.getEnumValue('JQGridNavActionType', n.Action);\n            });\n        }\n\n        this._dialogRef.close(grid);\n    }\n    cancel() {\n\n        //alert user of losing data\n        this._dialogRef.close();\n    }\n\n    private validate(): boolean {\n        let valid = true;\n        let validStatus = this.state.validate(this.gridForm);\n        if (validStatus) {\n            let titleLabel, messageLabel;\n            let okLabel = this._labelService.getLabel('PS_OK', 'Ok');\n            let cancelLabel = this._labelService.getLabel('PS_CANCEL', 'Cancel');\n            titleLabel = this._labelService.getLabel('PS_DATA_WARNING', \"Data Warning\");\n            switch (validStatus) {\n                case \"INCOMPLETEQUERYNAME\":\n                    messageLabel = this._labelService.getLabel('PS_QUERY_NAME_NOT_SPECIFIED', \"Query name is not specified.  Do you want to proceed to the next step?\");\n                    break;\n                case 'INCOMPLETEQUERYTEXT':\n                    messageLabel = this._labelService.getLabel('PS_QUERY_TEXT_NOT_SPECIFIED', \"Query text is not specified.  Do you want to proceed to the next step?\");\n                    break;\n                case 'QUERYTEXTEMPTY':\n                    messageLabel = this._labelService.getLabel('PS_QUERY_TEXT_NOT_SPECIFIED', \"Query text is Empty.  Define columns manually.\"); //Need to remove cancel action\n                    break;\n                case 'INCOMPLETEFIELDEXPRESSION':\n                    messageLabel = this._labelService.getLabel('PS_FIELD_EXPRESSION_NOT_SPECIFIED', \"Neither Field Expressons nor Request Field Expressions are specified.  Do you want to proceed to the next step?\");\n                    break;\n            }\n            let warningContext = {\n                title: titleLabel,\n                message: messageLabel,\n                actions: [\n                    { action: 'ok', name: okLabel, isPrimary: true },\n                    { action: 'cancel', name: cancelLabel, isPrimary: false }]\n            };\n\n            this.displayWarning(warningContext).subscribe(result => {\n                if (result == 'ok') {\n                    this.state = this.state.next(this.gridForm);\n                    this.initializeNextForm();\n                }\n            });\n            valid = false;\n        }\n        return valid;\n    }\n\n    private displayWarning(context: any): Observable<any> {\n        let dialog = this._dialog.open(ConfirmDialogComponent, { disableClose: true });\n        dialog.componentInstance.initContext(context);\n        return dialog.afterClosed();\n    }\n\n    private initializeNextForm(): void {\n        let state = this.state.constructor.name;\n        if (state == \"GridQuery\" && this.gridDataMode == \"PredefinedQuery\")\n            this.onQueryTypeChange();\n        if (state == \"GridColumnSetup\")\n            this.initColumnForm(this.gridDataMode);\n        if (state == \"GridRow\")\n            this.initRowForm(this.gridDataMode);\n        if (state == \"GridActionButton\")\n            this.initActionButtonForm(this.gridDataMode);\n    }\n    \n    //Grid Mode\n    gridModes: any =[\n        { value: 'ItemList', text: 'Item List', iconUrl:'Content/images/portalStudioIcons/gw_item_list.png', description: this._labelService.getLabel('PS_GRID_DATASOURCE_ITEMLIST', 'Supports any typed array as the data source. Can be bound to field expressions and employs regular value loading from the Camstar server. Item List grids can also work in an unbound mode, such as without field expressions. The ItemType must be defined and data loading and submitting should be implemented in the code when in an unbound mode. Paging within the Camstar server is not allowed.')},\n        { value: 'SubentityList', text: 'SubEntity List', iconUrl:'Content/images/portalStudioIcons/gw_sub_list.png', description: this._labelService.getLabel('PS_GRID_DATASOURCE_ITEMLIST', 'Inherits data from the Item List. Supports a particular bound mode for the item type derived from the SubEntity class.')},\n        { value: 'SelectionValues', text: 'Selection Values', iconUrl:'Content/images/portalStudioIcons/gw_selection_val.png', description: this._labelService.getLabel('PS_GRID_DATASOURCE_ITEMLIST', 'Works in a bound mode and loads data from the selection values request. Data built from selected rows can be submitted.')},\n        { value: 'PredefinedQuery', text: 'Predefined Query', iconUrl:'Content/images/portalStudioIcons/gw_predefined_query.png', description: this._labelService.getLabel('PS_GRID_DATASOURCE_ITEMLIST', 'References a System or User query. Predefined Query grids allow data submission to a field using field expressions.')},\n        { value: 'AdHocQuery', text: 'AdHoc Query', iconUrl:'Content/images/portalStudioIcons/gw_adhoc_query.png', description: this._labelService.getLabel('PS_GRID_DATASOURCE_ITEMLIST', 'Stores the custom query directly on the virtual page. AdHoc Query grids allow data submission to a field using field expressions.')}\n    ];\n    selectGridMode(mode: string): void {\n        this.gridDataMode = mode;\n        this.gridForm.get(\"gridDataMode\").setValue(mode);\n    }\n\n    //Edit Mode\n    editModes: any = [\n        { value: 'Disabled', text: 'Disabled', iconUrl: 'Content/images/portalStudioIcons/gw_disabled.png', description: this._labelService.getLabel('PS_GRID_EDITMODE_DISABLED_DESCRIPTION', 'Editing is not allowed.')},\n        { value: 'Inline', text: 'Inline', iconUrl: 'Content/images/portalStudioIcons/gw_inline.png', description: this._labelService.getLabel('PS_GRID_EDITMODE_INLINE_DESCRIPTION','Editing occurs directly in the row.')},\n        { value: 'FormControls', text: 'FormControls', iconUrl: 'Content/images/portalStudioIcons/gw_form_controls.png', description: this._labelService.getLabel('PS_GRID_EDITMODE_FORMCONTROLS_DESCRIPTION','The columns are bound to the editing controls.')},\n        { value: 'Popup', text: 'Popup', iconUrl: 'Content/images/portalStudioIcons/gw_popup.png', description: this._labelService.getLabel('PS_GRID_EDITMODE_POPUP_DESCRIPTION','Editing occurs in an external pop-up form.')},\n        { value: 'LitePopup', text: 'LitePopup', iconUrl: 'Content/images/portalStudioIcons/gw_lite_popup.png', description: this._labelService.getLabel('PS_GRID_EDITMODE_LITEPOPUP_DESCRIPTION','Editing occurs in a web part on the current page.')}\n    ];\n    selectGridSourceType(type: string): void {\n        this.gridSourceType = type;\n        this.gridForm.get(\"editingMode\").setValue(type);\n    }    \n\n    //Field Expression\n    openFieldExpressionDialog(formControlName: string): void {\n        //open dialog\n        let formControl = this.gridForm.get(formControlName);\n\n        let newdialog = this._dialog.open(FieldExpressionDialogComponent, { width: '450px', disableClose: true });\n        newdialog.componentInstance.initContext(formControl.value);\n        newdialog.afterClosed().subscribe(result => {\n            this.gridForm.get(formControlName).setValue(result);\n            this.gridForm.updateValueAndValidity();\n        });\n    }\n\n    //Action Button\n    initActionButtonForm(dataMode: string): void {\n        if (dataMode == 'ItemList' || dataMode == 'SubentityList') {\n            let editMode = this.gridForm.get('editingMode').value;\n            if (editMode != \"Disabled\") {\n                this.gridForm.get('actionButtons.enableAdd').enable();\n                this.gridForm.get('actionButtons.enableEdit').enable();\n                this.gridForm.get('actionButtons.enableDelete').enable();\n                this.gridForm.get('actionButtons.visibleAdd').enable();\n                this.gridForm.get('actionButtons.visibleEdit').enable();\n                this.gridForm.get('actionButtons.visibleDelete').enable();\n            }\n        }\n    }\n\n    //Query\n    get parameters(): FormArray {\n        return <FormArray>this.gridForm.get('parameters');\n    }\n\n    onQueryTypeChange(): void {\n        let qtype = this.gridForm.get('query.type').value;\n        this._portalService.getQueryData(qtype == 0 ? 'QueryList_System' : 'QueryList_User')\n            .subscribe(result => {                \n                this.gridForm.get('queryList').setValue(result);\n                this.clearQueryParameters();\n                this.gridForm.updateValueAndValidity();\n            });\n    }\n\n    onQuerySelect(query: any): void {\n        let queryList = this.gridForm.get('queryList').value;\n        queryList.forEach(qry => qry.selected = (query.Text == qry.Text));\n\n        this.state.back(this.gridForm);\n        this.gridForm.get('query.definedQuery').setValue(query.Text);\n        if (query.ParamCount > 0) {\n            let type = this.gridForm.get('query.type').value;\n            this._portalService.getQueryParameters(type, query.Text).subscribe(result => {\n                let parameters = <FormArray>this.gridForm.get('parameters');\n                result.forEach(param => {\n                    parameters.push(this.fb.group({\n                        name: param.Text,\n                        type: param.Description,\n                        value: ''\n                    }));\n                });\n                this.gridForm.updateValueAndValidity();\n            });\n        }\n        else {\n            //no parameter records to show\n        }\n    }\n\n    private clearQueryParameters(): void {\n        const parameters = <FormArray>this.gridForm.controls['parameters'];        \n        for (let i = parameters.length-1; i >= 0; i--) {\n            parameters.removeAt(i)\n        }\n    }\n\n    //Columns\n    public columnTypes: string[] =\n    [\"JQDropDownList\", \"JQDateChooser\", \"JQNamedObject\", \"JQNamedSubentity\", \"JQTextBox\", \"JQRevisionedObject\", \"JQFieldCheckBox\", \"JQFieldReadonly\"];\n    get columns(): FormArray {\n        return <FormArray>this.gridForm.get('columns');\n    }\n\n    initColumnForm(dataMode: string): void {\n        switch (dataMode) {\n            case 'ItemList':\n            case 'SubentityList':\n                this.loadColumnsFromFieldExpression();\n                break;\n            case 'SelectionValues':\n                this.loadColumnsFromSelectionValues();\n                break;\n            case 'AdHocQuery':\n            case 'PredefinedQuery':\n                this.loadColumnsFromQuery(dataMode);\n                break;\n        }\n    }\n    toggleColumnSelection(cb: any): void {\n        let columns = this.gridForm.get('columns').value;\n        columns.forEach(col => col.selected = cb.checked);\n        this.gridForm.updateValueAndValidity();\n    }\n\n    loadColumnsFromFieldExpression(): void {\n\n        let fieldExpression = this.settings.requestFieldExpressions || this.settings.fieldExpressions;\n\n        this._portalService.resolveGridColumns(this.addService(fieldExpression), false).subscribe(columns => {\n            if (_.isArray(columns))\n                this.loadColumns(columns, fieldExpression);\n            else {\n                // display error\n            }\n        });\n    }\n\n    loadColumnsFromSelectionValues(): void {\n        let fieldExpression = this.settings.selectionValuesExpressions || this.settings.fieldExpressions;\n\n        this._portalService.resolveGridColumns(this.addService(fieldExpression), true).subscribe(columns => {\n            if (_.isArray(columns))\n                this.loadColumns(columns, fieldExpression);\n            else {\n                // display error\n            }\n        });\n    }\n\n    loadColumnsFromQuery(dataMode: string): void {\n        let fieldExpression = this.state.element.properties.settings.selectionValuesExpressions;\n        let qtype = this.gridForm.get('query.type').value;\n        let parameters = this.gridForm.get('parameters').value;\n        let queryOptions = {\n            QueryType: qtype,\n            StartRow: 1,\n            RowSetSize: 1\n        };\n\n        let queryParameters = [];\n        parameters.forEach(param => queryParameters.push({ Name: param.name, Value: param.value }));\n\n        if (dataMode == \"AdHocQuery\") {\n            let queryText = this.gridForm.get('query.queryText').value;\n            if (queryText.indexOf('?') > 0) {\n                parameters.forEach(param => queryText.replace('?', param.value));\n            }\n            this._portalService.getAdHocQueryColumns(queryText, queryOptions).subscribe((columns : GridColumnDefinition[]) => {\n                this.loadColumns(columns, fieldExpression);\n            });\n        }\n        else {\n            let queryText = this.gridForm.get('query.definedQuery').value;\n            this._portalService.getQueryColumns(queryText, queryOptions, queryParameters).subscribe((columns:GridColumnDefinition[]) => {\n                this.loadColumns(columns, fieldExpression);\n            });\n        }\n    }\n\n    loadColumns(cols: GridColumnDefinition[], fieldExpression: string): void {\n        if (cols) {\n            let columns = <FormArray>this.gridForm.get('columns');\n            _.forEach(cols, c => columns.push(this.fb.group({\n                columnTypeIndex: '',\n                columnType: c.__type,\n                id: c.name,\n                editable: c.editable,\n                required: c.required,\n                width: c.width,\n                selected: false,\n                hidden: false,\n                labelName: c.labelName\n            })));\n            this.gridForm.updateValueAndValidity();\n        }\n    }\n\n    private addService(f: string): string {\n        if (f && f.startsWith('.')) {\n            let serviceType = this._studioStateService.getPrimaryService();\n            if (serviceType)\n                return serviceType + f;\n        }\n        return f;\n    }\n\n    onCreateColumn(): void {\n        let columns = <FormArray>this.gridForm.get('columns');\n        let columnType = this.gridForm.get('selectedColumnType').value;\n        columns.push(this.fb.group({\n            columnTypeIndex: '',\n            columnType: columnType,\n            id: 'Column',\n            editable: false,\n            required: false,\n            width: 200,\n            selected: false,\n            hidden: false,\n            labelName: ''\n        }));\n        columns.updateValueAndValidity();\n    }\n\n\n    onMoveColumn(id: string, direction: string): void {\n        let columns = <FormArray>this.gridForm.get('columns');\n        let columnsObj = columns.getRawValue();\n        let column, index;\n\n        for (let i = 0; i < columns.length && !index; i++) {\n            if (columnsObj[i].id == id) {\n                column = columns.controls[i];\n                index = i;\n            }\n        }\n        if (direction == \"up\") {\n            if (index == 0)\n                return;\n            let oldControl = columns.at(index-1);\n            columns.setControl(index-1,column);\n            columns.setControl(index,oldControl);\n            \n        }\n        if (direction == \"down\") {\n            if (index == columns.length)\n                return;\n            let oldControl = columns.at(index+1);\n            columns.setControl(index+1,column);\n            columns.setControl(index,oldControl);\n        }\n    }\n\n\n    //Row Setup\n    public displaySubmitDataMode;\n    public gridSelectionModes: any[] = [\n        { text: \"MultiRowSelect\", value: \"multiRowSelect\" },\n        { text: \"CheckBox\", value: \"checkBox\" },\n        { text: \"SingleRowSelect\", value: \"singleRowSelect\" },\n        { text: \"SingleRowSelectWithPostback\", value: \"singleRowSelectWithPostback\" },\n        { text: \"Disable\", value: \"disable\" }];\n    public rowColumns: any[];\n    public submitFields: any[];\n\n    get mappings(): FormArray {\n        return <FormArray>this.gridForm.get('mappings');\n    }\n\n    initRowForm(dataMode: string): void {\n        this.rowColumns = [{ text: \"--AUTO--\", value: \"auto\" }];\n        this.submitFields = [{ text: \"\", value: \"\" }];\n        let columns = this.gridForm.get('columns').value;\n        let mappings = <FormArray>this.gridForm.get('mappings');\n        columns.forEach(col => {\n            if (col.selected) {\n                this.rowColumns.push({ text: col.id, value: col.id });\n                mappings.push(this.fb.group({ columnName: col.id, submitField: '' }));\n            }\n        });\n        this.displaySubmitDataMode = (dataMode == \"SelectionValues\")\n    }\n\n    onChangeSubmitMode(): void {\n        //load submitFields\n        let fieldExpression = this.state.element.properties.settings.fieldExpressions;\n        if (fieldExpression) {\n            this._portalService.resolveGridColumns(fieldExpression, false).subscribe(columns => {\n                if (_.isArray(columns)) {\n                    _.forEach(columns, col => {\n                        let text = col.labelName;\n                        let colExp = col.name.substring(1, col.name.length).split(',');\n                        this.submitFields.push({ text: text, value: colExp[3] });\n                    });\n                }\n            });\n        }\n    }\n\n    openLabelSearch(): void {\n        let label = this.gridForm.get('titleLabel');\n        let context = {\n            value: label.value\n        }\n        let newDialog = this._dialog.open(LabelSearchComponent, { disableClose: true });\n        newDialog.componentInstance.initContext(context);\n        newDialog.afterClosed().subscribe(result => {\n            if (result)\n                label.value.setValue(result);\n        });\n    }\n\n    private getEnumValue(typeName, stringVal: string): number {\n        if (stringVal) {\n            if (!this.enums[typeName]) {\n                this.enums[typeName] = this._metadataService.getMetadataType(typeName).enumValues;\n            }\n            let nvPairs = this.enums[typeName];\n            stringVal = stringVal.toLowerCase();\n            let v = _.find(nvPairs, (e) => e.name.toLowerCase() == stringVal);\n            if (v)\n                return v.value;\n        }\n\n        return undefined;\n    }\n\n}","<div id=\"grid-wizard\" class=\"csi-modal\">\r\n    <header class=\"header\">\r\n        <span class=\"sub-title\">{{'Grid Wizard' | label: 'PS_GRID_WIZARD'}}</span>\r\n        <span class=\"close-icon\" (click)=\"cancel()\">\r\n            <i class=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n        </span>\r\n    </header>\r\n    <main>\r\n        <form novalidate (ngSubmit)=\"save()\" [formGroup]=\"gridForm\">\r\n            <section class=\"gw-dataMode\" *ngIf=\"state.constructor.name == 'GridDataSource'\">\r\n                <div class=\"description\">\r\n                    {{'Welcome to the Grid Wizard, with the help of this wizard you can create grids very quickly and easily. Select Data Grid\r\n                    Source Type and click \"Next\"' | label: 'PS_GRID_WIZARD_WELCOME'}}\r\n                </div>\r\n                <div class=\"source-type-list\">\r\n                    <span class=\"source-type\" *ngFor=\"let gmode of gridModes\" [ngClass]=\"{'active':gridDataMode == gmode.value}\" (click)=\"selectGridMode(gmode.value)\">\r\n                        <img [src]=\"gmode.iconUrl\" [alt]=\"gmode.text\">\r\n                        <span>{{gmode.description}}</span>\r\n                    </span>\r\n                </div>\r\n            </section>\r\n            <section class=\"gw-editMode\" *ngIf=\"state.constructor.name == 'GridEditMode'\">\r\n                <div class=\"description\">\r\n                    {{'Select Grid Editing Mode.' | label: 'PS_GRID_EDITMODE_HEADER'}}\r\n                </div>\r\n                <div class=\"source-type-list\">\r\n                    <span class=\"source-type\" *ngFor=\"let emode of editModes\" [ngClass]=\"{'active':gridSourceType == emode.value}\" (click)=\"selectGridSourceType(emode.value)\">\r\n                        <img [src]=\"emode.iconUrl\" [alt]=\"emode.text\">\r\n                        <span>{{emode.description}}</span>\r\n                    </span>\r\n                </div>\r\n            </section>\r\n            <section *ngIf=\"state.constructor.name == 'GridFieldExpression'\" class=\"gw-field-expression\">\r\n                <div class=\"description\">\r\n                    {{'This page allows you to Setup Field Expression and Request Field Expression.' | label: 'PS_GRID_FIELDEXPRESSION_TITLE'}}\r\n                </div>\r\n                <div class=\"main\">\r\n                    <div class=\"summary\">\r\n                        <span class=\"sub-title\">Field Expression Setup</span>\r\n                        <br/> Click on the \"...\" button to select from the field expression explorer.\r\n                    </div>\r\n                    <div class=\"input-row\">\r\n                        <span for=\"fieldExpressionId\">{{'Field Expressions' | label: 'PS_FIELD_EXPRESSIONS'}}</span>\r\n                        <div>\r\n                            <input id=\"fieldExpressionId\" class=\"input\" type=\"text\" placeholder=\"Field Expressions\" formControlName=\"fieldExpressions\"\r\n                            />\r\n                            <span class=\"elipsis-btn\" (click)=\"openFieldExpressionDialog('fieldExpressions')\">...</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"input-row\" *ngIf=\"gridDataMode != 'AdHocQuery' && gridDataMode != 'PredefinedQuery'\">\r\n                        <span for=\"requestFieldExpressionId\">{{'Request Field Expressions' | label: 'PS_GRID_REQUEST_FIELD_EXPRESSIONS'}}</span>\r\n                        <div>\r\n                            <input id=\"requestFieldExpressionId\" class=\"input\" type=\"text\" placeholder=\"Request Field Expressions\" formControlName=\"requestFieldExpressions\"\r\n                            />\r\n                            <span class=\"elipsis-btn\" (click)=\"openFieldExpressionDialog('requestFieldExpressions')\">...</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section *ngIf=\"state.constructor.name == 'GridActionButton'\" class=\"gw-action-button\">\r\n                <div class=\"description\">\r\n                    {{'This page allows you to Define Grid Actions and other attributes' | label: 'PS_GRID_ACTION_BUTTONS_TITLE'}}:\r\n                </div>\r\n                <div class=\"main\" formGroupName=\"actionButtons\">\r\n                    <div class=\"summary\">\r\n                        <span class=\"sub-title\">Define Grid Actions and other attributes</span>\r\n                        <br/> Check the following options to enable and display actions in the navigation bar.\r\n                    </div>\r\n                    <span class=\"sub-title\">Define Actions</span>\r\n                    <div class=\"action-button-header\">\r\n                        <label class=\"ab-button-col\">{{'Button Name' | label: 'PS_BUTTON_NAME'}}</label>\r\n                        <div class=\"ab-visible-col\">{{'Visible' | label: 'PS_VISIBLE'}}</div>\r\n                        <div class=\"ab-enabled-col\">{{'Enabled' | label: 'PS_ENABLED'}}</div>\r\n                    </div>\r\n                    <div class=\"action-button-row\">\r\n                        <label class=\"ab-button-col\">{{'Add' | label: 'PS_ADD'}}</label>\r\n                        <div class=\"ab-visible-col\">\r\n                            <input type=\"checkbox\" formControlName=\"visibleAdd\" />\r\n                        </div>\r\n                        <div class=\"ab-enabled-col\">\r\n                            <input type=\"checkbox\" formControlName=\"enableAdd\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"action-button-row\">\r\n                        <label class=\"ab-button-col\">{{'Edit' | label: 'PS_EDIT'}}</label>\r\n                        <div class=\"ab-visible-col\">\r\n                            <input type=\"checkbox\" formControlName=\"visibleEdit\" />\r\n                        </div>\r\n                        <div class=\"ab-enabled-col\">\r\n                            <input type=\"checkbox\" formControlName=\"enableEdit\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"action-button-row\">\r\n                        <label class=\"ab-button-col\">{{'Delete' | label: 'PS_DELETE'}}</label>\r\n                        <div class=\"ab-visible-col\">\r\n                            <input type=\"checkbox\" formControlName=\"visibleDelete\" />\r\n                        </div>\r\n                        <div class=\"ab-enabled-col\">\r\n                            <input type=\"checkbox\" formControlName=\"enableDelete\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"action-button-row\">\r\n                        <label class=\"ab-button-col\">{{'Refresh' | label: 'PS_REFRESH'}}</label>\r\n                        <div class=\"ab-visible-col\">\r\n                            <input type=\"checkbox\" formControlName=\"visibleRefresh\" />\r\n                        </div>\r\n                        <div class=\"ab-enabled-col\">\r\n                            <input type=\"checkbox\" formControlName=\"enableRefresh\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"action-button-row\">\r\n                        <label class=\"ab-button-col\">{{'Export Data' | label: 'PS_EXPORT_DATA'}}</label>\r\n                        <div class=\"ab-visible-col\">\r\n                            <input type=\"checkbox\" formControlName=\"visibleExportData\" />\r\n                        </div>\r\n                        <div class=\"ab-enabled-col\">\r\n                            <input type=\"checkbox\" formControlName=\"enableExportData\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section *ngIf=\"state.constructor.name == 'GridQuery'\" class=\"gw-query\">\r\n                <div class=\"description\">\r\n                    {{'This page allows you to define the Query' | label: 'PS_GRIDWIZARD_QUERY_TITLE'}}:\r\n                </div>\r\n                <div class=\"main\">\r\n                    <div class=\"summary\">\r\n                        <span class=\"sub-title\">Define Query</span>\r\n                    </div>\r\n                    <section class=\"query\" formGroupName=\"query\">\r\n                        <div *ngIf=\"gridDataMode == 'PredefinedQuery'\" class=\"predefined-query\">\r\n                            <div class=\"query-type\">\r\n                                <select formControlName=\"type\" (change)=\"onQueryTypeChange()\">\r\n                                    <option value=\"0\">{{'System' | label: 'PS_SYSTEM'}}</option>\r\n                                    <option value=\"1\">{{'User' | label: 'PS_USER'}}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"query-header\">\r\n                                <input type=\"text\" placeholder=\"Search\" formControlName=\"searchText\" />\r\n                            </div>\r\n                            <div class=\"query-list list-group\">\r\n                                <a class=\"query-list-item list-group-item\" *ngFor=\"let query of (gridForm.get('queryList').value | gridWizardFilter:searchText)\" (click)=\"onQuerySelect(query)\"\r\n                                    [ngClass]=\"{'active':query.selected}\">{{query.Text}}</a>\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"gridDataMode == 'AdHocQuery'\" class=\"adhoc-query\">\r\n                            <textarea cols=\"40\" rows=\"10\" class=\"form-control\" formControlName=\"queryText\"></textarea>\r\n                        </div>\r\n                    </section>\r\n                    \r\n                    <section class=\"parameter\" *ngIf=\"gridForm.get('parameters')\">\r\n                        <div class=\"parameter-header\">\r\n                            <div class=\"param-name-col\">{{'Name' | label: 'PS_NAME'}}</div>\r\n                            <div class=\"param-type-col\">{{'Type' | label: 'PS_TYPE'}}</div>\r\n                            <div class=\"param-value-col\">{{'Value' | label: 'PS_VALUE'}}</div>\r\n                        </div>\r\n                        <div class=\"parameter-list\">\r\n                            <div formArrayName=\"parameters\" *ngFor=\"let param of parameters.controls; let i=index;\" class=\"parameter-list-item\">\r\n                                <div [formGroupName]=\"i\" class=\"flex-row\">\r\n                                    <div class=\"param-name-col\">\r\n                                        <div>{{gridForm.get('parameters').controls[i].value.name}}</div>\r\n                                    </div>\r\n                                    <div class=\"param-type-col\">\r\n                                        <div>{{gridForm.get('parameters').controls[i].value.type}}</div>\r\n                                    </div>\r\n                                    <div class=\"param-value-col\">\r\n                                        <input type=\"number\" placeholder=\"Value\" formControlName=\"value\">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n               </div>\r\n            </section>\r\n            <section *ngIf=\"state.constructor.name == 'GridColumnSetup'\" class=\"gw-columns\">\r\n                <div class=\"description\">\r\n                    {{'This page allows you to select Column Name and other attributes' | label: 'PS_GRIDWIZARD_COLUMN_TITLE'}}:\r\n                </div>\r\n                <div class=\"main\">\r\n                    <div class=\"summary\">\r\n                        <span class=\"sub-title\">Define Column Name and other attributes</span>\r\n                        <br/> Define columns name, type and other properties.\r\n                    </div>\r\n                    <section class=\"col-header\">\r\n                        <span class=\"cl-select-col\">\r\n                            <input type=\"checkbox\" formControlName=\"checkAllColumn\">\r\n                        </span>\r\n                        <span class=\"cl-type-col\">{{'Column Type' | label: 'PS_COLUMN_TYPE'}}</span>\r\n                        <span class=\"cl-id-col\">{{'Display Column Name' | label: 'PS_COLUMN_NAME'}}</span>                        \r\n                        <span class=\"cl-width-col\">{{'Width' | label: 'PS_WIDTH'}}</span>\r\n                        <span class=\"cl-hidden-col\">{{'Hidden' | label: 'PS_HIDDEN'}}</span>\r\n                        <span class=\"cl-editable-col\" *ngIf=\"gridDataMode == 'ItemList' || gridDataMode == 'SubentityList'\">{{'Editable' | label: 'PS_EDITABLE'}}</span>\r\n                        <span class=\"cl-required-col\" *ngIf=\"gridDataMode == 'ItemList' || gridDataMode == 'SubentityList'\">{{'Required' | label: 'PS_REQUIRED'}}</span>\r\n                        <span class=\"cl-action-col\"></span>\r\n                    </section>\r\n                    <section class=\"column-list\">\r\n                        <span formArrayName=\"columns\" *ngFor=\"let column of columns.controls; let i=index;\" class=\"column\">\r\n                            <div [formGroupName]=\"i\" class=\"flex-row\">\r\n                                <span class=\"cl-select-col\">\r\n                                    <input type=\"checkbox\" formControlName=\"selected\">\r\n                                </span>\r\n                                <span class=\"cl-type-col\">\r\n                                    <select formControlName=\"columnType\">\r\n                                        <option value=\"\"></option>\r\n                                        <option *ngFor=\"let type of columnTypes\" [value]=\"type\">{{type}}</option>\r\n                                    </select>\r\n                                </span>\r\n                                <span class=\"cl-id-col\">\r\n                                    <input type=\"text\" placeholder=\"Name\" formControlName=\"id\">\r\n                                </span>\r\n                                <span class=\"cl-width-col\">\r\n                                    <input type=\"number\" placeholder=\"Value\" formControlName=\"width\">\r\n                                </span>\r\n                                <span class=\"cl-hidden-col\">\r\n                                    <input type=\"checkbox\" formControlName=\"hidden\">\r\n                                </span>\r\n                                <span class=\"cl-editable-col\" *ngIf=\"gridDataMode == 'ItemList' || gridDataMode == 'SubentityList'\">\r\n                                    <input type=\"checkbox\" formControlName=\"editable\">\r\n                                </span>\r\n                                <span class=\"cl-required-col\" *ngIf=\"gridDataMode == 'ItemList' || gridDataMode == 'SubentityList'\">\r\n                                    <input type=\"checkbox\" formControlName=\"required\">\r\n                                </span>\r\n                                <span class=\"cl-action-col\">\r\n                                    <button type=\"button\" (click)=\"onMoveColumn(column.get('id').value, 'up')\">{{'Up' | label: 'PS_UP'}}</button>\r\n                                    <button type=\"button\" (click)=\"onMoveColumn(column.get('id').value, 'down')\">{{'Down' | label: 'PS_DOWN'}}</button>\r\n                                </span>\r\n                            </div>\r\n                        </span>\r\n                    </section>\r\n                    <section class=\"col-action\">\r\n                        <select formControlName=\"selectedColumnType\">\r\n                            <option *ngFor=\"let type of columnTypes\" [value]=\"type\">{{type}}</option>\r\n                        </select>\r\n                        <button type=\"button\" (click)=\"onCreateColumn()\">{{'Create' | label: 'PS_CREATE'}}</button>\r\n                    </section>\r\n                </div>\r\n            </section>\r\n            <section *ngIf=\"state.constructor.name == 'GridRow'\" class=\"gw-row\">\r\n                <div class=\"description\">\r\n                    {{'This page allows you to Define Row Key Identification' | label: 'PS_GRIDWIZARD_ROW_TITLE'}}:\r\n                </div>\r\n                <div class=\"main\">\r\n                    <div class=\"summary\">\r\n                        <span class=\"sub-title\">Define Row Key Identification</span>\r\n                        <br/> Define row identification, selection mode and data mode.\r\n                    </div>\r\n                    <div class=\"input-row\">\r\n                        <span for=\"rowId\">{{'Column that will be used as a Row Identification' | label: 'PS_ROW_ID'}}</span>\r\n                        <span>\r\n                            <select formControlName=\"rowId\">\r\n                                <option *ngFor=\"let col of rowColumns\" [value]=\"col.value\">{{col.text}}</option>\r\n                            </select>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"input-row\">\r\n                        <span for=\"rowSeletionModeId\">{{'Row Selection Mode' | label: 'PS_ROW_SELECTION_MODE'}}</span>\r\n                        <span>\r\n                            <select formControlName=\"selectionMode\">\r\n                                <option *ngFor=\"let mode of gridSelectionModes\" [value]=\"mode.value\">{{mode.text}}</option>\r\n                            </select>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"input-row\" *ngIf=\"displaySubmitDataMode\">\r\n                        <span for=\"submitDataModeId\">{{'Submit Data Mode' | label: 'PS_SUBMIT_DATA_MODE'}}</span>\r\n                        <span>\r\n                            <select formControlName=\"submitDataMode\" (change)=\"onChangeSubmitMode()\">\r\n                                <option value=\"Disabled\">{{'Disabled' | label: 'PS_DISABLED'}}</option>\r\n                                <option value=\"SelectedRows\">{{'Select Rows' | label: 'PS_SELECT_ROWS'}}</option>\r\n                                <option value=\"AllRows\">{{'All Rows' | label: 'PS_ALL_ROWS'}}</option>\r\n                            </select>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"mappings\" *ngIf=\"gridForm.get('submitDataMode').value != 'Disabled'\">\r\n                        <div class=\"mappings-title\">\r\n                            {{'Submitted Column Data Mappings' | label: 'PS_SUBMITTED_COLUMN_MAPPINGS'}}\r\n                        </div>\r\n                        <div class=\"mappings-header row\">\r\n                            <div class=\"col-md-3\">{{'Column' | label: 'PS_COLUMN'}}</div>\r\n                            <div class=\"col-md-3\">{{'Submitted Field' | label: 'PS_SUBMITTED_FIELD'}}</div>\r\n                        </div>\r\n                        <div class=\"mapping-list\">\r\n                            <div formArrayName=\"mappings\" *ngFor=\"let map of mappings.controls; let i=index;\">\r\n                                <div [formGroupName]=\"i\" class=\"row\">\r\n                                    <div class=\"col-md-3\">\r\n                                        <span>{{gridForm.get('mappings').controls[i].value.columnName}}</span>\r\n                                    </div>\r\n                                    <div class=\"col-md-3\">\r\n                                        <select class=\"form-control\" formControlName=\"submitField\">\r\n                                            <option *ngFor=\"let field of submitFields\" [value]=\"field.value\">{{field.text}}</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section *ngIf=\"state.constructor.name == 'GridName'\" class=\"gw-name\">\r\n                <div class=\"description\">\r\n                    {{'This page allows you to Define Grid Name and Title' | label: 'PS_GRIDWIZARD_NAME_TITLE'}}:\r\n                </div>\r\n                <div class=\"main\">\r\n                    <div class=\"summary\">\r\n                        <span class=\"sub-title\">Define Grid Name and Title</span>\r\n                        <br/> Define the name and title of the control.\r\n                    </div>\r\n                    <div class=\"input-row\">\r\n                        <span for=\"nameId\">{{'Control ID' | label: 'PS_CONTROL_ID'}}</span>\r\n                        <div>\r\n                            <input id=\"nameId\" class=\"input\" type=\"text\" placeholder=\"Name\" formControlName=\"name\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"input-row\">\r\n                        <span for=\"titleTextId\">{{'Title Text' | label: 'PS_TITLE_TEXT'}}</span>\r\n                        <div>\r\n                            <input id=\"titleTextId\" class=\"input\" type=\"text\" placeholder=\"Title Text\" formControlName=\"titleText\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"input-row\">\r\n                        <span for=\"titleLabelNameId\">{{'Title Label Name' | label: 'PS_TITLE_LABEL_NAME'}}</span>\r\n                        <div>\r\n                            <input id=\"titleLabelNameId\" class=\"input-btn\" type=\"text\" placeholder=\"Title Label Name\" formControlName=\"titleLabel\" />\r\n                            <span class=\"elipsis-btn\" (click)=\"openLabelSearch()\">...</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </form>\r\n    </main>\r\n    <footer>\r\n        <div class=\"btns\">\r\n            <span class=\"default-btn\" (click)=\"cancel()\">{{'Cancel' | label: 'PS_CANCEL'}}</span>\r\n            <span class=\"default-btn\" (click)=\"backStep()\" *ngIf=\"state.constructor.name != 'GridDataSource'\">{{'Back' | label: 'PS_BACK'}}</span>\r\n            <span class=\"primary-btn\" (click)=\"nextStep()\" *ngIf=\"state.constructor.name != 'GridName'\">{{'Next' | label: 'PS_NEXT'}}</span>\r\n            <span class=\"default-btn\" (click)=\"save()\" *ngIf=\"state.constructor.name == 'GridName'\">{{'Finish' | label: 'PS_FINISH'}}</span>\r\n        </div>\r\n    </footer>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { } from './gridWizard';\r\n\r\n\r\n@Injectable()\r\nexport class GridWizardService {\r\n\r\n    constructor() { }\r\n\r\n    //\r\n    // Moved to the portal.service\r\n    //\r\n}\r\n\r\n","import { IWizardState } from '../../../common/objects/common';\r\nimport { FormArray } from '@angular/forms';\r\nimport { GridDataModes } from '../../../common/objects/viewModel';\r\n\r\nexport class GridDataSource implements IWizardState {\r\n    public element: any;\r\n    public gridDataMode: string;\r\n\r\n    constructor(element: any) {\r\n        this.element = element;\r\n    }\r\n    next(form: any): IWizardState {\r\n        this.save(form);\r\n        this.gridDataMode = GridDataModes[this.element.properties.settings.gridDataMode];\r\n        if (this.gridDataMode == \"SelectionValues\")\r\n            return new GridFieldExpression(this.element);\r\n        if (this.gridDataMode == \"PredefinedQuery\" || this.gridDataMode == \"AdHocQuery\")\r\n            return new GridQuery(this.element);\r\n        return new GridEditMode(this.element);\r\n    }\r\n    back(form: any): IWizardState {\r\n        return null;\r\n    }\r\n\r\n    save(form: any): any {\r\n        //create properties & settings node\r\n        let dataMode = form.get('gridDataMode').value;\r\n\r\n        let settings;\r\n        switch (dataMode) {\r\n            case \"ItemList\":\r\n                settings = {\r\n                    __type: 'GridDataSettingsItemList',\r\n                    gridDataMode: GridDataModes.ItemList,\r\n                    selectionModeField: SelectionMode.SingleRowSelect,\r\n                    allowDataNavigationField: true,\r\n                    isRequiredOnSubmitField: true\r\n                };\r\n                break;\r\n\r\n            case \"SubentityList\":\r\n                settings = {\r\n                    __type: 'GridDataSettingsSubentityList',\r\n                    gridDataMode: GridDataModes.SubEntityList,\r\n                    selectionModeField: SelectionMode.SingleRowSelect,\r\n                    allowDataNavigationField: true,\r\n                    isRequiredOnSubmitField: true\r\n                };\r\n                break;\r\n            case \"SelectionValues\":\r\n                settings = {\r\n                    __type: 'GridDataSettingsSelVal',\r\n                    gridDataMode: GridDataModes.SelectionValues,\r\n                    selectionModeField: SelectionMode.SingleRowSelect,\r\n                };\r\n                break;\r\n            case \"PredefinedQuery\":\r\n                settings = {\r\n                    __type: 'GridDataSettingsPredefinedQuery',\r\n                    gridDataMode: GridDataModes.PredefinedQuery,\r\n                    selectionModeField: SelectionMode.SingleRowSelect,\r\n                };\r\n                break;\r\n            case \"AdHocQuery\":\r\n                settings = {\r\n                    __type: 'GridDataSettingsAdHocQuery',\r\n                    gridDataMode: GridDataModes.AdHocQuery,\r\n                    selectionModeField: SelectionMode.SingleRowSelect,\r\n                };\r\n                break;\r\n            case \"Generic\":\r\n                settings = {\r\n                    __type: 'GridDataSettingsGeneric',\r\n                    gridDataMode: GridDataModes.Generic,\r\n                    selectionModeField: SelectionMode.SingleRowSelect,\r\n                };\r\n                break;\r\n            case \"DataTable\":\r\n                settings = {\r\n                    __type: 'GridDataSettingsDataTable',\r\n                    gridDataMode: GridDataModes.DataTable,\r\n                    selectionModeField: SelectionMode.SingleRowSelect,\r\n                };\r\n                break;\r\n        }\r\n\r\n        this.element.properties = { settings: settings };\r\n        return this.element;\r\n    }\r\n    validate(form: any): string {\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\nexport class GridEditMode implements IWizardState {\r\n    public element: any;\r\n\r\n    constructor(element: any) {\r\n        this.element = element;\r\n    }\r\n    next(form: any): IWizardState {\r\n        this.save(form);\r\n        return new GridFieldExpression(this.element);\r\n    }\r\n    back(form: any): IWizardState {\r\n        return new GridDataSource(this.element);\r\n    }\r\n    save(form: any): any {\r\n        let editingMode = form.get('editingMode').value;\r\n        let allowDataNavigation = editingMode == 'Disabled';\r\n\r\n        this.element.properties.settings.editorSettings = {\r\n            __type: 'JQGridEditorSettings',\r\n            editingMode: editingMode\r\n        };\r\n        this.element.properties.settings.allowDataNavigation = allowDataNavigation;\r\n        return this.element;\r\n    }\r\n    validate(form: any): string {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport class GridFieldExpression implements IWizardState {\r\n    public element: any;\r\n    public gridDataMode: string;\r\n\r\n    constructor(element: any) {\r\n        this.element = element;\r\n        this.gridDataMode = GridDataModes[this.element.properties.settings.gridDataMode];\r\n    }\r\n\r\n    next(form: any): IWizardState {\r\n        this.save(form);\r\n        return new GridActionButton(this.element);\r\n    }\r\n    back(form: any): IWizardState {\r\n        if (this.gridDataMode == \"SelectionValues\")\r\n            return new GridDataSource(this.element);\r\n        if (this.gridDataMode == \"PredefinedQuery\" || this.gridDataMode == \"AdHocQuery\") {\r\n            return new GridQuery(this.element);\r\n        }\r\n        return new GridEditMode(this.element);\r\n    }\r\n    save(form: any): any {\r\n        this.element.properties.settings.fieldExpressions = form.get('fieldExpressions').value;\r\n        if (this.gridDataMode === \"ItemList\")\r\n            this.element.properties.settings.requestFieldExpressions = form.get('requestFieldExpressions').value;\r\n        if (this.gridDataMode === \"SelectionValues\")\r\n            this.element.properties.settings.selectionValuesExpressions = form.get('requestFieldExpressions').value;\r\n        return this.element;\r\n    }\r\n    validate(form: any): string {\r\n        let fieldExpression = form.get('fieldExpressions').value;\r\n        let requestFieldExpression = form.get('requestFieldExpressions').value;\r\n        if (this.gridDataMode === \"SelectionValues\" && fieldExpression === null && requestFieldExpression == null)\r\n            return 'INCOMPLETEFIELDEXPRESSION';\r\n        return null;\r\n    }\r\n}\r\n\r\nexport class GridActionButton implements IWizardState {\r\n    public element: any;\r\n    public gridDataMode: string;\r\n\r\n    constructor(element: any) {\r\n        this.element = element;\r\n        this.gridDataMode = GridDataModes[this.element.properties.settings.gridDataMode];\r\n\r\n    }\r\n    next(form: any): IWizardState {\r\n        this.save(form);\r\n        let fieldExpression = this.element.properties.settings.fieldExpressions;\r\n        if (this.gridDataMode == \"PredefinedQuery\" ||\r\n            this.gridDataMode == \"AdHocQuery\" ||\r\n            (fieldExpression && fieldExpression.length > 0))\r\n            return new GridColumnSetup(this.element);\r\n        return new GridName(this.element);\r\n    }\r\n    back(form: any): IWizardState {\r\n        this.clear(form);\r\n        return new GridFieldExpression(this.element);\r\n    }\r\n    save(form: any): any {\r\n        //form.get('requestFieldExpressions').value;\r\n        this.element.properties.settings.navigatorActions = [\r\n            { Action: 'Add', Enable: form.get('actionButtons.enableAdd').value, Visible: form.get('actionButtons.visibleAdd').value },\r\n            { Action: 'Edit', Enable: form.get('actionButtons.enableEdit').value, Visible: form.get('actionButtons.visibleEdit').value },\r\n            { Action: 'Delete', Enable: form.get('actionButtons.enableDelete').value, Visible: form.get('actionButtons.visibleDelete').value },\r\n            { Action: 'Refresh', Enable: form.get('actionButtons.enableRefresh').value, Visible: form.get('actionButtons.visibleRefresh').value },\r\n            { Action: 'ExportData', Enable: form.get('actionButtons.enableExportData').value, Visible: form.get('actionButtons.visibleExportData').value },\r\n        ]\r\n        return this.element;\r\n    }\r\n    validate(form: any): string {\r\n        let queryText = form.get('query.queryText').value;\r\n        if (this.gridDataMode == \"AdHocQuery\" && !queryText)\r\n            return 'QUERYTEXTEMPTY';\r\n        return null;\r\n    }\r\n    private clear(form: any): void {\r\n        form.get('actionButtons.enableAdd').setValue(false);\r\n        form.get('actionButtons.enableEdit').setValue(false);\r\n        form.get('actionButtons.enableDelete').setValue(false);\r\n        form.get('actionButtons.visibleAdd').setValue(false);\r\n        form.get('actionButtons.visibleEdit').setValue(false);\r\n        form.get('actionButtons.visibleDelete').setValue(false);\r\n\r\n        form.get('actionButtons.enableAdd').disable();\r\n        form.get('actionButtons.enableEdit').disable();\r\n        form.get('actionButtons.enableDelete').disable();\r\n        form.get('actionButtons.visibleAdd').disable();\r\n        form.get('actionButtons.visibleEdit').disable();\r\n        form.get('actionButtons.visibleDelete').disable();\r\n    }\r\n}\r\n\r\nexport class GridColumnSetup implements IWizardState {\r\n    public element: any;\r\n    constructor(element: any) {\r\n        this.element = element;\r\n    }\r\n    next(form: any): IWizardState {\r\n        this.save(form);\r\n        return new GridRow(this.element);\r\n    }\r\n    back(form: any): IWizardState {\r\n        this.clear(form);\r\n        return new GridActionButton(this.element);\r\n    }\r\n    save(form: any): any {\r\n        let columns = form.get('columns').value;\r\n        let selectedColumns = [];\r\n\r\n        columns.forEach(col => {\r\n            if (col.selected)\r\n                selectedColumns.push({\r\n                    __type: col.columnType,\r\n                    editable: col.editable,\r\n                    hidden: col.hidden,\r\n                    name: col.id,\r\n                    labelName: col.labelName,\r\n                    width: col.width\r\n                });\r\n        })\r\n        this.element.properties.settings.columns = selectedColumns;\r\n        return this.element;\r\n    }\r\n    clear(form: any): void {\r\n        let columns = <FormArray>form.get('columns');\r\n        columns.controls.splice(0, columns.controls.length);\r\n    }\r\n    validate(form: any): string {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport class GridRow implements IWizardState {\r\n    public element: any;\r\n    constructor(element: any) {\r\n        this.element = element;\r\n    }\r\n    next(form: any): IWizardState {\r\n        this.save(form);\r\n        return new GridName(this.element);\r\n    }\r\n    back(form: any): IWizardState {\r\n        return new GridColumnSetup(this.element);\r\n    }\r\n    save(form: any): any {\r\n        let rowId = form.get('rowId').value;\r\n        if (rowId != \"auto\") {\r\n            let columns = this.element.properties.settings.columns;\r\n            columns.forEach(col => col.isRowID = (col.ID == rowId));\r\n        }\r\n\r\n        this.element.properties.settings.selectionMode = form.get('selectionMode').value;\r\n\r\n        let submitMode = form.get('submitDataMode').value;\r\n\r\n        if (submitMode != \"Disabled\") {\r\n            let mappings = form.get('mappings').value;\r\n            let submitMappings = [];\r\n\r\n            mappings.forEach(map => {\r\n                submitMappings.push({ columnName: map.ColumnName, objectPropertyName: map.submitField });\r\n            });\r\n\r\n            this.element.properties.settings.submitModeSpecified = true;\r\n            this.element.properties.settings.submitColumnMappings = submitMappings;\r\n        }\r\n\r\n        return this.element;\r\n    }\r\n    validate(form: any): string {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport class GridQuery implements IWizardState {\r\n    public element: any;\r\n    public gridDataMode: string;\r\n\r\n    constructor(element: any) {\r\n        this.element = element;\r\n        this.gridDataMode = GridDataModes[this.element.properties.settings.gridDataMode];\r\n    }\r\n    next(form: any): IWizardState {\r\n        this.validate(form);\r\n        this.save(form);\r\n        return new GridFieldExpression(this.element);\r\n    }\r\n    back(form: any): IWizardState {\r\n        this.clear(form);\r\n        return new GridDataSource(this.element);\r\n    }\r\n    save(form: any): any {\r\n        if (this.gridDataMode == \"PredefinedQuery\") {\r\n            this.element.properties.settings.queryType = form.get('query.type').value;\r\n            this.element.properties.settings.query = form.get('query.definedQuery').value;            \r\n        }            \r\n        if (this.gridDataMode == \"AdHocQuery\")\r\n            this.element.properties.settings.queryText = form.get('query.queryText').value;\r\n\r\n        let parameters = form.get('parameters').value;\r\n        if (parameters) {\r\n            this.element.properties.settings.QueryParameters = [];\r\n            parameters.forEach(param => {\r\n                this.element.properties.settings.QueryParameters.push({\r\n                    ConnectionType: param.type,\r\n                    Name: param.name,\r\n                    Key: param.value\r\n                });\r\n            });\r\n        }\r\n\r\n        return this.element;\r\n    }\r\n    private clear(form: any): void {\r\n        if (this.gridDataMode == \"PredefinedQuery\" || this.gridDataMode == \"AdHocQuery\") {\r\n            let parameters = <FormArray>form.get('parameters');\r\n            parameters.controls.splice(0, parameters.controls.length);\r\n        }\r\n    }\r\n    validate(form: any): string {\r\n        let definedQuery = form.get('query.definedQuery').value;\r\n        if (this.gridDataMode == \"PredefinedQuery\" && !definedQuery)\r\n            return 'INCOMPLETEQUERYNAME';\r\n        let queryText = form.get('query.queryText').value;\r\n        if (this.gridDataMode == \"AdHocQuery\" && !queryText)\r\n            return 'INCOMPLETEQUERYTEXT';\r\n        return null;\r\n    }\r\n}\r\n\r\nexport class GridName implements IWizardState {\r\n    public element: any;\r\n    public gridDataMode: string;\r\n\r\n    constructor(element: any) {\r\n        this.element = element;\r\n        this.gridDataMode = GridDataModes[this.element.properties.settings.gridDataMode];\r\n    }\r\n    next(form: any): IWizardState {\r\n        this.save(form);\r\n        return null;\r\n    }\r\n    back(form: any): IWizardState {\r\n        if (this.gridDataMode == \"PredefinedQuery\" || this.gridDataMode == \"AdHocQuery\")\r\n            return new GridRow(this.element);\r\n        return new GridActionButton(this.element);\r\n    }\r\n    save(form: any): any {\r\n        let name = form.get('name').value;\r\n        this.element.name = name;\r\n        this.element.properties.name = name;\r\n        this.element.properties.labelName = form.get('titleLabel').value;\r\n        this.element.properties.labelText = form.get('titleText').value;\r\n        return this.element;\r\n    }\r\n    validate(form: any): string {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport class GridColumn {\r\n    name: string;\r\n    labelName: string;\r\n    typeName: string;\r\n    width: number;\r\n    editable: boolean;\r\n    required: boolean;\r\n    requiredSpecified: boolean;\r\n}\r\n\r\nconst enum SelectionMode {\r\n    MultiRowSelect,\r\n    CheckBox,\r\n    SingleRowSelect,\r\n    SingleRowSelectWithPostback,\r\n    Disable\r\n}","import { Pipe, PipeTransform, Injectable } from \"@angular/core\";\r\n\r\n@Pipe({\r\n    name: 'gridWizardFilter'\r\n})\r\n@Injectable()\r\n\r\nexport class GridWizardFilter implements PipeTransform {\r\n    transform(items: any[], searchText:string) {\r\n        if (items && items.length && searchText && searchText.length){\r\n            return items.filter(x => x.Text.toLowerCase().indexOf(searchText.toLowerCase()) > -1);       \r\n        }\r\n        return items;\r\n    }\r\n}","export * from './design.module';","import _ from 'lodash';\nimport { LayoutCell } from \"./layoutCell\";\nimport { LayoutActions } from '../../../common/objects/common';\n\nexport class CellSelection{\n    public first: LayoutCell;\n    public last: LayoutCell;\n    public area: LayoutCell[] = [];\n\n    public get isSelected() {return this.area.length > 0;}\n    public get start() : LayoutCell {return this.isSelected ? this.area[0]/*top left cell*/ : this.first};\n    public get end() : LayoutCell {return this.isSelected ? this.area[this.area.length-1]/*bottom right cell*/ : this.last};\n\n    constructor(){\n    }\n\n    public clear(tbl? : any[][]) : boolean {\n        let needRefresh = this.area.length > 0;\n        this.first = null;\n        this.last = null;\n        this.area = [];\n\n        if(tbl){\n            tbl.forEach(cells=> cells.forEach(c=> c.isSelected = false));\n        }\n        return needRefresh;\n    }\n\n    public select(cell: LayoutCell, matrix: LayoutCell[][]){\n        if( this.first && this.last)\n            this.clear();\n\n        if(!this.first)\n            this.first = cell;\n        \n        else\n            if( this.first == cell)\n                this.clear();\n            else\n                this.last = cell;\n\n        this.selectArea(matrix);        \n    }\n\n    private isInsideSelection(row: number, col: number){\n        return row >= this.start.row && row <= this.end.lastRow && \n               col >= this.start.col && col <= this.end.lastCol;\n    }\n\n    public merge(tbl? : any[][]){\n        if( this.area.length > 1){\n            let mergedCellItems = _.map(this.start.cell.items, it=> it);\n\n            if( tbl ){\n                tbl.forEach( cells=> {\n                    cells.filter(c1=> this.isInsideSelection(c1.row, c1.col) && c1 != this.start.cell)\n                        .forEach(c=> {\n                            c.isHidden = true;\n                            if( !_.isEmpty(c.items) ){\n                                _.values(c.items).forEach( v=> {\n                                    v._fromCell = [c.row,c.col];    // save original cell for restoring on split\n                                    mergedCellItems.push(v);\n                                });\n                                c.items = {};\n                            }\n                        });\n                });\n            }\n\n            this.start.colSpan = this.end.lastCol - this.start.col + 1; \n            this.start.rowSpan = this.end.lastRow - this.start.row + 1; \n\n            this.start.cell.items = {};\n            mergedCellItems.forEach(v=> this.start.cell.items[v.id]=v ) ;\n            return true;\n        }\n        return false;\n    }\n\n    public split(tbl: any[][]){\n        if( tbl ){\n            tbl.forEach( cells=> {\n                cells.filter(c1=> this.isInsideSelection(c1.row, c1.col) && c1 != this.start.cell)\n                    .forEach(c=> {\n                        c.isHidden = false;\n                        c.colSpan = c.rowSpan = 1;\n                        // restore items ??? \n                    });\n            });            \n        }\n        this.start.colSpan = this.start.rowSpan = 1;\n        return true;\n    }\n\n    public getEnabledCommands() : CellSelectionState{\n        let selectedNumber = this.area.length;\n        let res :LayoutActions[] = [];\n        res.push(LayoutActions.toggleCellPos);\n        if( selectedNumber > 0){\n            \n            if(this.start.colSpan > 1 || this.start.rowSpan>1){\n                res.push(LayoutActions.split);\n            }\n            else if(this.start != this.end){\n                res.push(LayoutActions.merge);\n            }\n            res.push(LayoutActions.removeColumn);\n            res.push(LayoutActions.removeRow);\n\n            res.push(LayoutActions.insertRowBefore);\n            res.push(LayoutActions.insertRowAfter);\n\n            res.push(LayoutActions.insertColumnBefore);\n            res.push(LayoutActions.insertColumnAfter);\n\n            res.push(LayoutActions.reset);\n        }\n        return new CellSelectionState(res);\n    }\n\n    private selectArea(matrix: LayoutCell[][]){\n        let start = this.first;\n        let end = this.last || start;\n        let flatMatrix = _.flatten(matrix);\n\n        if(start && end ){\n            let rows = _.sortBy([start.row, end.lastRow]);\n            let cols = _.sortBy([start.col, end.lastCol]);\n            this.area = flatMatrix.filter(c=> c.row >= rows[0] && c.row <= rows[1] && c.col >= cols[0] && c.col <= cols[1] );\n        }\n        else\n            this.area = [];\n\n        // Hignlight selected cells\n        flatMatrix.forEach(c=> c.isSelected = this.area.indexOf(c)!=-1);\n    }\n}\n\nexport class CellSelectionState{\n    constructor(public cmdEnabled : LayoutActions[]){}\n}\n","import { uuid, val } from \"../../../common/objects/common\";\n\nexport interface ICellItem {\n    _ref: boolean;\n    type: string;\n    name: string;\n    id: string;\n    isStatic?: boolean;\n    typeName?: string;\n}\n\nexport interface ICell {\n        id: string;\n        name: string;\n        type: string;\n        properties: any;\n\n        col: number;\n        colSpan: number;\n        row: number;\n        rowSpan: number;\n\n        isHidden?: boolean;\n        isEmpty?: boolean;\n        isSelected?: boolean;\n        items: { [index: string]: ICellItem };\n        itemLength?: number;\n        cell?: ICell;\n        sectionRowNumber? : number;\n}\n\nexport class LayoutCell implements ICell\n{ \n    public cell: ICell;\n\n    get id(): string {return this.cell.id;}\n    set id(id: string) {this.cell.id = id;}\n\n    get name(): string { return this.cell.name; }\n    set name(name: string) { this.cell.name = name; }\n\n    get col(): number { return this.cell.col; }\n    set col(col: number) { this.cell.col = col; }\n\n    get colSpan(): number { return this.cell.colSpan;}\n    set colSpan(colSpan: number) {this.cell.colSpan = colSpan;}\n\n    get lastCol() : number {return this.cell.col + this.cell.colSpan-1;}\n    \n    get row(): number {return this.cell.row;}\n    set row(row: number) {this.cell.row = row;}\n\n    get rowSpan(): number {return this.cell.rowSpan;}\n    set rowSpan(rowSpan: number) {this.cell.rowSpan = rowSpan;}\n\n    get sectionRowNumber(): number {return this.cell.sectionRowNumber;}\n    set sectionRowNumber(v: number) {this.cell.sectionRowNumber = v;}\n\n    get lastRow() : number {return this.cell.row + this.cell.rowSpan-1;}\n\n    get isHidden(): boolean {return this.cell.isHidden;}\n    set isHidden(isHidden: boolean) {this.cell.isHidden = isHidden;}\n\n    get isEmpty(): boolean {return this.cell.isEmpty;}\n    set isEmpty(isEmpty: boolean) {this.cell.isEmpty = isEmpty;}\n\n    get isSelected(): boolean {return this.cell.isSelected;}    \n    set isSelected(isSelected: boolean) {this.cell.isSelected = isSelected;}\n    \n    get items(): { [index: string]: ICellItem } {return this.cell.items;}\n    set items(items: { [index: string]: ICellItem }) {this.cell.items = items;}\n\n    get itemLength(): number {return Object.keys(this.cell.items).length;}\n\n    get properties() : any { return this.cell.properties; }\n    get style() : any { return this.cell.properties.style; }\n\n    get cellStyle() { return this.getCellStyle(); }\n\n    get orientation(): string {\n\n        let i = 0;\n        if(this.style && this.style.Orientation)\n            i = this.style.Orientation;\n        return ['native','vertical','horizontal'][i];\n    }\n\n    get horizontalAlignment(): string {\n        if(this.style && this.style.HorizontalAlignment && this.style.HorizontalAlignment!=0){\n            return ['left','right','mddle'][this.style.HorizontalAlignment-1];\n        }\n        return null;\n    }\n    \n    get verticalAlignment(): string {\n        let va = (this.style && this.style.VerticalAlignment) || 0;\n        if(va!=0){\n            return ['top','bottom','mddle'][va-1];\n        }\n        return null;\n    }\n\n    private getCellStyle() : any{\n        let st = {};\n        const column = 1;\n        const row = 2;\n        if(this.style &&  typeof val(this.style, \"orientation\") != \"undefined\" ){\n            if( val(this.style, \"orientation\") == column)\n                st[\"flex-direction\"] = \"column\";\n            else if( val(this.style, \"orientation\") == row)\n                st[\"flex-direction\"] = \"row\";\n        }\n\n        // Vertical alignment\n\n        if(this.style &&  typeof val(this.style, \"verticalAlignment\") != \"undefined\" ){\n           \n            if( val(this.style, \"orientation\") ==  column){\n                if( val(this.style, \"verticalAlignment\") == 1)  // top\n                    st[\"justify-content\"] = \"flex-start\";\n                else if( val(this.style, \"verticalAlignment\") == 2) // bottom\n                    st[\"justify-content\"] = \"flex-end\";\n                else if( val(this.style, \"verticalAlignment\") == 3) // middle\n                    st[\"justify-content\"] = \"center\";\n            }\n            if( val(this.style, \"orientation\") ==  row){\n                if( val(this.style, \"verticalAlignment\") == 1)  // top\n                    st[\"align-items\"] = \"flex-start\";\n                else if( val(this.style, \"verticalAlignment\") == 2) // bottom\n                    st[\"align-items\"] = \"flex-end\";\n                else if( val(this.style, \"verticalAlignment\") == 3) // middle\n                    st[\"align-items\"] = \"center\";\n            }\n        }\n\n        if(this.style &&  typeof val(this.style, \"HorizontalAlignment\") != \"undefined\" ){\n            if( val(this.style, \"orientation\") ==  column){\n                if( val(this.style, \"horizontalAlignmen\") == 1)  // left\n                    st[\"align-items\"] = \"flex-start\";\n                else if( val(this.style, \"HorizontalAlignment\") == 2) // right\n                    st[\"align-items\"] = \"flex-end\";\n                else if( val(this.style, \"HorizontalAlignment\") == 3) // center\n                    st[\"align-items\"] = \"center\";\n            }\n            if( val(this.style, \"orientation\") ==  row){\n                if( val(this.style, \"horizontalAlignmen\") == 1)  // left\n                    st[\"justify-content\"] = \"flex-start\";\n                else if( val(this.style, \"HorizontalAlignment\") == 2) // right\n                    st[\"justify-content\"] = \"flex-end\";\n                else if( val(this.style, \"HorizontalAlignment\") == 3) // center\n                    st[\"justify-content\"] = \"center\";\n            } \n        }\n\n        return st;\n    }\n\n    get isStatic(): boolean { return this.cell.properties.isStatic; }\n\n    get staticName() { return this.cell.properties.staticName as string; }\n    set staticName(s: string) { this.cell.properties.staticName = s; }\n\n    get position() {return `[${this.row}${this.rowSpan>1?('-' + this.lastRow):''},${this.col}${this.colSpan>1?( '-' +this.lastCol):''}]`;}\n    \n    type: string;\n    __type = \"GridLayoutCell\";\n\n    constructor(rowPos: number, colPos: number, cell?: any){\n        if (cell) {\n            this.cell = cell;\n        }\n        else {\n            var newCell: ICell = <ICell>{\n                name: 'cell_' + rowPos + '_' + colPos,\n                col: colPos,\n                row: rowPos,\n                rowSpan: 1,\n                colSpan: 1,\n                isEmpty: true,\n                isHidden: false,\n                items: {},\n                id: uuid.id('cell'),\n                type: \"cell\",\n                typeName: \"GridLayoutCell\",\n                properties: { \n                    __type: \"GridLayoutCell\", \n                    style: { \"__type\": \"Style\" }, \n                    isStatic: false\n                }\n            };\n            this.cell = newCell;\n        }\n    }\n}\n\n","import { IElement, LayoutActions, LayoutBuilder, DesignModes } from '../../../common/objects/common';\nimport { ICell, LayoutCell, ICellItem } from './layoutCell';\nimport { HistoryLog, LayoutHistoryData, RecordCommand } from '../../../common/objects/historyLog';\nimport _ from 'lodash';\nimport { CellSelection } from './cellSelection';\n\nexport class LayoutManager {\n\n    public layoutMode: DesignModes;\n    public selection : CellSelection;\n\n    get layoutModel(): any {\n        if (!this.elementModel.layout) { // referenced webparts for now.\n            this.createEmptyLayout(0,0);\n        }\n        return this.elementModel.layout;\n    }\n    set layoutModel(model: any) { this.elementModel.layout = model; }\n\n    get tblRows() : any[][] { return  (this.layoutModel && this.layoutModel.tableCells as any[][]) || []; }\n    set tblRows(tbl : any[][]) { this.layoutModel.tableCells = tbl; }\n    \n    get rowLength(): number { return this.layoutModel.rowNumber; }\n    set rowLength(rows: number) { this.layoutModel.rowNumber = rows; }\n\n    get colLength(): number { return this.layoutModel.columnNumber; }\n    set colLength(cols: number) { this.layoutModel.columnNumber = cols; }\n\n    get isStatic(): boolean { return this.layoutModel.isStatic === true; }\n\n    get isActive(): boolean { return this.selection.isSelected; }\n\n    get allCells() : LayoutCell[]{ return _.flatten(this.matrix); }\n\n    private _oldTblRows : any[][];\n\n    constructor(private elementModel: IElement/* Page | WebPart */, private _historyLog: HistoryLog) {\n        this.fillLayoutMatrix();\n        this.selection = new CellSelection();\n    }\n\n    public refresh(): void {\n        this.fillLayoutMatrix();\n    }\n\n    public reset() : void {\n        this._oldTblRows = [];\n        this.clearSelection();\n    }\n\n    public renameLayoutRefs(oldname: string, newname: string) {\n        this.allCells.forEach(c=> {            \n            if( c.items ){\n                let r = _.find(c.items,  (ci:any) => ci.name == oldname );\n                if( r ){\n                    r.name = newname;\n                    // stop processing\n                    return false;\n                }\n            }\n        });\n    }\n\n    private createEmptyLayout(rows: number, cols: number) {\n        this.layoutModel = {};\n        this.rowLength = rows;\n        this.colLength = cols;\n        this.layoutModel.tableCells = [];\n        this.layoutModel.__type = 'GridLayout';\n        this.layoutModel.isStatic = false;\n    }\n\n    // tableCells -> matrix.\n    private fillLayoutMatrix() {\n\n        \n        if(this._historyLog){\n            if( _.isEqual(this._oldTblRows, this.tblRows) && this._historyLog.undoCount == 0 && this._historyLog.redoCount == 0){\n                // no changes -- layout is not rebuilt\n                return;\n            }\n         }    \n\n        let grps : any[];\n        let currentIndex = 0;\n        if(this.elementModel.properties && this.elementModel.properties.collapsibleGroups ){            \n            grps = [];\n            this.elementModel.properties.collapsibleGroups.forEach((g:any)=>{\n                for(let i=0; i<g.rows; i++){\n                    grps.push(currentIndex);\n                }\n                currentIndex++;\n            });\n        }\n\n        if (this.tblRows && this.tblRows.length > 0) {\n            this.matrix =\n                _.map( this.tblRows, (tableCells, i) => {\n                    return _.map( tableCells, (tc, j) => {\n                        let lc = new LayoutCell(tc.col, tc.row, tc);\n                        if(grps && grps.length)\n                            lc.sectionRowNumber = grps[i];\n                        return lc;\n                    });\n                });\n        }\n        else {\n            // if there is no layout (UserFieldsWebPart case) - add one cell.\n            this.rowLength = this.colLength = 1;\n            this.layoutModel.isStatic = false;\n            this.matrix = Array<LayoutCell[]>([new LayoutCell(0,0)]);\n        }\n        this._oldTblRows = _.cloneDeep(this.tblRows);        \n    }\n\n    public selectCell(cell: LayoutCell) : boolean{\n        let selected = false;\n        this.selection.select(cell, this.matrix);\n        selected = true;\n        return selected;\n    }\n\n    public removeCellItem(cell:ICell, element:IElement): boolean {\n        let removed = false;\n\n        if (element) {\n\n            // remove reference\n            let itemKey = _.findKey(cell.items, (item : ICellItem, key) => item.name == element.name);\n            if (itemKey) {\n\n                // add removed items to the removed list\n                if (cell.items[itemKey].isStatic){                    \n                    cell.items[itemKey].typeName = element._fullTypeName;\n                    this.layoutModel.removedItems = this.layoutModel.removedItems || [];\n                    this.layoutModel.removedItems.push(cell.items[itemKey]);\n                }\n                delete cell.items[itemKey];\n                removed = true;\n\n                // reorder item refs\n                let ind = 0;\n                let newItems : {[index:string] : ICellItem} = {};\n                _.map( cell.items, (ci:ICellItem) => {newItems[ind.toString()] = ci; ind++;} );\n                cell.items = newItems;\n            }\n        }\n        return removed;\n    }\n\n\n    private removeMatrixColumn(tbl: any[][], index : number, key = 'col'){\n        const spanKey = key + 'Span';\n        tbl.forEach( (cells) => {\n            let indexToRemove = index;\n            let spannedCell = cells.find(cr=> cr[spanKey] > 1 && indexToRemove >= cr[key] && indexToRemove < (cr[key] + cr[spanKey]));\n            if( spannedCell ){\n                spannedCell[spanKey]--;\n                if( spannedCell[key] == indexToRemove)\n                indexToRemove++;\n            }\n            let removedCell = cells.splice(indexToRemove, 1)[0];\n            this.layoutModel.removedCells = this.layoutModel.removedCells || [];\n            // remove items if there is any\n            _.forEach(removedCell.items, it=> this.removeCellItem(removedCell, it));\n\n            this.layoutModel.removedCells.push(removedCell);\n            _.range( indexToRemove, cells.length ).forEach(i=> cells[i][key]-- );\n        });\n    }\n\n    // handle remove column command.\n    private removeColumn(): void {\n\n        if (this.colLength < 2) {\n            // do not allow to remove --- keep visible at least 1 column\n            return;\n        }        \n        this.removeMatrixColumn(this.tblRows, this.selection.start.col);\n        this.colLength--;\n        this.clearSelection();\n    }\n\n    // transpose matrix\n    private transpose(t: any[][] ) : any[][]{\n        return t[0].map((col, i) => t.map((row) => row[i]));\n    }\n\n    // handle remove row command.\n    private removeRow(): void {\n\n        if (this.rowLength < 2) {\n            // do not allow to remove the last row\n            return;\n        }\n\n        // transpose matrix\n        let transposedTbl = this.transpose(this.tblRows);\n        this.removeMatrixColumn(transposedTbl, this.selection.start.row, 'row');\n\n        // transpose back\n        this.tblRows = this.transpose(transposedTbl);\n        this.rowLength--;\n        this.clearSelection();\n    }\n\n    // handle split command.\n    private splitSelectedCells(): void {\n        this.selection.split(this.tblRows);\n        this.clearSelection();\n    }\n\n    // handle Merge command.\n    private mergeSelectedCells(): void {\n        this.selection.merge(this.tblRows);\n        this.clearSelection();\n    }\n\n    public clearSelection(): void {\n        this.selection.clear(this.tblRows);\n        this.fillLayoutMatrix();\n    }\n\n    private insertRow(rowIndex: number): void {\n        let transposed = this.transpose(this.tblRows);\n        this.insertColumnMatrix(transposed, rowIndex, 'row');\n        this.tblRows = this.transpose(transposed);\n        this.rowLength++;\n        this.clearSelection();\n    }\n\n    private insertColumnMatrix(tbl:any[][], indexToInsert : number, key = 'col'){\n        const spanKey = key+ 'Span';\n        tbl.forEach( (cells, rIndex) => {\n            let colIndex = indexToInsert;\n            let cellHidden = false;\n            let spannedCell = cells.find(cx=> cx[spanKey] > 1 && colIndex > cx[key] && colIndex < (cx[key] + cx[spanKey]));\n            if( spannedCell ){\n                spannedCell[spanKey] ++;\n                cellHidden = true;\n            }\n            let nc = key == 'col' ? \n                        LayoutBuilder.newCell(rIndex, colIndex, cellHidden) : \n                        LayoutBuilder.newCell(colIndex, rIndex, cellHidden);\n            if( colIndex == this[key+'Length']  )\n                cells.push(nc);\n            else{\n                cells.splice( colIndex, 0, nc);\n                _.range( colIndex+1, cells.length ).forEach(i=> cells[i][key]++ );\n            }            \n        });        \n    }\n\n    private insertColumn(colInsertAtPosition: number): void {\n        this.insertColumnMatrix(this.tblRows, colInsertAtPosition);\n        this.colLength++;\n        this.clearSelection();\n    }\n\n    public resetSelected(): void {\n        this.clearSelection();\n    }\n\n    public executeCommand(cmd: LayoutActions) {\n\n        let oldLayout = this.cloneLayout();\n\n        switch (cmd) {\n            case LayoutActions.merge:\n                this.mergeSelectedCells(); break;\n            case LayoutActions.split:\n                this.splitSelectedCells(); break;\n            case LayoutActions.insertRowBefore:\n                if (this.selection.isSelected)\n                    this.insertRow(this.selection.start.row);\n                break;\n            case LayoutActions.insertRowAfter:\n                if (this.selection.isSelected)\n                    this.insertRow(this.selection.start.row+this.selection.start.rowSpan);\n                break;\n            case LayoutActions.insertColumnBefore:\n                if (this.selection.isSelected)\n                    this.insertColumn(this.selection.start.col);\n                break;\n            case LayoutActions.insertColumnAfter:\n                if (this.selection.isSelected)\n                    this.insertColumn(this.selection.start.col+this.selection.start.colSpan);\n                break;\n            case LayoutActions.removeRow:\n                this.removeRow(); break;\n            case LayoutActions.removeColumn:\n                this.removeColumn(); break;\n            case LayoutActions.reset:\n                break;\n            case LayoutActions.toggleCellPos:\n                break;\n        }\n\n        if (cmd != LayoutActions.reset && cmd != LayoutActions.toggleCellPos) {\n            // record into the history\n            let newLayout = this.cloneLayout();\n            this._historyLog.recordHistoryItem(RecordCommand.layoutChange, new LayoutHistoryData(cmd, oldLayout, newLayout, this.elementModel));\n        }\n        this.resetSelected();\n    }\n\n    private cloneLayout(): any {\n        return this.layoutModel.tableCells.map(\n            row => row.map(cell => {\n                let c: LayoutCell = _.clone(cell);\n                c.isSelected = false;\n                let clonedItems = {};\n                _.forEach(cell.items, it => clonedItems[it.id] = _.clone(it));\n                c.items = clonedItems;\n                return c;\n            })\n        );\n    }\n\n    public getCommands(){\n        return this.selection.getEnabledCommands().cmdEnabled;\n    }\n\n    public findLayoutCell(c: ICell) : LayoutCell {\n        return _.flatten(this.matrix).find(cell=> cell.name == c.name);\n    }\n\n    public findLayoutCellById(id:string) : LayoutCell {\n        return _.flatten(this.matrix).find(cell=> cell.id == id);\n    }\n\n    // ViewModel of layout\n    private matrix: LayoutCell[][];\n}\n","import { LayoutActions } from \"../../../common/objects/common\";\r\n\r\nexport class LayoutMenuItem {\r\n    public caption : string;\r\n    public label : string;\r\n    public enabled: boolean;\r\n\r\n    constructor(public action: LayoutActions, enabled: boolean = false){\r\n        let cp = LayoutMenuItem._captions_and_labels.find(a=> a[0] == action );\r\n        this.caption = cp[1];\r\n        this.label = cp[2];\r\n        this.enabled = enabled;\r\n    }\r\n\r\n    private static _captions_and_labels : [LayoutActions,string,string][] = [\r\n        [LayoutActions.merge, \"Merge\", \"PS_ACTION_MERGE\"],\r\n        [LayoutActions.split, \"Split\", \"PS_ACTION_SPLIT\"],\r\n        [LayoutActions.removeRow, \"Remove Row\", \"PS_ACTION_REMOVE_ROW\"],\r\n        [LayoutActions.removeColumn, \"Remove Column\", \"PS_ACTION_REMOVE_COLUMN\"],\r\n        [LayoutActions.insertRowBefore, \"Insert Row Before\", \"PS_ACTION_INSERT_ROW_BEFORE\"],\r\n        [LayoutActions.insertColumnBefore, \"Insert Column Before\", \"PS_ACTION_INSERT_COLUMN_BEFORE\"],\r\n        [LayoutActions.insertRowAfter, \"Insert Row After\", \"PS_ACTION_INSERT_ROW_AFTER\"],\r\n        [LayoutActions.insertColumnAfter, \"Insert Column After\",\"PS_ACTION_INSERT_COLUMN_AFTER\"],\r\n        [LayoutActions.none, \"\",\"\"],\r\n        [LayoutActions.reset, \"Reset\",\"PS_ACTION_RESET_SELECTION\"],\r\n        [LayoutActions.toggleCellPos, \"Toggle Cell Position\",\"PS_ACTION_TOGGLE_CELLPOS\"]\r\n    ];\r\n}\r\n","import {Injectable, Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'componentItemFilter'\r\n})\r\n@Injectable()\r\nexport class ComponentItemFilter implements PipeTransform {\r\n    transform(compItems: any[], item: any, type: string): any[] {        \r\n        if(item == undefined)\r\n            return;    \r\n                                \r\n        let items = [];\r\n        for(let key in compItems) {\r\n            let value = compItems[key];\r\n            if(value.name == item.name && value.type == type)\r\n                items.push(compItems[key]);\r\n        }       \r\n                     \r\n        return items;\r\n    }\r\n}\r\n\r\n","import {Injectable, Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'hiddenItemFilter'\r\n})\r\n@Injectable()\r\nexport class HiddenItemFilter implements PipeTransform {\r\n    transform(items: any[], hidden: boolean): any[] {\r\n        if (hidden != undefined)\r\n            return items.filter(item => item.isHidden == hidden);       \r\n                                     \r\n    }\r\n}\r\n\r\n","import { Component, Input, Output, EventEmitter, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { IUIDesigner, LayoutActions, DesignModes} from '../../common/objects/common';\r\nimport { LayoutMenuItem } from './objects/layoutMenuItem';\r\nimport { StudioStateService } from '../../common/services/studioStateService';\r\n\r\n@Component({\r\n    selector: 'csi-design-toolbar',\r\n    templateUrl: 'toolbar.component.html',\r\n    styleUrls:[`toolbar.component.less`]\r\n})\r\nexport class DesignToolbarComponent implements OnInit, OnChanges {\r\n    @Input() designElement: IUIDesigner;\r\n    @Input() layoutActions : LayoutActions[];\r\n    @Output() onModeChanged = new EventEmitter<DesignModes>(); \r\n\r\n    DesignModesEnum = DesignModes;\r\n    DesignModesValues = \r\n        Object.keys(DesignModes).filter(k=> k.length==1).map(k1=>{return {k: k1, v:DesignModes[k1].match(/[A-Z][a-z]+|[0-9]+/g).join(\" \")}; });\r\n\r\n    //mode = this.DesignModesEnum.Design // must be check / [class.designMode]=\"mode==DesignModesEnum.Design\">\r\n    get layoutMenu() : LayoutMenuItem[] {return this.designElement.__layoutMenu;}\r\n    set layoutMenu(lm : LayoutMenuItem[]) { this.designElement.__layoutMenu = lm;}\r\n\r\n    activeMode : DesignModes;\r\n\r\n    constructor(private _studioService: StudioStateService){\r\n    }\r\n\r\n    ngOnInit(){\r\n        // Init menu\r\n        this.layoutMenu = this._layoutMenuItems.map( a=> new LayoutMenuItem(a));\r\n    }\r\n\r\n    ngOnChanges(ch:SimpleChanges){\r\n        if( ch.layoutActions){\r\n           let acts =  ch.layoutActions.currentValue as LayoutActions[];\r\n           if( acts ){\r\n                if( !this.layoutMenu )\r\n                    this.layoutMenu = this._layoutMenuItems.map( a=> new LayoutMenuItem(a));\r\n                this.layoutMenu.forEach(m=>{\r\n                    m.enabled = acts.indexOf(m.action) != -1;\r\n                });\r\n            }\r\n        }\r\n        if( ch.designElement ){\r\n            this.activeMode = ch.designElement.currentValue.__designMode;\r\n        }\r\n    }\r\n\r\n    sliderValueChanged($event, el: IUIDesigner) {\r\n        let newScaleVal: number = $event;\r\n        if (newScaleVal !== el.scaleValue) {\r\n            el.scaleValue = newScaleVal;\r\n        }\r\n    }\r\n\r\n    modeChanged(v:DesignModes){\r\n        this.designElement.__designMode = this.activeMode;\r\n        this.onModeChanged.emit(this.activeMode);\r\n    }\r\n\r\n    isLayoutCmdEnabled(m:LayoutMenuItem) : boolean{\r\n        return this.layoutActions && this.layoutActions.indexOf(m.action)!=-1;\r\n    }\r\n\r\n    executeCommand(ev: Event, m : LayoutMenuItem){        \r\n        this._studioService.layoutCommand(m.action);\r\n    }\r\n\r\n    private _layoutMenuItems = [\r\n        LayoutActions.merge, \r\n        LayoutActions.split, \r\n        LayoutActions.none, \r\n        LayoutActions.removeRow, \r\n        LayoutActions.removeColumn, \r\n        LayoutActions.insertRowBefore, \r\n        LayoutActions.insertColumnBefore, \r\n        LayoutActions.insertRowAfter, \r\n        LayoutActions.insertColumnAfter, \r\n        LayoutActions.none,\r\n        LayoutActions.reset,\r\n        LayoutActions.toggleCellPos\r\n    ];\r\n}\r\n","<div class=\"csi-design-toolbar\">\r\n    <div class=\"csi-zoom-control\">\r\n        <span>{{ 'Zoom' | label: 'PS_SLIDER_ZOOM' }}           \r\n                <input type=\"range\" min=\"20\" max=\"200\" [(ngModel)]=\"designElement.scaleValue\" (ngModelChange)=\"sliderValueChanged($event, designElement)\" />    \r\n                <input type=\"text\" [(ngModel)]=\"designElement.scaleValue\" />          \r\n        </span>\r\n    </div>\r\n    <div class=\"csi-toolbox\">\r\n        <div class=\"csi-design-mode-selector\" [class.designMode]=\"DesignModesEnum.Design\">\r\n            <select [(ngModel)]=\"activeMode\" (change)=\"modeChanged(activeMode)\">\r\n                <option *ngFor=\"let m of DesignModesValues\" value=\"{{m.k}}\" [hidden]=\"m.k=='6' && designElement.type!='Webpart'\" >{{m.v}}</option>\r\n            </select>\r\n        </div>\r\n\r\n        <div *ngIf=\"activeMode==DesignModesEnum.Design\" class=\"csi-cell-action\">\r\n            <div class=\"btn-group\" keyboardNav=\"true\">\r\n                <button id=\"actionsDropdown\" type=\"button\" class=\"btn-primary\" [matMenuTriggerFor]=\"actionsMenu\">\r\n                    <span>{{'Actions' | label: 'PS_ACTIONS'}}</span>\r\n                </button>\r\n                <mat-menu #actionsMenu=\"matMenu\" class=\"csi-context-menu\" [overlapTrigger]=\"false\">                    \r\n                    <div *ngFor=\"let m of layoutMenu\">\r\n                        <button mat-menu-item *ngIf=\"m.action!=0\" [disabled]=\"!isLayoutCmdEnabled(m)\" (click)=\"executeCommand($event, m)\">{{m.caption | label: m.label}}</button>\r\n                        <div *ngIf=\"m.action==0\" class=\"divider dropdown-divider\"></div>\r\n                    </div>\r\n                </mat-menu>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","<div class=\"csi-where-used-report\">\r\n    <div class=\"sectionHeading\">WebPart:&nbsp;{{name}}</div> \r\n    <div class=\"csi-where-used-bar\"><mat-progress-bar mode=\"indeterminate\" *ngIf=\"loading\"></mat-progress-bar></div>  \r\n<br/>\r\n <ng-template #referenceSection><div class=\"sectionHeading\">No references found</div></ng-template>\r\n <ng-container *ngIf=\"refFound else referenceSection\">\r\n    <div class=\"csi-where-used-report-section\">    \r\n        <span class=\"sectionHeading\">Found in Virtual Page(s)</span>    \r\n            <table class=\"csi-where-used-report-table\">\r\n                <tr>\r\n                    <td>{{nameLbl}}</td>\r\n                    <td>{{workspaceLbl}}</td>\r\n                </tr>\r\n                <tr *ngFor=\"let p of pageList|async\">\r\n                    <td>{{p.name}}</td>\r\n                    <td>{{p.workSpace}}</td>\r\n                </tr>\r\n            </table>          \r\n    </div>\r\n    <br /> \r\n    <div class=\"csi-where-used-report-section\">    \r\n        <span class=\"sectionHeading\">Found in Web Part(s)</span>\r\n            <table class=\"csi-where-used-report-table\">\r\n                <tr>\r\n                    <td>{{nameLbl}}</td>\r\n                    <td>{{workspaceLbl}}</td>\r\n                </tr>\r\n                <tr *ngFor=\"let wpl of webPartList|async\">\r\n                    <td>{{wpl.name}}</td>\r\n                    <td>{{wpl.workSpace}}</td>\r\n                </tr>\r\n            </table>          \r\n    </div> \r\n</ng-container>\r\n</div>    \r\n\r\n\r\n","import { Component, Input, OnChanges, OnInit, SimpleChanges} from \"@angular/core\";\r\nimport { PortalService } from \"../../../common/services/portal.service\";\r\nimport { WhereUsedItem } from \"../../../common/objects/viewModel\";\r\nimport { Subject} from \"rxjs\";\r\nimport { WCFService } from '../../../common/services/wcf.service';\r\nimport { UIComponentRef }  from '../../../common/objects/common';\r\nimport { LabelService } from \"../../../common/services/label.service\";\r\nimport { LocalService } from \"../../../common/services/local.service\";\r\n\r\n\r\n@Component({\r\n    selector: 'where-used-report',\r\n    templateUrl: 'whereUsed.component.html',\r\n    host: {\r\n        'style': 'flex-grow: 2; display: flex; flex-direction: column;'\r\n    },\r\n})\r\n\r\nexport class WhereUsedReportComponent implements OnChanges,OnInit{\r\n\r\n    @Input() name: any;\r\n\r\n    pageList =  new Subject<WhereUsedItem[]>();\r\n    webPartList= new Subject<WhereUsedItem[]>();\r\n    loading:boolean=true;\r\n    refFound:boolean=true;\r\n    allPages : string[] = [];\r\n    workspaceLbl:string;\r\n    nameLbl:string;\r\n\r\n    private tempPages : WhereUsedItem[] = [];\r\n    private allWebParts : string[] = [];\r\n    private tempWebParts : WhereUsedItem[] = [];\r\n  \r\n\r\n    constructor(private _portalService: PortalService, \r\n                private _wcfService: WCFService,\r\n                private _labelService:LabelService,\r\n                private _localService: LocalService){\r\n                   \r\n    }\r\n\r\n    private checkPage(){\r\n        if( this.allPages.length == 0 && this.allWebParts.length==0){\r\n            this.pageList.next(this.tempPages.reverse());\r\n            let nameItem = this.name;\r\n            this._localService.addPageList(nameItem, this.tempPages);\r\n            this.loading=false;\r\n            if(this.tempPages.length==0 && this.tempWebParts.length==0){\r\n                this.refFound=false; \r\n            }\r\n            else{\r\n                this.refFound=true; \r\n            }\r\n\r\n            return;\r\n        }\r\n        let page = this.allPages.pop();\r\n        this._portalService.isUsed(page, \"page\", this.name).subscribe( wsList => {\r\n            if( wsList !== \"-\"){                     \r\n                this.tempPages.push(<WhereUsedItem>{name: page, workSpace : wsList });      \r\n            }\r\n            setTimeout(() => {\r\n                this.checkPage();\r\n            }, 0);\r\n        });\r\n    }\r\n\r\n    private checkWebParts(){\r\n        if( this.allWebParts.length == 0 && this.allPages.length == 0){\r\n            this.webPartList.next(this.tempWebParts.reverse());\r\n            let nameItem = this.name;\r\n            this._localService.addWebPartList(nameItem, this.tempWebParts);\r\n            this.loading=false;\r\n            if(this.tempPages.length==0 && this.tempWebParts.length==0){\r\n                this.refFound=false; \r\n            }\r\n            else{\r\n                this.refFound=true; \r\n            }\r\n\r\n                     return;\r\n        }\r\n        let webParts = this.allWebParts.pop();\r\n        this._portalService.isUsed(webParts,\"Webpart\",this.name).subscribe( wsList => {\r\n            if( wsList !== \"-\"){              \r\n               this.tempWebParts.push(<WhereUsedItem>{name: webParts, workSpace : wsList });\r\n            }\r\n            setTimeout(() => {\r\n                this.checkWebParts();\r\n           }, 0);\r\n        });\r\n \r\n    }\r\n\r\n    private loadLabels() {\r\n        this.workspaceLbl = this._labelService.getLabel('PS_WORKSPACELBL', 'Workspace');\r\n        this.nameLbl = this._labelService.getLabel('PS_NAMELBL', 'Name');\r\n    }\r\n\r\n    private async load() {\r\n        this.loadLabels();\r\n        this.loading=true;\r\n        this._wcfService.getElementRefs(\"UIVirtualPageMaint\", \"Page\", true).subscribe( (pages: UIComponentRef[]) => {\r\n            this.allPages = pages.map( p=> p.name);\r\n            this.checkPage();  \r\n                \r\n        });\r\n\r\n        this._wcfService.getElementRefs(\"WebPartMaint\",\"Webpart\", true).subscribe( (webParts: UIComponentRef[]) => {\r\n            this.allWebParts = webParts.map( p=> p.name);\r\n            this.checkWebParts();\r\n         });\r\n    }\r\n\r\n    private checkLocalStorage(ch):void{\r\n        let pageList = this._localService.getPageList();\r\n        let webPartList = this._localService.getWebPartList();\r\n       \r\n        if(pageList || webPartList){\r\n            let pages = pageList.filter(el => el.wepPartName == ch.name.currentValue);\r\n            let webParts = webPartList.filter(el => el.wepPartName == ch.name.currentValue);\r\n            if(!pages[0] && !webParts[0]){\r\n                 this.load();\r\n            }\r\n\r\n            if(pages[0]){\r\n                if(pages[0].wepPartName == ch.name.currentValue){\r\n                    setTimeout(() =>  this.pageList.next(pages[0].items), 0)\r\n                    this.loading=false;\r\n                    if(pages[0].items.length==0 && webParts[0].items.length==0)\r\n                    this.refFound=false;\r\n                    else{\r\n                        this.refFound=true;\r\n                    }\r\n                }\r\n            }\r\n          \r\n            if(webParts[0]){\r\n                if(webParts[0].wepPartName == ch.name.currentValue){\r\n                    setTimeout(() =>   this.webPartList.next(webParts[0].items), 0)\r\n                    this.loading = false;\r\n                    if(pages[0].items.length==0 && webParts[0].items.length==0)\r\n                    this.refFound=false;\r\n                    else{\r\n                        this.refFound=true;\r\n                    }\r\n                }\r\n            }\r\n        }else{\r\n            this.load();\r\n        }\r\n\r\n    }\r\n\r\n    ngOnInit(){\r\n\r\n    }\r\n\r\n    ngOnChanges(ch : SimpleChanges): void {\r\n        this.loading = false;\r\n        this.loadLabels();\r\n        this.checkLocalStorage(ch);\r\n    }\r\n   \r\n}","export * from './layout.module';","import { Component, EventEmitter, Input, OnInit, Output, ChangeDetectionStrategy, ElementRef } from '@angular/core';\n\nimport { IElement, IUIDesigner, StudioSubjects, ILabel } from '../common/objects/common';\nimport { fromEvent } from 'rxjs';\n\nimport { AlertService } from '../alert/alert.service';\nimport { StudioStateService } from '../common/services/studioStateService';\n\n@Component({\n    selector: 'csi-layout',\n    templateUrl: 'layout.component.html',\n    styleUrls:['layout.component.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LayoutComponent implements OnInit {\n    @Input('rootElement') __rootElement: any;\n    @Input() subjects: StudioSubjects;\n    @Input() showTraceViewer: boolean;\n\n    @Output() onLoadElement = new EventEmitter<IElement>();\n\n    inArea = false;\n\n    get rootElement(): IUIDesigner { return this.__rootElement; }\n\n    constructor(\n        private _element: ElementRef,\n        private _studioStateService: StudioStateService,\n        private _alertService: AlertService) {\n    }\n\n    ngOnInit(): void {\n        fromEvent<KeyboardEvent>(document, 'keyup')\n            .subscribe(ke => {\n                if((ke.key == \"Delete\" || ke.key == \"Del\") && !(ke.altKey || ke.shiftKey || ke.ctrlKey) ){                    \n                    if( this.inArea && this.rootElement && this.rootElement.type !== \"StartPage\" )\n                        this.deleteElement();\n                    else{\n                        let act = this._studioStateService.activeElement;\n                        if(act && act['__type'] === \"UIComponentRef\" ){\n                            this.subjects.deleteElement.next(act);\n                        }\n                    }\n                }\n            });\n\n        fromEvent<MouseEvent>(this._element.nativeElement, 'mouseenter').subscribe(m => this.inArea = true);\n        fromEvent<MouseEvent>(this._element.nativeElement, 'mouseleave').subscribe(m => this.inArea = false);\n    }\n\n    loadElement(element: IElement): void {\n        this.onLoadElement.emit(element);\n    }\n\n    deleteElement(): void {\n        let { name: activeName, type: activeType } = this._studioStateService.getRoot().__selectedElement;\n        // Webpart fix\n        if( activeType == \"Webpart\")\n            activeType = \"Web Part\";\n\n        let lblMessage = <ILabel>{\n            Name: 'PS_WARNING_DELETE_ELEMENT_MESSAGE',\n            DefaultValue: 'You are about to permanently delete the selected {0} {1}.Please make sure that other components have no dependencies on it.Do you want to continue?',\n            arguments: [activeName, activeType.toLowerCase()]\n        };\n        let titleLabel = <ILabel>{\n            Name: 'PS_WARNING_DELETE_ELEMENT_TITLE',\n            DefaultValue: 'Delete {1}',\n            arguments: [activeName, activeType]\n        };\n\n        this._alertService.confirmModal(lblMessage, titleLabel)\n            .subscribe(ok => { if (ok) this.removeElementFinally(); });\n    }\n\n    private removeElementFinally() {\n        this._studioStateService.removeElementFromCell();\n    }\n\n}\n","<div class=\"csi-editor-area\" *ngIf='rootElement'>\r\n\r\n    <csi-start-page *ngIf='rootElement.type === \"StartPage\"' (onLoadElement)=\"loadElement($event)\"></csi-start-page>\r\n\r\n    <div *ngIf='rootElement.type === \"Page\" || rootElement.type === \"Webpart\"' class=\"csi-editor-content\">\r\n        <csi-design-root [root]=\"rootElement\"></csi-design-root>\r\n    </div>\r\n\r\n    <div *ngIf='rootElement.type === \"Pageflow\"'  class=\"csi-editor-content\">\r\n        <csi-designPageflow class=\"csi-pageflowDesigner\" [element]='rootElement'></csi-designPageflow>\r\n    </div>\r\n\r\n    <div *ngIf='rootElement.type !== \"StartPage\" && rootElement.type !== \"Page\" && rootElement.type !== \"Webpart\" && rootElement.type !== \"Pageflow\"' class=\"csi-modeling-object\">\r\n        <csi-panel [component]=\"'csi-property-list'\" [dataSource]=\"'object'\" [subjects]=\"subjects\"></csi-panel>\r\n    </div>\r\n</div>\r\n\r\n<csi-panel-splitter direction=\"h\" [panel]=\"traceLogPanel\" *ngIf=\"!!rootElement && showTraceViewer\"></csi-panel-splitter>\r\n\r\n<div class=\"tracelog-area\" [class.hidden]=\"!showTraceViewer\" [class.full]=\"showTraceViewer && !rootElement\" #traceLogPanel>\r\n    <csi-trace-log [activePage]=\"rootElement?.name\"></csi-trace-log>\r\n</div>\r\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\n\n//module\nimport { PanelModule } from '../panel';\nimport { DesignModule } from './design';\nimport { SharedModule } from '../shared';\nimport { TraceLogModule } from './traceLog';\n\n//app components\nimport { LayoutTabsComponent } from './tabs.component';\nimport { LayoutComponent } from './layout.component';\nimport { StartPageComponent } from './startPage.component';\n\n\n@NgModule({\n    imports: [\n        DesignModule,\n        PanelModule,\n        SharedModule,      \n        TraceLogModule,\n    ],\n    declarations: [\n        LayoutComponent,\n        LayoutTabsComponent,\n        StartPageComponent,\n    ],\n    exports: [\n        LayoutComponent,\n        LayoutTabsComponent\n    ],\n})\nexport class LayoutModule {\n    constructor( @Optional() @SkipSelf() parentModule: LayoutModule) {\n        if (parentModule) {\n            throw new Error(\n                'LayoutModule is already loaded. Import it in the StudioModule only');\n        }\n    }\n}\n\n","<div class=\"csi-pers-report\">\r\n    <div *ngFor=\"let s of sections\" class=\"csi-pers-report-section\">\r\n        <div class=\"sectionHeading collapsible\" (click)=\"toggleVisibility(s)\">{{ s.Name }}</div>\r\n        <div *ngIf=\"s.Type=='VirtualPageInfoSection'\" [hidden]=\"!s.IsOpen\">         \r\n            <table class=\"csi-pers-report-table\">\r\n                <tr>\r\n                    <th colspan=\"2\">\r\n                        <span>\r\n                            {{s.PageName}}\r\n                        </span>\r\n                    </th>\r\n                </tr>\r\n                <tr *ngIf=\"s.Description\">\r\n                    <td>{{s.DescriptionLbl}}</td>\r\n                    <td>\r\n                        {{s.Description}}\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"s.CodeBehind\">\r\n                    <td>{{s.CodeBehindLbl}}</td>\r\n                    <td>\r\n                        {{s.CodeBehind}}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{{s.WorkspaceLbl}}</td>\r\n                    <td>\r\n                        {{s.Workspace}}\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"s.CreatedBy\">\r\n                    <td>{{s.CreatedByLbl}}</td>\r\n                    <td>\r\n                        {{s.CreatedBy}}\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"s.LastModifiedBy\">\r\n                    <td>{{s.LastModifiedByLbl}}</td>\r\n                    <td>\r\n                        {{s.LastModifiedBy}}\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"s.LastModified\">\r\n                    <td>{{s.LastModifiedLbl}}</td>\r\n                    <td>\r\n                        {{s.LastModified}}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{{s.BehaviorLbl}}</td>\r\n                    <td>\r\n                        {{s.Behavior}}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{{s.TypeNameLbl}}</td>\r\n                    <td>\r\n                        {{s.TypeName}}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{{s.PrimaryServiceTypeLbl}}</td>\r\n                    <td>\r\n                        {{s.PrimaryServiceType}}\r\n                    </td>\r\n                </tr>\r\n            </table>          \r\n            <div *ngIf=\"s.DataContracts && s.DataContracts.length\">                \r\n                <div class=\"sectionHeading collapsible\" (click)=\"toggleVisibility(s.DataContracts[0])\">{{ s.DataContracts[0].Name }}</div>\r\n                <table class=\"csi-pers-report-table\" [hidden]=\"!s.DataContracts[0].IsOpen\">\r\n                    <tr>\r\n                        <th colspan=\"4\">{{s.DataMembersLbl}}</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td *ngFor=\"let hr of s.DataContracts[0].HeaderRows\">\r\n                            {{hr}}\r\n                        </td>\r\n                    </tr>\r\n                    <tr *ngFor=\"let dc of s.DataContracts[0].DataMembers\">\r\n                        <td>\r\n                            {{dc.ConnectionType}}\r\n                        </td>\r\n                        <td>\r\n                            {{dc.Key}}\r\n                        </td>\r\n                        <td>\r\n                            {{dc.Property}}\r\n                        </td>\r\n                        <td>\r\n                            {{dc.Name}}\r\n                        </td>                        \r\n                    </tr>\r\n                </table>                       \r\n            </div>\r\n        </div>        \r\n    </div>\r\n    <br /> \r\n    <div *ngFor=\"let wp of webpartSections\" class=\"csi-pers-report-section\">\r\n        <div class=\"sectionHeading collapsible\" (click)=\"toggleVisibility(wp)\">{{wp.Name}}</div>\r\n        <div [hidden]=\"!wp.IsOpen\">\r\n            <span [class]=\"!wp.IsReference ? 'sectionHide' : 'btn btn-link'\" (click)=\"openReferencedWebPart(wp)\">{{wp.OpenWebPartLbl}}</span>\r\n            <table *ngFor=\"let wpwc of wp.WorkspaceContent\" class=\"csi-pers-report-table\">\r\n                <tr>\r\n                    <td>\r\n                        {{wpwc.NameLbl}}\r\n                    </td>\r\n                    <td>\r\n                        {{wpwc.WebPartName}}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        {{wpwc.TitleLbl}}\r\n                    </td>\r\n                    <td>\r\n                        {{wpwc.Title}}\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"wpwc.TypeName\">\r\n                    <td>{{wpwc.TypeNameLbl}}</td>\r\n                    <td>\r\n                        {{wpwc.TypeName}}\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"wpwc.CreatedBy\">\r\n                    <td>{{wpwc.CreatedByLbl}}</td>\r\n                    <td>\r\n                        {{wpwc.CreatedBy}}\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"wpwc.LastModifiedBy\">\r\n                    <td>{{wpwc.LastModifiedByLbl}}</td>\r\n                    <td>\r\n                        {{wpwc.LastModifiedBy}}\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"wpwc.LastModified\">\r\n                    <td>{{wpwc.LastModifiedByLbl}}</td>\r\n                    <td>\r\n                        {{wpwc.LastModified}}\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"wpwc.PrimaryServiceType\">\r\n                    <td>{{wpwc.PrimaryServiceTypeLbl}}</td>\r\n                    <td>\r\n                        {{wpwc.PrimaryServiceType}}\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n            <br/>\r\n            <div *ngIf=\"wp.DataContracts && wp.DataContracts.length\">\r\n                <table class=\"csi-pers-report-table\" *ngFor=\"let wpdc of wp.DataContracts\">\r\n                    <tr>\r\n                        <th colspan=\"5\">{{wpdc.DataMembersLbl}}</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td *ngFor=\"let hr of wpdc.HeaderRows\">\r\n                            {{hr}}\r\n                        </td>\r\n                    </tr>\r\n                    <tr *ngFor=\"let dc of wpdc.DataMembers\">\r\n                        <td>\r\n                            {{dc.ConnectionType}}\r\n                        </td>\r\n                        <td>\r\n                            {{dc.Key}}\r\n                        </td>\r\n                        <td>\r\n                            {{dc.Property}}\r\n                        </td>\r\n                        <td>\r\n                            {{dc.Name}}\r\n                        </td>\r\n                        <td>\r\n                            {{dc.AllowEmptyValue}}\r\n                        </td>\r\n                    </tr>\r\n                </table>                \r\n            </div>           \r\n            <br />            \r\n            <span [class]=\"!wp.Controls.length ? 'sectionHide' : 'sectionHeading'\">{{ wp.ControlLbl }}</span>                                \r\n            <div *ngFor=\"let wpwcCntrl of wp.Controls\">\r\n                <table class=\"csi-pers-report-table\">\r\n                    <tr>\r\n                        <td>{{wpwcCntrl.NameLbl}}</td>\r\n                        <td>{{wpwcCntrl.Name}}</td>\r\n                    </tr>                    \r\n                    <tr *ngFor=\"let cntrlProp of wpwcCntrl.ControlProperties\">\r\n                        <td>{{cntrlProp.Name}}</td>\r\n                        <td>{{cntrlProp.Value}}</td>\r\n                    </tr>                                                                                                                                                \r\n                </table>\r\n                <br/>                \r\n            </div>\r\n            <br />\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, OnChanges, Input } from '@angular/core';\nimport { IPersSection, IPersDataContract, IControl, IPersWebPart, IPersVirtualPageInfoSection, IPersControls, IElement, IUIComponentRef, PersSectionType } from '../../common/objects/common';\nimport { PanelUpdatedData } from '../../panel/panel';\nimport { PortalService } from '../../common/services/portal.service';\nimport { LabelService } from '../../common/services/label.service';\nimport { PersonalizationTypes } from '../../common/services/metadata.service';\nimport { StudioStateService } from '../../common/services/studioStateService';\n\nimport * as _ from 'lodash';\n\n@Component({\n    selector: 'csi-pers-report',\n    host: {\n        'style': 'flex-grow: 2; display: flex; flex-direction: column;'\n    },\n    templateUrl: 'personalizationReport.component.html'\n})\n\nexport class PersonalizationReportComponent implements OnInit, OnChanges {\n    @Input(\"element\") __element: any;\n    get element(): IElement { return this.__element; }\n    set element(v: IElement) { this.__element = v; }\n\n    constructor(private _studioStateService: StudioStateService, private _labelService: LabelService, private _portalService: PortalService) {\n    }\n\n    private metadata: PersonalizationTypes;\n    private controls: IControl[];\n    //private errorMessage: any;\n    sections: IPersSection[] = [];\n    webpartSections: IPersWebPart[] = [];\n\n    // Component Labels\n    private vpSectionLbl: string;\n    private descrLbl: string;\n    private titleLbl: string;\n    private behaviorLbl: string;\n    private primarySvcLbl: string;\n    private lastModLbl: string;\n    private lastModByLbl: string;\n    private codeBehindLbl: string;\n    private createdByLbl: string;\n    private typeNameLbl: string;\n    private workspaceLbl: string;\n    private dataContractsLbl: string;\n    private nameLbl: string;\n    private connTypeLbl: string;\n    private keyLbl: string;\n    private propLbl: string;\n    private openWebPartLbl: string;\n    private controlNameLbl: string;\n    private controlLbl: string;\n\n    ngOnInit(): void {        \n        this.load();\n    }\n\n    ngOnChanges(ch): void {\n        this.load();\n    }\n\n    private parseDateString(dateStr: string): string {\n        let formattedStr: string = '';\n        if (!isNaN(Date.parse(dateStr))) {\n            let hour: number = Number(dateStr.split('T')[1].split(':')[0]);\n            let min: number = Number(dateStr.split('T')[1].split(':')[1]);\n            let ampm: string = hour >= 12 ? 'PM' : 'AM';\n            let year: number = Number(dateStr.split('-')[0]);\n            let month: number = Number(dateStr.split('-')[1]);\n            let day: number = Number(dateStr.split('-')[2].substr(0, dateStr.split('-')[2].indexOf('T')));\n            let d = new Date(year, month, day, hour, min);\n            hour = d.getHours() <= 12 ? d.getHours() : d.getHours() - 12;\n            let minStr: string = min >= 10 ? min.toString() : '0' + min.toString()\n            formattedStr = month.toString() + '/' + day.toString() + '/' + year.toString() + ' ' + hour + ':' + minStr + ' ' + ampm;\n        }\n        return formattedStr;\n    }\n\n    private parsePropertyName(propName: string): string {\n        let newName: string = '';\n        for (var i = 0; i < propName.length; i++) {\n            let cur = propName.charAt(i);\n            if (i === 0) {\n                newName += cur.toUpperCase();\n            }\n            else {\n                if (cur === propName.charAt(i).toUpperCase()) {\n                    newName += ' ' + cur;\n                }\n                else {\n                    newName += cur;\n                }\n            }\n        }\n        return newName;\n    }\n\n    private loadLabels() {\n        this.vpSectionLbl = this._labelService.getLabel('PS_VPSECTIONNAMELBL', 'Virtual Page Basic Information');\n        this.descrLbl = this._labelService.getLabel('PS_DESCRIPTIONLBL', 'Description');\n        this.titleLbl = this._labelService.getLabel('PS_TITLELBL', 'Title');\n        this.behaviorLbl = this._labelService.getLabel('PS_BEHAVIORLBL', 'Behavior');\n        this.primarySvcLbl = this._labelService.getLabel('PS_PRIMARYSVCLBL', 'Primary Service Type');\n        this.lastModLbl = this._labelService.getLabel('PS_LASTMODIFIEDLBL', 'Last Modified');\n        this.lastModByLbl = this._labelService.getLabel('PS_LASTMODIFIEDBYLBL', 'Last Modified By');\n        this.codeBehindLbl = this._labelService.getLabel('PS_CODEBEHINDLBL', 'Code Behind');\n        this.createdByLbl = this._labelService.getLabel('PS_CREATEDBYLBL', 'Create By');\n        this.typeNameLbl = this._labelService.getLabel('PS_TYPENAMELBL', 'Type Name');\n        this.workspaceLbl = this._labelService.getLabel('PS_WORKSPACELBL', 'Workspace');\n        this.dataContractsLbl = this._labelService.getLabel('PS_DATACONTRACTSLBL', 'Data Contracts');\n        this.nameLbl = this._labelService.getLabel('PS_NAMELBL', 'Name');\n        this.connTypeLbl = this._labelService.getLabel('PS_CONNECTIONTYPELBL', 'Connection Type');\n        this.keyLbl = this._labelService.getLabel('PS_KEYLBL', 'Key');\n        this.propLbl = this._labelService.getLabel('PS_PROPERTYLBL', 'Property');\n        this.openWebPartLbl = this._labelService.getLabel('PS_OPENWEBPARTLBL', 'Open Web Part');\n        this.controlNameLbl = this._labelService.getLabel('PS_CONTROLNAMELBL', 'Control Name');\n        this.controlLbl = this._labelService.getLabel('PS_LAYOUT_CONTROLS', 'Controls');\n    }\n\n    private async load() {\n        let md = await this._portalService.getMetadata().toPromise();\n        if (md) {\n            this.metadata = md;\n        }\n        let ctrls = await this._portalService.getControls().toPromise();\n        if (ctrls) {\n            this.controls = ctrls;\n        }\n\n        this.loadLabels();\n        let sections: IPersSection[] = [];\n        let webpartSections: IPersWebPart[] = [];\n        this._portalService.getElement(this.element.name, this.element.type).subscribe(resp => {\n            if (resp.type === 'Page') {\n                let behaviorType: string = '';\n                if (this.metadata) {\n                    let behaviorTypeMD = this.metadata['pagebehaviortype'];\n                    if (behaviorTypeMD) {\n                        let enumVals = behaviorTypeMD.enumValues;\n                        if (enumVals) {\n                            behaviorType = enumVals[resp.properties['behavior']].name;\n                        }\n                    }\n                }\n                let vpInfoSection: IPersVirtualPageInfoSection = {\n                    Name: this.vpSectionLbl,\n                    Description: resp.properties['description'],\n                    DescriptionLbl: this.descrLbl,\n                    PageName: resp.name,\n                    Title: resp.properties['title'],\n                    TitleLbl: this.titleLbl,\n                    Behavior: behaviorType,\n                    BehaviorLbl: this.behaviorLbl,\n                    PrimaryServiceType: resp.properties['primaryServiceType'],\n                    PrimaryServiceTypeLbl: this.primarySvcLbl,\n                    LastModified: this.parseDateString(resp.properties['lastModified']),\n                    LastModifiedLbl: this.lastModLbl,\n                    LastModifiedBy: resp.properties['lastModifiedBy'],\n                    LastModifiedByLbl: this.lastModByLbl,\n                    CodeBehind: resp.properties['codeBehind'],\n                    CodeBehindLbl: this.codeBehindLbl,\n                    CreatedBy: resp.properties['createdBy'],\n                    CreatedByLbl: this.createdByLbl,\n                    IsOpen: true,\n                    Type: PersSectionType[PersSectionType.VirtualPageInfoSection],\n                    TypeName: resp.properties.typeName,\n                    TypeNameLbl: this.typeNameLbl,\n                    Workspace: resp.properties.workspaceCode,\n                    WorkspaceLbl: this.workspaceLbl\n                };               \n\n                if (resp.properties && resp.properties.workspaceCode) {\n                    vpInfoSection.Workspace = resp.properties.workspaceCode\n                }\n\n                vpInfoSection.DataContracts = this.getDataContractsForSection(resp);\n                sections.push(vpInfoSection);\n            }\n            else if (resp.type == 'Webpart') {\n                let wpsection = this.parseWebpartItem(resp);\n                if (wpsection) {\n                    webpartSections.push(wpsection);                    \n                }\n            }\n\n            if (resp.items) {\n                _.forEach(resp.items, i => {\n                    if (i.type === 'Webpart') {\n                        let wpsection: IPersWebPart = this.parseWebpartItem(i);\n                        if (wpsection) {\n                            wpsection.WorkspaceContent.push(wpsection);\n                            webpartSections.push(wpsection);                            \n                        }\n                    }\n                });\n            }\n            this.sections = sections;\n            this.webpartSections = webpartSections;\n            this._studioStateService.activateElement(this.element);\n        });\n    }\n\n    private parseWebpartItem(wp: any): IPersWebPart {\n        let wpsection: IPersWebPart = {\n            IsOpen: true,\n            Name: wp.name,\n            TypeName: wp._fullTypeName,\n            TypeNameLbl: this.typeNameLbl,\n            Controls: [],\n            DataContracts: [],\n            WebPartName: wp.name,\n            NameLbl: this.nameLbl,\n            Title: wp.properties ? wp.properties.title : '',\n            TitleLbl: this.titleLbl,\n            WorkspaceContent: [],\n            Workspace: '',\n            WorkspaceLbl: this.workspaceLbl,\n            IsReference: wp.isReference,\n            Type: PersSectionType[PersSectionType.WebPart],\n            OpenWebPartLbl: this.openWebPartLbl,\n            ControlLbl: this.controlLbl\n        };\n          \n        wpsection.DataContracts = this.getDataContractsForSection(wp);\n                \n        if (wp.items) {\n            let controls: any[] = [];\n            _.forEach(wp.items, i => {\n                if (i.type == 'Control') {\n                    let cntrl = this.parseControlItem(i);\n                    controls.push(cntrl);\n                    wpsection.Controls = controls;\n                }\n                else if (i.type == 'Webpart') {\n                    this.parseWebpartItem(i);\n                }\n            });            \n        }\n        return wpsection;\n    }\n\n    private parseControlItem(c: IElement): IPersControls {\n        let cntrl: IPersControls = {\n            Name: c.name,\n            NameLbl: this.controlNameLbl,\n            IsOpen: true,\n            ControlProperties: [],\n            Workspace: '',\n            Type: PersSectionType[PersSectionType.Control]\n        };\n\n        let cntrlProps = this.parseProperties(c.properties, c.typeName);\n        cntrl.ControlProperties = cntrlProps;\n\n        return cntrl;\n    }\n\n    private parseProperties(props: any, propType: string): any[] {\n        let ary: any[] = [];        \n\n        for (var p in props) {\n            if (p !== 'name') {\n                let prop: any = {\n                    Name: '',\n                    Value: ''\n                };\n                // Enums\n                if (this.metadata) {\n                    let md = this.metadata[p.toLowerCase() + 'type'] ? this.metadata[p.toLocaleLowerCase() + 'type'] : this.metadata[p.toLowerCase() + 's'];\n                    if (md && md.enumValues) {\n                        prop.Name = this.parsePropertyName(p);\n                        prop.Value = md.enumValues[props[p]].name;\n                    }\n                    else {                        \n                        let pType = this.metadata[propType.toLowerCase()];\n                        if (pType) {\n                            // Get control property to check if enum\n                            let cntrlProps = pType.properties;\n                            if (cntrlProps && cntrlProps.length) {\n                                let cp = cntrlProps.find(x => {\n                                    return x.name.toLowerCase() == p.toLowerCase();\n                                });\n                                if (cp) {\n                                    // Check if control property is an enum\n                                    let mdType = this.metadata[cp.originalTypeName.toLowerCase()];\n                                    if (mdType && mdType.enumValues) {\n                                        prop.Name = this.parsePropertyName(p);\n                                        // Set property value to enum name\n                                        prop.Value = mdType.enumValues[props[p]].name;\n                                    }\n                                    else {\n                                        let valObj = props[p];\n                                        if (!(valObj instanceof (Object))) {\n                                            prop.Name = this.parsePropertyName(p);\n                                            if (prop)\n                                                prop.Value = valObj;\n                                        }\n                                        else {\n                                            let valCntrl = this.controls.find(x => {\n                                                return x.type == valObj.type;\n                                            });\n                                            if (valCntrl) {\n                                                prop.Name = this.parsePropertyName(p);\n                                                prop.Value = valCntrl.typeName;\n                                            }\n                                        }\n                                    }\n                                }                                \n                            }                            \n                        }\n                        else {\n                            let cntrlMD = this.controls.find(x => {\n                                return x.name.toLowerCase() == propType.toLowerCase();\n                            });\n                            if (cntrlMD) {\n                                prop.Name = cntrlMD.name;\n                                prop.Value = cntrlMD.typeName;\n                            }\n                            else {\n                                prop.Name = this.parsePropertyName(p);\n                                prop.Value = '';\n                            }\n                        }\n                    }\n                    if (prop.Value) {\n                        ary.push(prop);\n                    }\n                }\n            }\n        }\n        return ary;\n    }\n\n    private getDataContractsForSection(element: any): IPersDataContract[] {         \n        let ary:IPersDataContract[] = [];\n        let dcSection: IPersDataContract = {\n            Name: this.dataContractsLbl,\n            IsOpen: true,\n            HeaderRows: [\n                this.nameLbl, this.connTypeLbl, this.keyLbl, this.propLbl\n            ],\n            Type: PersSectionType[PersSectionType.DataContract],\n            SortAsc: true,           \n            DataMembers: [],\n            DataMembersLbl: this.dataContractsLbl\n        };        \n        if (element.properties && element.properties.dataContract && element.properties.dataContract.dataMembers) {               \n            dcSection.DataMembers = _.map(element.properties.dataContract.dataMembers, x => {               \n                return {\n                    Name: x[\"property\"],\n                    ConnectionType: x[\"name\"],\n                    Key: x[\"__type\"],\n                    Property: x[\"key\"]\n                };             \n            });\n            ary.push(dcSection);\n        }        \n        return ary;\n    }\n\n    openReferencedWebPart(refWebPart: IPersWebPart) {       \n        let cmd = new PanelUpdatedData();               \n        cmd.open = true;\n        let elementRef: IUIComponentRef = <IUIComponentRef> {\n            name: refWebPart.Name,\n            type: 'Webpart',\n            isStatic: !refWebPart.IsReference,\n            isLocked: false,\n            isReference: refWebPart.IsReference,\n            isInDeveloping: false,\n            hasPublishContent: false,\n            owner: ''\n        };\n        cmd.elementRef = elementRef;\n        this._studioStateService.subjects.panel.next(cmd);                    \n    }\n\n    toggleVisibility(s: IPersSection) {            \n        s.IsOpen = !s.IsOpen;      \n    }   \n}","import {\n    Component,\n    EventEmitter,\n    OnInit,\n    Output\n} from '@angular/core';\n\nimport { IElementRef, ExecuteCommand } from '../common/objects/common'\nimport { LocalService } from '../common/services/local.service';\nimport { StudioStateService } from '../common/services/studioStateService';\n\n@Component({\n    selector: 'csi-start-page',\n    templateUrl: 'startPage.component.html',\n    styleUrls: ['startPage.component.less']\n})\n\nexport class StartPageComponent implements OnInit {\n    @Output() onLoadElement = new EventEmitter<IElementRef>();\n\n    elementHistory: IElementRef[];\n\n    constructor(private _localService: LocalService, private _studioState: StudioStateService) {\n    }\n\n    ngOnInit(): void {\n        this.elementHistory = this._localService.getElementHistory();\n    }\n\n    loadElement(element: IElementRef): void {\n        this.onLoadElement.emit(element);\n    }\n\n    cmdExecute(command: string) {\n        this._studioState.subjects.execute.next(new ExecuteCommand(command, null, null));\n    }\n\n    whatsNewLink() {\n        window.alert('whatsNewLink : To be done!');\n    }\n\n    helpLink() {\n        let host = window.location.origin;\n        let path = window.location.pathname.split('/');\n        let url = host+'/'+path[1]+'/OnlineHelpOutput/PortalStudio2_Help/PortalStudio2_Help.htm';\n        window.open(url,\"\",\"resizable=yes\");\n    }\n    cdnLink() {\n        window.alert('cdnLink: To be done!');\n    }\n}","<section class=\"csi-start-page-actions\">\n    <div>\n        <div class=\"header-text\">{{ 'Create New' | label: 'PS_CREATE_NEW' }}</div><br />\n        <ul>\n            <li><a (click)='cmdExecute(\"newPage\")'>{{'New Page' | label: 'PS_NEW_PAGE'}}...</a></li>\n            <li><a (click)='cmdExecute(\"newWebpart\")'>{{'New Web Part' | label: 'PS_NEW_WEBPART'}}...</a></li>\n            <li><a (click)='cmdExecute(\"newPageflow\")'>{{'New Pageflow' | label: 'PS_NEW_PAGEFLOW'}}...</a></li>\n            <li><a (click)='cmdExecute(\"newMenu\")'>{{'New Menu Definition' | label: 'PS_NEW_MENU'}}...</a></li>\n            <li><a (click)='cmdExecute(\"newAction\")'>{{'New Page Action' | label: 'PS_NEW_PAGE_ACTION'}}...</a></li>\n            <li><a (click)='cmdExecute(\"newActionRule\")'>{{'New Page Action Rule' | label: 'PS_NEW_PAGE_ACTION_RULE'}}...</a></li>\n        </ul>\n    </div>\n    <div class=\"csi-recent\">\n        <div class=\"header-text\">{{'Recent' | label: 'PS_RECENT'}}</div><br />\n        <div *ngFor=\"let element of elementHistory\">\n            <a *ngIf='element.type!=\"StartPage\"' (click)=\"loadElement(element)\">{{element.name}}</a>\n        </div>\n    </div>\n</section>\n<section class=\"csi-start-page-links\">\n    <div class=\"csi-whats-new\">\n        <div class=\"csi-whats-new-img\"></div>\n        <div class=\"csi-whats-new-content\">\n            <div class=\"header-text\">{{\"What's New\" | label: 'PS_WHAT_NEW'}}</div>\n            <ul>\n                <li><a (click)=\"whatsNewLink();\">{{\"What's new in Portal Studio\" | label: 'PS_WHAT_NEW_PS'}}</a></li>\n            </ul>\n        </div>\n    </div>\n    <div class=\"csi-getting-started\">\n        <div class=\"csi-getting-started-img\"></div>\n        <div class=\"csi-getting-started-content\">\n            <div class=\"header-text\">{{'Getting Started' | label: 'PS_GET_START' }}</div>\n            <ul>\n                <li><a class=\"csi-learning-resources-link\"(click)=\"helpLink();\">{{'Getting Started with Portal Studio' | label: 'PS_GET_START_PS'}}</a></li>\n                <li><a (click)=\"cdnLink();\">{{'Camstar Developer Network' | label: 'PS_CDN'}}</a></li>\n            </ul>\n        </div>\n    </div>\n\n    <div class=\"csi-learning-resources\">\n        <div class=\"csi-learning-resources-img\"></div>\n        <div class=\"csi-learning-resources-content\">\n            <div class=\"header-text\">{{'Learning Resources (Product Video)' | label: 'PS_LEARNING_RESOURCES'}}</div>\n            <ul>\n                <li><a (click)=\"helpLink();\">{{'How can I start new page?' | label: 'PS_LEARNING_RESOURCES'}}</a></li>\n                <li><a (click)=\"cdnLink();\">{{'Where can I find sample templates?' | label: 'PS_LEARNING_RESOURCES'}}</a></li>\n                <li><a (click)=\"cdnLink();\">{{'How can I drag conrols on page?' | label: 'PS_LEARNING_RESOURCES'}}</a></li>\n                <li><a (click)=\"cdnLink();\">{{'How can I configure my settings?' | label: 'PS_LEARNING_RESOURCES'}}</a></li>\n                <li><a (click)=\"cdnLink();\">{{'How can I report my Bugs?' | label: 'PS_LEARNING_RESOURCES'}}</a></li>\n            </ul>\n        </div>\n    </div>\n</section>","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { IElement, IUIDesigner, ExecuteCommand } from '../common/objects/common';\nimport { ConfirmDialogComponent } from '../shared/dialog/confirm.dialog.component';\nimport { LabelService } from '../common/services/label.service';\nimport { StudioStateService } from '../common/services/studioStateService';\n\n@Component({\n    selector: 'csi-layout-tabs',\n    templateUrl: 'tabs.component.html',\n    styles:[`\n\n    :host() {\n        min-height: 30px;\n        background-color: #dcdcdc;\n        overflow-y: hidden;\n        overflow-x: auto;\n        display: flex;\n        flex: 0 0 auto;\n    }\n\n\n    .csi-editor-tab {\n        display: flex;        \n        padding: 3px 10px;\n        justify-content: center;\n        background-color: #dcdcdc;\n        border-right: 1px solid white;\n        cursor: pointer;\n        white-space: nowrap;\n    }\n\n    .csi-editor-tab:hover{\n        background-color: #AFD7E1;\n    }\n    .csi-editor-tab:active{\n        font-weight: bold;\n        background-color: #CDE6EB;\n    }\n\n    .dirty-flag{\n        padding-left: 3px;\n    }\n\n    .csi-editor-tab.active {\n        font-weight: bold;\n        background-color: #F0F0F0;\n    }\n\n    `]\n})\n\nexport class LayoutTabsComponent {\n    @Input(\"elements\") __elements: any;\n    @Input(\"activeElement\") __activeElement: any;\n\n    @Output() closeElement: EventEmitter<IElement> = new EventEmitter<IElement>();\n    @Output() closeAndSaveElement: EventEmitter<IElement> = new EventEmitter<IElement>();\n\n    get elements(): IUIDesigner[] { return this.__elements; }\n    set elements(v: IUIDesigner[]) { this.__elements = v; }\n\n    get activeElement(): IUIDesigner { return this.__activeElement; }\n    set activeElement(v: IUIDesigner) { this.__activeElement = v; }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _studioState : StudioStateService,\n        private _labelService: LabelService) { }\n\n    activateSelectElement(element: IElement): void {\n        this._studioState.subjects.execute.next(new ExecuteCommand(\"switchTab\", element, null));\n    }\n\n    closeSelectElement(element: IUIDesigner): void {\n        if (element.isDirty) {\n\n            let yesLabel = this._labelService.getLabel('PS_ACTION_YES', 'Yes');\n            let noLabel = this._labelService.getLabel('PS_ACTION_NO', 'No');\n            let cancelLabel = this._labelService.getLabel('PS_ACTION_CANCEL', 'Cancel');\n            let titleLabel = this._labelService.getLabel('PS_CLOSE', 'Close');\n            let messageLabel = this._labelService.getLabel('PS_SAVE_PENDING', 'Would you like to save pending changes?');\n            let confirmContext = {\n                title: titleLabel,\n                message: messageLabel,\n                actions: [\n                    { action: 'yes', name: yesLabel, isPrimary: true },\n                    { action: 'no', name: noLabel, isPrimary: false },\n                    { action: 'cancel', name: cancelLabel, isPrimary: false }]\n            };\n\n            let dialog = this._dialog.open(ConfirmDialogComponent, { disableClose: true });\n\n            dialog.componentInstance.initContext(confirmContext);\n            dialog.afterClosed().subscribe(res => {\n                //TODO: Check to make sure logic isn't working properly\n                // dialog.onDestroy.subscribe(() => {\n                //     if (isSaved === true)\n                //         this.closeAndSaveElement.emit(element);\n                //     else if (isSaved === false)\n                //         this.closeElement.emit(element);\n                //     else {\n                //         // if cancel = just the dialog is closed\n                //     }\n                // });\n\n                // dialog.result.then(res => {\n                //     if (res === \"yes\") {\n                //         isSaved = true;\n                //     } else if (res === \"no\") {\n                //         isSaved = false;\n                //     }\n                // });\n                if (res === \"yes\") {\n                    this.closeAndSaveElement.emit(element);\n                } else if (res === \"no\") {\n                    this.closeElement.emit(element);\n                }\n            });\n        }\n        else\n            this.closeElement.emit(element);\n    }\n\n    toggleBg(ev: MouseEvent, on: boolean){\n        let t = ev.target as HTMLSpanElement;\n        if(!t.classList.contains(\"csi-editor-tab\"))\n            t = t.parentElement;\n        t.classList.toggle(\"csi-mousedown\", on);\n    }\n}","\r\n\t<div class=\"csi-editor-tab\">\r\n\t\t<i class=\"fa fa-angle-double-down\" [matMenuTriggerFor]=\"addNew\"></i>\r\n\t</div>\r\n\t<mat-menu #addNew=\"matMenu\" class=\"csi-context-menu\" [overlapTrigger]=\"false\">\r\n\t\t<button mat-menu-item *ngFor='let element of elements' (click)='activateSelectElement(element)'>\t\r\n            <span *ngIf=\"element.name == __activeElement.name\" class=\"fa fa-check\"></span>\r\n\t\t\t<span>{{element.name}}</span>\r\n\t\t</button>\r\n\t</mat-menu>\r\n\t<div class=\"csi-editor-tab\" *ngFor='let element of elements' [class.active]=\"element.name === activeElement?.name\" \r\n\t\t\t[csi-closable]=\"element\" (onClose)=\"closeSelectElement($event)\">\r\n\t\t<div (click)='activateSelectElement(element)'>{{element.name}}</div>\r\n\t\t<div class=\"dirty-flag\" *ngIf=\"element.isDirty\">*</div>\r\n\t</div>\r\n","import { Component, Input, OnChanges, Output, EventEmitter, ElementRef, AfterViewChecked } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { AlertService } from '../../alert/alert.service';\nimport { ILabel } from '../../common/objects/common';\n\n@Component({\n    selector: 'csi-hierarchy',\n    templateUrl: 'hierarchy.component.html',\n    styles:[`\n        :host{\n            display: flex;\n            flex-direction: column;\n            flex: 1 1;\n        }\n\n        .csi-hierarchy {\n            height: 100%;\n            overflow: auto;\n            border: solid 1px black;\n        }\n        .csi-hierarchy .list {\n            display: flex;\n            flex-direction: column;\n        }\n        .csi-hierarchy .list .item {\n            white-space: nowrap;\n        }\n\n        .csi-hierarchy .list .item i[hidden] {\n            display: none;\n        }\n  \n        .csi-hierarchy .list .item .name {\n            padding: 1px;\n            cursor: pointer;\n        }\n\n        .csi-hierarchy .list .item .name.selected {\n            background-color: aquamarine;\n        }\n  \n        .csi-hierarchy .list .item .name:hover {\n            background-color: cornflowerblue;\n        }\n    `]\n})\n\nexport class HierarchyComponent implements OnChanges, AfterViewChecked {\n\n    @Input() data: any;\n    @Input() childrenField: string;\n    @Input() search: Subject<string>;\n\n    @Output() onSelect = new EventEmitter<any>();\n    @Output() getNodeName = new EventEmitter<any>();\n\n    list: listItem[];\n    selectedItem: listItem;\n    divList: HTMLElement;\n\n    constructor(private _el: ElementRef, private _alertService: AlertService) {\n        this.list = [];\n    }   \n\n    ngOnChanges(ch) {\n        if (ch.data && ch.data.currentValue) {\n            this.build(ch.data.currentValue, 0);\n        }\n\n        if (ch.search && ch.search.currentValue) {\n            this.search = ch.search.currentValue;\n            this.search.subscribe(s => this.doSearch(s));\n        }\n    }\n\n    ngAfterViewChecked() {\n        this.divList = this._el.nativeElement.getElementsByClassName('list')[0];\n    }\n\n    doSearch(searchString: string) {\n        let si: listItem = null;\n        if (searchString) {\n            // searching starts from selectedItem if set\n            let startIndex = this.selectedItem ? this.list.indexOf(this.selectedItem) : -1;\n            si = this.list.find((l, i: number) => (i > startIndex) && (l.name.toLowerCase().indexOf(<string>(searchString)) != -1));\n            // If next item isn't found keen previous item\n            if(!si && this.selectedItem){\n                this._alertService.confirmModal(<ILabel>{Name: \"PS_NO_MORE_MATCHES\", DefaultValue: \"No more matches can be found. Click OK to start from the beginning\"})\n                    .subscribe(ok=> {\n                        if( ok ){\n                            this.selectedItem = null;\n                            this.search.next(searchString);\n                        }\n                    });\n            }\n        }\n\n        this.selectedItem = si;\n        this.onSelect.emit(this.selectedItem ? this.selectedItem.node : null);\n        if (this.selectedItem)\n            this.divList.children[this.list.indexOf(this.selectedItem)].scrollIntoView();\n\n    }\n\n    expand(l: listItem) {\n        l.expanded = !l.expanded;\n\n        let i = this.list.indexOf(l);\n        // hide children\n        for (i++; i < this.list.length; i++) {\n            if (this.list[i].level > l.level)\n                this.list[i].hidden = !l.expanded;\n            else\n                break;\n        }\n    }\n\n    selectItem(l: listItem) {\n        this.selectedItem = l;\n        this.onSelect.emit(l.node);\n    }\n\n    private build(node, level: number) {\n        let nx = { node: node, name: '' };\n        this.getNodeName.emit(nx);\n        let it = <listItem>{ expanded: true, level: level, name: nx.name, childrenNumber: 0, hidden: false, node: node };\n        this.list.push(it);\n\n        let children = <any[]>node[this.childrenField];\n        if (children && children.length) {\n            it.childrenNumber = children.length;\n            children.forEach(c => {\n                this.build(c, level+1);\n            });\n        }\n    }\n}\n\n\nclass listItem {\n    level: number;\n    name: string;\n    expanded: boolean = true;\n    childrenNumber: number = 0;\n    hidden: boolean = false;\n    node: any;\n}\n\n","<div class=\"csi-hierarchy\">\r\n    <div class=\"list\">\r\n        <span class=\"item\" *ngFor=\"let l of list\" [style.paddingLeft]=\"(l.level*20)+'px'\" [hidden]=\"l.hidden\">\r\n            <i [hidden]=\"l.childrenNumber==0\" [class]=\"l.expanded ?'fa fa-caret-down':'fa fa-caret-right'\" aria-hidden=\"true\" (click)=\"expand(l)\"></i>\r\n            <span class=\"name\" [class.selected]=\"l==selectedItem\" (click)=\"selectItem(l)\">{{l.name}}</span>\r\n        </span>\r\n    </div>\r\n</div>\r\n","export * from './traceLog.module';","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport * as _ from 'lodash';\r\nimport { textLine } from './traceLog';\r\n\r\n\r\n@Component({\r\n    selector: 'csi-raw-text',\r\n    template: `\r\n        <div class=\"csi-raw-text lines\" *ngIf=\"viewOnly && !isPlainText\">\r\n            <div *ngFor=\"let l of lines\">{{l}}</div>\r\n        </div>\r\n        <div class=\"csi-raw-text editable\" *ngIf=\"!viewOnly\">\r\n            <textarea #editableText [attr.spellcheck]=\"false\" (change)=\"txtChange(editableText.value)\">{{text}}</textarea>\r\n        </div>\r\n        <div class=\"csi-raw-text\" *ngIf=\"viewOnly && isPlainText\">\r\n            {{text}}\r\n        </div>\r\n    `\r\n})\r\n\r\nexport class RawTextComponent {\r\n    @Input() text: string | string[] | textLine[];\r\n    @Input() viewOnly: boolean = true;\r\n\r\n    @Output() textChange = new EventEmitter<string>();\r\n\r\n    get isPlainText(): boolean {\r\n        return this.text && typeof this.text == 'string';\r\n    }\r\n\r\n    get lines(): string[] {\r\n        let res: string[] = [];\r\n\r\n        if (!this.isPlainText) {\r\n            let arTxt = <any[]>this.text;\r\n            if (arTxt.length > 0) {\r\n                if (typeof arTxt[0] == \"string\") {\r\n                    res = <string[]>arTxt;\r\n                }\r\n                else {\r\n                    res = (<textLine[]>arTxt).map(a => _.repeat('  ', a.level) + a.text);\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    txtChange(t: string) {\r\n        this.textChange.emit(t);\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { DebugResponse, textLine } from './traceLog';\nimport { WCFService } from '../../common/services/wcf.service';\nimport * as _ from 'lodash';\n\n@Component({\n    selector: 'csi-resubmit',\n    template: `\n    <div class=\"csi-modal\">\n        <header>\n            <span class=\"title\">{{'Resubmit' | label: 'PS_SRV_TRACE_RESUBMIT'}}</span>\n            <span class=\"close-icon\" (click)=\"close('cancel')\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></span>\n        </header>\n        <main>        \n            <div class=\"csi-resubmit\">\n                <span class=\"title\">{{'Request' | label: 'PS_SRV_TRACE_RESUBMIT_REQUEST'}}</span>                \n                <csi-raw-text [text]=\"requestTxt\" [viewOnly]=\"false\" (textChange)=\"reqChanged($event)\"></csi-raw-text>\n\n                <span class=\"title\">{{'Response' | label: 'PS_SRV_TRACE_RESUBMIT_RESPONSE'}}</span>                \n                <csi-raw-text [text]=\"responseLines\" [viewOnly]=\"true\"></csi-raw-text>\n                \n                <div class=\"result\" [class.error]=\"submitSuccess===false\" [class.success]=\"submitSuccess===true\">{{submitMessage}}</div>\n            </div>\n        </main>\n        <footer>           \n            <div class=\"btns\">\n                <div class=\"commit\"><span>{{'Commit' | label: 'PS_SRV_TRACE_RESUBMIT_COMMIT'}}</span><input type=\"checkbox\" [(ngModel)]=\"isCommit\"></div>\n                <span class=\"default-btn\" (click)=\"submit()\">{{'Submit' | label: 'PS_SRV_TRACE_SUBMIT'}}</span>\n                <span class=\"primary-btn\" (click)=\"close('cancel')\">{{'Close' | label: 'PS_CLOSE'}}</span>\n            </div>\n        </footer>\n    </div>        \n    `\n})\n\nexport class ResubmitRequestComponent {\n\n    public set debugResponse(d: DebugResponse) {\n        this.responseLines = [];\n        let doc = new DOMParser().parseFromString(d.Response, \"text/xml\");\n        this.makeLinesFromXml(doc.documentElement);\n\n        this.requestTxt = d.Request;\n    }\n    isCommit: boolean = true;\n\n    responseLines: textLine[] = [];\n    requestTxt: string;\n\n    submitSuccess: boolean;\n    submitMessage: string;\n\n    constructor(private _wcf: WCFService, private _dialogRef: MatDialogRef<ResubmitRequestComponent>) {\n    }\n\n    close(action: string): void {       \n        this._dialogRef.close();\n    }\n\n    submit() {\n        let debRequest = {\n            IncludeRRXML: true,\n            IncludeTimestamps: true,\n            TraceToResponseXML: true,\n            DisableCommit: !this.isCommit\n        };\n        this._wcf.directAccessSubmit(this.requestTxt, debRequest).subscribe(r => {\n\n            this.responseLines = [];\n            let doc = new DOMParser().parseFromString(r.response, \"text/xml\");\n            this.makeLinesFromXml(doc.documentElement);\n\n            if (r.result.IsSuccess === undefined) {\n                this.submitSuccess = false;\n                this.submitMessage = r.result.ExceptionData ? r.result.ExceptionData.Description : 'Some error occurs';\n            }\n            else {\n                this.submitSuccess = r.result.IsSuccess;\n                this.submitMessage = r.result.Message || 'Success!';\n            }\n        });\n    }\n\n    reqChanged(s: string) {\n        this.requestTxt = s;\n    }\n\n\n    makeLinesFromXml(t: Node, level: number = 0) {\n        let s = '<' + t.nodeName;\n\n        _.forEach((<any>t).attributes, a => s += (` ${a.nodeName}='${a.nodeValue}'`));\n\n        let v: string = '';\n        let hasValue = false;\n        let hasChildren = false;\n        let childNodes: Node[];\n\n        if (t.nodeType == 1) {\n            childNodes = _.filter(t.childNodes, c => c.nodeType == 1);\n            if (childNodes.length>0) {\n                hasChildren = true;\n            }\n        }\n\n        if (!hasChildren) {\n            _.forEach(t.childNodes, c => v += ((c.nodeType == 3 || c.nodeType == 4) ? c.textContent : ''));\n            hasValue = v.trim().length > 0;\n        }\n\n        if (hasValue) {\n            s += '>';\n            // if multiline add \\n otherwise the value will be in the same line with open tag\n            if (v.indexOf('\\n') == -1) {\n                s += (v + '</' + t.nodeName + '>');\n                hasValue = false;\n            }\n        }\n        else {\n            if (!hasChildren)\n                s += '/>';\n            else\n                s += '>';\n        }\n\n        // open <tag>\n        this.responseLines.push(<textLine>{ level: level, text: s });\n        if (hasValue) {\n            v.split('\\n').forEach(v => this.responseLines.push(<textLine>{ level: 0, text: v }));\n        }\n\n        if (hasChildren) {\n            // add child nodes\n            _.forEach(childNodes, c => this.makeLinesFromXml(c, level + 1));\n        }\n\n        if (hasValue || hasChildren) {\n            // closed <tag>\n            this.responseLines.push(<textLine>{ level: level, text: '</' + t.nodeName + '>' });\n        }\n    }\n\n}\n\n","import { Component } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { TraceItem, TraceItemAttribute, TraceItemParameter, ServerTraceItem } from './traceLog';\nimport { TraceRawViewComponent } from './traceRawView.component';\nimport { ResubmitRequestComponent } from './resubmitRequest.component';\nimport { Subject } from 'rxjs';\nimport * as _ from 'lodash';\n\n@Component({\n    selector: 'csi-service-trace-view',\n    templateUrl: 'serviceTraceView.component.html',\n    styleUrls: ['serviceTraceView.component.less']\n})\n\nexport class ServiceTraceViewComponent {\n\n    public trace: TraceItem;\n\n    strace: ServerTraceItem;\n    searchSubj = new Subject<string>();\n\n    get dialogRef(): MatDialogRef<ServiceTraceViewComponent> {\n        return this._dialogRef;            \n    }\n\n    get elapsed(): string {\n        if (this.strace && this.strace.Ended && this.strace.Started) {\n            let endTime = this.getTime(this.strace.Ended);\n            let startTime = this.getTime(this.strace.Started);\n\n            let el = (endTime - startTime) / 1000.0;\n            return el.toString();\n        }\n        else\n            return '';\n    }\n\n    get memUsage(): string {\n        if (this.strace && this.strace.EndedMemoryUsage !== undefined && this.strace.StartedMemoryUsage !== undefined) {\n            let m = (this.strace.EndedMemoryUsage - this.strace.StartedMemoryUsage) / 1000.0;\n            return m.toString();\n        }\n        else\n            return '';\n    }\n\n    private getTime(ds: string): number{\n        return parseInt(ds.substr(6));\n    }\n\n    constructor(\n        private _dialogRef: MatDialogRef<ServiceTraceViewComponent>,\n        private _dialog: MatDialog\n        ) {\n\n        this.strace = new ServerTraceItem();\n    }    \n\n    selectNode(st: ServerTraceItem) {\n        this.strace = st || new ServerTraceItem();\n    }\n\n    close() {\n        this._dialogRef.close();\n    }\n\n    doSearch(s: string) {\n        this.searchSubj.next(s);\n    }\n\n    makeNodeName(p) {\n        let node: ServerTraceItem = p.node;\n        let name = node.Name;\n        let getParam = (np: string) => node.Parameters.find(p => p.Name == np) || new TraceItemParameter();\n        let getAttr = (na: string) => (node.Attributes.find(a => a.Name == na) || new TraceItemAttribute()).Value;\n\n        switch (name){\n            case '__cdoPerform':\n                name = \"Perform \" + getAttr(\"__cdoName\") + \".\" + getAttr(\"__method\");\n                break;\n            case 'if':\n                name += (' ' + getParam('Condition').Expression);\n                break;\n            case \"Initialize\":\n                name = \"Init \" + getAttr(\"__cdoName\") + \".\" + getAttr(\"__fieldName\");\n                break;\n            case 'OnGetValue':\n                name = 'Get ' + getAttr('__cdoName') + '.' + getAttr('__fieldName');\n                break;\n        }\n\n        let firstParameter = node.Parameters.find(p => !!p.Value);\n        if (firstParameter) {\n            name += ('[' + firstParameter.Value + ']');\n        }\n\n        p.name = name;\n    }\n\n    rawViewOpen() {\n        let dialog = this._dialog.open(TraceRawViewComponent, { disableClose: true });\n        dialog.componentInstance.traceItem = this.trace.DebugResponse.Trace;\n        dialog.afterClosed().subscribe(res => {\n        });\n    }\n\n    resubmitOpen() {\n        let dialog = this._dialog.open(ResubmitRequestComponent, { disableClose: true });\n        dialog.componentInstance.debugResponse = _.cloneDeep(this.trace.DebugResponse);\n        dialog.afterClosed().subscribe(res => {\n        });\n    }\n\n}\n","<div class=\"csi-modal\" csi-dialog-decor [dialog]=\"dialogRef\" [dialogHeight]=\"500\" [dialogWidth]=\"600\">\r\n    <header>\r\n        <span class=\"title\">{{'Server Trace' | label: 'PS_SERVER_TRACE_TITLE'}}</span>\r\n        <span class=\"close-icon\" (click)=\"close()\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></span>\r\n    </header>\r\n    <main class=\"csi-server-trace-view\">\r\n        <div class=\"main-panel\">\r\n            <div class=\"source\">\r\n                <csi-hierarchy [data]=\"trace.DebugResponse.Trace\" (getNodeName)=\"makeNodeName($event)\" [childrenField]=\"'Children'\" [search]=\"searchSubj\" (onSelect)=\"selectNode($event)\"></csi-hierarchy>\r\n            </div>\r\n            <div class=\"details\">\r\n                <div class=\"search\">\r\n                    <input #searchString type=search>\r\n                    <button (click)=\"doSearch(searchString.value)\">Search</button>\r\n                </div>\r\n\r\n                <span>{{'Value' | label: 'PS_VALUE'}}</span>\r\n                <div class=\"value\">{{strace.Value}}</div>\r\n\r\n                <span>{{'Attributes' | label: 'PS_ATTRIBUTES'}}</span>\r\n                <div class=\"attributes grid\">\r\n                    <div class=\"header\">\r\n                        <span class=\"name\">{{'Name' | label: 'PS_NAME'}}</span>\r\n                        <span>{{'Value' | label: 'PS_VALUE'}}</span>\r\n                    </div>\r\n                    <div class=\"data\">\r\n                        <div *ngFor=\"let a of strace.Attributes\">\r\n                            <span class=\"name\">{{a.Name}}</span>\r\n                            <span>{{a.Value}}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"stat\">\r\n                    <span *ngIf=\"elapsed\">{{'Elapsed' | label: 'PS_SERVER_TRACE_ELAPSED'}}: {{elapsed}}</span>\r\n                    <span *ngIf=\"memUsage\">{{'Memory Usage' | label: 'PS_SERVER_TRACE_MEMUSAGE'}}: {{memUsage}}</span>\r\n                </div>\r\n                <span>{{'Parameters' | label: 'PS_PARAMETERS'}}</span>\r\n                <div class=\"parameters grid\">\r\n                    <div class=\"header\">\r\n                        <span class=\"name\">{{'Name' | label: 'PS_NAME'}}</span>\r\n                        <span>{{'Expression' | label: 'PS_SERVER_TRACE_EXPRESSION'}}</span>\r\n                        <span>{{'Value' | label: 'PS_VALUE'}}</span>\r\n                    </div>\r\n                    <div class=\"data\">\r\n                        <div *ngFor=\"let p of strace.Parameters\">\r\n                            <span class=\"name\">{{p.Name}}</span>\r\n                            <span [title]=\"p.Expression\">{{p.Expression}}</span>\r\n                            <span [title]=\"p.Value\">{{p.Value}}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </main>\r\n\r\n    <footer>\r\n        <div class=\"btns\">\r\n            <span class=\"default-btn\" (click)=\"rawViewOpen()\">{{'Raw View' | label: 'PS_SERVER_TRACE_RAWVIEW'}}</span>\r\n            <span class=\"default-btn\" (click)=\"resubmitOpen()\">{{'Resubmit' | label: 'PS_SERVER_TRACE_RESUBMIT'}}</span>\r\n            <span class=\"primary-btn\" (click)=\"close()\">{{'Cancel' | label: 'PS_CANCEL'}}</span>\r\n        </div>\r\n    </footer>\r\n</div>\r\n","import { Component, Input, AfterViewInit, ElementRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\nimport { TraceItem, TraceItemAttribute, DebugResponse } from './traceLog';\r\nimport { ServiceTraceViewComponent } from './serviceTraceView.component';\r\nimport { AlertService } from '../../alert/alert.service';\r\nimport { ILabel } from '../../common/objects/common';\r\n\r\n@Component({\r\n    selector: 'csi-trace-item',\r\n    template: `\r\n    <div class=\"trace-item\">\r\n        <div class=\"expand-mark\" (click)=\"closed=!closed\" *ngIf=\"!isService\">\r\n            <i *ngIf=\"trace.Children.length>0\" [class]=\"closed ? 'fa fa-caret-right': 'fa fa-caret-down'\" aria-hidden=\"true\"></i>\r\n        </div>\r\n        <div class=\"content\">\r\n            <div class=\"head\">\r\n                <div class=\"caption\">\r\n                    <div class=\"name\">{{trace.Name}}</div>\r\n                    <div class=\"total-elapsed\">{{trace.PageElapsedTime || 'Elapsed ' + pageElapsed}}\r\n                        <button *ngIf=\"isService\" (click)=\"traceButtonClick()\">{{'Service Trace' | label: 'PS_SERVICE_TRACE'}}</button>\r\n                        <button *ngIf=\"trace.PageElapsedTime\" (click)=\"download()\">{{ 'Save' | label: 'PS_SAVE' }}</button>\r\n                        <a class=\"download-btn\" *ngIf=\"trace.PageElapsedTime\" [attr.download]=\"'trace.log'\"></a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"parameters\" *ngIf=\"trace?.Parameters?.length>0\">\r\n                    <div *ngFor=\"let p of trace.Parameters\">\r\n                        {{p.Name}} : {{p.Value}}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"children\" *ngIf=\"!closed\">\r\n                <csi-trace-item [trace]=\"tc\" [isService]=\"isService\" *ngFor=\"let tc of trace?.Children\"></csi-trace-item>\r\n            </div>\r\n        </div>\r\n    </div>`,\r\n    styles:[`\r\n    .trace-item {\r\n        display: flex;\r\n        white-space: nowrap;\r\n    }\r\n    .trace-item .expand-mark {\r\n        padding: 5px;\r\n        width: 15px;\r\n    }\r\n    .trace-item .content {\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n    .trace-item .head {\r\n        display: flex;\r\n        padding: 1px;\r\n    }\r\n    .trace-item .head .caption {\r\n        align-self: center;\r\n    }\r\n\r\n    .trace-item .head .caption .name {\r\n        padding-right: 3px;\r\n        font-weight: bold;\r\n    }\r\n    .total-elapsed {\r\n        color: blueviolet;\r\n    }\r\n    .total-elapsed button {\r\n        color: black;\r\n    }\r\n    .parameters {\r\n        display: flex;\r\n        flex-direction: column;\r\n        border: solid 1px black;\r\n    }\r\n`]\r\n\r\n})\r\n\r\nexport class TraceItemComponent implements AfterViewInit {\r\n\r\n    @Input() trace: TraceItem;\r\n    @Input() isService: boolean;\r\n\r\n    closed: boolean = true;\r\n    get pageElapsed(): string { return this.trace.Elapsed.substr(2, this.trace.Elapsed.length - 3); } \r\n    private downloadLinkBtn: HTMLAnchorElement;\r\n\r\n\r\n    constructor(private _dialog: MatDialog, private _alertService: AlertService, private _element: ElementRef) {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.downloadLinkBtn = this._element.nativeElement.querySelector('.download-btn');\r\n    }\r\n\r\n    traceButtonClick() {\r\n        let dialog = this._dialog.open(ServiceTraceViewComponent, { disableClose: true });\r\n        dialog.componentInstance.trace = this.trace;\r\n        dialog.afterClosed().subscribe(res => {\r\n        });\r\n    }\r\n\r\n\r\n    download() {\r\n        this._alertService.confirmModal(\r\n                <ILabel>{ Name: \"PS_SAVETRACELOG\", DefaultValue: \"Do you want to save Trace.log?\" },\r\n                <ILabel>{ Name: \"PS_FILEDOWNLOAD\", DefaultValue: \"File Download\" }).subscribe(ok => {\r\n                    if (ok) {\r\n                        let text = this.buildTraceToDownload(this.trace);\r\n                        let blob = new Blob([text], { type: 'text/plain' });\r\n                        this.downloadLinkBtn.href = URL.createObjectURL(blob)\r\n                        this.downloadLinkBtn.click();\r\n                    }\r\n        });\r\n    }\r\n\r\n    private buildTraceToDownload(t: TraceItem): string {\r\n        let s = t.Name;\r\n        if (t.Parameters && t.Parameters.length) {\r\n            let parameters = this.buildParameters(t.Parameters);\r\n            s += ('[\\n' + parameters + ']\\n');\r\n        }\r\n        if( t.Children && t.Children.length) {\r\n            s += '{\\n';\r\n            t.Children.forEach(c => s += this.buildTraceToDownload(c));\r\n            s += '}\\n';\r\n        }\r\n        if (t.DebugResponse) {\r\n            s += ('{\\n' + this.buildServiceTraceToDownload(t.DebugResponse) + '}\\n');\r\n        }\r\n        return s;\r\n    }\r\n\r\n    private buildServiceTraceToDownload(dr: DebugResponse): string {\r\n        let t = dr.Trace;\r\n        let s = t.Name;\r\n        if (t.Parameters && t.Parameters.length) {\r\n            let parameters = this.buildParameters(t.Parameters);\r\n            s += ('[\\n' + parameters + ']\\n');\r\n        }\r\n\r\n        s += `[\\n${dr.Request}\\]\\n{${dr.Response}\\n}\\n`;\r\n\r\n        return s;\r\n    }\r\n\r\n    private buildParameters(prms: TraceItemAttribute[]): string {\r\n        let r = '';\r\n        prms.forEach(p => r += (`${p.Name} : ${p.Value}\\n`));\r\n        return r;\r\n    }\r\n}\r\n","import { Component, Input, OnChanges, ChangeDetectorRef, ElementRef} from '@angular/core';\n\nimport { PortalService } from '../../common/services/portal.service';\nimport { WCFService } from '../../common/services/wcf.service';\nimport { TraceItem, TraceLog } from './traceLog';\n\n@Component({\n    selector: 'csi-trace-log',\n    styles: [`\n        :host{\n            display: flex;\n            flex-direction: column;\n            height: 100%;\n            flex: 1 1 auto;                    \n        }\n\n        .csi-trace-log{\n            display: flex;\n            flex-direction: column;\n            flex: 1 1 auto;                    \n        }\n\n        .header {\n            background-color: lightgray;\n            font-weight: bold;\n            padding: 2px 5px;\n            flex: 0 0 auto;\n            display: inline-flex;\n            width: 100%;\n        }\n\n        .header .refresh-btn {\n            padding-left: 20px;\n            padding-right: 20px;\n            color: brown;\n        }\n        .header .refresh-btn i {\n            cursor: pointer;\n        }\n        \n        .header .page-selector {\n            flex-basis: 20%;\n        }\n\n        .header .page-selector select {\n            width: 100%;\n        }\n\n        .log-content {\n            display: flex;\n            overflow: hidden;\n            flex: 1 1;\n        }\n\n        .log-content .transactions {\n            flex: 1 1;\n            overflow: auto;\n        }\n\n        .transactions-container{\n            height: 100%;\n            width: 100%;\n        }\n\n        .server-traces {\n            width: 30%;\n            overflow: auto;\n        }\n\n        .splitter {\n            width: 2px;\n            background-color: #dddddd;\n        }\n    `],\n    templateUrl: 'traceLog.component.html'\n})\nexport class TraceLogComponent implements OnChanges {\n    @Input() activePage: string;\n\n    logItems: TraceItem[] = [];\n    serverItems: TraceItem[] = [];\n    pages: string[] = [];\n    currentPage: string = '';\n\n    constructor(\n        private _portalService: PortalService,\n        private _wcf: WCFService,\n        private _ch: ChangeDetectorRef,\n        _element: ElementRef) {\n\n        this._wcf.getSelectionValues(\"UIVirtualPageMaint\", \"ObjectListInquiry\", true).subscribe(p => {\n            if (p.Rows) {\n                this.pages = p.Rows.map(r => r.Values[0]).concat('').sort();\n                this._ch.markForCheck();\n            }\n        });\n\n        this.reload();\n    }\n\n    ngOnChanges(ch) {\n        if (ch.activePage) {\n            let pn = ch.activePage.currentValue;\n            if (this.pages.find(p => p == pn)) {\n                this.currentPage = pn;\n                this._ch.markForCheck();\n            }\n        }\n    }\n\n    reload() {\n        this._portalService.getTraceLog(this.currentPage).subscribe(t => {\n            this.logItems = (<TraceLog>t).items;\n            this.serverItems = this.getServerTraces().reverse();\n            this._ch.markForCheck();\n        });\n\n    }\n\n    private getServerTraces(items: TraceItem[] = null): TraceItem[] {\n\n        let servs: any[] = [];\n        if (items == null) {\n            items = this.logItems;\n        }\n\n        items.forEach(i => {\n            if (i.DebugResponse)\n                servs.push(i);\n            else\n                servs = this.getServerTraces(i.Children).concat(servs);\n        });\n\n        return servs;\n    }\n}\n","<div class=\"csi-trace-log\">\r\n    <div class=\"header\">\r\n        <span>{{'Trace Viewer' | label:'PS_TRACEVIEWER' }}</span>\r\n        <div class=\"refresh-btn\" (click)=\"reload()\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></div>\r\n        <div class=\"page-selector\">\r\n            <select [(ngModel)]=\"currentPage\" (change)=\"reload()\">\r\n                <option *ngFor=\"let p of pages\" [value]=\"p\">{{p}}</option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n    <div class=\"log-content\">\r\n        <div class=\"transactions\">\r\n            <div class=\"transactions-container\">\r\n                <csi-trace-item [trace]=\"t\" [isService]=\"false\" *ngFor=\"let t of logItems\"></csi-trace-item>\r\n            </div>\r\n        </div>\r\n        <csi-panel-splitter direction=\"v\" [panel]=\"serverTracesPanel\"></csi-panel-splitter>\r\n        <div class=\"server-traces\" #serverTracesPanel>\r\n            <csi-trace-item [trace]=\"s\"  [isService]=\"true\" *ngFor=\"let s of serverItems\"></csi-trace-item>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { NgModule, Optional, SkipSelf }       from '@angular/core';\r\n\r\nimport { PanelModule } from '../../panel/panel.module';\r\nimport { SharedModule } from '../../shared/shared.module';\r\n\r\nimport { HierarchyComponent } from './hierarchy.component';\r\nimport { RawTextComponent } from './rawText.component';\r\nimport { ResubmitRequestComponent } from './resubmitRequest.component';\r\nimport { ServiceTraceViewComponent } from './serviceTraceView.component';\r\nimport { TraceLogComponent } from './traceLog.component';\r\nimport { TraceItemComponent } from './traceItem.component';\r\nimport { TraceRawViewComponent } from './traceRawView.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        PanelModule,\r\n        SharedModule,\r\n    ],\r\n    declarations: [\r\n        HierarchyComponent,\r\n        RawTextComponent,\r\n        ResubmitRequestComponent,\r\n        ServiceTraceViewComponent,\r\n        TraceLogComponent,\r\n        TraceItemComponent,        \r\n        TraceRawViewComponent,        \r\n    ],\r\n    exports: [\r\n        HierarchyComponent,\r\n        RawTextComponent,\r\n        ResubmitRequestComponent,        \r\n        ServiceTraceViewComponent, \r\n        TraceLogComponent,\r\n        TraceRawViewComponent, \r\n    ],\r\n    entryComponents: [\r\n        RawTextComponent,\r\n        ResubmitRequestComponent,        \r\n        ServiceTraceViewComponent,         \r\n        TraceRawViewComponent, \r\n    ]\r\n})\r\nexport class TraceLogModule {\r\n    constructor( @Optional() @SkipSelf() parentModule: TraceLogModule) {\r\n        if (parentModule) {\r\n            throw new Error(\r\n                'TraceLogModule is already loaded. Import it in the LayoutModule only');\r\n        }\r\n    }\r\n}\r\n\r\n","export class TraceLog {\r\n    public items: TraceItem[] = [];\r\n}\r\n\r\nexport class TraceItem {\r\n    logItem: any;\r\n    public DebugResponse: DebugResponse;\r\n\r\n    public Parent: TraceItem;\r\n    public Counter: number;\r\n\r\n    public Elapsed: string; // timeSpan\r\n    public Name: string;\r\n    public Parameters: TraceItemAttribute[];\r\n    public Children: TraceItem[];\r\n    public Fault: boolean;\r\n    public PageElapsedTime: string;\r\n}\r\n\r\nexport class ServerTraceItem {\r\n    public Name: string;\r\n    public Value: string;\r\n    public Attributes: TraceItemAttribute[];\r\n    public Parameters: TraceItemParameter[] \r\n    public Children: ServerTraceItem[];\r\n\r\n    public Started: string;\r\n    public Ended: string;\r\n    public StartedMemoryUsage: number;\r\n    public EndedMemoryUsage: number;\r\n}\r\n\r\nexport class DebugResponse {\r\n    public Trace: ServerTraceItem;\r\n    public Fault: boolean;\r\n    public Request: string;\r\n    public Response: string;\r\n}\r\n\r\nexport class DebugRequest {\r\n    public DisableCommit: boolean;\r\n    public TraceToResponseXML: string;\r\n    public IncludeTimestamps: boolean;\r\n    public IncludeRRXML: boolean;\r\n}\r\n\r\nexport class TraceItemParameter {\r\n    public Name: string = '';\r\n    public Expression: string = '';\r\n    public Value: string = '';\r\n}\r\nexport class TraceItemAttribute {\r\n    public Name: string = '';\r\n    public Value: string = '';\r\n}\r\n\r\nexport class textLine {\r\n    level: number;\r\n    text: string;\r\n}","import { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ServerTraceItem, textLine } from './traceLog';\r\n\r\n@Component({\r\n    selector: 'csi-trace-raw-view',\r\n    template: `\r\n    <div class=\"csi-modal\">\r\n        <header>\r\n            <span class=\"title\">{{'Raw View' | label: 'PS_SERVER_TRACE_RAWVIEW'}}</span>\r\n            <span class=\"close-icon\" (click)=\"close('cancel')\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></span>\r\n        </header>\r\n        <main>        \r\n            <csi-raw-text [text]=\"txtLines\"></csi-raw-text>\r\n        </main>\r\n        <footer>\r\n            <div class=\"btns\">\r\n                <span class=\"default-btn\" (click)=\"close('ok')\">{{'OK' | label: 'PS_OK'}}</span>\r\n                <span class=\"primary-btn\" (click)=\"close('cancel')\">{{'Cancel' | label: 'PS_CANCEL'}}</span>\r\n            </div>\r\n        </footer>\r\n    </div>        \r\n    `\r\n})\r\n\r\nexport class TraceRawViewComponent {\r\n\r\n    public set traceItem(tr: ServerTraceItem) { this.getRawText(tr); }\r\n\r\n    txtLines: textLine[];\r\n\r\n    constructor(private _dialogRef: MatDialogRef<TraceRawViewComponent>) {\r\n        this.txtLines = [];\r\n    }\r\n\r\n    close(action: string): void {       \r\n        this._dialogRef.close();\r\n    }\r\n\r\n    getRawText(t: ServerTraceItem, level: number = 0) {\r\n\r\n        let s = '<' + t.Name;\r\n        t.Attributes.forEach(a => s += (` ${a.Name}='${a.Value}'`));\r\n\r\n        let hasValue = (t.Value !== undefined && t.Value !== null);\r\n\r\n        let hasChidren = (t.Children && t.Children.length > 0);\r\n\r\n        if (hasValue) {\r\n            s += '>';\r\n            // if multiline add \\n otherwise the value will be in the same line with open tag\r\n            if (t.Value.indexOf('\\n') == -1) {\r\n                s += (t.Value + '</' + t.Name + '>');\r\n                hasValue = false;\r\n            }\r\n        }\r\n        else {\r\n            if (!hasChidren)\r\n                s += '/>';\r\n            else\r\n                s += '>';\r\n        }\r\n\r\n        // open <tag>\r\n        this.txtLines.push(<textLine>{ level: level, text: s });\r\n        if (hasValue) {\r\n            t.Value.split('\\n').forEach(v => this.txtLines.push(<textLine>{ level: 0, text: v }));\r\n        }\r\n\r\n        if (hasChidren) {\r\n            // add child nodes\r\n            t.Children.forEach(c => this.getRawText(c, level + 1));\r\n        }\r\n\r\n        if (hasValue || hasChidren) {\r\n            // closed <tag>\r\n            this.txtLines.push(<textLine>{ level: level, text: '</' + t.Name + '>' });\r\n        }\r\n\r\n        return s;\r\n    }\r\n}\r\n\r\n","import { Component, Input, Output, EventEmitter, ViewChild, OnChanges, SimpleChanges} from '@angular/core';\nimport 'brace/index';\nimport 'brace/theme/eclipse';\nimport 'brace/snippets/text';\nimport 'brace/mode/xml';\nimport 'brace/snippets/xml';\nimport 'brace/ext/language_tools.js';\nimport 'brace/ext/searchbox';\nimport { StudioStateService } from '../../common/services/studioStateService';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'xml-textEditor',\n    host: { 'class': 'flex-column-grow' },\n    template: `\n        <div class=\"xml-editor\">\n            <ace-editor #editor [text]=\"xmlText | async\" [mode]=\"'xml'\" style=\"height:100%\" (textChanged)=\"onValueChanged($event)\"\n                [durationBeforeCallback]=\"2000\"\n                [theme]=\"'eclipse'\" \n                [options]=\"aceOptions\" ></ace-editor>\n        </div>\n        `,\n    styles:[`\n            .xml-editor{\n                height: 100%;\n                width: 100%;\n                padding-top: 1px;\n            }\n    `]\n})\n\nexport class XmlTextEditorComponent implements OnChanges {\n    @Input(\"xml\") xmlText: Observable<string>;\n    @Input() zoom: number;\n    @Output() onTextChanged: EventEmitter<string> = new EventEmitter<string>();\n    @ViewChild('editor', {static: true}) editor : any;\n\n    constructor(\n        private _studioService : StudioStateService\n        ) {}\n\n    public aceOptions: any = {\n        enableBasicAutocompletion: true,\n        enableSnippets: true,\n        enableLiveAutocompletion: true\n      };    \n\n    ngOnChanges(ch : SimpleChanges){\n        if( ch.zoom && ch.zoom.currentValue){         \n            let fs = Math.round((12 * ch.zoom.currentValue) / 100.0);\n            this.editor.getEditor().setFontSize(fs);\n        }\n    }\n\n    onValueChanged(xml : string): void {\n        this.onTextChanged.emit(xml);\n    }\n\n    getActiveLine(xml: string): number {\n        if (xml && this._studioService.activeElement) {\n            let activeElementName = this._studioService.activeElement.name;\n            if (activeElementName) {\n                return xml.indexOf(\"Name=\\\"\" + activeElementName + \"\\\"\");\n            }\n        }\n    }\n}","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { LocalService } from '../common/services/local.service';\nimport { LabelService } from '../common/services/label.service';\nimport { HistoryLog } from '../common/objects/historyLog';\nimport { ActionManager } from './actionManager';\nimport { PortalService } from '../common/services/portal.service';\nimport { StudioStateService } from '../common/services/studioStateService';\nimport { MetadataService } from '../common/services/metadata.service';\nimport { PortalSettingsService } from '../common/services/portalSettings.service';\n\n@Component({\n    selector: 'csi-action-menu',\n    templateUrl: 'action-menu.component.html'\n})\n\nexport class ActionMenuComponent {\n    \n    get history(): HistoryLog {\n        if (this._studioStateService.activeRootElement)\n            return this._studioStateService.activeRootElement['history'];\n        return undefined;\n    }\n    \n    private _actionManager: ActionManager;\n    get actionManager(): ActionManager { return this._actionManager; }\n    constructor(\n        private _dialog: MatDialog,\n        private _labelService: LabelService,\n        private _localService: LocalService,\n        private _studioStateService: StudioStateService,\n        private _metadataService : MetadataService,\n        private _portalService: PortalService,\n        private _portalSettingsService: PortalSettingsService    \n        ) {\n\n        this._studioStateService.subjects.menu.subscribe(m=>{\n            this._actionManager.updateMenu(m);\n        });\n\n        this._actionManager = new ActionManager(this._dialog, this._labelService, \n            this._localService, this._studioStateService, this._portalService, this._metadataService, this._portalSettingsService);\n    }  \n}\n","<section class=\"csi-action-bar\">\r\n\t<div class=\"csi-action-area\">\r\n\t\t<div class=\"button-group\">\r\n\t\t\t<div class=\"btn-group\">\r\n\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn dropdown-toggle new\" [attr.title]=\"'New' | label: 'PS_NEW'\" [matMenuTriggerFor]=\"addNew\">{{'New' | label: 'PS_NEW'}} <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i></button>\r\n\t\t\t\t<mat-menu #addNew=\"matMenu\" class=\"csi-context-menu\" [overlapTrigger]=\"false\">\r\n\t\t\t\t\t<button mat-menu-item (click)='actionManager.execute(\"newPage\")'>\r\n\t\t\t\t\t\t<img class=\"csi-add-icon\" src=\"Content/images/portalStudioIcons/new_24.png\" />\r\n\t\t\t\t\t\t<span>{{'Page' | label: 'PS_PAGE'}}</span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button mat-menu-item (click)='actionManager.execute(\"newWebpart\")'>\r\n\t\t\t\t\t\t<img class=\"csi-add-icon\" src=\"Content/images/portalStudioIcons/new_24.png\" />\r\n\t\t\t\t\t\t<span>{{'Web Part' | label: 'PS_WEBPART'}}</span></button>\r\n\t\t\t\t\t<button mat-menu-item (click)='actionManager.execute(\"newPageflow\")'>\r\n\t\t\t\t\t\t<img class=\"csi-add-icon\" src=\"Content/images/portalStudioIcons/new_24.png\" />\r\n\t\t\t\t\t\t<span>{{'Pageflow' | label: 'PS_PAGEFLOW'}}</span></button>\r\n\t\t\t\t\t<button mat-menu-item (click)='actionManager.execute(\"newMenu\")'>\r\n\t\t\t\t\t\t<img class=\"csi-add-icon\" src=\"Content/images/portalStudioIcons/new_24.png\" />\r\n\t\t\t\t\t\t<span>{{'Menu Definition' | label: 'PS_MENU_DEFINITION'}}</span></button>\r\n\t\t\t\t\t<button mat-menu-item (click)='actionManager.execute(\"newTab\")'>\r\n\t\t\t\t\t\t<img class=\"csi-add-icon\" src=\"Content/images/portalStudioIcons/new_24.png\" />\r\n\t\t\t\t\t\t<span>{{'Tab' | label: 'PS_TAB'}}</span></button>\r\n\t\t\t\t\t<button mat-menu-item (click)='actionManager.execute(\"newAction\")'>\r\n\t\t\t\t\t\t<img class=\"csi-add-icon\" src=\"Content/images/portalStudioIcons/new_24.png\" />\r\n\t\t\t\t\t\t<span>{{'Page Action' | label: 'PS_PAGE_ACTION'}}</span></button>\r\n\t\t\t\t\t<button mat-menu-item (click)='actionManager.execute(\"newActionCategory\")'>\r\n\t\t\t\t\t\t<img class=\"csi-add-icon\" src=\"Content/images/portalStudioIcons/new_24.png\" />\r\n\t\t\t\t\t\t<span>{{'Page Action Category' | label: 'PS_PAGE_ACTION_CATEGORY'}}</span></button>\r\n\t\t\t\t\t<button mat-menu-item (click)='actionManager.execute(\"newActionRule\")'>\r\n\t\t\t\t\t\t<img class=\"csi-add-icon\" src=\"Content/images/portalStudioIcons/new_24.png\" />\r\n\t\t\t\t\t\t<span>{{'Page Action Rule' | label: 'PS_PAGE_ACTION_RULE'}}</span></button>\r\n\t\t\t\t\t<button mat-menu-item (click)='actionManager.execute(\"newPageMap\")'>\r\n\t\t\t\t\t\t<img class=\"csi-add-icon\" src=\"Content/images/portalStudioIcons/new_24.png\" />\r\n\t\t\t\t\t\t<span>{{'Map Item' | label: 'PS_MAP_ITEM'}}</span></button>\r\n\t\t\t\t\t<button mat-menu-item (click)='actionManager.execute(\"newTargetMatrix\")'>\r\n\t\t\t\t\t\t<img class=\"csi-add-icon\" src=\"Content/images/portalStudioIcons/new_24.png\" />\r\n\t\t\t\t\t\t<span>{{'Target Matrix Item' | label: 'PS_TARGET_MATRIX_ITEM'}}</span></button>\r\n\t\t\t\t</mat-menu>\r\n\t\t\t</div>\r\n\t\t\t<button type=\"button\" class=\"btn csi-action-btn save\" (click)='actionManager.execute(\"save\")' [disabled]='!actionManager.canExecute(\"save\")' [attr.title]=\"'Save' | label: 'PS_SAVE'\">{{'Save' | label: 'PS_SAVE'}}</button>\r\n\t\t\t<button type=\"button\" class=\"btn csi-action-btn saveAll\" (click)='actionManager.execute(\"saveAll\")' [disabled]='!actionManager.canExecute(\"saveAll\")' [attr.title]=\"'Save All' | label: 'PS_SAVE_ALL'\">{{'Save All' | label: 'PS_SAVE_ALL'}}</button>\r\n\r\n\t\t</div>\r\n\t\t<div class=\"button-group\">\r\n\t\t\t<div class=\"btn-group\" role=\"group\">\r\n\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn undo\" (click)='actionManager.undoRedo(\"undo\",$event.shiftKey)' [disabled]='!actionManager.canExecute(\"undo\")' [attr.title]=\"'Undo' | label: 'PS_UNDO'\">{{'Undo' | label: 'PS_UNDO'}} {{history?.undoCount}}</button>\r\n\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn redo\" (click)='actionManager.undoRedo(\"redo\",$event.shiftKey)' [disabled]='!actionManager.canExecute(\"redo\")'[attr.title]=\"'Redo' | label: 'PS_REDO'\">{{'Redo' | label: 'PS_REDO'}} {{history?.redoCount}}</button>\r\n\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn copy\" (click)='actionManager.copy()' [disabled]='!actionManager.canExecute(\"copy\")' [attr.title]=\"'Copy' | label: 'PS_COPY'\">{{'Copy' | label: 'PS_COPY'}}</button>\r\n\t\t\t\t<button class=\"btn csi-action-btn delete\" (click)='actionManager.execute(\"delete\")' [disabled]='!actionManager.canExecute(\"delete\")' [attr.title]=\"'Delete' | label: 'PS_DELETE'\">{{'Delete' | label: 'PS_DELETE'}}</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"button-group\">\r\n\t\t\t<div class=\"btn-group\" role=\"group\">\r\n\t\t\t\t<fieldset class=\"btn csi-action-btn import\" [disabled]='!actionManager.canExecute(\"import\")'>\r\n\t\t\t\t\t<input title=\"{{'Import' | label: 'PS_IMPORT'}}\" [disabled]='!actionManager.canExecute(\"import\")' type=\"file\" (change)=\"actionManager.importComponent($event)\" value=\"\" accept=\"text/xml\" title=\"\" />{{'Import' | label: 'PS_IMPORT'}}\r\n\t\t\t\t</fieldset>\r\n\t\t\t\t<div class=\"btn-group\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn dropdown-toggle export\" id=\"btnExportActionDropdown\" [matMenuTriggerFor]=\"exportMenu\" [attr.title]=\"'Export' | label: 'PS_EXPORT'\"\r\n\t\t\t\t\t[disabled]='!actionManager.canExecute(\"export\")'>{{'Export' | label: 'PS_EXPORT'}} <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i></button>\r\n\t\t\t\t\t<mat-menu #exportMenu=\"matMenu\" class=\"csi-context-menu\" [overlapTrigger]=\"false\">\r\n\t\t\t\t\t\t<button mat-menu-item (click)='actionManager.execute(\"export\")'>{{'Selected Workspace' | label: 'PS_EXPORTSEL'}}</button>\r\n\t\t\t\t\t\t<button mat-menu-item (click)='actionManager.execute(\"exportAll\")'>{{'All Workspaces' | label: 'PS_EXPORTALL'}}</button>\r\n\t\t\t\t\t</mat-menu>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"btn-group btn-group-vertical\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn-vertical batchImport\" (click)='actionManager.execute(\"batchImport\")'\r\n\t\t\t\t\t[disabled]='!actionManager.canExecute(\"batchImport\")' [attr.title]=\"'Batch Import' | label: 'PS_BATCH_IMPORT'\">{{'Batch Import' | label: 'PS_BATCH_IMPORT'}}</button>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn-vertical batchExport\" (click)='actionManager.execute(\"batchExport\")'\r\n\t\t\t\t\t[disabled]='!actionManager.canExecute(\"batchExport\")' [attr.title]=\"'Batch Export' | label: 'PS_BATCH_EXPORT'\">{{'Batch Export' | label: 'PS_BATCH_EXPORT'}}</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"button-group\">\r\n\t\t\t<div class=\"btn-group btn-group-vertical\" role=\"group\">\r\n\t\t\t\t<div class=\"btn-group\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn revertTo\" [disabled]='!actionManager.canExecute(\"revert\")'\r\n                         [matMenuTriggerFor]=\"revertMenu\" [attr.title]=\"'Revert To' | label: 'PS_REVERT_TO'\">{{'Revert To' | label: 'PS_REVERT_TO'}} <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i> </button>\r\n\t\t\t\t\t<mat-menu #revertMenu=\"matMenu\" class=\"csi-context-menu\" [overlapTrigger]=\"false\">\r\n\t\t\t\t\t\t<button mat-menu-item [hidden]=\"!actionManager.canExecute('revert_published')\" (click)='actionManager.execute(\"revert\", null, \"published\")'>{{'Published Content' | label: 'PS_REVERT_PUBLISHED'}}</button>\r\n\t\t\t\t\t\t<button mat-menu-item [hidden]=\"!actionManager.canExecute('revert_system')\" (click)='actionManager.execute(\"revert\", null, \"system\")'>{{'System Content' | label: 'PS_REVERT_SYSTEM'}}</button>\r\n\t\t\t\t\t</mat-menu>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"button-group\">\r\n\t\t\t<div class=\"btn-group\" role=\"group\">\r\n\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn preview\" (click)='actionManager.preview()' [disabled]='!actionManager.canExecute(\"preview\")' [attr.title]=\"'Preview' | label: 'PS_PREVIEW'\">{{'Preview' | label: 'PS_PREVIEW'}}</button>\r\n\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn run\" (click)='actionManager.run()' [disabled]='!actionManager.canExecute(\"run\")' [attr.title]=\"'Run' | label: 'PS_RUN'\">{{'Run' | label: 'PS_RUN'}}</button>\r\n\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn publish\" (click)='actionManager.publish()' [disabled]='!actionManager.canExecute(\"publish\")' [attr.title]=\"'Publish' | label: 'PS_PUBLISH'\">{{'Publish' | label: 'PS_PUBLISH'}}</button>\r\n\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn generate\" (click)='actionManager.generate()' [disabled]='!actionManager.canExecute(\"generate\")' [attr.title]=\"'Generate' | label: 'PS_GENERATE'\">{{'Generate' | label: 'PS_GENERATE'}}</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"button-group\">\r\n\t\t\t<div class=\"btn-group btn-group-vertical\" role=\"group\">\r\n\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn-vertical extractWP\" (click)='actionManager.execute(\"extract\")' [disabled]='!actionManager.canExecute(\"extract\")' [attr.title]=\"'Extract Web Part' | label: 'PS_EXTRACT_WEBPART'\">{{'Extract Web Part' | label: 'PS_EXTRACT_WEBPART'}}</button>\r\n\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn-vertical reloadWP\" (click)='actionManager.execute(\"reloadWebPart\")' [disabled]='!actionManager.canExecute(\"reloadWebPart\")' [attr.title]=\"'Reload Web Part' | label: 'PS_RELOAD_WEBPART'\">{{'Reload Web Part' | label: 'PS_RELOAD_WEBPART'}}</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"button-group\">\r\n\t\t\t<div class=\"btn-group btn-group-vertical\" role=\"group\">\r\n\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn-vertical showHide\" (click)=\"actionManager.togglePanel('catalog')\" [class.active]=\"actionManager.getDisplayState('catalog')\" [attr.title]=\"'Catalog' | label: 'PS_SH_CATALOG1'\">{{'Catalog' | label: 'PS_SH_CATALOG1'}}</button>\r\n\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn-vertical showHide\" (click)=\"actionManager.togglePanel('toolbox')\" [class.active]=\"actionManager.getDisplayState('toolbox')\" [attr.title]=\"'Toolbox' | label: 'PS_SH_TOOLBOX1'\">{{'Toolbox' | label: 'PS_SH_TOOLBOX1'}}</button>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"btn-group btn-group-vertical\" role=\"group\">\r\n\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn-vertical showHide\" (click)=\"actionManager.togglePanel('property')\" [class.active]=\"actionManager.getDisplayState('property')\" [attr.title]=\"'Properties' | label: 'PS_SH_PROPERTIES1'\">{{'Properties' | label: 'PS_SH_PROPERTIES1'}}</button>\r\n\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn-vertical showHide\" (click)=\"actionManager.togglePanel('traceViewer')\" [class.active]=\"actionManager.getDisplayState('traceViewer')\" [attr.title]=\"'Trace Viewer' | label: 'PS_SH_TRACE_VIEWER1'\">{{'Trace Viewer' | label: 'PS_SH_TRACE_VIEWER1'}}</button>\r\n\t        </div>\r\n\t    </div>\r\n\t    <div class=\"button-group\">\r\n\t        <div class=\"btn-group btn-group-vertical\" role=\"group\">\r\n\t            <button type=\"button\" class=\"btn csi-action-btn-vertical resetSettings\" (click)=\"actionManager.resetPanels()\" [attr.title]=\"'Reset Settings' | label: 'PS_RESET_SETTINGS'\">{{'Reset Settings' | label: 'PS_RESET_SETTINGS'}}</button>\r\n\t            <button class=\"btn csi-action-btn-vertical\" style=\"visibility: hidden\">&nbsp;</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n    <!-- Show the undo log -->\r\n    <div class=\"csi-undo-redo-log\" [hidden]=\"!actionManager.displayHistoryLog\">\r\n        <div *ngFor=\"let l of history?.display(actionManager.displayHistoryLog)\">{{l}}</div>\r\n    </div>\r\n\r\n</section>\r\n\r\n","import { MatDialog } from '@angular/material/dialog';\n\nimport { environment } from '../../environments/environment';\nimport { IUIDesigner, IElement, TopMenuState, ExecuteCommand } from '../common/objects/common';\nimport { HistoryLog } from '../common/objects/historyLog';\nimport { OMType} from '../common/objects/viewModel';\nimport { LabelService } from '../common/services/label.service';\nimport { LocalService } from '../common/services/local.service';\nimport { PortalService } from '../common/services/portal.service';\n\nimport { InputDialogComponent, InputDialogContext } from '../shared/dialog/input.dialog.component';\n\nimport * as _ from 'lodash';\nimport { StudioStateService } from '../common/services/studioStateService';\nimport { MetadataService } from '../common/services/metadata.service';\nimport { PortalSettingsService, SettingSection } from '../common/services/portalSettings.service';\n\nexport class ActionManager  {\n    private _cmd: TopMenuState;\n\n    get rootElement(): IUIDesigner { return <IUIDesigner>this._studioStateService.activeRootElement; }\n    get history(): HistoryLog {\n        if (this._studioStateService.activeRootElement)\n            return this.rootElement['history'];\n        return undefined;\n    }\n\n    _settings: any;\n    constructor(\n        private _dialog: MatDialog,\n        private _labelService: LabelService,\n        private _localService: LocalService,\n        private _studioStateService: StudioStateService,\n        private _portalService: PortalService,\n        private _metadataService : MetadataService,\n        private _portalSettingsService: PortalSettingsService\n        )\n        {\n        this._cmd = new TopMenuState();\n        this.portalSettings();\n    }\n\n    portalSettings() {\n        let sections = this._portalSettingsService.getSections();\n        sections.subscribe(sects => {\n            let templateSection = { name: \"studiosettings\" };\n            this._settings = this._portalSettingsService.getSectionData(<SettingSection>templateSection);\n        });\n    }\n\n    updateMenu(cmd: TopMenuState): void {\n        this._cmd = cmd;\n    }\n\n    //actions\n    execute(command: string, element?: IElement, data?: any) {\n        this._studioStateService.subjects.execute.next(new ExecuteCommand(command, element, data)); \n    }\n\n    copy() {\n        let okLabel = this._labelService.getLabel('PS_ACTION_OK', 'Ok');\n        let cancelLabel = this._labelService.getLabel('PS_ACTION_CANCEL', 'Cancel');\n        let copyTitleLabel = this._labelService.getLabelwithArguments('PS_COPY', 'Copy {0}', [this.rootElement.type]);\n        let copyInputLabel = this._labelService.getLabelwithArguments('PS_COPY_OF', 'Copy of {0}', [this.rootElement.name]);\n        let inputContext: InputDialogContext = {\n            title: copyTitleLabel,\n            message: '',\n            actions: [\n                { action: 'ok', name: okLabel, isPrimary: true },\n                { action: 'cancel', name: cancelLabel, isPrimary: false }],\n            inputs: [{ name: 'txt', type: 'text', text: '', value: copyInputLabel }]\n        };\n\n        let dialog = this._dialog.open(InputDialogComponent, { disableClose: true });\n\n        dialog.componentInstance.initContext(inputContext);\n        dialog.afterClosed().subscribe(res => {\n            let elementInput = res[0];\n            if (elementInput) {\n                let newName = elementInput.value;\n                this._portalService.copyElement(this.rootElement, newName, this._metadataService.getWorkspaceCodeById(this.rootElement.__workspace))\n                    .subscribe(element => {\n                        if (element) {                            \n                            if (element.type && ['page', 'webpart', 'pageflow'].indexOf(element.type.toLowerCase()) >= 0) {\n                                this._studioStateService.addOpenedElement(element);\n                                this._localService.addToElementHistory(element);\n                                this._studioStateService.addOrUpdateComponentRef((<IUIDesigner>element).componentRef);\n                            }\n                            this.execute('copy', element, {\"name\": newName, \"message\": element['Message']});\n                        }\n                    });\n            }\n        });\n    }\n\n    generate() {\n        this.execute(\"generate\", this._cmd.element, this._cmd.data);\n    }\n\n    publish() {\n        let DEBUG_MODE = false;\n        let titleLabel = this._labelService.getLabel('PS_WARNING_PUBLISH_TITLE', 'Publishing');\n        let messageLabel = this._labelService.getLabel('PS_WARNING_PUBLISH_MESSAGE', 'Publishing will replace the current available component with the new one.  Do you want to continue?');\n        let okLabel = this._labelService.getLabel('PS_ACTION_OK', 'Ok');\n        let cancelLabel = this._labelService.getLabel('PS_ACTION_CANCEL', 'Cancel');\n        let removeAllText = this._labelService.getLabel('PS_WARNING_PUBLISH_INPUT_TEXT', 'Remove All personalization associated with this component.');\n        let replaceSystemText = this._labelService.getLabel('PS_WARNING_PUBLISH_REPLACE_TEXT', \"Replace the currently availiable component's System content with the new one.\");\n\n        let inp = [{\n            name: 'cb1',\n            type: 'checkbox',\n            text: removeAllText,\n            value: false\n        }];\n        if (DEBUG_MODE) {\n            inp.push({\n                name: 'cb2',\n                type: 'checkbox',\n                text: replaceSystemText,\n                value: false\n            });\n        }\n\n        let inputContext: any = {\n            title: titleLabel,\n            message: messageLabel,\n            actions: [\n                { action: 'ok', name: okLabel, isPrimary: true },\n                { action: 'cancel', name: cancelLabel, isPrimary: false }],\n            inputs: inp\n        };\n\n        let dialog = this._dialog.open(InputDialogComponent, { disableClose: true });\n\n        dialog.componentInstance.initContext(<InputDialogContext>inputContext);\n        dialog.afterClosed().subscribe(res => {\n            if (res === \"cancel\") {\n            }\n            else {\n                this.rootElement['__publishFlags'] = _.map(res, p => <boolean>p['value']);\n                this.execute('publish');\n            }\n        });\n    }\n\n    preview(): void {\n        let activeComponent = this.rootElement;\n        if (!activeComponent.isDirty && activeComponent.name) {\n            let url = `${environment.portalUrl}/${activeComponent.name}.aspx?Test=true&CallStackKey=Preview`;\n            let win = window.open(url, '_blank');\n            win.focus();\n        }\n    }\n\n    run(): void {\n        let activeComponent = this.rootElement;\n        if (!activeComponent.isDirty && activeComponent.name) {\n            let url = \"\";\n            if (activeComponent.type === \"Pageflow\")\n                url = `${environment.portalUrl}/Main.aspx?redirectToPageflow=${activeComponent.name}`;\n            else\n                url = `${environment.portalUrl}/Main.aspx?redirectToPage=${activeComponent.name}`;\n            let win = window.open(url, '_blank');\n            win.focus();\n        }\n    }\n    importComponent(event): void {\n        let files = event.srcElement.files;\n        if (files.length) {\n            let xmlFile = files[0];\n            if (xmlFile.type == \"text/xml\") {\n                let reader = new FileReader();\n                reader.onloadend = (e: ProgressEvent) => {\n                    let xmlContent = (<FileReader>e.target).result;\n                    let activeComponent = this.rootElement;\n                    if (activeComponent != null) {\n                        var dataToImport = {\n                            rootElement: this.rootElement,\n                            content: xmlContent\n                        }\n                        this.execute('import', null, dataToImport);\n                    }\n                    return true;\n                }\n                reader.readAsArrayBuffer(xmlFile);\n                event.srcElement.value = \"\";\n            }\n        }\n    }\n   \n    //History\n    displayHistoryLog: string;\n    undoRedo(cmd: string, shiftKey: boolean): void {\n        if (shiftKey) {\n            this.displayHistoryLog = this.displayHistoryLog ? '' : cmd;\n        }\n        else {\n            this.displayHistoryLog = '';\n            this.execute(cmd);\n        }\n    }\n\n    togglePanel(panelName: string): void {\n        this.execute(\"togglePanel\", null, panelName);\n    }\n\n    resetPanels(): void {\n        this.execute(\"resetPanels\", null);\n    }\n\n    canExecute(command: string): boolean { \n        let canExecute = null;\n        switch (command.toLowerCase()) {\n            case \"batchimport\":\n            case \"batchexport\":\n                canExecute = true;\n                break;\n            case \"copy\":\n                canExecute = !this.isStartOrNotAvailable() && !this.isNew();\n                break;\n            case \"delete\":\n                canExecute = !this.isStartOrNotAvailable() && !this.isNew() && !this.isStatic();\n                break;\n            case \"export\":\n                canExecute = !this.isStartOrNotAvailable() && (this.isPage() || this.isWebPart() || this.isPageflow());\n                break;\n            case \"extract\":\n                canExecute = !this.isStartOrNotAvailable() && this.isPage() && (this._studioStateService.activeElement && this._studioStateService.activeElement.type == \"Webpart\" && this._studioStateService.activeElement.isReference == false);\n                break;\n            case \"generate\":\n                canExecute = this._cmd && this._cmd.generate && this._cmd.data && this._cmd.data.ItemType == OMType.Service;\n                break;\n            case \"import\":\n                canExecute = !this.isStartOrNotAvailable() && (this.isPage() || this.isWebPart() || this.isPageflow());\n                break;\n            case \"preview\":\n                canExecute = !this.isStartOrNotAvailable() && !this.isDirty() && this.rootElement.isViewable; \n                break;\n            case \"publish\":\n                canExecute = !this.isStartOrNotAvailable() && (this.isPage() || this.isWebPart()) && !this.isDirty() && !this.isNew() && this.isInDeveloping() && this.isInDeveloping();\n                break;\n            case \"redo\":\n                canExecute = this.history && this.history.redoCount;\n                break;\n            case \"revert\":\n                canExecute = this.isRevertable(\"published\") || this.isRevertable(\"system\");\n                break;\n            case \"revert_published\":\n                canExecute = this.isRevertable(\"published\");\n                break;\n            case \"revert_system\":\n                canExecute = this.isRevertable(\"system\");\n                break;\n            case \"run\":\n                canExecute = !this.isStartOrNotAvailable() && !this.isDirty() && this.rootElement.isTestable;\n                break;\n            case \"save\":\n                canExecute = !this.isStartOrNotAvailable() && (this.isDirty() || this.isAvailableSave());\n                break;\n            case \"saveall\":\n                canExecute = !this.isStartOrNotAvailable() && (this.isAnyElementDirty() || this.isAvailableSave());\n                break;\n            case \"undo\":\n                canExecute = this.history && this.history.undoCount;\n                break;\n            case \"reloadwebpart\":\n                canExecute = !this.isStartOrNotAvailable() && this._studioStateService.activeElement && this._studioStateService.activeElement.type == 'Webpart' && !this._studioStateService.activeElement.isReference && this._studioStateService.activeRootElement.type == 'Page';\n                break;\n        }\n        return canExecute;\n    }\n\n    getDisplayState(name: string): boolean {\n        let state: boolean = null;\n        switch (name.toLowerCase()) {\n            case \"catalog\":\n                state = this._localService.isDisplayCatalog();\n                break;\n            case \"toolbox\":\n                state = this._localService.isDisplayToolbox();\n                break;\n            case \"property\":\n                state = this._localService.isDisplayProperty();\n                break;\n            case \"traceviewer\":\n                state = this._localService.isDisplayTraceViewer();\n                break;\n            default:\n                break;\n        }\n        return state;\n    }\n\n    //state helpers\n     isAvailableSave():boolean{\n        if(this._settings){\n            if(this._settings.hasOwnProperty(\"AlwaysEnableSave\")){\n                return this._settings[\"AlwaysEnableSave\"];\n            }else return false;\n        }\n        else return false\n    }\n    private isStartOrNotAvailable(): boolean {\n        return !this.rootElement || this.rootElement.type == 'StartPage';\n    }\n    private isPage(): boolean {\n        return !this.isStartOrNotAvailable() && this.rootElement.type == \"Page\";\n    }\n    private isWebPart(): boolean {\n        return !this.isStartOrNotAvailable() && this.rootElement.type == \"Webpart\";\n    }\n    private isPageflow(): boolean {\n        return !this.isStartOrNotAvailable() && this.rootElement.type == \"Pageflow\";\n    }\n    private isAnyElementDirty(): boolean {\n        return _.some(this._studioStateService.openedElements, ['isDirty', true]);\n    }\n    private isDirty(): boolean {\n        return this.rootElement.isDirty;\n    }\n    private isNew(): boolean {\n        return this.rootElement.isNew;\n    }\n    private isInDeveloping(): boolean {\n        return this.rootElement.workspaceIndexes && this.rootElement.workspaceIndexes.indexOf(0) != -1;\n    }\n    \n    public isCustomWorkspace(): boolean {\n        return typeof this.rootElement.__workspace != \"undefined\" && this.rootElement.__workspace > 1;\n    }\n    private isStatic(): boolean {\n        return this.rootElement['isStatic'] === true;\n    }\n    private isPublished(): boolean {\n        return this.rootElement.workspaceIndexes && this.rootElement.workspaceIndexes.filter(w => w > 1).length > 0;\n    }\n    private isSystem(): boolean {\n        return this.rootElement.workspaceIndexes && this.rootElement.workspaceIndexes.filter(w => w == 1).length > 0;\n    }\n    private isRevertable(t: string ) : boolean{\n        let r = !this.isStartOrNotAvailable() && (this.isPage() || this.isWebPart()) && !this.isNew();\n        if( t == \"system\")\n            return r && this.isSystem() && (this.isPublished() || this.isInDeveloping());\n        else if( t == \"published\")\n            return r && this.isPublished() && this.isInDeveloping();\n        return false;\n    }\n}","export * from './menu.module';\r\n","import { NgModule, Optional, SkipSelf }       from '@angular/core';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n//app components\r\nimport { ActionMenuComponent } from './action-menu.component';\r\nimport { TitleMenuComponent } from './title-menu.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule\r\n    ],\r\n    declarations: [\r\n        ActionMenuComponent,\r\n        TitleMenuComponent,\r\n    ],\r\n    exports: [\r\n        ActionMenuComponent,\r\n        TitleMenuComponent,\r\n    ],\r\n})\r\nexport class MenuModule {\r\n    constructor( @Optional() @SkipSelf() parentModule: MenuModule) {\r\n        if (parentModule) {\r\n            throw new Error(\r\n                'MenuModule is already loaded. Import it in the StudioModule only');\r\n        }\r\n    }\r\n}\r\n","import { Component, Input, OnChanges,  } from '@angular/core'; //ChangeDetectorRef,NgZone, \nimport { MatDialog } from '@angular/material/dialog';\nimport { environment } from '../../environments/environment';\nimport { PortalService } from '../common/services/portal.service';\nimport { PortalSettingsService } from '../common/services/portalSettings.service';\nimport { MetadataService } from '../common/services/metadata.service';\nimport { ModalContainerComponent } from '../panel/properties/valueEditors/modalContainer';\nimport { ExecuteCommand } from '../common/objects/common';\nimport { WorkspaceItem } from '../common/objects/viewModel';\n\nimport { LabelService } from '../common/services/label.service';\nimport { ConfirmDialogComponent } from '../shared/dialog/confirm.dialog.component';\nimport { StudioStateService } from '../common/services/studioStateService';\n\n@Component({\n    selector: 'csi-title-menu',\n    templateUrl: 'title-menu.component.html',\n    styleUrls: [\"title-menu.component.less\"]\n})\n\nexport class TitleMenuComponent implements OnChanges {\n    title: string = \"Opcenter Execution Core\";\n    subtitle: string = \" - Portal Studio 2.0\";\n    wsColor: string;\n\n    @Input(\"activeElement\") __activeElement: any;\n    get workspaces(): WorkspaceItem[] { \n        return this._metadataService.workspaces;\n    }\n    get state() : StudioStateService {return  this._studioStateService; }\n\n    _root:any;\n    _activeWS:number;\n    _minWS: number;\n    _wsWithContent:any;\n    _activeWsWithContent:boolean;\n    _countWsWithContent: number;\n\n    constructor(\n        private _dialog: MatDialog,\n        private _labelService: LabelService,\n        private _metadataService: MetadataService,\n        private _portalService: PortalService,\n        private _studioStateService : StudioStateService,\n        private _portalSettingsService: PortalSettingsService) {\n        this.addWorkspaceStyles();\n    }\n\n    ngOnChanges(){\n        this._root = this._studioStateService.getRoot();\n        this._activeWS = this._metadataService.workspaces.reduce((prev, current) => (prev.ID > current.ID) ? prev : current).ID;\n        if(this._root.workspaceIndexes){\n            this._wsWithContent = this._root.workspaceIndexes.filter(el => el < this._activeWS && el !== 0);\n            this._minWS =  this._wsWithContent.length > 0 ? Math.min.apply(Math, this._wsWithContent) : 100000;\n            this._activeWsWithContent = this._root.workspaceIndexes.includes(this._activeWS);\n            this._countWsWithContent = this._wsWithContent.length;\n        }\n    }\n\n    isDisabled(selectedWS){\n        if((selectedWS < this._activeWS && selectedWS >= this._minWS ) ||  \n            (this._activeWS == selectedWS && this._activeWsWithContent) ||\n            (this._activeWS == selectedWS && this._countWsWithContent) ||\n            selectedWS == 0){\n            return false;\n        }else return true;\n    }\n\n    private addWorkspaceStyles(){\n        let style = document.createElement(\"style\");\n        style.appendChild(document.createTextNode(\"\"));\n        document.head.appendChild(style);\n        let sheet = style.sheet as CSSStyleSheet;\n        let index = -1;\n        this._metadataService.workspaces.forEach(w=>{\n            // rule for design\n            sheet.insertRule(\"div.workspace-\"+ w.ID + \" { box-shadow : inset 0 0 5px \"+ w.Color +\"; }\" , ++index);\n\n            // rule for option\n            sheet.insertRule(\"option.workspace-\"+ w.ID + \" { background-color: \"+ w.Color +\"; }\", ++index);\n        });\n    }\n\n    logout(): void {\n        this._portalService.logout()\n            .subscribe(result => {\n                if (result)\n                    location.href = environment.portalUrl;\n            });\n    }\n\n    backToPortal(): void {\n        if(environment.portalMode == \"Classic\") \n            location.href = environment.portalUrl + \"/Main.aspx\";\n        else \n            location.href = environment.portalUrl + \"/default.htm#/screen/apollo\";\n    }\n\n    portalSettings() {\n        let context: any = {\n            metadataService: this._metadataService,\n            hideTypeName: true,\n            disableAdding: true\n        };\n\n        let dial = this._dialog.open(ModalContainerComponent, { disableClose: true });\n        dial.componentInstance.initContext(context);\n        dial.afterClosed().subscribe(result => {\n            if (result)\n                // Save settings\n                this._portalSettingsService.save().subscribe(r => { });\n        });        \n    }\n   \n    changeWorkspace(wsID: number|string) {\n        if( typeof wsID == \"string\")\n            wsID = parseInt(wsID);\n\n        if (this._studioStateService.activeRootElement.isDirty) {\n\n            let yesLabel = this._labelService.getLabel('PS_ACTION_YES', 'Yes');\n            let noLabel = this._labelService.getLabel('PS_ACTION_NO', 'No');\n            let cancelLabel = this._labelService.getLabel('PS_ACTION_CANCEL', 'Cancel');\n            let titleLabel = this._labelService.getLabel('PS_CLOSE', 'Close');\n            let messageLabel = this._labelService.getLabel('PS_SAVE_PENDING', 'Would you like to save pending changes?');\n            let confirmContext = {\n                title: titleLabel,\n                message: messageLabel,\n                actions: [\n                    { action: 'yes', name: yesLabel, isPrimary: true },\n                    { action: 'no', name: noLabel, isPrimary: false },\n                    { action: 'cancel', name: cancelLabel, isPrimary: false }]\n            };\n\n            let dialog = this._dialog.open(ConfirmDialogComponent, { disableClose: true });\n\n            dialog.componentInstance.initContext(confirmContext);\n            dialog.afterClosed().subscribe(res => {\n                if (res === \"yes\") {\n                    // Save element \n                    this._studioStateService.subjects.execute.next(new ExecuteCommand(\"save\",null, null));\n                    this._studioStateService.subjects.execute.next(new ExecuteCommand(\"switchWorkspace\", null, wsID));\n                } \n                else if (res === \"no\") {\n                    // Do not save element \n                    this._studioStateService.subjects.execute.next(new ExecuteCommand(\"switchWorkspace\", null, wsID ));\n                }\n            });\n        }\n        else {\n            // Do not save element \n            this._studioStateService.subjects.execute.next(new ExecuteCommand(\"switchWorkspace\", null, wsID ));\n        }\n\n    }\n}\n","<div class=\"csi-title-bar\">\n    <div class=\"csi-left-side-title\">\n        <span class=\"csi-title\">{{title}}</span><span class=\"csi-subtitle\">{{subtitle}}</span>        \n    </div>\n    <div class=\"csi-right-side-controls\">\n        <div class=\"csi-title-action-area\">\n            <select #selectws title=\"{{'View Contents' | label: 'PS_VIEW_WS_CONTENTS' }}\"  [value]=\"state.activeWorkspace\" (change)=\"changeWorkspace(selectws.value)\" [style.box-shadow]=\"wsColor\" [hidden]=\"state.activeWorkspace==-1\">\n                <option *ngFor=\"let ws of workspaces\" [value]=\"ws.ID\" [disabled] = \"isDisabled(ws.ID)\" class=\"workspace-{{ws.ID}}\">{{ws.Name}} ({{ws.Code}})</option>\n            </select>\n            <span class=\"action\" (click)='portalSettings()' title=\"{{'Portal Settings' | label: 'PS_SETTINGS' }}\"><i class=\"fa fa-cog\"></i>{{'Portal Settings' | label: 'PS_SETTINGS' }}</span>\n            <span class=\"action\" (click)='backToPortal()' title=\"{{'Go to Portal Main Page' | label: 'PS_GO_TO_PORTAL' }}\"><i class=\"fa fa-retweet\"></i>{{'Back to Portal' | label: 'PS_BACK_TO_PORTAL' }}</span>\n            <span class=\"action\" (click)='logout()' title=\"{{'Logout' | label: 'PS_LOGOUT'}}\"><i class=\"fa fa-sign-out\"></i>{{'Logout' | label: 'PS_LOGOUT' }}</span>\n            <span class=\"siemens-logo\">&nbsp;</span>\n        </div>\n    </div>\n</div>","export * from './panel.module';","import { Component, OnInit, Input, Output, ViewChild, ViewContainerRef, EventEmitter, ComponentFactoryResolver, Type } from '@angular/core';\nimport { StudioSubjects, UpdatedInfo } from '../common/objects/common';\nimport { PanelSettings, PanelAction, PanelUpdatedData, IContentPanel, ReadOnlyLevel } from './panel';\nimport { DragService } from '../shared/drag.service';\nimport { PropertyListComponent } from './properties/propertyList';\nimport { ElementPanelComponent } from './panels/elementPanel.component';\nimport { ControlPanelComponent } from './panels/controlPanel.component';\nimport { PortalObjectPanelComponent } from './panels/portalObjectPanel.component';\nimport { FieldDirectoryComponent } from './panels/fieldDirectory.component';\n\n@Component({\n    selector: 'csi-panel',\n    styleUrls: ['./panel.component.less'],\n    templateUrl: './panel.component.html'\n})\nexport class PanelComponent implements OnInit {\n    @Input() component: string;\n    @Input() dataSource: string;\n    @Input() subjects: StudioSubjects;\n    @Input() readOnly: ReadOnlyLevel;\n    @Input() parameters: any;\n\n    @Output() exec: EventEmitter<UpdatedInfo> = new EventEmitter<UpdatedInfo>();\n\n    @ViewChild('panelHolder', { read: ViewContainerRef, static: true }) panelHolder: ViewContainerRef;\n\n    settings: PanelSettings;\n    get typing() : boolean {return this._dragService.startInputName;}\n\n    constructor(\n        private _compFactoryResolver : ComponentFactoryResolver,\n        private _dragService: DragService) {\n    }\n\n    ngOnInit() {\n\n        this.settings = new PanelSettings(this.component);\n        this.settings.dataSource = this.dataSource;\n        this.settings.readOnly = this.readOnly;\n        this.settings.parameters = this.parameters;\n        this.subjects.refreshElementPanel.subscribe((t: string) => {\n            if (t === this.dataSource)       \n            this.refreshPanel();\n       });\n\n        const comp = this.resolveComponent(this.component);\n        if( comp ){\n            this.loadComponent(comp);\n        }\n        else{\n            console.error(\"The component \" + this.component + \" was not resolved\");\n        }\n    }\n\n    private loadComponent(comp: Type<IContentPanel>){\n        const componentFactory = this._compFactoryResolver.resolveComponentFactory(comp);\n        const viewContainerRef = this.panelHolder;\n        viewContainerRef.clear();\n\n        const componentRef = viewContainerRef.createComponent(componentFactory);\n        const panelInstance = componentRef.instance as any;\n        panelInstance.init(this.settings, this.subjects);\n        if (panelInstance.destroy)\n            componentRef.onDestroy(() => panelInstance.destroy(this.subjects));\n        let upd = new PanelUpdatedData();\n        upd.contentCreated = panelInstance;\n        this.subjects.panel.next(upd);\n    }\n\n    private resolveComponent(selector: string) : Type<IContentPanel>{\n        const comps = {\n            \"csi-property-list\" : PropertyListComponent,\n            \"csi-element-panel\" : ElementPanelComponent,\n            \"csi-control-panel\" : ControlPanelComponent,\n            \"csi-portal-object-panel\" : PortalObjectPanelComponent,\n            \"csi-field-directory\" : FieldDirectoryComponent\n        };\n        return comps[selector];\n    }\n\n    refreshPanel() {\n        this.settings.refreshContent.next();\n    }\n\n    searchChanged(txt: string) {\n        this.settings.searchInput.next(txt);\n    }\n\n    actionClick(act: PanelAction) {\n        let upd = new PanelUpdatedData();\n        upd.createNew = act.name.toLowerCase() == \"new\";\n        upd.action = act;\n        this.subjects.panel.next(upd);\n        if(!upd.createNew)\n            this.settings.viewMode = act.modeClass;\n    }\n\n    changeName(ev: Event, inpControl: any) {\n        if(ev.type == \"focusout\"){\n            if(this.settings.nameInput.val !== inpControl.value ){\n                this.settings.nameInput.val = inpControl.value;\n                this.settings.nameInput.onValChange.next(inpControl.value);\n            }\n            this._dragService.startInputName = false;\n        }\n    }\n\n    startInput(){\n        this._dragService.startInputName = true;\n    }\n}\n","<div class=\"csi-panel\" [hidden]=\"!settings.visible\">\n    <div class=\"action-bar\" [hidden]=\"settings.collapsed\" *ngIf=\"settings.actions.length > 0\">\n        <div *ngFor=\"let act of settings?.actions\" class=\"action-button\" [class.selected]=\"act.modeClass == settings.viewMode && act.name != 'New'\">\n            <span title=\"{{act.name}}\" (click)=\"actionClick(act)\"><i class=\"fa {{act.imgClass}} fa-lg\"></i></span>\n        </div>\n    </div>\n\n    <div class=\"name-input-area\" *ngIf=\"!settings.nameInput.hidden\">\n        <label>{{settings.nameInput.label | panelName}}</label>\n        <div class=\"input-value\" [class.typing]=\"typing\">\n            <input class=\"csi-name-input\" type=\"text\" [value]=\"settings.nameInput.val\" #nameInp\n                (focus)=\"startInput()\" (focusout)=\"changeName($event, nameInp)\"\n                (keyup)=\"changeName($event, nameInp)\" (paste)=\"changeName($event, nameInp)\" (cut)=\"changeName($event, nameInp)\" (input)=\"changeName($event, nameInp)\"\n                placeholder=\"Name\" [readonly]=\"settings.nameInput.readonly\" />\n        </div>\n    </div>\n\n    <div class=\"csi-typeahead-area\" *ngIf=\"settings.showSearch && !settings.collapsed\">\n        <input type=\"text\" #search [ngModel]='settings.searchText' placeholder=\"Search\" (input)=\"searchChanged(search.value)\" />\n        <span class=\"refresh-btn\" *ngIf=\"settings.showRefresh\">\n            <i class=\"fa fa-refresh\" aria-hidden=\"true\" (click)='refreshPanel();'></i>\n        </span>\n    </div>\n\n    <ng-template #panelHolder ></ng-template>\n\n</div>\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { PanelComponent } from './panel.component';\nimport { PanelSplitterComponent } from './panelSplitter.component';\n//panels\nimport { ControlPanelComponent } from './panels/controlPanel.component';\nimport { DockAreaComponent } from './panels/dockArea.component';\nimport { ElementPanelComponent } from './panels/elementPanel.component';\nimport { FieldDirectoryComponent } from './panels/fieldDirectory.component';\nimport { PortalObjectPanelComponent } from './panels/portalObjectPanel.component';\n//pipes\nimport { ElementFilter } from './pipe/element.filter';\nimport { FieldDirectorySearchFilter } from './pipe/fieldDirectory.filter';\n//properties\nimport { PropertyListComponent } from './properties/propertyList';\nimport { PropertyFilter } from './properties/property.filter';\nimport { NameValueComponent } from './properties/nameValue';\n//valueEditors\nimport { FieldExpressionComponent } from './properties/valueEditors/fieldExpression';\nimport { FieldExpressionDialogComponent } from './properties/valueEditors/fieldExpressionDialog';\nimport { LabelSearchComponent } from './properties/valueEditors/labelSearch';\nimport { MarginsComponent } from './properties/valueEditors/margins';\nimport { ModalContainerComponent } from './properties/valueEditors/modalContainer';\nimport { ModalCollectionComponent } from './properties/valueEditors/modalCollection';\nimport { ModalObjectComponent } from './properties/valueEditors/modalObject';\nimport { PageActionRuleBuilderComponent } from './properties/valueEditors/pageActionRuleBuilder.component';\nimport { PortalSettingsComponent } from './properties/valueEditors/portalSettings';\nimport { SwitchBoxEditorComponent } from './properties/valueEditors/switchBox';\nimport { SelectorEditorComponent } from './properties/valueEditors/selector';\nimport { TextEditorComponent } from './properties/valueEditors/textBox';\nimport { QueryBuilderComponent } from './properties/valueEditors/queryBuilder.component';\nimport { TargetMatrixRowsComponent } from './properties/valueEditors/targetMatrixRows.component';\nimport { WebiReportsComponent } from './properties/valueEditors/webiReports.component';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nexport const COMPONENTS = [\n    PanelComponent,\n    PanelSplitterComponent,\n    //panels\n    ControlPanelComponent,\n    DockAreaComponent,\n    ElementPanelComponent,\n    FieldDirectoryComponent,\n    PortalObjectPanelComponent,\n    //pipe\n    ElementFilter,\n    FieldDirectorySearchFilter,\n    //properties\n    PropertyListComponent,\n    PropertyFilter,\n    NameValueComponent,\n    //valueEditors\n    FieldExpressionComponent,\n    FieldExpressionDialogComponent,\n    LabelSearchComponent,\n    MarginsComponent,\n    ModalContainerComponent,\n    ModalCollectionComponent,\n    ModalObjectComponent,\n    PageActionRuleBuilderComponent,\n    PortalSettingsComponent,\n    SelectorEditorComponent,\n    SwitchBoxEditorComponent,\n    TextEditorComponent,\n    QueryBuilderComponent,\n    TargetMatrixRowsComponent,\n    WebiReportsComponent\n]\n\n@NgModule({\n    imports: [\n        SharedModule,\n        MatMenuModule,\n        MatCheckboxModule\n    ],\n    declarations: COMPONENTS,\n    exports: [        \n        DockAreaComponent,\n        FieldExpressionComponent,\n        PanelComponent,\n        PanelSplitterComponent,\n        PropertyListComponent\n    ],\n    entryComponents: [\n        FieldExpressionDialogComponent,\n        LabelSearchComponent,\n        ModalContainerComponent,\n        ModalCollectionComponent,\n        ModalObjectComponent,\n        PropertyListComponent,\n        ElementPanelComponent,\n        ControlPanelComponent,\n        PortalObjectPanelComponent,\n        FieldDirectoryComponent\n    ]\n})\n\nexport class PanelModule {\n    constructor( @Optional() @SkipSelf() parentModule: PanelModule) {\n        if (parentModule) {\n            throw new Error(\n                'PanelModule is already loaded. Import it in the AppModule only');\n        }\n    }\n}\n\n","import { Subject } from 'rxjs';\nimport { IUpdatedData, UpdateDataTypes, IUIComponentRef, StudioSubjects } from '../common/objects/common';\n\n\n//interfaces\nexport interface IContentPanel{\n    init(settings: PanelSettings, subjects?: StudioSubjects): void;\n    destroy?(subjects?: StudioSubjects): void;\n}\n\nexport interface IPanelNameInput {\n    label: string;\n    val: string;\n    readonly: boolean;\n    onValChange?: Subject<string>;\n    hidden: boolean;\n}\n\n//classes\nexport class PanelAction {\n    name: string;\n    imgClass: string;\n    svc: string;\n    component: string;\n    modeClass: string;\n}\n\nexport class PanelSettings {\n    name: string;\n    iconSrc: string;\n    description: string;\n    collapsed: boolean;\n    showActions: boolean;\n    showSearch: boolean;\n    showNewAction: boolean;\n    showName: boolean;    \n    hideBorder: boolean;\n    showRefresh: boolean;\n    nameInput: IPanelNameInput;\n    content: string;\n    actions: PanelAction[];\n    dataSource: string;\n    readOnly: ReadOnlyLevel;\n    viewMode: string;\n    visible: boolean;    \n    parameters: any;\n    searchText: string;\n\n    searchInput: Subject<string>;\n    actionClick: Subject<string>;\n    refreshContent: Subject<string>;\n\n    constructor(name: string,\n                iconSrc: string = \"\",\n                collapsed: boolean = false,\n                showActions: boolean = true,\n                showSearch: boolean = true,\n                showNewAction: boolean = true) {\n\n        this.name = name;\n        this.iconSrc = iconSrc;\n        this.collapsed = collapsed;            \n        this.showActions = showActions;        \n        this.showSearch = showSearch;\n        this.showNewAction = showNewAction;\n        this.showRefresh = true;\n        this.showName = false;\n        this.visible = true;\n\n        this.searchInput = new Subject<string>();\n        this.actionClick = new Subject<string>();\n        this.refreshContent = new Subject<string>();\n\n        this.nameInput = <IPanelNameInput>{\n            hidden: true,\n            onValChange : new Subject<string>()\n        };\n\n        this.actions = [];\n    }\n}\nexport class PanelUpdatedData implements IUpdatedData {\n    __dataType: UpdateDataTypes = UpdateDataTypes.panel;\n\n    constructor() {\n    }\n\n    elementRef: IUIComponentRef;\n    elementRefs: IUIComponentRef[];\n    open: boolean;\n    selectCmd: boolean;\n    createNew: boolean;\n    changeMode: boolean;\n    dataRequest: any;\n    action: PanelAction;\n    contentCreated: IContentPanel;\n}\n\n//enums\nexport enum ReadOnlyLevel { value, full };","import { Component, Input, AfterViewInit, ElementRef, OnDestroy, Renderer2 } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { DragInfo, dragModes } from '../shared/drag';\nimport { DragService } from '../shared/drag.service';\nimport { uuid } from '../common/objects/common';\nimport { DragDataInfo } from '../shared/directives/draggable.directive';\n\n@Component({\n    selector: 'csi-panel-splitter',\n    styleUrls: [`panelSplitter.component.less`],\n    template: `\n    <div *ngIf=\"!disabled\" class=\"csi-panel-splitter\" \n        [csi-draggable]=\"dragInfo\"\n        [class.vertical]=\"isVertical\" [class.horizontal]=\"!isVertical\"></div>`\n})\n\nexport class PanelSplitterComponent implements AfterViewInit, OnDestroy {\n    @Input() direction: string = 'h';\n    @Input() panel: HTMLElement;\n    @Input() disabled: boolean = false;\n    @Input() panelBefore: boolean = false;\n\n    id: string = uuid.id();\n    get dragInfo() : DragDataInfo {return <DragDataInfo>{\n        type: 'panel-splitter', \n        id: this.id, \n        model: null,\n        dragAction : (d)=> {\n            this.onDragging(d);\n        }\n    }};\n\n    private draggingClass = \"do-dragging\";\n    private get isVertical(): boolean { return this.direction == 'v'; }\n    private started = false;\n\n    private get sizeStyle(): string { return this.isVertical ? 'width' : 'height'; }\n\n    private splitterBar: HTMLDivElement;\n\n    private resizeEnsure: Subject<number>;\n\n    constructor(private _el: ElementRef, private _drag: DragService, private _render: Renderer2) {\n    }\n\n    ngAfterViewInit() {\n\n        if (!this.disabled) {\n\n            this.splitterBar = <HTMLDivElement>(<HTMLDivElement>this._el.nativeElement).firstElementChild;\n\n\n            this.resizeEnsure = new Subject<number>();\n            this.resizeEnsure.subscribe(r => {\n                // reached min/max limit  -- set size to the limit                \n                this._render.setStyle(this.panel, this.sizeStyle, r + \"px\");\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        if (!this.disabled)\n            this._drag.remove(dragModes.resizePanel, this.splitterBar.id);\n    }\n\n    private dragStart(d: DragInfo) {\n\n        this.started = true;\n        this._render.addClass(this._el.nativeElement, this.draggingClass);\n    }\n\n    private dragEnd(ev: DragInfo) {\n        this._render.removeClass(this._el.nativeElement, this.draggingClass);\n        this.started = false;\n    }\n\n    private onDragging(d: DragInfo) {\n        if (d.endOfDrag) {\n            this.dragEnd(d);\n            return;\n        }\n\n        if (!this.started) {\n            this.dragStart(d);\n        }\n\n        if (this.started) {\n            this.doResize(this.isVertical ? -d.diffx : -d.diffy);\n        }\n    }\n\n    private doResize(diffSize: number) {\n        let initSize = this.panel.getBoundingClientRect()[this.sizeStyle];\n        let size = this.panelBefore ? initSize - diffSize : initSize + diffSize;\n\n        this._render.setStyle(this.panel, \"flex\", \"0 0 auto\");\n        this._render.setStyle(this.panel, this.sizeStyle, size + \"px\");\n\n        //check whether the size is changed        \n        let rect = this.panel.getBoundingClientRect();\n\n        if (rect[this.sizeStyle] != size) {\n            // revert \n            this.resizeEnsure.next(rect[this.sizeStyle]);\n        }\n    }\n}\n\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { IControl, IElement, LayoutBuilder } from '../../common/objects/common';\nimport { PanelAction, IContentPanel, PanelSettings } from '../panel';\nimport { LabelService } from '../../common/services/label.service';\nimport { PortalService } from '../../common/services/portal.service';\n\nimport _ from 'lodash';\nimport { StudioStateService } from '../../common/services/studioStateService';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: 'csi-control-panel',\n    styleUrls: [\"controlPanel.component.less\"],\n    templateUrl: \"controlPanel.component.html\"\n})\n\nexport class ControlPanelComponent implements IContentPanel, OnInit, OnDestroy {\n\n    settings: PanelSettings;\n\n    controls: IControl[] = [];\n\n    errorMessage: any;\n    nameFilter: string;\n    designerDropList : string[];\n    private dropAreasSubs : Subscription;\n\n    constructor(private _portalService: PortalService, private _labelService: LabelService, private _studioService: StudioStateService) {\n        this.dropAreasSubs = this._studioService.subjects.dropAreas.subscribe(d=> {\n            this.designerDropList = d.filter(dp=> dp.startsWith(\"drop_ctl_\"));\n        });\n    }\n\n    ngOnDestroy(){\n        if( this.dropAreasSubs)\n            this.dropAreasSubs.unsubscribe();\n    }\n\n    get viewMode(): string {\n        return this.settings.viewMode || 'list';\n    }\n\n    init(s: PanelSettings) {\n        let listModeLabel = this._labelService.getLabel('PS_LIST_MODE', 'List mode');\n        let tileModeLabel = this._labelService.getLabel('PS_TILE_MODE', 'Tiles mode');\n        let detailModeLabel = this._labelService.getLabel('PS_DETAIL_MODE', 'Details mode');\n\n        s.actions = [\n            <PanelAction>{ name: listModeLabel, imgClass: 'fa-list', modeClass: 'list' },\n            <PanelAction>{ name: tileModeLabel, imgClass: 'fa-th', modeClass: 'tiles' },\n            <PanelAction>{ name: detailModeLabel, imgClass: 'fa-list-ul', modeClass: 'detail' }\n        ];\n        s.showSearch = true;\n        s.iconSrc = \"fa-tasks\";\n        s.showRefresh = false;\n        this.settings = s;\n\n        return this.settings;\n    }\n\n    ngOnInit() {\n        this._portalService.getControls()\n            .subscribe(\n            controls => {\n                this.controls = _.filter(controls, c => c.type != 'TabContainer');\n\n                // add initializer for container-type controls\n                this.controls.forEach(tc => {\n                    if (_.includes(['ToggleContainer', 'SectionDropDown','SectionDropDownMobile', 'RibbonContainer', 'WebPartsWrapperControl'], tc.type))\n                        (<any>tc).controlInit = (ctl: IElement, owner: IElement, portal: PortalService) => this.buildDefaultLayout(ctl);\n                    else if (tc.type == 'JQTabContainer')\n                        (<any>tc).controlInit = (ctl: IElement, owner: IElement, portal: PortalService) => this.buildDefaultTabs(ctl);\n                    else if (tc.type == 'ContainerListGrid')\n                        (<any>tc).controlInit = (ctl: IElement, owner: IElement, portal: PortalService) => this.buildDefaultContainerListGrid(ctl);\n                });\n\n                this.settings.searchInput.subscribe(searchtext => this.nameFilter = searchtext);\n            },\n            error => this.errorMessage = <any>error);\n    }\n\n\n\n    private buildDefaultLayout(ctl: IElement) {\n        ctl.layout = LayoutBuilder.getLayout(2, 1);\n        ctl.properties.section = {\n            __type: 'SectionDefinition',\n            layout: null\n        };\n    }\n\n    private buildDefaultTabs(ctl: IElement) {\n        ctl.layout = LayoutBuilder.getLayout(2, 2);\n        ctl.properties.tabDefinitions = [{ name: 'TabDefinition0', __type: 'TabDefinition' }];\n    }\n\n    private buildDefaultContainerListGrid(ctl: IElement) {\n\n        let defColumns = [\n            { __type: 'JQFieldReadonly', name: \"Container\", width: 70, labelName: \"SelVal_Container\", editable: false, isRowID: true },\n            { __type: 'JQFieldReadonly', name: \"Qty\", width: 78, labelName: \"Container_Qty\", editable: false },\n            { __type: 'JQFieldReadonly', name: \"UOM\", width: 85, labelName: \"SelVal_UOM\", editable: false },\n            { __type: 'JQFieldReadonly', name: \"Operation\", width: 120, labelName: \"SelVal_Operation\", editable: false },\n            { __type: 'JQFieldReadonly', name: \"Product\", width: 120, labelName: \"SelVal_Product\", editable: false },\n            { __type: 'JQFieldReadonly', name: \"ProductDescription\", width: 170, labelName: \"SelVal_ProductDescription\", editable: false },\n            { __type: 'JQFieldReadonly', name: \"MfgOrder\", width: 120, labelName: \"SelVal_ManufacturingOrder\", editable: false }\n        ];\n\n        ctl.properties = ctl.properties || {};\n        ctl.properties.settings = {\n            __type: 'GridDataSettingsSelVal',\n            columns: defColumns,\n            selectionMode: 3 /*JQGridSelectionMode.SingleRowSelectWithPostback*/,\n            automation: {\n                __type: 'GridAutomation',\n                shrinkColumnWidthToFit: true\n            },\n            pagesRequested: 0,\n            rowsPerPage: 10,\n            fieldExpressions: \".Container\",\n            requestFieldExpression: \".Container\",\n            pager: { __type: 'JQGridPagerSettings', position: 1 /*HorizontalAlignment.Left*/, mode: 2 /* Auto*/ },\n            navigator: 1 /* JQGridNavigatorMode.PagerOnly*/\n        };\n    }\n}\n","<div class=\"csi-control-list-area {{viewMode}}\">\r\n    <div class=\"control-container\" *ngIf=\"viewMode == 'list'\">\r\n        <div *ngFor=\"let control of (controls|elementFilter:nameFilter)\" [title]=\"control.description\" class=\"csi-selectable-item\" \r\n            [csi-draggable]=\"{type: 'control-toolbox', id: control.name, model: control, disabled: (control.type == 'ProcessModelGraphControl')}\" >\r\n            <div class=\"control-list-item\"><img [src]=\"control.toolboxImage\" /><span>{{control.name}}</span></div>\r\n        </div>\r\n    </div>\r\n    <div class=\"control-container\" *ngIf=\"viewMode == 'tiles'\">\r\n        <ul>\r\n        <li class=\"control-tile\" *ngFor='let control of (controls | elementFilter:nameFilter)' [title]=\"control.description\">\r\n            <div [csi-draggable]=\"{type: 'control-toolbox', id: control.name, model: control, disabled: (control.type == 'ProcessModelGraphControl')}\">\r\n                <img [src]=\"control.toolboxImage.replace('.png', '_32x32.png')\" />\r\n                <div class=\"tile-text\" >{{control.name}}</div>\r\n            </div>\r\n        </li>\r\n        </ul>\r\n    </div>\r\n\r\n    <div class=\"control-container\" *ngIf=\"viewMode == 'detail'\">\r\n        <div class=\"col-captions\">\r\n            <div class=\"col-img\"> </div>\r\n            <div class=\"col-name\">{{'Name' | label: 'PS_NAMELBL'}}</div>\r\n            <div class=\"col-description\">{{'Description' | label: 'PS_DESCRIPTIONLBL'}}</div>\r\n        </div>\r\n        <div class=\"detail-items\">\r\n            <div *ngFor=\"let control of (controls|elementFilter:nameFilter)\" [title]=\"control.description\" class=\"csi-selectable-item control-detail-item\" \r\n                    [csi-draggable]=\"{type: 'control-toolbox', id: control.name, model: control, disabled: (control.type == 'ProcessModelGraphControl')}\">\r\n                <div class=\"col-img\"><img [src]=\"control.toolboxImage\" /></div>\r\n                <div class=\"col-name\">{{control.name}}</div>\r\n                <div class=\"col-description\">{{control.description}}</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { DockPanel, DockTab, ContentSection, UpdatedInfo, StudioSubjects } from '../../common/objects/common';\nimport { PanelSettings } from '../panel';\n\n@Component({\n    selector: 'csi-dock-area',\n    templateUrl: './dockArea.component.html',\n    styles: [`\n        :host{\n            display: flex;\n            flex-direction: column;\n            flex: 1 1;\n        }\n        \n        .dock {\n            display: flex;\n            flex-direction: column;\n            flex: 1 1;\n\n            border: solid 1px grey;\n            border-top-width: 0px;\n        }\n        .dock-panel {\n            display: flex;\n            flex-direction: column;\n            flex: 1 1;\n        }\n        .dock-panel.hidden{\n            display: none;\n        }\n        .dock-panel .header {\n            background-color: lightgray;\n            font-weight: bold;\n            padding: 5px;\n            min-height: 28px;\n        }\n\n        .dock-panel .header .content {\n            flex-grow: 1;\n        }\n\n        .dock-panel .footer {\n            min-height: 24px;\n            padding: 2px;\n        }\n\n        .dock-panel .footer ul > li > a {\n            padding: 2px;\n            cursor: pointer;\n        }\n    `]\n})\n\nexport class DockAreaComponent implements OnInit {\n    @Input() dockPanels: DockPanel[];\n    @Input() subjects: StudioSubjects;\n    @Output() panelCommand: EventEmitter<UpdatedInfo> = new EventEmitter<UpdatedInfo>();\n\n    defaultPanel = new PanelSettings(\"Properties\", \"fa-wrench\", false);\n    ngOnInit() {\n        this.defaultPanel.showRefresh = true;\n\n        this.dockPanels.forEach(d => {\n            if (d.tabs && d.tabs.length > 0 && !d.activeTab) {\n                d.activeTab = d.tabs[0];\n                if (d.activeTab.sections && d.activeTab.sections.length > 0 && !d.activeTab.expandedSection) {\n                    d.activeTab.expandedSection = d.activeTab.sections[0];\n                }\n            }\n        });\n    }\n\n    expand(tab: DockTab, section: ContentSection) {\n        tab.expandedSection = section;\n    }\n\n    selectTab(p: DockPanel, t: DockTab) {\n        p.activeTab = t;\n        if (p.activeTab.sections && p.activeTab.sections.length && !p.activeTab.expandedSection) {\n            p.activeTab.expandedSection = p.activeTab.sections[0];\n        }\n    }\n\n    panelExec(upd: UpdatedInfo) {\n        this.panelCommand.emit(upd);\n    }\n}","<div class=\"dock\">\r\n    <ng-template ngFor let-p [ngForOf]=\"dockPanels\">\r\n        <csi-panel-splitter [direction]=\"p.splitter\" [panel]=\"docPanel\" *ngIf=\"p.splitter && p.splitter!='n'\"></csi-panel-splitter>\r\n        <div class=\"dock-panel\" [class.hidden]=\"!p.visible\" #docPanel>\r\n            <div class=\"header\">{{p.label}}</div>\r\n            <div class=\"csi-content-panel\">                \r\n                <div *ngFor=\"let s of p.activeTab.sections\" [class.active]=\"p.activeTab.expandedSection==s\" class=\"section\">\r\n                    <div class=\"title\" (click)=\"expand(p.activeTab, s)\">\r\n                        <span class=\"toggle-icon\" (click)=\"expand(p.activeTab, s)\">\r\n                            <i class=\"fa {{ p.activeTab.expandedSection==s ? 'fa-chevron-down':'fa-chevron-right'}}\"></i>\r\n                        </span>\r\n                        <span>{{s.name}}</span>\r\n                    </div>                 \r\n\r\n                    <div *ngIf=\"p.activeTab.expandedSection==s\" class=\"section-content\">\r\n                        <csi-panel [component]=\"s.component\" [dataSource]=\"s.dataSource\" (exec)=\"panelExec($event)\" [subjects]=\"subjects\" [parameters]=\"{sidePanel:true}\"></csi-panel>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"footer\" *ngIf=\"p.tabs.length > 1\">\r\n                <ul class=\"nav nav-tabs\">\r\n                    <li *ngFor=\"let t of p.tabs\" [attr.role]=\"'presentation'\" [class.active]=\"p.activeTab==t\">\r\n                        <a (click)=\"selectTab(p, t)\">{{t.name}}</a>\r\n                    </li>   \r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n    </div>","import { Component } from '@angular/core';\nimport { IUIComponentRef, StudioSubjects, GroupDef, ContextMenuItem, ContextMenuItemTypes } from '../../common/objects/common';\nimport { PanelUpdatedData, PanelAction, IContentPanel, PanelSettings } from '../panel';\nimport { WCFService } from '../../common/services/wcf.service';\nimport { LabelService } from '../../common/services/label.service';\nimport { Observable, Subscription, Subject, of } from 'rxjs';\nimport { map} from \"rxjs/operators\";\n\nimport { PortalService } from '../../common/services/portal.service';\nimport { StudioStateService } from '../../common/services/studioStateService';\nimport { PageGroupingService } from '../../common/services/pageGrouping.service';\nimport { AlertService } from '../../alert/alert.service';\n\n@Component({\n    selector: 'csi-element-panel',\n    styleUrls: [`./elementPanel.component.less`],\n    templateUrl: './elementPanel.component.html'\n})\n\nexport class ElementPanelComponent implements IContentPanel {\n\n    public panelSettings: PanelSettings;\n\n    icon: string;\n    nameFilter: string;\n    draggable = false;\n    zone: string;\n\n    elementGroups: Observable<GroupDef[]>;\n    items: Observable<IUIComponentRef[]>;\n    get isItemSelectable() { return this.checkedSubj !== undefined; }\n    AllCheckedElements: { n: string, t: string }[] = [];\n    selectedItem: {name: string, type: string};\n    designerDropList: string[];\n    contextMenuItems: ContextMenuItem[] = [];\n    contextMenuEnabled: boolean;\n\n    private subjects: StudioSubjects;\n    private refreshSubs: Subscription;\n    private searchInputSubs: Subscription;\n    private dropAreaSubs: Subscription;\n    private dataSourceName: string;\n    private svc: string;\n    private oldViewMode: string;\n    private readonly dataSources = {\n        'Page': { svc: 'UIVirtualPageMaint', draggable: true, icon: 'fa-list-alt', zone: 'Pages', defaultView: 'tree' },\n        'Webpart': { svc: 'WebPartMaint', icon: 'fa-list-alt', draggable: true, zone: 'Webparts', defaultView: 'tree' },\n        'Pageflow': { svc: 'UIPageFlowMaint', icon: \"fa-cog\", defaultView: 'list' }\n    };\n    private expandedGroup: string[] = [];\n    private isNewAction: boolean = true;\n    private checkedSubj: Subject<{ n: string, t: string }[]>;\n\n    constructor(\n        private _alertService:AlertService,\n        private _wcf: WCFService,\n        private _portalService: PortalService,\n        private _studioState: StudioStateService,\n        private _labelService: LabelService,\n        private _pageGroupingService: PageGroupingService) {\n    }\n\n    public get viewMode(): string {\n        return this.panelSettings.viewMode;\n    }\n\n    // IContentPanel\n    init(s: PanelSettings, rootSubjects: StudioSubjects) {\n        this._studioState.checkedElements = [];\n        this.subjects = rootSubjects;\n        this.dataSourceName = s.dataSource;\n        if (s.parameters) {\n            if (s.parameters.checkedSubj !== undefined)\n                this.checkedSubj = s.parameters.checkedSubj;\n\n            if (s.parameters.newAction !== undefined)\n                this.isNewAction = s.parameters.newAction;\n        }\n\n        let ds = this.dataSources[this.dataSourceName];\n        if (ds) {\n            this.svc = ds.svc;\n            this.icon = ds.icon;\n            if (ds.draggable === true) {\n                this.draggable = true;\n                this.zone = ds.zone;\n            }\n            s.viewMode = ds.defaultView;\n        }\n        else {\n            console.error('data source ' + s.dataSource + ' is not found');\n        }\n\n        s.actions = this.initActions();\n        s.showSearch = true;\n        s.iconSrc = this.icon;\n\n        this.refreshSubs = s.refreshContent.subscribe(p => this.load());\n        s.refreshContent.next();\n\n        this.oldViewMode = s.viewMode;\n        this.panelSettings = s;\n\n        this.searchInputSubs = this.panelSettings.searchInput.subscribe(searchtext => {\n            if (!this.nameFilter && searchtext) {\n                // save old view mode \n                this.oldViewMode = this.panelSettings.viewMode;\n                // toggle to LIST mode\n                this.panelSettings.viewMode = 'list';\n            }\n            else if (this.nameFilter && !searchtext) {\n                // empty search text - toggle to old mode\n                this.panelSettings.viewMode = this.oldViewMode;\n                this.oldViewMode = '';\n            }\n            // \n            this.nameFilter = searchtext;\n        });\n\n        this.dropAreaSubs = this.subjects.dropAreas.subscribe((d:string[])=>{\n            this.designerDropList = d.filter(dp=> dp.startsWith(\"drop_wp_\"));\n        });\n\n        this.contextMenuEnabled = this.svc == \"UIVirtualPageMaint\" && !this.isItemSelectable;\n        return this.panelSettings;\n    }\n\n    // IContentPanel\n    destroy(subjects?: StudioSubjects): void {\n        this.refreshSubs.unsubscribe();\n        this.searchInputSubs.unsubscribe();\n        this.dropAreaSubs.unsubscribe();\n    }\n\n    private load(force = true) {\n        this.items = this._wcf.getElementRefs(this.svc, this.dataSourceName, force);\n\n        if (this.dataSourceName == \"Page\") {\n            this.elementGroups = this._pageGroupingService.getPageGroups(this.items);\n        }\n        else if (this.dataSourceName == \"Webpart\") {\n            let grps = this._pageGroupingService.getWebPartGroups();\n            let webPartControls = this._portalService.getWebPartsList();\n            grps.forEach((gw, i) => {\n                if (gw.groupKey == \"general\")\n                    gw.items = webPartControls.pipe(map(wa => wa.filter(w => w.name != \"CrystalWebPart\")));\n                else if (gw.groupKey == \"intelligence\")\n                    gw.items = webPartControls.pipe(map(wa => wa.filter(w => w.name == \"CrystalWebPart\")));\n                else\n                    gw.items = this.items;\n            });\n\n            this.elementGroups = of(grps);\n        }\n    }\n\n    private initActions(): PanelAction[] {\n        let listModeLabel = this._labelService.getLabel('PS_LIST_MODE', 'List mode');\n        let tileModeLabel = this._labelService.getLabel('PS_TILE_MODE', 'Tiles mode');\n        let detailModeLabel = this._labelService.getLabel('PS_DETAIL_MODE', 'Details mode');\n        let newLabel = this._labelService.getLabel('PS_NEW', 'New');\n        let treeModeLabel = this._labelService.getLabel('PS_TREE_MODE', 'Tree mode');\n\n        let res = this.isNewAction ? [<PanelAction>{ name: newLabel, imgClass: 'fa-plus-circle', svc: this.svc }] : [];\n\n        if (this.dataSourceName == \"Page\" || this.dataSourceName == \"Webpart\") {\n            res.push(\n                <PanelAction>{ name: treeModeLabel, imgClass: 'fa-outdent fa-lg', modeClass: 'tree' },\n                <PanelAction>{ name: listModeLabel, imgClass: 'fa-list', modeClass: 'list' }\n            );\n        }\n        else {\n            res.push(\n                <PanelAction>{ name: listModeLabel, imgClass: 'fa-list', modeClass: 'list' },\n                <PanelAction>{ name: tileModeLabel, imgClass: 'fa-th', modeClass: 'tiles' },\n                <PanelAction>{ name: detailModeLabel, imgClass: 'fa-list-ul', modeClass: 'detail' }\n            );\n        }\n        return res;\n    }\n\n    select(el: IUIComponentRef) {\n        // Disable select/open for non virtual elements (like custom web parts)\n        if(!this.isItemSelectable){\n            if (!el.isStatic) {\n                let cmd = new PanelUpdatedData();\n                cmd.elementRef = el;\n                cmd.open = true;\n                this.subjects.panel.next(cmd);\n            }\n        }\n    }\n\n    toggleGroup(g: GroupDef) {\n        g.isOpen = !g.isOpen;\n\n        if (g.isOpen)\n            this.expandedGroup.push(g.groupKey);\n        else\n            this.expandedGroup.splice(this.expandedGroup.indexOf(g.groupKey), 1);\n    }\n\n    checkElement(el: IUIComponentRef): void {\n        if (this.isItemSelectable) {\n            if(!el.isStatic){\n                this._studioState.checkElement(el, this.checkedSubj);\n            }\n        }\n        else{\n            // Select item\n            this.selectedItem = {name: el.name, type: el.type};\n            this._studioState.updatePropertyPanel(el);\n        }\n    }\n\n    isChecked(name: string, type: string): boolean {\n        return this._studioState.isChecked(name, type);\n    }\n\n    isSelected(el: IUIComponentRef) {\n \n       return this.selectedItem && (el.name == this.selectedItem.name && el.type == this.selectedItem.type);\n    }\n\n    checkAll(ev, doCheck: boolean) {\n        this._studioState.checkAll(this.AllCheckedElements, this.items, doCheck, this.checkedSubj);\n        (ev as Event).preventDefault();\n    }\n\n    buildMenu(dataType: string, data: string) {\n       this.contextMenuItems = this._pageGroupingService.getContextMenuItems(dataType, data);\n    }\n\n    contextMenuSelect(item: ContextMenuItem) {\n        switch (item.key) {\n            case \"remove\":\n                if(item.nameItem==\"All\"||item.nameItem==\"Undefined\"){\n                    this._alertService.error(\"Unable to remove system folder\");\n                    return;\n                }\n                this._pageGroupingService.removeGroup(item.nameItem);\n                break;\n            case \"restore\":\n                this._pageGroupingService.restoreSettings();\n                break;\n        }\n    }\n    \n\n    contextMenuToggle(item: ContextMenuItem){\n        if (item.type != ContextMenuItemTypes.selected) {\n            this._pageGroupingService.toggle(item);\n        } \n        else {    \n            this.contextMenuSelect(item)\n        }\n        this.panelSettings.refreshContent.next();\n    }\n}","<div class=\"csi-element-group\" [class.largerFont]=\"isItemSelectable\">\n    <div *ngIf=\"viewMode=='tree'; else listBlock\" [class]=\"viewMode\">\n        <div *ngFor=\"let g of elementGroups | async\" class=\"item\" [attr.expanded]=\"g.isOpen\" >\n            <div class=\"group-name\" (click)=\"toggleGroup(g)\" \n                    [context-popup-menu]=\"{disabled: !contextMenuEnabled, dataType: 'group', data: g.groupName, trigger: contextMenuTrigger, buildMenu: buildMenu, execContext:this }\">\n                <i [class]=\"g.isOpen?'arrow fa fa-caret-down':'arrow fa fa-caret-right'\" aria-hidden=\"true\"></i>\n                <i [class]=\"'icon fa '+ g.icon + (g.isOpen?'-open':'')\" aria-hidden=\"true\"></i>                            \n                <div class=\"caption-text\">{{g.groupName}}</div>\n                <div class=\"caption-count\" *ngIf=\"g.count\"> ({{g.count|async}})</div>\n            </div>\n            <div *ngIf=\"g.isOpen\" class=\"group-panel\">    \n                <div class=\"csi-selectable-item\" [title]=\"el.name\" *ngFor='let el of g.items | async' (dblclick)=\"select(el)\" (click)=\"checkElement(el)\"\n                        [csi-draggable]=\"{type: (el.type).toLowerCase() + '-ref', id: el.name, model: el}\" \n                        [context-popup-menu]=\"{disabled: !contextMenuEnabled, dataType: 'page', data: el.name, trigger: contextMenuTrigger, buildMenu: buildMenu, execContext:this }\"\n                        [class.selected-item]=\"isSelected(el)\">\n                    <div class=\"csi-noselect\">\n                        <input type=\"checkbox\" class=\"check-box\" *ngIf=\"isItemSelectable && !el.isStatic\" [checked]=\"isChecked(el.name,el.type)\">\n                        <span>\n                            <i class=\"fa {{icon}}\" [class.static]=\"el.isStatic\"></i>\n                            <i class=\"in-development fa fa-pencil\" *ngIf=\"el.isInDeveloping\"></i>\n                        {{el.name}}\n                        </span>\n                    </div>\n                </div>   \n            </div>\n        </div>  \n    </div>  \n    <div class=\"checkButtons\" *ngIf=\"isItemSelectable\">\n        <button (click)=\"checkAll($event, true)\">Check All</button>\n        <button (click)=\"checkAll($event, false)\">Uncheck All</button>\n    </div>\n</div>\n\n<ng-template #listBlock>\n    <div *ngIf=\"viewMode=='list'|| viewMode=='detail'\" [class]=\"viewMode\" >\n        <div class=\"csi-selectable-item\" [title]=\"el.name\" *ngFor='let el of items | async | elementFilter:nameFilter' (dblclick)=\"select(el)\" (click)=\"checkElement(el)\"\n                [class.selected-item]=\"isSelected(el)\"    \n                [context-popup-menu]=\"{disabled: !contextMenuEnabled, dataType: 'page', data: el.name, trigger: contextMenuTrigger, buildMenu: buildMenu, execContext:this }\"\n                [csi-draggable]=\"{type:  (el.type).toLowerCase() + '-ref', id: el.name, model: el}\" >\n            <div class=\"csi-noselect\">\n                <input type=\"checkbox\" *ngIf=\"isItemSelectable\" class=\"check-box\" [checked]=\"isChecked(el.name,el.type)\" [name]=\"'chk'+el.name\">\n                <span>\n                    <i class=\"fa {{icon}}\" [class.static]=\"el.isStatic\"></i>\n                    <i class=\"in-development fa fa-pencil\" *ngIf=\"el.isInDeveloping\"></i>\n                    {{el.name}}\n                </span>\n                <span [title]=\"el.description\" *ngIf=\"viewMode=='detail'\">{{ el.description }}</span>\n            </div>\n        </div>   \n    </div>   \n\n    <div *ngIf=\"viewMode=='tiles'\" [class]=\"viewMode\">\n        <ul>\n            <li class=\"tile\" [title]=\"el.name\" *ngFor='let el of items | async | elementFilter:nameFilter' (dblclick)=\"select(el)\" \n                [class.selected-item]=\"isSelected(el)\"  (click)=\"checkElement(el)\">\n                <div class=\"icon-area\">\n                    <input type=\"checkbox\" *ngIf=\"isItemSelectable\" class=\"check-box\" [checked]=\"isChecked(el.name,el.type)\">\n                    <i class=\"fa fa-2x {{icon}}\"></i>\n                </div>\n                <div class=\"tile-text\">{{el.name}}</div>\n            </li>\n        </ul>\n    </div>      \n</ng-template>\n\n<div #contextMenuTrigger=\"matMenuTrigger\" [matMenuTriggerFor]=\"itemContextMenu\">\n    <mat-menu #itemContextMenu=\"matMenu\">\n        <ng-template matMenuContent>\n            <div class=\"menu-{{cm.type}} line-pos-{{cm.linePos}}\" *ngFor=\"let cm of contextMenuItems\">\r\n                <mat-checkbox [key]=\"cm.key\" [context-add-group]=\"cm.nameItem\" [checked]=\"cm.checked\" (change)=\"contextMenuToggle(cm)\">{{cm.text}}</mat-checkbox>\r\n            </div>\n        </ng-template>\n    </mat-menu>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { PortalService } from '../../common/services/portal.service';\nimport { FieldDirectoryBase, OMTypeDescriptor } from '../../common/objects/fieldDirectoryBase';\nimport { IControl, StudioSubjects } from '../../common/objects/common';\nimport { PanelSettings, IContentPanel } from '../panel';\nimport { StudioStateService } from '../../common/services/studioStateService';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: 'csi-field-directory',\n    styleUrls: ['./fieldDirectory.component.less'],\n    templateUrl: 'fieldDirectory.component.html'\n})\n\nexport class FieldDirectoryComponent extends FieldDirectoryBase implements IContentPanel, OnInit, OnDestroy{\n\n    settings: PanelSettings;\n    controls: IControl[] = [];\n    errorMessage: any;\n    designerDropList : string[];\n    private dropAreasSubs : Subscription;\n\n    constructor(portal: PortalService, private _studioService: StudioStateService ) {\n        super(portal, _studioService);\n        this.dropAreasSubs = this._studioService.subjects.dropAreas.subscribe(d=> {\n            this.designerDropList = d.filter(dp=> dp.startsWith(\"drop_ctl_\"));\n        });\n    }\n\n    ngOnInit() {\n        this.loadServices();\n    }\n\n    ngOnDestroy(){\n        if( this.dropAreasSubs)\n            this.dropAreasSubs.unsubscribe();\n    }\n\n\n    init(s: PanelSettings, subjects: StudioSubjects) {\n        s.actions = [];\n        s.showSearch = false;\n        s.showActions = false;\n        s.iconSrc = \"fa-tasks\";\n        this.settings = s;\n        this.subjects = subjects;\n        return this.settings;\n    }\n\n    dragStart(dragData: OMTypeDescriptor) {\n\n        dragData.addDragData();\n        // find the control with same type. Can be used as dragging helper\n        //let ctl = _.find(this.controls, c => c.type === dragData.type);\n    }\n}\n\n","<div class=\"title\" (click)=\"togglePanels(false)\">\n    <i class=\"fa\" [ngClass]=\"!parametricPanel?'fa-caret-down':'fa-caret-right'\" aria-hidden=\"true\"></i>\n    <span class=services>Services</span>\n</div>\n<div class=\"csi-typeahead-area\" *ngIf=\"!parametricPanel\">\n    <input type=\"text\" [(ngModel)]=\"search\" placeholder=\"Search\">\n    <span class=\"relative-mode\" [class.relative]=\"relativeMode\" (click)=\"relativeMode=!relativeMode\">R</span>\n    <span class=\"refresh-btn\">\n        <i class=\"fa fa-refresh\" aria-hidden=\"true\" (click)='loadServices(true);'></i>\n    </span>\n</div>\n<div class=\"service-list\" *ngIf=\"!parametricPanel\">\n    <div *ngFor=\"let item of (list | fieldDirectorySearchFilter : search); index as i\" class=item-row [style.paddingLeft]=\"item._padding\"\n        [class.hidden]=\"item._hidden\" [class.drag]=\"item._draggable\" [attr.path]=\"i\">\n        <span class=expander [class.hidden]=\"!item.IsExpand\" (click)=\"toggle(item)\">\n            <i class=\"fa\" [ngClass]=\"item._expanded?'fa-caret-down':'fa-caret-right'\" aria-hidden=\"true\"></i>\n        </span>\n        <div (click)=\"select(item)\" [class.selected]=\"item._selected\" class=text [ngClass]=\"item._imageClass\" [attr.title]=\"item.Metadata.Description\"\n        [csi-draggable]=\"{disabled: !item._draggable,type: 'control-field', id: item.Name, model: item}\">{{item.Name}}</div>\n    </div>\n</div>\n\n<div class=\"title\" (click)=\"togglePanels(true)\">\n    <i class=\"fa\" [ngClass]=\"parametricPanel?'fa-caret-down':'fa-caret-right'\" aria-hidden=\"true\"></i>\n    <span class=parametric>Parametric Data</span>\n</div>\n<div class=\"csi-typeahead-area\" *ngIf=\"parametricPanel\">\n    <input type=\"text\" [value]=\"pdsearch\" placeholder=\"Search\">\n    <span class=\"relative-mode\" [class.relative]=\"relativeMode\" (click)=\"relativeMode=!relativeMode\">R</span>\n    <span class=\"refresh-btn\">\n        <i class=\"fa fa-refresh\" aria-hidden=\"true\" (click)='loadParamtericData(true);'></i>\n    </span>    \n</div>\n<div class=\"parametric-data-list\" *ngIf=\"parametricPanel\">\n    <div *ngFor=\"let item of (pdlist | fieldDirectorySearchFilter : pdsearch)\" class=item-row [style.paddingLeft]=\"item._padding\"\n        [class.hidden]=\"item._hidden\">\n        <span class=expander [class.hidden]=\"!item.IsExpand\" (click)=\"toggle(item)\">\n            <i class=\"fa\" [ngClass]=\"item._expanded?'fa-caret-down':'fa-caret-right'\" aria-hidden=\"true\"></i>\n        </span>\n        <div class=text [ngClass]=\"item._imageClass\" [attr.title]=\"item.Metadata.Description\" [csi-draggable]=\"{disabled: !item._draggable,type: 'control-field', id: item.Name, model: item}\">{{item.Name}}</div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { IUIComponentRef, StudioSubjects, IResultStatus } from '../../common/objects/common';\nimport { PanelAction, IContentPanel, PanelSettings, PanelUpdatedData } from '../panel';\nimport { WCFService } from '../../common/services/wcf.service';\nimport { PortalService } from '../../common/services/portal.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'csi-portal-object-panel',\n    styleUrls: ['./portalObjectPanel.component.less'],\n    template: `\n    <div class=\"csi-object-panel {{ viewMode }}\">\n        <div *ngIf=\"viewMode == 'list'\">\n            <div class=\"csi-selectable-item\" [title]=\"el.name\" *ngFor=\"let el of (elements|elementFilter:nameFilter)\" \n                    (dblclick)=\"selectOpen(el)\" (click)=\"select(el)\" [class.selected-item]=\"isSelected(el)\">\n                <div class=\"csi-noselect\">\n                    <span><i class=\"fa {{icon}}\"></i>{{el.name}}</span>                \n                </div>\n            </div>\n        </div>\n        <div class=\"portalObj-container\" *ngIf=\"viewMode == 'tiles'\">\n            <ul>\n                <li class=\"portalObj-tile\" *ngFor='let el of (elements | elementFilter:nameFilter)' \n                    (dblclick)=\"selectOpen(el)\" (click)=\"select(el)\" [attr.title]=\"el.name\" [class.selected-item]=\"isSelected(el)\">\n                    <i class=\"fa fa-2x {{icon}}\"></i>\n                    <div class=\"tile-text\" >{{el.name}}</div>                    \n                </li>\n            </ul>\n        </div>\n        \n        <div class=\"portalObj-container\" *ngIf=\"viewMode == 'detail'\">\n            <div class=\"col-captions\">\n                <div class=\"col-img\"> </div>\n                <div class=\"col-name\">{{'Name' | label: 'PS_NAMELBL'}}</div>\n                <div class=\"col-description\">{{'Description' | label: 'PS_DESCRIPTIONLBL'}}</div>\n            </div>\n            <div class=\"detail-items\">\n                <div *ngFor=\"let el of (elements|elementFilter:nameFilter)\" [title]=\"el.name\" class=\"csi-selectable-item portalObj-detail-item\" \n                        (dblclick)=\"selectOpen(el)\" (click)=\"select(el)\" [class.selected-item]=\"isSelected(el)\">\n                    <div class=\"col-img\"><i class=\"fa {{icon}}\"></i></div>\n                    <div class=\"col-name\">{{el.name}}</div>\n                    <div class=\"col-description\">{{el.description}}</div>\n                </div>\n            </div>\n        </div>\n    </div>`\n})\n\nexport class PortalObjectPanelComponent implements IContentPanel, OnInit {\n\n    settings: PanelSettings;\n\n    elements: IUIComponentRef[] = [];\n\n    errorMessage: any;\n    nameFilter: string;\n    selectedItem: {name: string, type: string};\n\n    dataSources = {\n        'menu': { svc: 'PortalMenuDefinitionMaint', icon: 'fa-list-alt' },\n        'tab': { svc: 'PortalTabMaint', icon: 'fa-folder-o' },\n        'action': { svc: 'ActionMaint', icon: \"fa-cog\" },\n        'actionCategory': { svc: 'ActionCategoryMaint', icon: \"fa-share-alt\" },\n        'actionRule': { svc: 'ActionRuleMaint', icon: \"fa-exchange\" },\n        'pageMap': { svc: '*pageMap', icon: \"fa-exchange\" },\n        'targetMatrix': { svc: '*targetMatrix', icon: \"fa-exchange\" }\n    };\n\n    icon: string;\n    svc: string;\n    private subjects: StudioSubjects;\n\n    constructor(private _wcfService: WCFService, private _portalService: PortalService) {\n    }\n\n    get viewMode(): string {\n        return this.settings.viewMode || \"list\";\n    }\n\n    init(s: PanelSettings, rootSubjects: StudioSubjects) {\n        this.subjects = rootSubjects;\n        let ds = this.dataSources[s.dataSource];\n        if (ds) {\n            this.svc = ds.svc;\n            this.icon = ds.icon;\n        }\n        else {\n            console.error('data source ' + s.dataSource + ' is not found');\n        }\n\n        s.actions = [\n            <PanelAction>{ name: 'New', imgClass: 'fa-plus-circle', svc: this.svc },\n            <PanelAction>{ name: 'List mode', imgClass: 'fa-list', modeClass: 'list' },\n            <PanelAction>{ name: 'Tiles mode', imgClass: 'fa-th', modeClass: 'tiles' },\n            <PanelAction>{ name: 'Details mode', imgClass: 'fa-list-ul', modeClass: 'detail' }\n        ];\n        s.showSearch = true;\n        s.iconSrc = this.icon;\n        s.refreshContent.subscribe(p => this.load(true));\n        this.settings = s;\n\n        return this.settings;\n    }\n\n    ngOnInit() {\n        this.load();\n    }\n    \n    load(forceReload: boolean = false): void {\n        let observable: Observable<IUIComponentRef[] | IResultStatus>;\n        if (this.svc[0] != '*') {\n            observable = this._wcfService.getElementRefs(this.svc, this.settings.dataSource, forceReload);\n        }\n        else if (this.settings.dataSource == \"pageMap\")\n            observable = this._portalService.getPageMaps();\n        else if (this.settings.dataSource == \"targetMatrix\")\n            observable = this._portalService.getTargetMatrices();\n\n        if (observable)\n            observable.subscribe(\n                (elements : IUIComponentRef[]) => {\n                    this.elements = elements;\n                    this.settings.searchInput.subscribe(searchtext => this.nameFilter = searchtext);\n                },\n                error => this.errorMessage = <any>error);\n    }\n\n    selectOpen(el: IUIComponentRef) {\n        let cmd = new PanelUpdatedData();\n        cmd.elementRef = el;\n        cmd.open = true;\n        cmd.action = new PanelAction();\n        cmd.action.svc = this.svc;\n        this.subjects.panel.next(cmd);\n    }\n\n    isSelected(el: IUIComponentRef){\n        return this.selectedItem && (el.name == this.selectedItem.name && el.type == this.selectedItem.type);\n    }\n\n    select(el: IUIComponentRef){\n        //this.selectedItem = {name : el.name, type: el.type};\n        //this.subjects.propertyPanel.next(el);\n    }\n}\n","import {Injectable, Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'elementFilter'\n})\n@Injectable()\nexport class ElementFilter implements PipeTransform {\n    transform(elements: any[], filter: string): any[] {\n        if (!elements || (elements && elements.length==0))\n            return elements;       \n                             \n        if (filter !== undefined){\n            const re = filter.toLowerCase();\n            return elements.filter( it => it.name && it.name.toLowerCase().indexOf(re)!=-1);\n        }\n        return elements;\n    }\n}","import {Injectable, Pipe, PipeTransform} from '@angular/core';\r\nimport { OMTypeDescriptor } from '../../common/objects/fieldDirectoryBase';\r\n\r\n@Pipe({\r\n    name: 'fieldDirectorySearchFilter',\r\n    pure: false\r\n})\r\n\r\n@Injectable()\r\nexport class FieldDirectorySearchFilter implements PipeTransform {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    transform(inp: OMTypeDescriptor[], search: string): OMTypeDescriptor[] {\r\n\r\n        let res: OMTypeDescriptor[] = [];\r\n        let includedNested: boolean = false;\r\n        search = search.toLowerCase();\r\n\r\n        if (search) {\r\n\r\n            inp.forEach(it => {\r\n                if (it._nesting == 0 && it.Name.toLowerCase().indexOf(search) != -1) {\r\n                    // service included \r\n                    res.push(it);\r\n\r\n                    // include all nested items\r\n                    includedNested = true;\r\n                }\r\n                else {\r\n                    if (includedNested) {\r\n                        if (it._nesting > 0) {\r\n                            res.push(it);\r\n                        }\r\n                        else {\r\n                            includedNested = false;\r\n                        }\r\n                    }\r\n                } \r\n            });\r\n        }\r\n        else {\r\n            res = inp;\r\n        }\r\n        return res;\r\n    }\r\n}\r\n","import { Component, Input, OnInit, OnChanges, Type, Output, EventEmitter } from '@angular/core';\n\nimport { ValueUpdatedData, PropertyRef } from '../../common/objects/common';\nimport { MetadataService } from '../../common/services/metadata.service';\nimport { IPropertyMetadata } from '../../common/objects/viewModel';\nimport { RecordCommand, PropertyHistoryData } from '../../common/objects/historyLog';\n\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { ModalContainerComponent } from './valueEditors/modalContainer';\nimport { ModalCollectionComponent } from './valueEditors/modalCollection';\nimport { ModalObjectComponent } from './valueEditors/modalObject';\nimport { ModalPropertiesContext } from './properties';\nimport { LabelSearchComponent } from './valueEditors/labelSearch';\nimport { EditConditionComponent } from './propertyConditions/editCondition';\nimport { PropertyConditionsComponent } from './propertyConditions/propertyCondition';\nimport { InitiatorComponent } from './propertyConditions/initiator';\nimport { Subject } from 'rxjs';\nimport {debounceTime} from \"rxjs/operators\";\nimport _ from 'lodash';\nimport { StudioStateService } from '../../common/services/studioStateService';\n\n@Component({\n    selector: 'csi-name-value',\n    styles:[`\n        .csi-name-value {\n            display: flex;\n            margin-left: 4px;\n            margin-right: 4px;\n        }\n        .csi-name-value.disabled{\n            color: #808080e8;\n            pointer-events:none;\n        }\n        .csi-name-value.wide .csi-property-label {             \n            text-overflow: clip;\n            flex-basis: 10%;\n        }\n\n        .csi-name-value.wide .csi-value-editor {\n            flex-basis: 90%;\n        }\n\n        .csi-property-hasValue {\n            flex: 0 0 16px;\n            max-width: 16px;\n            min-width: 16px;\n            color: #AFD7E1;\n            margin-top: 4px;\n        }\n        .csi-label-editor{\n            flex: 1 1;\n            display: flex;\n        }\n\n        .csi-property-label {\n            flex-basis: 50%;\n            max-width: 300px;\n            text-overflow: ellipsis;\n            overflow-x: hidden;\n            padding: 4px;\n            user-select: none;\n            -ms-user-select: none;\n        }\n\n        .csi-property-label.favorite {\n            color: #1676a0;\n        }\n\n        .csi-value-editor {\n            flex-basis: 50%;\n            color: #000000;\n            margin-left: 4px;\n            padding-right: 5px;\n            user-select: text;\n        }\n\n        .csi-value-editor[readonly] {\n            color: #5A5A5A;\n            user-select: text;\n        }       \n\n        .popup {\n            text-align: right;    \n        }\n\n        .property-modal-btn {\n            width: 25px;\n            display: inline-block;\n            cursor: pointer;\n            border: 1px solid #dcdcdc;\n            padding: 1px 1px 1px 2px;\n            vertical-align: middle;\n            text-align: center;\n        }        \n\n        /* Row mode */\n        .row-mode .csi-label-editor{\n            flex-direction: column;\n        }\n\n        .row-mode .csi-property-hasValue{\n            display:none;\n        }\n            \n        .row-mode .csi-property-label{\n            flex-basis: auto;\n            max-width: none;\n        }            \n        \n        .row-mode .csi-property-label[title=\"Initiators\"]{\n            color: transparent;\n        }\n\n        .row-mode .csi-value-editor{\n            flex-basis: auto;\n            margin-left: 0;\n        }\n            \n        .row-mode .csi-name-value{\n            flex-direction: column;\n        }\n\n        .row-mode .property-modal-btn-initiators  {\n            display: inline-block;\n            cursor: pointer;\n            vertical-align: middle;\n            width: 100px;\n            background-color: gray;\n            border: solid black 1px;\n            border-radius: 2px;\n            color: white;\n            padding: 1px 10px 1px 10px;\n            white-space:nowrap;\n        }        \n        .hidden {\n            display: none;\n        }\n    }\n    `],\n    templateUrl: 'nameValue.html'\n})\n\nexport class NameValueComponent implements OnInit, OnChanges {\n    @Input(\"property\") __property: any; \n    @Input() instance: any;\n    @Input() valueUpdated: Subject<ValueUpdatedData>;\n    @Input() rowMode: boolean = false;\n\n    @Output() displayDescription: EventEmitter<PropertyRef> = new EventEmitter<PropertyRef>(true); // async\n    @Output() setFavorite = new EventEmitter<IPropertyMetadata>(true);\n\n    constructor(private _metadataService: MetadataService, private _dialog: MatDialog, private _studioStateService : StudioStateService) { }\n\n    get property(): IPropertyMetadata { return this.__property; }\n\n    resizeClass: string;\n    get editorName(): string { \n        if( this.property && this.property.editor && this.property.editor.directive !== this._oldDirective)\n            this.fixEditor();\n        return this._editorName;\n    }\n\n    get hasValue(): boolean {return !this.isEmpty(this.property.value)};\n    get label() : string {return this.property.displayedName || this.property.name};\n    get disabled(){\n        return this.property.readOnly && this.property.name === \"Display\";\n    };\n\n    propCondInitiators = false;\n    counter: number = 0;\n\n    valueChanged = new Subject<ValueUpdatedData>();\n    openWizard = new Subject<any>();\n    inputResized = new Subject<boolean>();\n\n    modalButtonCaption: string = \" . . . \";\n    modalButtonClass: string = \"property-modal-btn\";\n\n    private _editorName: string;\n    private _oldDirective : string;\n\n    ngOnInit() {\n        this.fixEditor();\n\n        this.valueChanged.pipe(debounceTime(500)).subscribe(v => {\n            let oldHistoryValue: any;\n            if (this.instance.properties || this.instance.__unbound) {\n                oldHistoryValue = {};\n                oldHistoryValue[this.property.name] = _.cloneDeep(this.property.value);\n            }\n            if (oldHistoryValue) {\n                let newValue = {};\n                newValue[this.property.name] = _.cloneDeep(v.val);\n                this.recordPropertyHistory(this.instance, this.property.name, oldHistoryValue, newValue);\n            }\n            this.valueUpdated.next(v);\n        });\n\n        this.inputResized.subscribe(expanded => this.resizeClass = expanded ? 'wide' : '');\n\n        this.openWizard.subscribe(w => this.openModal());\n    }\n\n    ngOnChanges(ch) {\n        if (_.isArray(this.property.value))\n            this.counter = this.property.value.length;\n        else\n            this.counter = 0;\n\n        this.fixEditor();\n    }\n\n    onSelectProperty() {\n        let propertyDescr: PropertyRef = {\n            name: this.property.name,\n            displayedName: this.property.displayedName            \n        };\n    \n        this.displayDescription.emit(propertyDescr);\n    }\n\n    private fixEditor() {\n\n        if (!this.property.editor) {\n            let type = this.property.originalTypeName ? this.property.originalTypeName.toLowerCase() : null;\n            if (type) {\n                if (type == 'boolean')\n                    this.property.editor = { directive: 'switchBox' };\n                else if (type == 'string')\n                    this.property.editor = { directive: 'text' };\n                else if (type.indexOf('[]') != -1)\n                    this.property.editor = { directive: 'collection' };\n                else\n                    this.property.editor = { directive: 'object' };\n            }\n            else\n                this.property.editor = { directive: 'unknown' };\n        }\n\n        if (this.property.editor.directive == \"enum\" && !this.property.editor.provider) {\n            this.property.editor.provider = \"enum\";\n        }\n\n        if (this.property.editor && this.property.editor.directive) {\n            this._editorName = this.property.editor.directive;\n            if (this._editorName == \"boolean\")\n                this._editorName = 'switchBox';\n            else if (this._editorName == \"object\" ||\n                this._editorName == \"collection\")\n                this._editorName = \"modal\";\n            else if (this._editorName == \"enum\")\n                this._editorName = \"selector\";\n        }\n\n        this._oldDirective = this.property.editor.directive;\n        \n        if(this.rowMode && this.property.editor && this.property.editor.provider == 'propertyConditionInitiators'){\n            this.modalButtonCaption = `${this.label}[${this.counter}] . . . `;\n            this.modalButtonClass = \"property-modal-btn-initiators\";\n        }\n        else{\n            this.modalButtonCaption = \" . . . \";\n            this.modalButtonClass = \"property-modal-btn\";\n        }\n\n    }\n\n    openModal() {\n        let context: ModalPropertiesContext = {\n            property: this.property,\n            metadataService: this._metadataService,\n            value: _.cloneDeep(this.property.value),\n            instance: this.instance,\n            instanceType: this.instance.typeName || this.instance.__type\n        };\n\n        let comp: Type<any>;\n        let dialogOptions: MatDialogConfig = { disableClose: true };\n        switch (this.property.editor.directive) {\n            case \"collection\":\n                if (this.rowMode && this.property.editor.provider === 'propertyConditionInitiators') {\n                    comp = InitiatorComponent;\n                    dialogOptions = { disableClose: true, height: '600px', width: '800px' }\n                }\n                else {\n                    comp = ModalCollectionComponent;\n                }\n                break;\n            case \"object\":\n                comp = ModalObjectComponent;\n                break;\n            case \"modal\":\n            case \"text\":\n                if(this.property.editor.provider == \"targetMatrixRows\" )\n                    dialogOptions = { disableClose: true, height: '550px', width: '700px' };\n                comp = ModalContainerComponent;\n                break;\n            case \"labelLookup\":\n                comp = LabelSearchComponent;\n                break;\n            case \"expression\":\n                comp = EditConditionComponent;\n                dialogOptions = { disableClose: true, height: '600px', width: '950px' }\n                break;\n            case \"propertyCondition\":\n                comp = PropertyConditionsComponent;\n                dialogOptions = { disableClose: true, height: '600px', width: '800px' }\n                break;\n            case \"propertyConditionInitiators\":\n                break;\n        }\n\n        if (comp) {\n            let dial = this._dialog.open(comp,  dialogOptions);\n            dial.componentInstance.initContext(context);\n            dial.afterClosed().subscribe(result => {\n               if (result || this.property.name===\"HTMLText\")\n                    this.valueChanged.next(new ValueUpdatedData(this.property.name, result));\n           });\n        }\n    }\n\n    modalEditor(editor): string {\n        if (editor === \"modal\" || editor === \"propertyCondition\" || editor === \"expression\")\n            return editor;\n        return null;\n    }\n\n    private isEmpty(v: any): boolean {\n        if (this.property.originalTypeName.toLowerCase() == 'boolean')\n            return !(v === true || v === false);\n        if (_.isNumber(v))\n            return false;\n        return _.isEmpty(v);\n    }\n\n    private recordPropertyHistory(instance: any, path: string, oldValue: any, newValue: any) {\n        let c = new PropertyHistoryData(instance, path, oldValue, newValue, false);\n        this._studioStateService.writeHistory(RecordCommand.propertyChange, c);\n    }\n\n    toggleFavorite(ctrl: boolean) {\n        if (ctrl) {\n            this.property.favorite = !this.property.favorite;\n            this.setFavorite.emit(this.property);\n        }\n    }\n\n}","<div class=\"csi-name-value\" [ngClass]=\"resizeClass\" [class.disabled]=\"disabled\" [class.row-mode]=\"rowMode\" [class.hidden]=\"property.hidden\" (click)=\"onSelectProperty()\">\r\n\r\n    <div class=\"csi-property-hasValue\" [style.box-shadow]=\"property['__wscolor']\">\r\n        <span [hidden]=\"!hasValue\"><i class=\"fa fa-check\" aria-hidden=\"true\"></i></span>\r\n    </div>\r\n\r\n    <div class=\"csi-label-editor\">\r\n        <div class=\"csi-property-label\" title=\"{{label}}\" [class.favorite]=\"property.favorite\"\r\n            (click)=\"toggleFavorite($event.ctrlKey)\" >{{label}}</div>\r\n        \r\n        <div class=\"csi-value-editor\" [ngSwitch]=\"editorName\">\r\n            <div *ngSwitchCase=\"'switchBox'\">\r\n                <csi-editor-switchbox [property]=\"property\" [valueChanged]=\"valueChanged\"></csi-editor-switchbox>\r\n            </div>\r\n            <div *ngSwitchCase=\"'text'\">\r\n                <csi-editor-text [property]=\"property\" [value]=\"property.value\" [valueChanged]=\"valueChanged\"\r\n                                [resized]=\"inputResized\" [wizardDialog]=\"openWizard\">\r\n                </csi-editor-text>\r\n            </div>\r\n            <div *ngSwitchCase=\"modalEditor(editorName)\" class=\"popup\">\r\n                <span [class]=\"modalButtonClass\" (click)=\"openModal()\" title=\"{{label}}\">{{modalButtonCaption}}</span>\r\n            </div>\r\n            <div *ngSwitchCase=\"'labelLookup'\" class=\"popup\">\r\n                <csi-editor-text [property]=\"property\" [value]=\"property.value ? property.value : ''\" [valueChanged]=\"valueChanged\" [resized]=\"inputResized\" [wizardDialog]=\"openWizard\"></csi-editor-text>\r\n            </div>\r\n            <div *ngSwitchCase=\"'selector'\">\r\n                <csi-editor-selector [property]=\"property\" [value]=\"property.value\"\r\n                            [items]=\"property.editor?.selectableItems\"\r\n                            [valueChanged]=\"valueChanged\" [resized]=\"inputResized\"></csi-editor-selector>\r\n            </div>\r\n            <div *ngSwitchDefault>\r\n                <span class=\"bg-warning\">{{property.editor.directive}} not implemented.</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { MetadataService } from '../../common/services/metadata.service';\nimport { IPropertyMetadata} from '../../common/objects/viewModel';\nimport { ILabel } from '../../common/objects/common';\n\nexport class ModalPropertiesContext {\n    property: IPropertyMetadata;\n    metadataService: MetadataService;\n    value: any;\n    title?: string;\n    hideTypeName?: boolean;\n    disableAdding?: boolean = false;\n    instance?: any;\n    instanceType?: string;\n    beforeClose?: (ok:boolean) => boolean;\n    duplicationErrorLabel?: ILabel;\n}","import {Injectable, Pipe, PipeTransform} from '@angular/core';\r\nimport { IPropertyMetadata } from '../../common/objects/viewModel';\r\nimport { Group, ViewTabs } from './propertyList';\r\n\r\n@Pipe({\r\n    name: 'propertyFilter'\r\n})\r\n\r\n@Injectable()\r\nexport class PropertyFilter implements PipeTransform {\r\n\r\n    transform(inp: IPropertyMetadata[] | Group[], complexFilter: any): IPropertyMetadata[] | Group[] {\r\n\r\n        let prm: { groupMode: boolean, group: Group, search: string, tab: ViewTabs, favorites: string[] } = complexFilter;\r\n        if (inp) {\r\n            if (!prm.groupMode) {\r\n                let filtered: IPropertyMetadata[] =\r\n                    (<IPropertyMetadata[]>inp)\r\n                        .filter(p2 => {\r\n                            if (prm.tab == ViewTabs.favorites)\r\n                                return prm.favorites ? prm.favorites.findIndex(fp => fp == p2.name.toLowerCase()) != -1 : false;\r\n\r\n                            else if (prm.tab == ViewTabs.grouped) \r\n                                return p2.category.toLowerCase() == prm.group.category.name;\r\n\r\n                            else if (prm.tab == ViewTabs.sorted) \r\n                                return true;                            \r\n                        })\r\n                        .filter(p3 => prm.search ? (p3.displayedName || p3.name).toLowerCase().indexOf(prm.search) != -1 : true);\r\n\r\n                return filtered;\r\n            }\r\n            else {\r\n                let ng = (<Group[]>inp).filter(g =>\r\n                    (prm.tab == ViewTabs.favorites || prm.tab == ViewTabs.sorted) ?\r\n                        g.category.name == \"favorites\" :\r\n                        g.category.name != \"favorites\");\r\n                if(ng.every(gs => !gs.expanded) ){\r\n                    // expand first group if no one expanded\r\n                    if( ng.length )\r\n                        ng[0].expanded = true;\r\n                }\r\n                return ng;\r\n            }\r\n        }\r\n        return inp;\r\n    }\r\n}","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { StudioSubjects } from '../../../common/objects/common';\r\nimport { SetDataValueItem  } from '../../../common/objects/viewModel';\r\n\r\n@Component({\r\n    selector: 'csi-condition',\r\n    styles:[`\r\n\r\n    :host {\r\n        display: flex;\r\n        flex-direction: column;\r\n        flex: 1 1;\r\n    }\r\n\r\n    .csi-condition {\r\n        display: flex;\r\n        flex-direction: column;\r\n        flex: 1 1 auto;\r\n    }\r\n    .csi-condition .control-row {\r\n        display: flex;\r\n        justify-content: flex-start;\r\n    }\r\n    \r\n    .csi-condition .control-group {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-self: center;\r\n        justify-content: center;\r\n        height: 100%;\r\n        padding: 5px 10px;\r\n    }\r\n\r\n    .csi-condition .control-group label {\r\n        margin: 0px;\r\n        font-weight: normal;\r\n    }\r\n    \r\n    .csi-condition .control-group span {\r\n        align-self: flex-start;\r\n    }    \r\n\r\n    .csi-condition select {\r\n        min-width: 140px;\r\n    }\r\n  \r\n    `],\r\n    template: `<csi-panel [component]=\"'csi-property-list'\" [subjects]=\"subjects\" [dataSource]=\"'propertyCondition'\"></csi-panel>`\r\n})\r\n\r\nexport class ConditionComponent {\r\n    @Input() valueItem: SetDataValueItem;\r\n    @Output() onValueChanged = new EventEmitter<any>();\r\n\r\n    subjects: StudioSubjects;\r\n\r\n    constructor() {\r\n        this.subjects = new StudioSubjects();\r\n        this.subjects.panel.subscribe(p => {\r\n            if (!this.valueItem)\r\n                this.valueItem = new SetDataValueItem();\r\n            this.subjects.propertyPanel.next(this.valueItem);\r\n        });\r\n\r\n        this.subjects.property.subscribe(n => {\r\n            this.subjects.propertyPanel.next(this.valueItem);\r\n            this.onValueChanged.emit(this.valueItem);\r\n        });\r\n    }\r\n}\r\n\r\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { MetadataService } from '../../../common/services/metadata.service';\r\nimport { ConditionExpression, SetDataValueItem, PropertyConditionExpression, InitiatorDefinition, IMetadataEnumValue } from '../../../common/objects/viewModel';\r\n\r\n@Component({\r\n    selector: 'csi-condition-display',\r\n    styles:[\r\n        `.csi-condition-display {\r\n            display: flex;\r\n            flex-direction: column;\r\n            margin-left: 20px;\r\n        }\r\n        .csi-condition-display > .line {\r\n              display: inline-flex;\r\n        }          \r\n        .csi-condition-display > [indent=\"1\"].line { margin-left: 20px; }\r\n        .csi-condition-display > [indent=\"2\"].line { margin-left: 40px; }\r\n        \r\n        .csi-condition-display > .line > [bold=\"true\"].item {\r\n            font-weight: bold;\r\n        }\r\n        .csi-condition-display > .line > [link=\"true\"].item {\r\n            text-decoration: underline;\r\n            color: blue;\r\n            cursor: pointer;\r\n        }\r\n        `\r\n    ],\r\n    template: \r\n    `<div class=\"csi-condition-display\">\r\n        <div class=\"line\" [attr.indent]=\"l.indent\" *ngFor=\"let l of lines\">\r\n            <div class=\"item\" [attr.bold]=\"it.isBold\" [attr.link]=\"it.isLink\" *ngFor=\"let it of l.items\" (click)=\"editCondition(it)\" >{{it.text}}&nbsp;</div>\r\n        </div>\r\n    </div>`\r\n})\r\n\r\nexport class ConditionDisplayComponent implements OnInit {\r\n    @Input() condition: PropertyConditionExpression;\r\n    @Output() onEditCondition = new EventEmitter<any>();\r\n\r\n    lines: line[] = [];\r\n    conditionComparisonEnum: IMetadataEnumValue[];\r\n    dataMemberConnectionTypeEnum: IMetadataEnumValue[];\r\n\r\n    constructor(private _metadata: MetadataService) {\r\n        this.conditionComparisonEnum = this._metadata.getMetadataType('ConditionComparisonType').enumValues;\r\n        this.dataMemberConnectionTypeEnum = this._metadata.getMetadataType('DataMemberConnectionType').enumValues;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.buildCondition(this.condition.condition);\r\n        if (this.condition.valueIfTrue) {\r\n            this.lines.push(new line(new txtItem('Then', true)));\r\n            this.buildExpression(this.condition.valueIfTrue, \"ThenValue\");\r\n        }\r\n    }\r\n\r\n    private buildCondition(cond: ConditionExpression): void {\r\n        if (cond === undefined || cond == null)\r\n            return;\r\n\r\n        this.buildExpression(this.getField(cond, 'value1'), \"Left\");\r\n        this.buildComparison(this.getField(cond, 'comparisonType'));\r\n        this.buildExpression(this.getField(cond, 'value2'), \"Right\");\r\n\r\n        [\"And\", \"Or\"].forEach(b => {\r\n            let bwCond: ConditionExpression[] = this.getField(cond, b.toLowerCase());\r\n            if (bwCond && bwCond.length) {\r\n                this.lines.push(new line(new txtItem(b, true)));\r\n                bwCond.forEach(cx => this.buildCondition(cx));\r\n            }\r\n        });\r\n    }\r\n\r\n    private buildExpression(d: SetDataValueItem, valName: string): void {\r\n        if (d === undefined || d == null)\r\n            return;\r\n\r\n        let l = new line();\r\n        if (valName == \"ThenValue\") {\r\n            l.items.push(new txtItem(\"Value of the property\"));\r\n        }\r\n        else {\r\n            l.items.push(\r\n                new txtItem(\"If Expression\"),\r\n                new txtItem(valName + \" Value\", true)\r\n            );\r\n        }\r\n        l.items.push(new txtItem(\"equals value on connection type\"));\r\n        let connTypeValue: number = this.getField(d, 'connectionType');\r\n        if (connTypeValue === undefined)\r\n            connTypeValue = 0;\r\n        let connType = this.dataMemberConnectionTypeEnum.find(t => t.value == connTypeValue);\r\n        l.items.push(new txtItem(connType.name, false, true));\r\n        this.lines.push(l);\r\n\r\n        this.buildFieldVal(d, 'key', connType.name);\r\n        this.buildFieldVal(d, 'property');\r\n        this.buildFieldVal(d, 'requestDataMode');\r\n        this.buildFieldVal(d, 'allowEmptyValue');\r\n\r\n        let initiators = this.getField(d, 'initiators');\r\n        if (initiators)\r\n            initiators.forEach(init => this.buildInitiator(init))\r\n    }\r\n\r\n    private buildFieldVal(d: SetDataValueItem, f: string, displayedFieldName: string = ''): void {\r\n        let v = this.getField(d, f);\r\n        if (v !== undefined) {\r\n            let l1 = new line();\r\n            l1.indent = 1;\r\n            l1.items.push(\r\n                new txtItem('and Value on field'),\r\n                new txtItem(displayedFieldName || f),\r\n                new txtItem('equals'),\r\n                new txtItem(v, false, true));\r\n            this.lines.push(l1);\r\n        }\r\n    }\r\n\r\n    private buildComparison(ct: number): void {\r\n        if (ct === undefined)\r\n            ct = 0;\r\n        let c = this.conditionComparisonEnum.find(e => e.value == ct);\r\n        this.lines.push(new line(new txtItem(c.name, true)));\r\n    }\r\n\r\n    private buildInitiator(init: InitiatorDefinition): void {\r\n        let l1 = new line();\r\n        l1.items.push(\r\n            new txtItem('and Initiator'),\r\n            new txtItem(this.getField(init, 'name'), false, true),\r\n            new txtItem('is triggered by'),\r\n            new txtItem(this.getField(init, 'key'), false, true),\r\n            new txtItem('on event'),\r\n            new txtItem(this.getField(init, 'event'), false, true));\r\n        this.lines.push(l1);\r\n    }\r\n\r\n    private getField(o: any, f: string) : any {\r\n        f = f.toLowerCase();\r\n        let key = Object.keys(o).find(k => k.toLowerCase() == f);\r\n        if (key) \r\n            return o[key];\r\n        return undefined;        \r\n    }\r\n\r\n    editCondition(t: txtItem) {\r\n        if (t.isLink)\r\n            this.onEditCondition.emit();\r\n    }\r\n}\r\n\r\nclass txtItem {\r\n\r\n    constructor(public text = '', public isBold = false, public isLink = false) {\r\n    }\r\n}\r\n\r\nclass line {\r\n    items: txtItem[] = [];\r\n    indent: number = 0;\r\n\r\n    constructor(t?: txtItem ) {\r\n        if (t)\r\n            this.items.push(t);\r\n    }\r\n}","import { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\nimport { ConditionExpression} from '../../../common/objects/viewModel';\r\nimport { ModalPropertiesContext } from '../properties';\r\n\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n    selector: 'csi-condition-editor',\r\n    styles:[\r\n        `\r\n        :host { \r\n            height: 100%;\r\n            min-height: 600px;\r\n            min-width: 850px;\r\n        }\r\n        .condition-expression {\r\n            overflow: auto;\r\n        }\r\n        `\r\n    ],\r\n    templateUrl: 'editCondition.html'\r\n})\r\n\r\nexport class EditConditionComponent {\r\n    condExp: ConditionExpression;\r\n\r\n    get dialogRef(): MatDialogRef<EditConditionComponent> {\r\n        return this._dialogRef;\r\n    }\r\n\r\n    constructor(\r\n        private _dialogRef: MatDialogRef<EditConditionComponent>) {\r\n    }\r\n\r\n    initContext(context: ModalPropertiesContext): void {\r\n        this.condExp = context.value ? _.cloneDeep(context.value) : new ConditionExpression();\r\n    }\r\n\r\n    expressionValueChanged(editCondition: any): void {\r\n        this.condExp = editCondition;\r\n    }\r\n\r\n    ok(): void {        \r\n        this._dialogRef.close(this.condExp);\r\n    }\r\n\r\n    cancel(): void {\r\n        this._dialogRef.close(null);\r\n    }\r\n\r\n}\r\n\r\n","<div class=\"csi-modal csi-condition-editor\" csi-dialog-decor [dialog]=\"dialogRef\">\r\n    <header>\r\n        <span class=\"title\">{{'Conditions Editor' | label: 'PS_CONDITION_EDITOR'}}</span>\r\n        <span class=\"close-icon\" (click)=\"cancel()\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></span>\r\n    </header>\r\n    <main>\r\n        <csi-expression class=\"condition-expression\" [expression]=\"condExp\" (onValueChanged)=\"expressionValueChanged($event)\"></csi-expression>\r\n    </main>\r\n    <footer>\r\n        <span class=\"default-btn\" (click)=\"cancel()\">{{'Cancel' | label: 'PS_CANCEL'}}</span>\r\n        <span class=\"primary-btn\" (click)=\"ok()\">{{'Ok' | label: 'PS_OK'}}</span>\r\n    </footer>\r\n</div>","import { Component, Input, OnChanges } from '@angular/core';\r\n\r\nimport { ConditionExpression, IMetadataEnumValue } from '../../../common/objects/viewModel';\r\nimport { MetadataService } from '../../../common/services/metadata.service';\r\n\r\n@Component({\r\n    selector: 'csi-expression',\r\n    templateUrl: 'expression.html',\r\n    styleUrls: ['./expression.less']\r\n})\r\n\r\nexport class ExpressionComponent implements OnChanges {\r\n    @Input() expression: ConditionExpression;\r\n\r\n    get enableAndAdd(): boolean { return this.expression.and !== undefined; }\r\n    get enableOrAdd(): boolean { return this.expression.or !== undefined; };\r\n\r\n    andOr = ['and', 'or'];\r\n    conditionComparisonEnum: IMetadataEnumValue[];\r\n\r\n    constructor(private _metadata: MetadataService) {\r\n        this.conditionComparisonEnum = this._metadata.getMetadataType('ConditionComparisonType').enumValues;\r\n    }\r\n\r\n    ngOnChanges(ch) {\r\n        if (ch.expression && ch.expression.currentValue.comparisonType === undefined)\r\n            ch.expression.currentValue.comparisonType = 0;\r\n    }\r\n\r\n    addRemoveGroup(op: string): void {\r\n        if (this.expression[op]) {\r\n            delete this.expression[op];\r\n        }\r\n        else {\r\n            if (!this.expression[op])\r\n                this.expression[op] = [];\r\n        }\r\n    }\r\n\r\n    addExpression(op: string): void {\r\n        this.expression[op].push(new ConditionExpression);\r\n    }\r\n\r\n    deleteExpression(exp: ConditionExpression, expressions: ConditionExpression[]): void {\r\n        let i = expressions.indexOf(exp);\r\n        if (i != -1)\r\n            expressions.splice(i, 1);\r\n    }\r\n}","<div class=\"csi-property-expressions\">\r\n    <div class=\"expressions\">\r\n        <div class=\"comparison\" >\r\n            <select id=\"allowEmptyInput\" [(ngModel)]=\"expression.comparisonType\">\r\n                <option *ngFor=\"let en of conditionComparisonEnum\" [ngValue]=\"en.value\">{{en.name}}</option>\r\n            </select>\r\n        </div>\r\n        <div class=\"expression-values\">\r\n            <div class=\"expression\">\r\n                <span class=\"title\">{{'Left Value' | label: 'PS_EXPR_LEFTVALUE'}}</span>\r\n                <csi-condition [valueItem]=\"expression.value1\" (onValueChanged)=\"expression.value1 = $event\"></csi-condition>\r\n            </div>\r\n            <div class=\"expression\">\r\n                <span class=\"title\">{{'Right Value' | label: 'PS_EXPR_RIGHTVALUE'}}</span>\r\n                <csi-condition [valueItem]=\"expression.value2\" (onValueChanged)=\"expression.value2 = $event\"></csi-condition>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"add-group-btn\">\r\n        <span class=\"btn\" (click)=\"addRemoveGroup('and')\">{{expression.and ? (' - remove AND group' | label: 'PS_REMOVE_AND_GROUP') : (' + add AND group' | label: 'PS_ADD_AND_GROUP') }}</span>\r\n        <span class=\"btn\" (click)=\"addRemoveGroup('or')\">{{expression.or ? (' - remove OR group' | label: 'PS_REMOVE_OR_GROUP'):('+ add OR group' | label: 'PS_ADD_OR_GROUP') }}</span>\r\n    </div>\r\n\r\n    <div *ngFor=\"let op of ['and','or']\" class=\"bitwise-group\">\r\n        <div class=\"group\" *ngIf=\"expression[op]\">\r\n            <div class=\"hook\"><i class=\"fa fa-level-up\" aria-hidden=\"true\"></i></div>\r\n            <div class=\"grp-content\">\r\n                <div class=\"grp-title\">\r\n                    <span class=\"bitwise\">{{op|uppercase}}</span>\r\n                    <span class=\"default-btn\" (click)=\"addExpression(op)\">{{'Add Condition' | label: 'PS_ADD_CONDITION'}}</span>\r\n                </div>\r\n\r\n                <div *ngFor=\"let exp of expression[op]\" class=\"expression\">\r\n                    <csi-expression [expression]=\"exp\" (onValueChanged)=\"valueChanged(exp,$event)\"></csi-expression>\r\n                    <span class=\"expression-delete\">\r\n                        <i class=\"fa fa-times-circle fa-lg delete-btn\" aria-hidden=\"true\" (click)=\"deleteExpression(exp, expression[op])\"></i>\r\n                    </span>                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","export * from './propertyConditions.module';","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\nimport { StudioSubjects } from '../../../common/objects/common';\r\nimport { InitiatorDefinition } from '../../../common/objects/viewModel';\r\nimport { ModalPropertiesContext } from '../properties';\r\n\r\n@Component({\r\n    selector: 'csi-prop-cond-initiator',\r\n    templateUrl: 'initiator.html',\r\n    styles:[`\r\n    :host {\r\n        height: 100%;        \r\n    }\r\n\r\n    .csi-initiator {\r\n        flex: 1 0;\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n\r\n    .csi-initiator .title {\r\n        background-color: #DCDCDC;\r\n        padding: 15px;\r\n    }\r\n      \r\n    .csi-initiator .initiator-list {\r\n        border-top: 1px solid black;\r\n        overflow-x: hidden;\r\n        overflow-y: auto;\r\n        flex-grow: 1;\r\n    }\r\n    .csi-initiator .initiator-list .initiator-item {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n\r\n    .csi-initiator .initiator-list .initiator-item > i.delete {\r\n        font-size: 20px;\r\n        padding: 0 10px 0 10px;\r\n        cursor: pointer;\r\n    }\r\n    `]\r\n}) \r\n\r\nexport class InitiatorComponent {\r\n\r\n    @Input() initiators: InitiatorDefinition[];\r\n    @Output() onValueChanged = new EventEmitter<any>();\r\n\r\n    arrayOfSubjects: StudioSubjects[] = [];\r\n    private context: ModalPropertiesContext;\r\n\r\n    get dialogRef(): MatDialogRef<InitiatorComponent> {\r\n        return this._dialogRef;            \r\n    }\r\n\r\n    constructor(private _dialogRef: MatDialogRef<InitiatorComponent>) {\r\n    }\r\n\r\n    initContext(context: ModalPropertiesContext) {\r\n        this.context = context;\r\n        if (this.context.value)\r\n            this.initiators = this.context.value;\r\n\r\n        if (this.initiators) {\r\n            this.initiators.forEach(it => this.addSubjects(it));\r\n        }\r\n    }\r\n\r\n    addInitiator(): void {\r\n        if (!this.initiators)\r\n            this.initiators = [];\r\n\r\n        let initiator = new InitiatorDefinition();\r\n        this.initiators.push(initiator);\r\n        this.addSubjects(initiator);\r\n    }\r\n\r\n    deleteInitiator(i: number): void {\r\n        this.arrayOfSubjects[i].property.unsubscribe();\r\n        //this.arrayOfSubjects[i].selectItem.unsubscribe();\r\n        this.arrayOfSubjects.splice(i, 1);\r\n\r\n        this.initiators.splice(i, 1);\r\n    }\r\n\r\n    private addSubjects(initiator): void {\r\n        let subjects = new StudioSubjects();\r\n        this.arrayOfSubjects.push(subjects);\r\n\r\n        subjects.property.subscribe(n => {\r\n            this.selectItem(initiator);\r\n        });\r\n\r\n        subjects.panel.subscribe(p => {\r\n            this.selectItem(initiator);\r\n        });\r\n    }\r\n\r\n    ok(): void {\r\n        this.context.value = this.initiators;\r\n        this._dialogRef.close(this.initiators);\r\n    }\r\n\r\n    cancel(): void {\r\n        this._dialogRef.close();\r\n    }\r\n\r\n    private selectItem(item:any){\r\n        console.warn('select ite', item);\r\n    }\r\n\r\n}","<div class=\"csi-modal csi-prop-cond-initiator\" csi-dialog-decor [dialog]=\"dialogRef\">\r\n    <header>\r\n        <span class=\"title\">{{'Initiator Editor' | label: 'PS_INITIATOR_EDITOR'}}</span>\r\n        <span class=\"close-icon\" (click)=\"cancel()\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></span>\r\n    </header>\r\n    <main>\r\n        <section class=\"csi-initiator\">\r\n            <div class=\"title\">\r\n                <span class=\"action-btn\" (click)=\"addInitiator()\">{{'Add Initiator' | label: 'PS_ADD_INITIATOR'}}</span>                        \r\n            </div>\r\n            <div class=\"initiator-list\">\r\n                <div *ngFor=\"let item of initiators; let i=index\" class=\"initiator-item\">\r\n                    <csi-panel [component]=\"'csi-property-list'\" [subjects]=\"arrayOfSubjects[i]\" [dataSource]=\"'propertyCondition/initiator'\"></csi-panel>\r\n                    <i class=\"delete fa fa-times-circle fa-lg\" aria-hidden=\"true\" (click)=\"deleteInitiator(i)\"></i>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </main>\r\n    <footer>\r\n        <section class=\"btns\">\r\n            <span class=\"default-btn\" (click)=\"cancel()\">{{'Cancel' | label: 'PS_CANCEL'}}</span>\r\n            <span class=\"primary-btn\" (click)=\"ok()\">{{'Ok' | label: 'PS_OK'}}</span>\r\n        </section>\r\n    </footer>\r\n</div>","import { Component } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\n\r\nimport { EditConditionComponent } from './editCondition';\r\nimport { ValueConditionComponent } from './valueCondition';\r\n\r\nimport { IMetadataEnumValue, PropertyConditionExpression, SetDataValueItem, ConditionExpression } from '../../../common/objects/viewModel';\r\nimport { ModalPropertiesContext } from '../properties';\r\nimport { MetadataService } from '../../../common/services/metadata.service';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n    selector: 'csi-property-condition',\r\n    styleUrls: ['./propertyConditions.less'],\r\n    templateUrl: 'propertyCondition.html'\r\n})\r\n\r\nexport class PropertyConditionsComponent {\r\n    newConditionName: string = '';\r\n    conditions: PropertyConditionExpression[] = [];\r\n\r\n    ownerProperties: string[];\r\n    readOnly: boolean;\r\n\r\n    private conditionComparisonEnum: IMetadataEnumValue[];\r\n    private context: ModalPropertiesContext;\r\n\r\n    get dialogRef(): MatDialogRef<PropertyConditionsComponent> {\r\n        return this._dialogRef;\r\n    }\r\n\r\n    constructor(\r\n        private _metadata: MetadataService,\r\n        private _dialog: MatDialog,\r\n        private _dialogRef: MatDialogRef<PropertyConditionsComponent>){\r\n\r\n        this.conditionComparisonEnum = this._metadata.getMetadataType('ConditionComparisonType').enumValues;\r\n    }\r\n\r\n    initContext(context: ModalPropertiesContext): void {\r\n        this.context = context;\r\n        this.conditions = this.context.value ? _.cloneDeep(this.context.value) : [];\r\n        this.conditions.forEach(c => {\r\n            if (c.condition)\r\n                c.condition.__shortDescription = this.getShortDesc(c.condition);\r\n        });\r\n        let instType = this._metadata.getMetadataType(this.context.instanceType.toLowerCase());\r\n        if (instType && instType.properties) {\r\n            this.ownerProperties = instType.properties.map(p => p.name);\r\n        }\r\n        this.readOnly = context.property.readOnly;\r\n    }\r\n\r\n    addCondition(name: string): void {\r\n        if( !this.readOnly ){\r\n            let c = new PropertyConditionExpression();\r\n            c.description = name;\r\n            this.newConditionName = '';\r\n            this.conditions.push(c);\r\n        }\r\n    }\r\n\r\n    editCondition(i: number): void {\r\n        if( this.readOnly )\r\n            return;\r\n        \r\n        let editConditionDialog = this._dialog.open(EditConditionComponent, { disableClose: true });\r\n        let context = new ModalPropertiesContext();\r\n        context.value = this.conditions[i].condition;\r\n        editConditionDialog.componentInstance.initContext(context);\r\n        editConditionDialog.afterClosed().subscribe((val: ConditionExpression) => {\r\n            this.conditions[i].condition = val;\r\n            if (this.conditions[i].condition)\r\n                this.conditions[i].condition.__shortDescription = this.getShortDesc(this.conditions[i].condition);\r\n        });\r\n        this.conditions[i].isExpanded = false;\r\n    }\r\n\r\n    editValueCondition(i: number): void {\r\n        if( this.readOnly )\r\n            return;\r\n        let valueConditionDialog = this._dialog.open(ValueConditionComponent, { disableClose: true });\r\n        let context = new ModalPropertiesContext();\r\n        context.value = this.conditions[i].valueIfTrue;\r\n        valueConditionDialog.componentInstance.initContext(context);\r\n        valueConditionDialog.afterClosed().subscribe((c: ModalPropertiesContext) => this.conditions[i].valueIfTrue = c.value);\r\n        this.conditions[i].isExpanded = false;\r\n    }\r\n\r\n    deleteCondition(condition: PropertyConditionExpression): void {\r\n        if( this.readOnly )\r\n            return;\r\n        let index = this.conditions.indexOf(condition);\r\n        this.conditions.splice(index, 1);\r\n    }\r\n\r\n    ok(): void {\r\n        this._dialogRef.close(this.conditions);\r\n    }\r\n\r\n    cancel(): void {\r\n        this._dialogRef.close(null);\r\n    }\r\n\r\n    private getKey(s: SetDataValueItem): string {\r\n        return \"'\" + ((s && s.key) || \"\") + \"'\";\r\n    };\r\n\r\n    private getShortDesc(exp: ConditionExpression): string {\r\n        let f = '(';\r\n\r\n        if (exp) {\r\n            f += this.getKey(exp.value1);\r\n\r\n            if (exp.comparisonType !== undefined) {\r\n                let comparisonName = this.conditionComparisonEnum.find(c => c.value == exp.comparisonType).name;\r\n                f += (' ' + comparisonName + ' ');\r\n            }\r\n            f += this.getKey(exp.value2);\r\n        }\r\n        f += ')';\r\n\r\n        if (exp) {\r\n            if (exp.and && exp.and.length) {\r\n                f += \" AND (...)\";\r\n            }\r\n            if (exp.or && exp.or.length) {\r\n                f += \" OR (...)\";\r\n            }\r\n        }\r\n\r\n        return f;\r\n    }\r\n\r\n\r\n}","<div class=\"csi-modal csi-property-condition\" csi-dialog-decor [dialog]=\"dialogRef\">\r\n    <header>\r\n        <span class=\"title\">{{'Property Conditions' | label: 'PS_PROPERTY_CONDITION_NAME'}}</span>\r\n        <span class=\"close-icon\" (click)=\"cancel()\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></span>\r\n    </header>\r\n    <main>\r\n        <section class=\"condition-add\">\r\n            <span class=\"title\">{{'Enter Property Condition Name' | label: 'PS_ENTER_PROPERTY_CONDITION_NAME'}}</span>\r\n            <input class=\"name\" type=\"text\" #condName [(ngModel)]=\"newConditionName\" [readonly]=\"readOnly\" />\r\n            <span class=\"action-btn\" (click)=\"addCondition(condName.value)\">{{'Add Case' | label: 'PS_ADD_CASE'}}</span>\r\n        </section>\r\n        <section class=\"conditions-container\">\r\n            <div class=\"sub-title\">{{'Organize Property Conditions' | label: 'PS_ORGANIZE_PROPERTY_CONDITIONS'}}</div>\r\n            <div class=\"conditions\">\r\n                <div class=\"condition-item\" *ngFor=\"let cond of conditions; let i=index\">\r\n                    <div class=\"header\">\r\n                        <i [class]=\"cond.isExpanded?'fa fa-lg fa-caret-down' : 'fa fa-lg fa-caret-right'\" aria-hidden=\"true\" (click)=\"cond.isExpanded = !cond.isExpanded\"></i>\r\n                        <input class=\"description-name\" type=\"text\"  [readonly]=\"readOnly\" [(ngModel)]=\"cond.description\" placeholder=\"{{cond.description?'':('Unnamed-'+(i+1))}}\" />\r\n                        <span class=\"formula\">{{cond.condition?.__shortDescription}}</span>\r\n                        <i class=\"fa fa-times-circle fa-lg\" aria-hidden=\"true\" (click)=\"deleteCondition(cond)\"></i>\r\n                    </div>\r\n                    <div *ngIf=\"cond.isExpanded\" class=\"narration\">\r\n                        <div>\r\n                            <span>{{'For Property' | label: 'PS_COND_FOR_PROPERTY'}}</span>\r\n                            <select [(ngModel)]=\"cond.property\" [disabled]=\"readOnly\">\r\n                                <option *ngFor=\"let op of ownerProperties\" [value]=\"op\">{{op}}</option>\r\n                            </select>\r\n                        </div>\r\n                        <csi-condition-display [condition]=\"cond\" (onEditCondition)=\"editCondition(i)\" ></csi-condition-display>\r\n                    </div>\r\n                    <div class=\"buttons\">\r\n                        <span class=\"action-btn\" (click)=\"editCondition(i)\">{{'Edit Conditions' | label: 'PS_EDIT_CONDITIONS'}}...</span>\r\n                        <span class=\"action-btn\" (click)=\"editValueCondition(i)\">{{'Edit Value If True' | label: 'PS_VALUE_IF'}}...</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </main>\r\n    <footer>\r\n        <section class=\"btns\">\r\n            <span class=\"default-btn\" (click)=\"cancel()\">{{'Cancel' | label: 'PS_CANCEL'}}</span>            \r\n            <span [hidden]=\"readOnly\" class=\"primary-btn\" (click)=\"ok()\">{{'Ok' | label: 'PS_OK'}}</span>\r\n        </section>\r\n    </footer>\r\n</div>","import { NgModule, Optional, SkipSelf }       from '@angular/core';\r\n\r\nimport { PanelModule } from '../../../panel/panel.module';\r\nimport { SharedModule } from '../../../shared/shared.module';\r\n\r\nimport { PropertyConditionsComponent } from './propertyCondition';\r\nimport { EditConditionComponent } from './editCondition';\r\nimport { ValueConditionComponent } from './valueCondition';\r\nimport { ConditionComponent } from './condition';\r\nimport { ConditionDisplayComponent } from './conditionDisplay';\r\nimport { ExpressionComponent } from './expression';\r\nimport { InitiatorComponent } from './initiator';\r\n\r\n@NgModule({\r\n    imports: [\r\n        PanelModule,\r\n        SharedModule,\r\n    ],\r\n    declarations: [\r\n        PropertyConditionsComponent,\r\n        EditConditionComponent,\r\n        ValueConditionComponent,\r\n        ConditionComponent,\r\n        ConditionDisplayComponent,\r\n        ExpressionComponent,\r\n        InitiatorComponent,\r\n    ],\r\n    exports: [\r\n        ConditionComponent,\r\n        ExpressionComponent,\r\n    ],\r\n    entryComponents: [\r\n        PropertyConditionsComponent,\r\n        EditConditionComponent,\r\n        ValueConditionComponent,\r\n        InitiatorComponent,\r\n        ExpressionComponent\r\n    ],\r\n    providers: [\r\n    ]\r\n})\r\nexport class PropertyConditionModule {\r\n    constructor( @Optional() @SkipSelf() parentModule: PropertyConditionModule) {\r\n        if (parentModule) {\r\n            throw new Error(\r\n                'PropertyConditionModule is already loaded. Import it in the StudioModule only');\r\n        }\r\n    }\r\n}\r\n\r\n","import { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ModalPropertiesContext } from '../properties';\r\nimport { SetDataValueItem } from '../../../common/objects/viewModel';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n    selector: 'csi-value-condition',\r\n    styles: [`\r\n        :host{\r\n            min-height: 400px;\r\n            min-width: 700px;\r\n\r\n            display: flex;\r\n            flex-direction: column;\r\n            flex: 1 1 auto;            \r\n        }\r\n        .csi-value-condition{\r\n            flex: 1 1 auto;            \r\n        }\r\n        .condition-condition {\r\n            overflow: auto;\r\n        }\r\n    `],\r\n    templateUrl: 'valueCondition.html'\r\n})\r\n\r\nexport class ValueConditionComponent {\r\n    private context: ModalPropertiesContext;\r\n\r\n    valueIfTrue: SetDataValueItem;\r\n\r\n    get dialogRef(): MatDialogRef<ValueConditionComponent> {\r\n        return this._dialogRef;\r\n    }\r\n\r\n    constructor(private _dialogRef: MatDialogRef<ValueConditionComponent>) {}\r\n\r\n    initContext(context: ModalPropertiesContext): void {\r\n        this.context = context;\r\n        if (!context.value) \r\n            this.valueIfTrue = new SetDataValueItem();        \r\n        else\r\n            this.valueIfTrue = _.cloneDeep(context.value);\r\n    }\r\n\r\n    valueChanged(v: SetDataValueItem): void {\r\n        this.valueIfTrue = v;\r\n    }\r\n\r\n    ok(): void {\r\n        this.context.value = this.valueIfTrue;\r\n        this._dialogRef.close(this.context);\r\n    }\r\n\r\n    cancel(): void {\r\n        this._dialogRef.close(this.context);\r\n    }\r\n}","<div class=\"csi-modal csi-value-condition\" csi-dialog-decor [dialog]=\"dialogRef\">\r\n    <header>\r\n        <span class=\"title\">{{'Value If True Editor' | label: 'PS_VALUE_IF_TRUE_EDITOR'}}</span>\r\n        <span class=\"close-icon\" (click)=\"cancel()\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></span>\r\n    </header>\r\n    <main>\r\n        <csi-condition class=\"condition-condition\" [valueItem]=\"valueIfTrue\" (onValueChanged)=\"valueChanged($event)\"></csi-condition>\r\n    </main>\r\n    <footer>\r\n        <section class=\"btns\">\r\n            <span class=\"default-btn\" (click)=\"cancel()\">{{'Cancel' | label: 'PS_CANCEL'}}</span>\r\n            <span class=\"primary-btn\" (click)=\"ok()\">{{'Ok' | label: 'PS_OK'}}</span>\r\n        </section>\r\n    </footer>\r\n</div>","import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { IElement, ValueUpdatedData, PropertyRef, StudioSubjects } from '../../common/objects/common';\nimport { IPropertyMetadata, IMetadataType, PropertyCategory, PropertyDescriptions } from '../../common/objects/viewModel';\nimport { IContentPanel, PanelSettings, ReadOnlyLevel } from '../panel';\nimport { MetadataService } from '../../common/services/metadata.service';\nimport { LabelService } from '../../common/services/label.service';\nimport { LocalService } from '../../common/services/local.service';\nimport { DataAccessors } from '../../common/services/dataAccessors';\nimport { RecordCommand, PropertyHistoryData } from '../../common/objects/historyLog';\n\nimport { ValueProviderService } from '../../common/services/dataValue.service';\n\nimport { Subject, Subscription } from 'rxjs';\nimport _ from 'lodash';\nimport { StudioStateService } from '../../common/services/studioStateService';\n\n@Component({\n    selector: 'csi-property-list',\n    templateUrl: 'propertyList.html',\n    styleUrls: ['propertyList.less', '../../shared/internalTabs.less'],\n    changeDetection: ChangeDetectionStrategy.Default\n})\n\nexport class PropertyListComponent implements OnInit, IContentPanel {\n\n    visible: boolean;\n    isCollapsed: boolean = false;\n\n    selectedTab: ViewTabs = ViewTabs.unset;\n    searchFilter: string;\n    panel: PanelSettings;\n    showInternalTabs: boolean = false;\n    get showDescription() : boolean {return this.descriptionSections.length > 0;}\n    valueUpdated: Subject<ValueUpdatedData>;\n    descriptionName: string;\n    descriptionText: string;\n    groups: Group[];\n    internalTabs: ViewTab[];\n    properties: IPropertyMetadata[];\n    isRowMode = false;\n    isSidePanel = false;\n    cdoType = \"\";\n    \n    private get propertyDescriptions(): PropertyDescriptions { return this.metadataService.propertyDescriptions ;}\n    private propertyPanelSubscription: Subscription;\n    private searchInputSubscription: Subscription;\n    private nameInputSubscription: Subscription;\n    private nameChangedSubscription: Subscription;\n    private valueUpdatedSubscription: Subscription;\n    private descriptionSubscription: Subscription;\n    private nameProperty: IPropertyMetadata;\n    private instance: any;\n    private customWorkspaceColor: string;\n    private favProperties: string[];\n    private _propertyType: string;\n    private descriptionSections: string[] = [];\n    private instanceMetadataType : IMetadataType;\n    private onPropertyChangeSubj : Subject<any>;\n\n    constructor(\n        public metadataService: MetadataService,\n        private _labelService: LabelService,\n        private _localService: LocalService,\n        private _dataAccessors: DataAccessors,\n        private _valueService: ValueProviderService,\n        private _studioStateService: StudioStateService,\n        private _chRef: ChangeDetectorRef) {\n\n        this.valueUpdated = new Subject<ValueUpdatedData>();        \n        this.internalTabs = \n        [\n            <ViewTab>{ tab: ViewTabs.favorites, label: this._labelService.getLabel(\"PS_PROPERTY_TAB_FAVORITES\", 'Favorites'), caption: 'Favorites' },\n            <ViewTab>{ tab: ViewTabs.sorted, label: '', caption: 'Sorted' },\n            <ViewTab>{ tab: ViewTabs.grouped, label: '', caption: 'Grouped' }\n        ];        \n    }\n\n    ngOnInit() {\n        this.valueUpdatedSubscription = this.valueUpdated.subscribe(vc => {\n            let property = this.properties.find(p => p.name.toLowerCase() == vc.propertyName.toLowerCase());\n            if (property){\n                this.setPropertyValue(property, vc.val, vc.valueType);\n            }\n        });        \n    }   \n\n    init(s: PanelSettings, subjects: StudioSubjects): void {\n\n        if(s.parameters && s.parameters.cdoType)\n            this.cdoType = s.parameters.cdoType;\n\n        this.isRowMode = s.dataSource === 'propertyCondition' || s.dataSource === 'propertyCondition/initiator';\n        if(s.parameters && s.parameters.sidePanel === true )\n            this.isSidePanel = true;\n\n        s.actions = [];\n        if (!this.isRowMode) {\n            s.showSearch = false;\n            s.showName = false;\n            s.nameInput.hidden = true;\n\n            this.searchInputSubscription = s.searchInput.subscribe(si => {\n                this.searchFilter = si.toLowerCase();\n                s.searchText = si;                \n                this.ping();\n            });\n            // the event is fired when the name changed by typing in name input of panel\n            this.nameInputSubscription = s.nameInput.onValChange.subscribe(nv => this.onNameChanged(nv));\n            // the event is fired when the name has been changed in model (for example by undo/redo )\n            this.nameChangedSubscription = subjects.nameChanged.subscribe(n => s.nameInput.val = n);\n        }\n        else {\n            s.showSearch = false;\n            s.showName = false;\n        }\n\n        s.showRefresh = false;\n        this.panel = s;\n\n        this.propertyPanelSubscription = subjects.propertyPanel\n            .subscribe(data => {\n\n                // Do not refresh if properties are not changed\n                if( this.instance )\n                    if( this.instance == data)\n                        return;\n\n                if( data && data.__type && data.__type == \"UIComponentRef\" && !this.isSidePanel ){                    \n                    return; // ignore\n                }\n\n                this.instance = data;\n                this.selectedTab = ViewTabs.unset;\n                \n                this.onInstanceChanged();\n            });     \n        this.onPropertyChangeSubj = subjects.property;\n    }\n\n    destroy(subjects: StudioSubjects) {\n        [this.propertyPanelSubscription, this.searchInputSubscription,\n        this.nameInputSubscription, this.valueUpdatedSubscription, this.nameChangedSubscription, this.descriptionSubscription]\n            .forEach(s => { if (s) s.unsubscribe(); });\n    }\n\n    displayDescription(property: PropertyRef = null): void {     \n        this.descriptionName = '';\n        this.descriptionText = '';        \n        if (property) {            \n            let name:string = property.displayedName || property.name;\n            this.descriptionName = name;\n            //find desc text by property name            \n            let pLc = property.name.toLowerCase();          \n            this.descriptionSections.map(ds => {                     \n                let sec = this.propertyDescriptions[ds];\n                let key = Object.keys(sec).find(k => k.toLowerCase() == pLc);\n                if (key && ds.toLowerCase() == 'generalcontrol') {\n                    // populates description if there is no description for control.\n                    this.descriptionText = !this.descriptionText.length ? sec[key] : this.descriptionText;\n                }                                \n                else if (key && ds.toLowerCase() == this._propertyType.toLowerCase()) {\n                    this.descriptionText = sec[key];\n                }                   \n            });            \n        }\n    }\n\n    private ping(){\n        this._chRef.markForCheck();\n    }\n\n    private onInstanceChanged() : void {\n\n        let pt: string = null;\n        let readonly = false;\n        this.customWorkspaceColor = this._studioStateService.getCustomWorkspaceColor();\n\n        if (this.instance) {\n            if (this.instance.__unbound && this.isSidePanel) {\n                this.visible = false;\n                this.properties = [];\n                this.groups = [];\n                this.descriptionSections = [];\n                this.showInternalTabs = false;\n                this.setupPanel(this.instance);\n                this.ping();\n                return;\n            }\n            else {\n                this.visible = true;\n                this.showInternalTabs = true;\n\n                if (this.isRowMode)\n                    this.showInternalTabs = false;                \n\n                if (this.instance.isReference || this.panel.readOnly === ReadOnlyLevel.full || this.panel.readOnly === ReadOnlyLevel.value) {\n                    readonly = true;\n                }                \n            }\n\n            if (this.instance.typeName)\n                pt = this.instance.typeName;\n            else if (this.instance.__type)\n                pt = this.instance.__type;\n\n            if (!(this.panel.parameters && this.panel.parameters.showDescription === false)) {\n                if (this.instance.type === 'Control')\n                    this.descriptionSections = ['generalControl'];\n                else if (this.instance.type === 'Page' || this.instance.type === 'Webpart')\n                    this.descriptionSections = ['pageContent', 'webPartDefinition', 'generalControl'];\n                else if (this.instance.type === 'Pageflow' || this.instance.type === 'PageFlowNode' || this.instance.type === 'PageTransition')\n                    this.descriptionSections = ['pageflowContent', 'generalControl'];            \n                else\n                    this.descriptionSections = [];\n            }            \n            this.displayDescription();\n            this._studioStateService.searchPanelText(this.panel, \"\");\n\n            if (pt) {\n                this.favProperties = this._localService.getFavProperties(pt);\n                if( pt.startsWith('config.'))\n                    this.showInternalTabs = false;\n\n                this._propertyType = pt;\n                if (this.internalTabs) {\n                    // set initial tab\n                    if (this.favProperties && this.favProperties.length > 0 && this.selectedTab == ViewTabs.unset)\n                        this.selectedTab = ViewTabs.favorites;\n                    else if (this.internalTabs.length > 1 && this.selectedTab == ViewTabs.unset)\n                        this.selectedTab = ViewTabs.sorted;\n                }\n\n                // build properties                                \n                this.instanceMetadataType = this.metadataService.getMetadataType(pt);\n                this.properties = this.createProperties(readonly);\n               \n                this.panel.nameInput.readonly = readonly; \n\n                this.properties.forEach(p=> this.populateValue(p));\n                this.properties.forEach(p=> this.setValueProvider(p) );\n\n                this.groups = this.createGroups(this.properties);\n            }\n        }\n        else {\n            this.properties = [];\n            this.groups = [];\n            this.descriptionSections = [];\n            this.showInternalTabs = false;\n        }\n        this.setupPanel(this.instance);\n        this.ping();       \n    }\n\n    private createGroups(properties: IPropertyMetadata[]) : Group[]{\n\n        return _.chain(properties)\n            .map(x => x.category ? x.category.toLowerCase() : \"other\")\n            .union([\"favorites\"])\n            .uniq()\n            .map(cat=> {\n                let i = this.metadataService.propertyCategories.findIndex( c=> c.name.toLowerCase()== cat);\n                return new Group(this.metadataService.propertyCategories[i], i);\n            })\n            .sortBy( g=> g.order )\n            .value();\n    }\n\n    private populateValue(p: IPropertyMetadata ) : void {\n        p.favorite = (this.favProperties && this.favProperties.indexOf(p.name.toLowerCase()) != -1);\n        let v = this.getPropertyValue(p);\n        if (p.accessor) {\n            // Call setter to apply dependencies\n            this._dataAccessors.callSetter(v, this.instance, this.properties, undefined, p, true);\n        }\n        p.value = v;\n    }\n\n    private createProperties( readonly: boolean) : IPropertyMetadata[] {\n\n        let valueBehavior;\n        let nameComponent;\n        let properties = this.instance['properties'];\n        if(properties){\n            valueBehavior = properties.behavior;\n            nameComponent = properties.name;\n        }\n\n        let props = this.instanceMetadataType.properties.map( mp => {\n            let p = _.cloneDeep(mp);\n            if (readonly)\n                p.readOnly = readonly;\n\n            if (p.editor && p.editor.directive == \"modal\") \n                p.editor.directive = \"text\";\n\n            if (!this.isRefType(this.instanceMetadataType)) {\n                if (mp.name.toLowerCase() == 'name' ||\n                    (mp.displayedName && mp.displayedName.toLowerCase() == 'name') ||\n                    (mp.editor && mp.editor.parameters && mp.editor.parameters.find(ep => ep == 'asName'))) {\n                    // Save 'name' property for further using\n                    this.nameProperty = p;\n                    p.hidden = true;\n                    if (this.isRowMode)\n                        p.hidden = false;\n                }\n            }\n\n            if(valueBehavior === 4 && p.name == \"Display\"){\n                const n = nameComponent.toLowerCase();\n                if(this._displayPagesEnabled.filter(p=> p.toLowerCase() == n).length == 0)\n                    p.readOnly = true;\n            }\n\n            return p;\n        });\n        return _.sortBy(props, p => { return (p.order ? p.order : 999).toString() + (p.displayedName || p.name).toLowerCase(); });\n    }\n\n    private setValueProvider(p: IPropertyMetadata) : void{\n        if( p.editor && p.editor.directive){\n            if( p.editor.directive == 'enum'){\n                if( !p.editor.provider )\n                    p.editor.provider = \"enum\";                    \n                p.editor.directive = 'selector';\n            }\n\n            if( p.editor.parameters ){\n                let ci = p.editor.parameters.indexOf(\"#CDOTypeName\");\n                if( ci != -1){\n                    p.editor.parameters[ci] = this.cdoType;\n                }\n            }\n\n            if(p.editor.directive == 'selector'){\n                p.editor.selectableItems = this._valueService.getSelectableItems(p, this.instance);\n            }\n\n        }\n    }\n\n    private getPropertyValue(p: IPropertyMetadata): any {\n\n        // Create default value\n        if (p.defaultValue === undefined) {\n\n            if (p.editor && p.editor.directive == \"enum\" && p.enumValues) {\n                p.defaultValue = p.enumValues[0].value;\n            }\n            else if (p.originalTypeName.toLowerCase() == \"string\") {\n                // Set empty for string\n                p.defaultValue = '';\n            }\n            else\n                p.defaultValue = null;\n        }\n\n        if (this.instance) {\n            let n = p.name.toLowerCase();\n\n            let wscolor = this.getWorkspaceColor(n);\n            if (wscolor)\n                p['__wscolor'] = 'inset 0 0 5px ' + wscolor;\n\n            if (this._dataAccessors.hasGetter(p))\n                return  this._dataAccessors.callGetter(this.instance, p);            \n\n            let propertyValues = this.getPropertyValues();\n            let key = _.findKey(propertyValues, (v, k) => k.toLowerCase() == n);\n            if (key && propertyValues[key]!==undefined)\n                return propertyValues[key];\n        }\n\n        if (p.defaultValue !== undefined) {\n            let dv = p.defaultValue;\n            if (p.enumValues && _.isString(p.defaultValue)) {\n                // convert symbolic name to number\n                let enumItem = p.enumValues.find(v => v.name == p.defaultValue);\n                if (enumItem)\n                    dv = enumItem.value;\n                else\n                    console.error('enum item ' + p.defaultValue + ' not found', p.enumValues);\n            }\n            return dv;\n        }\n        return null;\n    }\n\n    private setPropertyValue(p: IPropertyMetadata, v: any, valType: string = 'string') {\n        let name = p.name.toLowerCase();\n        let touched = false;\n        let oldValue: any;\n\n        if (this.instance) {\n            var pl = this.getPropertyValues();            \n            if (p.accessor) {\n                touched = this._dataAccessors.callSetter(v, this.instance, this.properties, valType, p, false);\n            }\n            else {\n                let foundPropKey = _.findKey(pl, (v, k) => k.toLowerCase() == name);\n                if (foundPropKey) {\n                    oldValue = pl[foundPropKey];\n                    pl[foundPropKey] = v;       // Modify existing\n                }\n                else {\n                    pl[p.name] = v;               // Add new value\n                }\n                touched = true;\n            }\n\n            if (touched) {\n                p.value = v;\n\n                // find the properties that depends on the current\n                let dependentProperties = this.getDependentProperties(p.name);\n\n                // notify dependants\n                _.forEach(dependentProperties, pd => {\n                    // Reset value and selectableItems\n                    pd.value = null;\n                    if(pd.editor.directive == \"selector\" )\n                        pd.editor.selectableItems = this._valueService.getSelectableItems(pd, this.instance);\n                });\n\n                const prm : [any, any, IPropertyMetadata, any] = [v, oldValue, p, this.instance];\n                this._studioStateService.propertyChanged(prm);\n                if( this.onInstanceChanged )\n                    this.onPropertyChangeSubj.next(prm);\n            }\n        }\n        this.ping();\n    }\n\n    getDependentProperties(pn: string): IPropertyMetadata[] {\n        pn = pn.toLowerCase();\n        return this.properties.filter( p => _.find(p.dependencies, d => d.toLowerCase() == pn)).map(x => x);\n    }\n\n    private setupPanel(inst: any) {\n        let pp = this.panel;\n        if (inst == null || !this.visible) {\n            pp.collapsed = true;\n            pp.nameInput.hidden = true;\n            pp.showName = false;\n            pp.showSearch = false;\n            return;\n        }\n        else {\n            pp.collapsed = false;\n        }\n        if (this.isRowMode)\n            return;\n\n        // For properties on the top level\n        if (inst) {\n            pp.showSearch = true;\n            if (this.nameProperty) {\n                pp.showName = true;\n                pp.nameInput.label = inst.typeName || inst.__type;\n                pp.nameInput.val = this.getPropertyValue(this.nameProperty);\n                pp.nameInput.readonly = this.panel.nameInput.readonly;\n                pp.nameInput.hidden = false;\n\n                if (!pp.nameInput.onValChange) {\n                    pp.nameInput.onValChange = new Subject<string>();\n                    pp.nameInput.onValChange\n                        .subscribe(nv => this.onNameChanged(nv));\n                }\n            }\n            else {\n                pp.showName = false;\n            }\n        }\n        else {\n            pp.showName = false;\n            pp.showSearch = false;\n        }\n    }\n\n    onNameChanged(newName: any) {\n\n        this._studioStateService.isNameValid(newName, this.instance).subscribe(ok => {\n            if(ok){\n                let oldName = this.nameProperty.value;\n                this._studioStateService.renameLayoutRefs(this.instance, oldName, newName);\n                this.setPropertyValue(this.nameProperty, newName, null);\n                if(this.instance.name)\n                    this.instance.name = newName;\n\n                // Register history\n                if (this.isElement()) {\n                    let oldVal = {}; oldVal[this.nameProperty.name] = oldName;\n                    let newVal = {}; newVal[this.nameProperty.name] = newName;\n                    let c = new PropertyHistoryData(this.instance, this.nameProperty.name, oldVal, newVal, true);\n                    this._studioStateService.writeHistory(RecordCommand.propertyChange, c);\n                }\n            }\n            else{\n                // alert error and restore\n                this.panel.nameInput.val = this.getPropertyValue(this.nameProperty);\n            }\n        });\n    }\n\n    selectTab(t: ViewTab) {\n        this.selectedTab = t.tab;\n    }\n\n    setFavorite(pr: IPropertyMetadata) {\n        let changed = false;\n\n        if (!this.favProperties)\n            this.favProperties = [];\n\n        let name = pr.name.toLowerCase();\n        let i = this.favProperties.findIndex(p => p == name);\n        if (i != -1) {\n            // remove\n            this.favProperties.splice(i, 1);\n            changed = true;\n            pr.favorite = false;\n        }\n        else {\n            if (this.selectedTab != ViewTabs.favorites) {\n                // add\n                this.favProperties.push(name);\n                changed = true;\n                pr.favorite = false;\n            }\n        }\n\n        if (changed) {\n            this._localService.setFavProperties(this._propertyType, this.favProperties);\n            this.onInstanceChanged();\n        }\n    }\n\n    private getPropertyValues(): any {\n        let element = <IElement>this.instance;\n        if (element && element.__unbound)\n            return this.instance;\n        if (element && element.id !== undefined && element.name !== undefined && element.__type !== 'TabDefinition' && element.__maint === undefined) {\n            return this.instance.properties;\n        }\n        return this.instance;\n    }\n\n    private isRefType(t: IMetadataType) {\n        if (t._name == \"NamedObjectRef\" || t._name == \"PageMappingParameter\") {\n            return true;\n        }\n        if (t.baseTypeNames && t.baseTypeNames.find(v => v == \"NamedObjectRef\"))\n            return true;\n\n        return false;\n    }\n\n    private getWorkspaceColor(n: string) {\n        if (this.instance.map) {\n            if (_.find(this.instance.map, (o, k: string) => k.toLowerCase() == n))\n                return this.customWorkspaceColor;\n        }\n\n        return undefined;\n    }\n\n    private isElement(): boolean {\n        return (this.instance && (this.instance._fullTypeName || this.instance.properties));\n    }\n\n    private _displayPagesEnabled = [\"ModelingVP\", \"ModelingAuditTrail_VP\", \"ModelingEsig_vp\", \"DT_Selection_vp\", \"DT_References_vp\"];\n}\n\nexport enum ViewTabs { favorites, sorted, grouped, unset };\n\nclass ViewTab {\n    public tab: ViewTabs;\n    public caption: string;\n    public label: string;\n}\n\nexport class Group {\n    expanded: boolean = false;\n    hidden: boolean = false;\n\n    constructor(public category: PropertyCategory, public order: number) {\n        this.hidden = category.name == \"favorites\";\n        this.expanded = category.name == \"favorites\";\n    }\n}\n","<div class=\"csi-property-area\" [class.rowmode]=\"isRowMode\" [hidden]=\"!visible\">\r\n    <div class=\"csi-internal-tabs\" *ngIf=\"showInternalTabs\">\r\n        <ul>\r\n            <li *ngFor=\"let t of internalTabs\" [class.active]=\"t.tab == selectedTab\"><a (click)=\"selectTab(t)\">{{t.caption}}</a></li>\r\n        </ul>\r\n    </div> \r\n    <ng-container *ngIf=\"!isRowMode; else rowModeTemplate\">\r\n        <div class=\"csi-property-list col-mode\">\r\n            <div class=\"group\" *ngFor=\"let grp of (groups | propertyFilter : {groupMode: true, group:grp, search:searchFilter, tab: selectedTab})\">\r\n                <div [hidden]=\"grp.hidden\"><i [class]=\"grp.expanded?'fa fa-caret-down':'fa fa-caret-right'\" aria-hidden=\"true\" (click)=\"grp.expanded=!grp.expanded\"></i><span>{{grp.category.caption}}</span></div>\r\n                <csi-name-value [hidden]=\"!grp.expanded\" \r\n                    *ngFor=\"let property of (properties | propertyFilter : {groupMode:false, group:grp, search:searchFilter, tab: selectedTab, favorites: favProperties})\" \r\n                    class=\"csi-property-row\"\r\n                    [property]=\"property\"\r\n                    [instance]=\"instance\"\r\n                    [valueUpdated]=\"valueUpdated\" \r\n                    (setFavorite)=\"setFavorite($event)\"\r\n                    (displayDescription)=\"displayDescription($event)\"></csi-name-value>\r\n            </div>\r\n        </div>\r\n        <div class=\"csi-property-description\" *ngIf=\"showDescription\">\r\n            <header>{{descriptionName}}</header>\r\n            <div>{{descriptionText}}</div>\r\n        </div>\r\n    </ng-container>\r\n    <ng-template #rowModeTemplate>\r\n        <div class=\"csi-property-list-row\">             \r\n            <div *ngFor=\"let property of (properties)\" class=\"row-property\" [hidden]=\"property.hidden\"> \r\n                <csi-name-value                         \r\n                    class=\"csi-property-row\" \r\n                    [property]=\"property\"\r\n                    [rowMode]=\"true\"\r\n                    [instance]=\"instance\"\r\n                    [valueUpdated]=\"valueUpdated\"></csi-name-value>\r\n            </div>            \r\n        </div>\r\n    </ng-template>\r\n\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { IOMTypeDescriptor, OMType} from '../../../common/objects/viewModel';\nimport { PortalService } from '../../../common/services/portal.service';\nimport { ModalPropertiesContext} from '../properties';\nimport { FieldDirectoryBase, OMTypeDescriptor } from '../../../common/objects/fieldDirectoryBase';\nimport { StudioStateService } from '../../../common/services/studioStateService';\n\n@Component({\n    selector: 'csi-field-expression',\n    styles:[\n        `\n        :host{\n            flex: 1 1 auto;\n            display: flex;\n            flex-direction: column;    \n            height: 100%;\n        }\n        .csi-field-expression {\n            display: flex;\n            flex-direction: column;\n            flex: 1 1 auto;\n            height: 100%;\n        }\n\n        .csi-field-expression .result-row {\n            display: flex;\n            flex-direction: row;\n            flex: 0 0 25px;\n        }\n\n        .csi-field-expression .result-row > input {\n            width: 100%;\n            padding: 5px;\n            height : 25px;\n        }\n\n        .csi-field-expression .result-row > span.btn {\n            padding: 2px 4px 6px 4px;\n            text-align: center;\n            border: 1px solid black;\n            height : 25px;\n        }\n\n        .csi-field-expression .resultItem {\n            padding: 4px;\n            padding-bottom: 6px;\n            background-color: white;\n            cursor: pointer;\n        }\n\n        .csi-field-expression .resultItem:hover {\n            background-color: aquamarine;\n        }\n\n        .csi-field-expression .subtitle {\n            height: 25px;\n            flex: 0 0 auto;\n            display:flex;\n            align-items: center;\n\n        }\n\n        .service-list {\n            height: calc(100% - 120px);\n        }\n\n        `\n    ],\n    templateUrl: 'fieldExpression.html'\n})\n\nexport class FieldExpressionComponent extends FieldDirectoryBase implements OnInit{\n\n    @Input() context: ModalPropertiesContext;\n\n    get result(): string {\n        return this.context && this.context.value;\n    };\n    set result(v: string) {\n        if (this.context)\n            this.context.value = v;\n    };\n    resultItems: string[] = [];\n\n    get readonly(): boolean {\n        return this.context && this.context.property && this.context.property.readOnly;\n    }\n\n    constructor(portal: PortalService, state: StudioStateService) {\n        super(portal, state);\n    }\n\n    ngOnInit() {\n        this.context.title = \"Field Expressions Builder\";\n        if (this.context.property.value) {\n\n            this.resultItems = (<string>this.context.property.value).split(',');\n            this.selectResultItem(this.resultItems[0]);\n        }\n        this.loadServices();\n    }\n\n    selectItem(item: IOMTypeDescriptor) {\n        if (item.ItemType == OMType.Service || item.ItemType == OMType.Type)\n            return;\n\n        this.result = (<OMTypeDescriptor>item).getFieldExpression();\n    }\n\n    addResultItem() {\n        if (this.resultItems.indexOf(this.result) == -1) {\n            this.resultItems.splice(0, 0, this.result);\n            this.result = \"\";\n        }\n    }\n\n    selectResultItem(ri: string) {\n        if (this.result)\n            this.addResultItem();\n        this.result = ri;\n        let i = this.resultItems.indexOf(ri);\n        this.resultItems.splice(i, 1);\n    }\n\n    servicesLoaded() {\n        let primarySrv = '';\n\n        if (this.result && this.result[0] != '.') {\n            primarySrv = this.result.split('.', 1)[0];\n        }\n        else {\n            if(this.context.metadataService)\n                primarySrv = this.context.metadataService.getPrimaryService();\n        }        \n        this.search = primarySrv;\n    }\n\n}\n\n","<div class=\"csi-field-expression\">\n    <div class=result-row>\n        <input type=\"search\" placeholder=\"Expression\" [(ngModel)]=\"result\">\n        <span class=btn (click)=\"addResultItem()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></span>\n    </div>\n    <div class=resultItem *ngFor=\"let ri of resultItems\">\n        <span (click)=selectResultItem(ri)>{{ri}}</span>\n    </div>\n    <div class=\"subtitle\"><i class=\"fa\" [ngClass]=\"!parametricPanel?'fa-caret-down':'fa-caret-right'\" aria-hidden=\"true\" (click)=\"togglePanels(false)\"></i><span class=services>Services</span></div>\n    <div class=search-row *ngIf=\"!parametricPanel\">\n        <input type=search class=search [(ngModel)]=\"search\">\n        <span class=relative-mode [ngClass]=\"{relative: relativeMode}\" (click)=\"relativeMode=!relativeMode\">R</span>\n        <i class=\"refresh fa fa-refresh\" aria-hidden=\"true\" (click)=\"loadServices(true)\"></i>\n    </div>\n    <div class=\"service-list\" *ngIf=\"!parametricPanel\">\n        <div *ngFor=\"let item of (list | fieldDirectorySearchFilter : search)\" class=item-row [style.paddingLeft]=\"item._padding\" [class.hidden]=\"item._hidden\">\n            <span class=expander [class.hidden]=\"!item.IsExpand\" (click)=\"toggle(item)\"><i class=\"fa\" [ngClass]=\"item._expanded?'fa-caret-down':'fa-caret-right'\" aria-hidden=\"true\"></i></span>\n            <span class=text [ngClass]=\"item._imageClass\" [attr.title]=\"item.Metadata.Description\" (click)=\"selectItem(item)\">{{item.Name}}</span>\n        </div>\n    </div>\n\n    <div class=\"subtitle\"><i class=\"fa\" [ngClass]=\"parametricPanel?'fa-caret-down':'fa-caret-right'\" aria-hidden=\"true\" (click)=\"togglePanels(true)\"></i><span class=parametric>Parametric Data</span></div>\n    <div class=\"search-row\" *ngIf=\"parametricPanel\">\n        <input type=\"text\" class=\"search\" [value]=\"pdsearch\">\n        <span class=\"relative-mode\" [class.relative]=\"relativeMode\" (click)=\"relativeMode=!relativeMode\">R</span>\n        <i class=\"refresh fa fa-refresh\" aria-hidden=\"true\" (click)=\"loadParamtericData(true)\"></i>\n    </div>\n    <div class=\"parametric-data-list\" *ngIf=\"parametricPanel\">\n        <div *ngFor=\"let item of (pdlist | fieldDirectorySearchFilter : pdsearch)\" class=item-row [style.paddingLeft]=\"item._padding\" [class.hidden]=\"item._hidden\">\n            <span class=expander [class.hidden]=\"!item.IsExpand\" (click)=\"toggle(item)\"><i class=\"fa\" [ngClass]=\"item._expanded?'fa-caret-down':'fa-caret-right'\" aria-hidden=\"true\"></i></span>\n            <span class=text [ngClass]=\"item._imageClass\" [attr.title]=\"item.Metadata.Description\" (click)=\"selectItem(item)\">{{item.Name}}</span>\n        </div>\n    </div>\n</div>\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MetadataService } from '../../../common/services/metadata.service';\n\n@Component({\n    selector: 'csi-field-expression-dialog',\n    styles: [\n        `\n        :host{\n            min-height: 450px;\n            min-width: 400px;\n            height: 100%;\n            width: 100%;\n\n            display: flex;\n            flex-direction: column;\n        }\n        .csi-field-expression-dialog {\n            main {\n                height: 100%;\n            }\n        }\n        .csi-field-expression {\n            height: 85%;\n        }\n\n        \n        `\n    ],\n\n    template: `\n    <div class=\"csi-modal csi-field-expression-dialog\" csi-dialog-decor [dialog]=\"dialog\">\n\n        <header>\n            <span class=\"title\">{{'Field Expression Builder' | label: 'PS_FIELD_EXPRESSION_BUILDER'}}</span>\n            <span class=\"close-icon\" (click)=\"cancel()\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></span>\n        </header>\n        <main class=\"csi-field-expression\">\n            <csi-field-expression [context]=\"context\" (getTitle)=\"getTitle()\"></csi-field-expression>\n        </main>\n        <footer>\n            <div class=\"btns\">\n                <span class=\"default-btn\" (click)=\"cancel()\">{{'Cancel' | label: 'PS_CANCEL'}}</span>\n                <span class=\"primary-btn\" (click)=\"ok()\">{{'Ok' | label: 'PS_OK'}}</span>\n            </div>\n        </footer>\n    </div>\n    `\n})\nexport class FieldExpressionDialogComponent {\n    context: any;\n\n    get dialog(): MatDialogRef<FieldExpressionDialogComponent> {\n        return this._dialog;\n    }\n\n    constructor(\n        private _dialog: MatDialogRef<FieldExpressionDialogComponent>,\n        private _metadataService: MetadataService\n    ) {\n        this.context = {\n            property: {},\n            metadataService: this._metadataService\n        };\n    }\n\n    initContext(value: string) {\n        this.context.value = value;\n    }\n\n    getTitle() {\n    }\n\n    ok(): void {\n        this._dialog.close(this.context.value);\n    }\n\n    cancel(): void {\n        this._dialog.close();\n    }\n}","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\nimport { LabelService } from '../../../common/services/label.service';\r\n\r\n@Component({\r\n    selector: 'csi-label-search',\r\n    styles: [`\r\n    :host{\r\n        display:flex;\r\n        flex-direction: column;\r\n        flex: 1 1 auto;\r\n\r\n        min-height: 550px;\r\n        min-width: 600px;\r\n\r\n        height: 100%;\r\n        width: 100%;\r\n    }\r\n\r\n    .csi-label-search {\r\n        display:flex;\r\n        flex-direction: column;\r\n        flex: 1 1 auto;\r\n    }\r\n    \r\n    .csi-label-search > main {\r\n        padding: 15px 15px;\r\n    }\r\n\r\n    .csi-label-search > main > form {\r\n        display:flex;\r\n        flex-direction: column;\r\n        height: 450px;\r\n    }\r\n    \r\n    .csi-label-search .ls-filter .ls-label {\r\n        min-width: 150px;\r\n    }\r\n    \r\n    .csi-label-search .ls-filter .ls-input {\r\n        display:flex;\r\n        flex-direction: column;\r\n        flex: 1 1 auto;\r\n    }\r\n    .csi-label-search .ls-filter .ls-input > span {\r\n        min-width: 100px;\r\n    }\r\n    \r\n    .csi-label-search .ls-filter .ls-input input {\r\n        flex-grow: 1;\r\n        width: 100%;\r\n    }\r\n    \r\n    .csi-label-search .ls-group {\r\n        display: flex;\r\n        flex: 1 1 auto;\r\n        padding: 3px 0px;\r\n    }\r\n    \r\n    .csi-label-search .ls-labels {\r\n        display:flex;\r\n        flex-direction: column;\r\n        flex: 1 1 auto;\r\n        border: 1px solid black;\r\n        margin: 15px 0px;\r\n        overflow: hidden;\r\n    }\r\n\r\n    .ls-labels span {\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n    }\r\n    \r\n    .ls-label-header {\r\n        display: flex;\r\n        background-color: #DCDCDC;\r\n        font-weight: bold;\r\n        border-bottom: 1px solid black;\r\n        min-height: 17px;\r\n    }\r\n\r\n    .csi-label-search .ls-label-results {\r\n        flex-grow: 1;\r\n        overflow: auto;\r\n    }\r\n    \r\n    .csi-label-search .ls-labels .ls-label-results .ls-label {\r\n        display: flex;\r\n        border-bottom: 1px solid black;\r\n    }\r\n    \r\n    .csi-label-search .ls-name-col {\r\n        border-right: 1px solid black;\r\n        width: 180px;\r\n    }\r\n    \r\n    .csi-label-search .ls-default-col {\r\n        border-right: 1px solid black;\r\n        width: 150px;\r\n    }\r\n    \r\n    .csi-label-search .ls-local-col {\r\n        border-right: 1px solid black;\r\n        width: 150px;\r\n    }\r\n    \r\n    .csi-label-search .ls-category-col {\r\n        width: 80px;\r\n    }\r\n    \r\n    .csi-label-search .ls-results .ls-label {\r\n        min-width: 100px;\r\n    }\r\n    \r\n    .csi-label-search .ls-results .ls-group .ls-input {\r\n        flex-grow: 1;\r\n    }\r\n    .csi-label-search .ls-results .ls-group .ls-input input {\r\n        width: 100%;\r\n    }\r\n    \r\n    span.ls-label-alert {\r\n        color: red;\r\n    }\r\n    `],\r\n    templateUrl: 'labelSearch.html'\r\n})\r\n\r\nexport class LabelSearchComponent {\r\n    context: any;\r\n    categories: any[];\r\n    labels: any[];\r\n    searchForm: FormGroup;\r\n    resultMessage = { isAlert: false, text: '' };\r\n\r\n    get dialogRef(): MatDialogRef<LabelSearchComponent> {\r\n        return this._dialogRef;\r\n    }\r\n\r\n    constructor(\r\n        private _dialogRef: MatDialogRef<LabelSearchComponent>,\r\n        private _formBuilder: FormBuilder,\r\n        private _labelService: LabelService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this._labelService.getLabelCategories().subscribe(categories => {\r\n            this.categories = categories;\r\n        });\r\n    }\r\n\r\n    initContext(context: any): void {\r\n        this.searchForm = this._formBuilder.group({\r\n            category: '',\r\n            labelSearchName: '',\r\n            labelSearchText: '',\r\n            selectedLabelName: ['', Validators.required],\r\n            selectedDefaultText: '',\r\n            selectedLocalText: ''\r\n        });\r\n\r\n        this.context = context;\r\n        let labelName = this.context.value;\r\n        if (labelName != null && labelName.length > 0) {\r\n            this.searchForm.get('labelSearchName').setValue(labelName);\r\n            this.search(context.value);\r\n        }\r\n    }\r\n\r\n    search(selectedValue: string = \"\"): void {\r\n        let category = this.searchForm.get('category').value;\r\n        let searchName = this.searchForm.get('labelSearchName').value;\r\n        let searchText = this.searchForm.get('labelSearchText').value;\r\n\r\n        this._labelService.getLabels(category, searchName, searchText)\r\n            .subscribe(labels => {\r\n                this.labels = labels;\r\n                if (category == \"\" && searchName == \"\" && searchText == \"\" && labels.length > 199)\r\n                    this.resultMessage = {\r\n                        isAlert: true,\r\n                        text: \"Returned more than 200 rows.  Please use filters to narrow your request.\"\r\n                    };\r\n                else\r\n                    this.resultMessage = {\r\n                        isAlert: false,\r\n                        text: \"Returned: \" + labels.length + \" rows.\"\r\n                    };\r\n\r\n                if (selectedValue) {\r\n                    let label = labels.find(l => l.name = searchName)\r\n                    if (label)\r\n                        this.selectLabel(label);\r\n                }\r\n            });\r\n    }\r\n\r\n    selectLabel(label: any): void {\r\n        this.searchForm.get('selectedLabelName').setValue(label.name);\r\n        this.searchForm.get('selectedDefaultText').setValue(label.defaultValue);\r\n        this.searchForm.get('selectedLocalText').setValue(label.value);\r\n    }\r\n\r\n    ok(): void {\r\n        let labelName = this.searchForm.get('selectedLabelName').value;\r\n        this.context.value = labelName;\r\n        this._dialogRef.close(labelName);\r\n    }\r\n\r\n    cancel(): void {\r\n        this._dialogRef.close();\r\n    }\r\n}","<div class=\"csi-modal csi-label-search\" csi-dialog-decor [dialog]=\"dialogRef\">\r\n    <header [csi-closable]=\"\" (onClose)=\"cancel()\">\r\n        <span class=\"title\">{{'Label Lookup' | label: 'PS_LABEL_LOOKUP'}}</span>\r\n    </header>\r\n    <main>\r\n        <form novalidate [formGroup]=\"searchForm\">\r\n            <section id=\"filter\" class=\"ls-filter\">\r\n                <div class=\"ls-group\">\r\n                    <span class=\"ls-label\">Category:</span>\r\n                    <span class=\"ls-input\">\r\n                        <select id=\"categoryInput\" #category formControlName=\"category\">\r\n                            <option value=\"\">All</option>\r\n                            <option *ngFor=\"let cat of categories\" [value]=\"cat.value\">{{cat.name}}</option>\r\n                        </select>\r\n                    </span>\r\n                </div>\r\n                <div class=\"ls-group\">\r\n                    <span class=\"ls-label\">Search Label Name:</span>\r\n                    <span class=\"ls-input\"><input type=\"text\" #labelSearchName formControlName=\"labelSearchName\"></span>\r\n                </div>\r\n                <div class=\"ls-group\">\r\n                    <span class=\"ls-label\">Search Text:</span>\r\n                    <span class=\"ls-input\">\r\n                        <input type=\"text\" #labelSearchText formControlName=\"labelSearchText\">\r\n                        <span class=\"default-btn\" (click)=\"search()\">{{'Search' | label: 'PS_SEARCH'}}</span>\r\n                    </span>\r\n                </div>\r\n            </section>\r\n            <section id=\"search-results\" class=\"ls-labels\">\r\n                <div class=\"ls-label-header\">\r\n                    <span class=\"ls-name-col\">{{'Name' | label: 'PS_NAME'}}</span>\r\n                    <span class=\"ls-default-col\">{{'Default Text' | label: 'PS_DEFAULT_TEXT'}}</span>\r\n                    <span class=\"ls-local-col\">{{'Local Text' | label: 'PS_LOCAL_TEXT'}}</span>                    \r\n                    <span *ngIf=\"category.value == ''\" class=\"ls-category-col\">{{'Category' | label: 'PS_CATEGORY'}}</span>\r\n                </div>\r\n                <div class=\"ls-label-results\">\r\n                    <div class=\"ls-label\" *ngFor=\"let lab of labels\" (click)=\"selectLabel(lab)\">\r\n                        <span class=\"ls-name-col\">{{lab.name}}</span>\r\n                        <span class=\"ls-default-col\">{{lab.defaultValue}}</span>\r\n                        <span class=\"ls-local-col\">{{lab.value}}</span>\r\n                        <span *ngIf=\"category.value == ''\"  class=\"ls-category-col\">{{lab.category}}</span>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section id=\"selectedLabel\" class=\"ls-results\">\r\n                <div class=\"ls-label-data\" *ngIf=\"resultMessage\">\r\n                    <span [class.ls-label-alert]=\"resultMessage.isAlert\">{{resultMessage.text}}</span>\r\n                </div>\r\n                <div class=\"ls-group\">\r\n                    <span class=\"ls-label\">Default Text</span>\r\n                    <span class=\"ls-input\"><input type=\"text\" formControlName=\"selectedDefaultText\"></span>\r\n                </div>\r\n                <div class=\"ls-group\">\r\n                    <span class=\"ls-label\">Local Text</span>\r\n                    <span class=\"ls-input\"><input type=\"text\" formControlName=\"selectedLocalText\"></span>\r\n                </div>\r\n            </section>\r\n        </form>\r\n    </main>\r\n    <footer>\r\n        <div class=\"btns\">\r\n            <span class=\"default-btn\" (click)=\"cancel()\">{{'Cancel' | label: 'PS_CANCEL'}}</span>\r\n            <span class=\"primary-btn\" (click)=\"ok()\" [ngClass]=\"{'not-active': !searchForm.valid }\">{{'Ok' | label: 'PS_OK'}}</span>\r\n        </div>\r\n    </footer>\r\n</div>","import { Component, Input,  OnInit } from '@angular/core';\r\n\r\nimport { ModalPropertiesContext } from '../properties';\r\n\r\n@Component({\r\n    selector: 'csi-margins',\r\n    host: {\r\n        'class': 'flex-column-grow'\r\n    },\r\n    template: `\r\n        <div class='csi-margins'>\r\n            <div class='view'>\r\n                <div class=\"top cell\">\r\n                    <input type=\"number\" #pxTop [value]=\"data.top\" (change)=\"changeVal('top',pxTop.value)\" [autofocus]=\"true\">\r\n                </div>\r\n                <div class=\"middle\">\r\n                    <div class='left cell'>\r\n                        <input type=\"number\" #pxLeft [value]=\"data.left\" (change)=\"changeVal('left',pxLeft.value)\">\r\n                    </div>\r\n                    <div class=\"center cell\"> </div>\r\n                    <div class='right cell'>\r\n                        <input type=\"number\" #pxRight [value]=\"data.right\" (change)=\"changeVal('right', pxRight.value)\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"bottom cell\">\r\n                    <input type=\"number\" #pxBottom [value]=\"data.bottom\" (change)=\"changeVal('bottom', pxBottom.value)\">\r\n                </div>\r\n            </div>\r\n        </div>`\r\n})\r\n\r\nexport class MarginsComponent implements OnInit {  \r\n\r\n    @Input() context: ModalPropertiesContext;\r\n\r\n    data = {left:'', top:'', right: '', bottom:''};\r\n\r\n    get val(): string { return <string>(this.context.value); }\r\n    set val(v: string) { this.context.value = v; }\r\n\r\n    constructor() {\r\n    }  \r\n      \r\n    ngOnInit(): void {\r\n\r\n        this.context.title = this.context.property.displayedName || this.context.property.name;\r\n\r\n        if (this.val) {\r\n            let v = this.val.split(',');\r\n            this.data.left = v[0];\r\n            this.data.top = v[1];\r\n            this.data.right = v[2];\r\n            this.data.bottom = v[3];\r\n        }\r\n    }\r\n\r\n    changeVal(k: string, v: string) {\r\n        this.data[k] = v;\r\n        let m = this.data;\r\n        this.val = [m.left || '0', m.top || '0', m.right || '0', m.bottom || '0'].join();\r\n    }\r\n}\r\n","import { Component, OnInit, ChangeDetectorRef, OnDestroy} from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\nimport { StudioSubjects, val, ILabel, uuid} from '../../../common/objects/common';\nimport { IMetadataType, IPropertyMetadata, ListItemActions } from '../../../common/objects/viewModel';\nimport { ReadOnlyLevel, PanelUpdatedData } from '../../panel';\nimport { DragInfo } from '../../../shared/drag';\nimport _ from 'lodash';\nimport { MetadataService } from '../../../common/services/metadata.service';\nimport { PropertyListComponent } from '../propertyList';\nimport { Subscription } from 'rxjs';\nimport { AlertService } from '../../../alert/alert.service';\nimport { StudioStateService } from '../../../common/services/studioStateService';\nimport { DragService } from '../../../shared/drag.service';\nimport { DropDataInfo } from '../../../shared/directives/droppable.directive';\n\n\n@Component({\n    selector: 'csi-modal-collection',\n    styleUrls: [\"./modalCollection.less\"],\n    templateUrl: './modalCollection.html'\n})\nexport class ModalCollectionComponent implements OnInit, OnDestroy {\n    context: any;\n\n    // Instance is an item of the collection\n    instance: any = null;\n    subjects: StudioSubjects;\n\n    // base type of collection \n    basePropertyType: string;\n\n    // types derived from base type\n    propertyTypes: IMetadataType[];\n\n    // type of active collection item\n    activePropertyType: IMetadataType;\n    activePropertyTypeName: string;\n\n    nameProperty: IPropertyMetadata;\n\n    // the collection itself\n    collection: any[];\n    items: any[]\n\n    errorMessage: string;\n    itemType: string;\n    cdoRefType: string;\n    readOnly: ReadOnlyLevel;\n    hideTypeInName = false;\n    editable: boolean;\n    reorderingTop: boolean;\n\n    private modelingBehavior: boolean = false;\n    get dialog(): MatDialogRef<ModalCollectionComponent> {\n        return this._dialog;\n    }\n    private nameInputSubs: Subscription;\n    private originalName: string;\n\n    constructor(\n        private _dialog: MatDialogRef<ModalCollectionComponent>,\n        private _alert: AlertService,\n        private _chDetection: ChangeDetectorRef,\n        private _drag : DragService,\n        private _studiStateService: StudioStateService) {\n        this.subjects = new StudioSubjects();\n    }\n\n    initContext(context: any): void {\n        this.context = context;\n    }\n\n    ngOnInit() {\n\n        this.basePropertyType = this.context.property.originalTypeName;\n        if (this.basePropertyType) {\n            if (this.basePropertyType.indexOf('[]') != -1) {\n                this.basePropertyType = this.basePropertyType.replace('[]', '');\n            }\n        }\n        else {\n            this.errorMessage = \"Error: Property type is not defined. Editing impossible\";\n            return;\n        }\n\n        if (this.context.property.editor && this.context.property.editor.options) {\n            let it = this.context.property.editor.options.find(o => o.startsWith(\"itemType=\"));\n            if (it) {\n                this.itemType = it.split('=')[1];\n                this.cdoRefType = this.itemType;\n            }\n        }\n\n        this.propertyTypes = _.sortBy((this.context.metadataService as MetadataService).getSubTypes(this.basePropertyType), t => t._displayedName || t._name);\n        if (this.propertyTypes.length) {\n            // select first\n            this.selectType(this.propertyTypes[0]);\n        }\n\n        if (this.context.hideTypeName !== undefined) {\n            this.hideTypeInName = this.context.hideTypeName;\n        }\n        else {\n            if (this.propertyTypes.length == 1 && this.nameProperty)\n                this.hideTypeInName = true;\n        }\n\n        this.modelingBehavior = this._studiStateService.isModelingBehavior();\n        this.readOnly = this.context.property.readOnly ? ReadOnlyLevel.value : undefined;\n        this.editable = (this.readOnly === undefined);\n\n        this.collection = _.cloneDeep(this.context.value);\n\n        if (this.collection == null)\n            this.collection = [];\n        \n        if(this.collection) this.collection.map(el => el.__id = uuid.id());\n        this.buildItems();\n\n        this.subjects.property.subscribe(upd => {\n            if (this.modelingBehavior) {\n                if (this.instance.__action !== ListItemActions.add)\n                    this.instance.__action = ListItemActions.change;\n            }\n        });\n\n        this.subjects.panel.subscribe(p => {\n            // Set additional instance name verification\n            let data = <PanelUpdatedData>p;\n            let propertyList = data.contentCreated as PropertyListComponent;\n            if (propertyList && propertyList.panel.nameInput) {\n                this.nameInputSubs = propertyList.panel.nameInput.onValChange.subscribe(n => {\n                    this.setInstanceName(n);\n                });\n            }\n        });\n\n        this.selectItem(this.instance);\n    }\n\n    ngOnDestroy() {\n        if (this.nameInputSubs)\n            this.nameInputSubs.unsubscribe();\n\n        this._drag.clear(['collection-item'],null);\n    }\n\n    touch() {\n        this._chDetection.detectChanges();\n    }\n\n    ok() {\n        _.forEach(this.collection, it => {delete it.__parent;  delete it.__id;});\n        this._dialog.close(this.collection);\n    }\n\n    cancel() {\n        _.forEach(this.collection, it => {delete it.__parent;  delete it.__id;});\n        this._dialog.close();\n    }\n\n    selectItem(item: any) {\n        this.instance = item;\n        if (this.instance != null) {\n            if (this.instance.__type && this.propertyTypes.length > 1)\n                this.selectType(this.instance.__type);\n\n        }\n        else {\n            this.instance = null;\n            this.activePropertyType = null;\n            if (this.propertyTypes.length > 0) {\n                // select first\n                this.selectType(this.propertyTypes[0]);\n            }\n        }\n\n        if (this.instance) {\n            this.instance['__selectedInModalCollection'] = true;\n            this.originalName = this.getInstanceName();\n            this.instance.__parent = this.context.instance;\n        }\n\n        this.subjects.propertyPanel.next(this.instance);\n        this.touch();\n    }\n\n    selectType(selectedType: string | IMetadataType) {\n        if (!_.isString(selectedType)) {\n            this.activePropertyType = <IMetadataType>selectedType;\n        }\n        else {\n            let parsed = (<string>selectedType).split('.');\n            if (parsed.length > 1)\n                selectedType = parsed[1];\n\n            this.activePropertyType = this.propertyTypes.find(mdType => mdType._name == <string>selectedType);\n        }\n\n        this.activePropertyTypeName = this.activePropertyType._name.replace('[]', '');\n        this.nameProperty = this.activePropertyType.properties.find(p =>\n            p.name.toLowerCase() == 'name' ||\n            (p.displayedName && p.displayedName.toLowerCase() == 'name') ||\n            (p.editor && p.editor.parameters && p.editor.parameters.find(ep => ep == 'asItemName') !== undefined));\n    }\n\n    add(): void {\n        // TODO: this should be unique name validation\n        let itemType = this.activePropertyType._name;\n        if (this.activePropertyType._namespace)\n            itemType = this.activePropertyType._namespace + '.' + itemType;\n\n        let newItem = { __type: itemType, __index: this.collection.length + 1, __parent: this.context.instance };\n        if (this.modelingBehavior)\n            newItem['__action'] = ListItemActions.add;\n\n        if (this.activePropertyType.properties) {\n            if (this.nameProperty) {\n                if( (this.nameProperty.editor && this.nameProperty.editor.parameters && this.nameProperty.editor.parameters.find(ep => ep == 'asItemName') !== undefined) || this.cdoRefType )\n                    newItem[this.nameProperty.name] = \"\";    \n                else\n                    newItem[this.nameProperty.name] = this.generateNewName();\n            }\n        }\n        if (this.itemType) {\n            newItem['CDOTypeName'] = this.itemType;\n        }\n\n        (<any>newItem).__id = uuid.id();\n\n        if (this.collection == null)\n            this.collection = [newItem];\n        else\n            this.collection.push(newItem);\n\n        this.buildItems();\n        this.selectItem(newItem);\n    }\n\n    delete(item): void {\n        if (this.modelingBehavior) {\n            item['__action'] = ListItemActions.delete;\n        }\n        else {\n            let i = _.findIndex(this.collection, item);\n            if (i !== undefined && i != -1) {\n                this.collection.splice(i, 1);\n            }\n        }\n        this.buildItems();\n        this.selectItem(null);\n    }\n\n    private generateNewName(): string {\n        return this._studiStateService.getUniqueName(this.activePropertyType._name + '0', this.collection, this.nameProperty.name);\n    }\n\n    getName(el) {\n        let res = '';\n        let n = this.nameProperty ? val(el, this.nameProperty.name) : '';\n        if (n)\n            res = n;\n\n        if (!this.hideTypeInName && el.__type) {\n            let p = el.__type.split('.');\n            if (p.length > 1)\n                res += '[' + p[1] + ']';\n            else\n                res += '[' + el.__type + ']';\n        }\n        return res;\n    }\n\n    getDropOptions(el:any) : DropDataInfo {\n        // item is undefined for type selector to be able to insert before 0 position\n        return <DropDataInfo>{\n            id: 'dz_'+(el.__id),\n            disabled: false,\n            types: 'collection-item',\n            drop: (d, tm) => this.onDrop(d, tm),\n            over: (d, m) => this.onOver(d, m),\n            model: el\n        };\n    }\n\n\n    getInstanceName() {\n        return this.nameProperty ? this.instance[this.nameProperty.name] : this.instance.name;\n    }\n\n    setInstanceName(name: string) {\n        let nameKey = this.nameProperty ? this.nameProperty.name : 'name';\n        let nameLc = name.toLowerCase();\n        if (_.find(this.collection, v => val(v, nameKey).toLowerCase() == nameLc && v != this.instance)) {\n            let err: ILabel;\n            if( this.context.duplicationErrorLabel ){\n                err = this.context.duplicationErrorLabel;\n            }\n            else {\n                err = <ILabel>{\n                    Name: 'PS_NAME_EXISTS_ERROR',\n                    DefaultValue: '{0} with name {1} already exists. Changes are discarded.',\n                    arguments: [this.activePropertyTypeName, name]\n                }\n            };\n            this._alert.errorModal(err).subscribe(r => {\n                this.instance[nameKey] = this.originalName;\n                this.selectItem(this.instance);\n            });\n        }\n        else\n            this.instance[nameKey] = name;\n    }\n\n    private buildItems(): void {\n        this.items = _.filter(this.collection, v => v.__action !== ListItemActions.delete);\n    }\n\n    private onDrop(d: DragInfo, dropInf: DropDataInfo) {\n        const targetModel = dropInf.model;        \n        // Reorder \n        let sourceIndex = this.collection.findIndex(c => c === d.dragModel);\n        if (sourceIndex != -1) {\n            let targetIndex = targetModel ? this.collection.findIndex(c => c === targetModel) : -1;\n            const moveDown = targetIndex >= sourceIndex;\n            let removedItem = this.collection.splice(sourceIndex, 1)[0];\n            targetIndex = targetModel ? this.collection.findIndex(c => c === targetModel) : -1;\n            if( moveDown )\n                targetIndex ++;\n            // if target index = -1 the item is inserted at 0 position\n            this.collection.splice(targetIndex, 0, removedItem);\n        }\n        this.buildItems();\n    }\n\n    private onOver(d: DragInfo, mdl: any) {        \n        if (!d.leaveZone) {            \n            if (mdl)\n                mdl.__reordering = true;\n            else\n                this.reorderingTop = true;\n        }\n        else {\n            if (mdl)\n                delete mdl.__reordering;\n            else\n                this.reorderingTop = false;\n        }\n    }\n}\n","<div class=\"csi-modal csi-modal-collection\" csi-dialog-decor [dialog]=\"dialog\" #modalroot>\n    <header csi-closable (onClose)=\"cancel()\">\n        <span class=\"title\">{{context.property.name}}</span>\n    </header>\n    <main>\n        <div class=\"left-panel\" #leftPanel>\n            <div *ngIf=\"!context.disableAdding\" class=\"type-selector\" [class.reordering]=\"reorderingTop\">\n                <select [ngModel]=\"activePropertyTypeName\" (ngModelChange)=\"selectType($event)\" [disabled]=\"!editable\">\n                    <option *ngFor=\"let ptype of propertyTypes\" [value]=\"ptype._name\">{{ptype._displayedName  || ptype._name}}</option>\n                </select>\n                <button (click)=\"add()\" [disabled]=\"!editable\"> + </button>\n            </div>\n            <div class=\"instances\"> \n                <div *ngFor=\"let el of items\" [csi-droppable]=\"getDropOptions(el)\" [id]=\"'dz_'+(el.__id)\" class=\"inst-cont\">\n                    <div class=\"instance\"  [class.selected]=\"el==instance\" [class.changed]=\"el?.__action==1\" (click)=\"selectItem(el)\" [id]=\"el.__id\"\n                            [class.reordering]=\"el.__reordering\"\n                            [attr.title]=\"el.name||el.Name\"\n                            [csi-draggable]=\"{type: 'collection-item', id: el.__id, model: el, handleContainer: modalroot}\">\n                        <span *ngIf=\"editable\" class=\"delete\" (click)=\"delete(el)\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></span>\n                        <span class=\"name\">{{getName(el)}}</span>\n                    </div>\n                </div>\n            </div>\n        </div>    \n        <csi-panel-splitter direction=\"v\" [panel]=\"leftPanel\" [panelBefore]=\"true\" ></csi-panel-splitter>\n        <div #rightPanel class=\"right-panel\" [hidden]=\"instance==null\" (click)=\"touch()\">\n            <csi-panel [component]=\"'csi-property-list'\" [subjects]=\"subjects\" [readOnly]=\"readOnly\" [parameters]=\"{showDescription: false, cdoType: itemType}\"></csi-panel>\n        </div>\n    </main>\n    <footer>        \n        <div class=\"popup-message\"><span>{{errorMessage}}</span></div>\n        <div class=\"btns\">\n            <span class=\"default-btn\" (click)=\"cancel()\">{{'Cancel' | label: 'PS_CANCEL'}}</span>\n            <span class=\"primary-btn\" (click)=\"ok()\" *ngIf=\"editable\">{{'Ok' | label: 'PS_OK'}}</span>\n        </div>\n    </footer>\n</div>\n","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ModalPropertiesContext } from '../properties';\r\nimport { StudioSubjects } from '../../../common/objects/common';\r\n\r\n@Component({\r\n    selector: 'csi-modal-container',\r\n    styles:[\r\n    `\r\n    :host{\r\n        min-height: 550px;\r\n        min-width: 450px;\r\n        height: 100%;\r\n        width: 100%;\r\n\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n\r\n    .field-expression-container{\r\n        flex: 1 1 auto;\r\n        display: flex;\r\n        flex-direction: column;        \r\n    }\r\n    .portal-settings-container, .longtext-container, .query-builder-container, .target-matrix-rows-container {\r\n        flex: 1 1 auto;\r\n        display: flex;\r\n        flex-direction: column;        \r\n    }\r\n\r\n\r\n    .csi-property-textarea.long-text{\r\n        flex: 1 1 auto;\r\n    }\r\n\r\n    .webi-reports-container{\r\n        flex: 1 1 auto;\r\n        display: flex;\r\n        flex-direction: column;        \r\n    }\r\n\r\n    `],\r\n    templateUrl: './modalContainer.html'\r\n})\r\n\r\nexport class ModalContainerComponent implements OnInit {\r\n    context: ModalPropertiesContext;\r\n    errorMessage: string;\r\n    contentType: string;\r\n    subjects: StudioSubjects;\r\n\r\n    get dialog(): MatDialogRef<ModalContainerComponent> {\r\n        return this._dialog;\r\n    }\r\n\r\n    get readonly(): boolean {\r\n        return this.context && this.context.property && this.context.property.readOnly;\r\n    }\r\n\r\n    constructor(\r\n        private _dialog: MatDialogRef<ModalContainerComponent>,\r\n        private _chDetection: ChangeDetectorRef) {\r\n        this.subjects = new StudioSubjects();\r\n    }\r\n\r\n    initContext(context: any) {\r\n        this.context = context;\r\n    }\r\n\r\n    ngOnInit() {\r\n        let propEditor = (this.context && this.context.property) ? this.context.property.editor : undefined;\r\n\r\n        if (propEditor && propEditor.provider)\r\n            this.contentType = propEditor.provider;\r\n\r\n        else \r\n            if(propEditor && propEditor.parameters && propEditor.parameters.length && propEditor.parameters[0] == \"longText\"){\r\n                this.contentType = 'longText';\r\n            }\r\n        else\r\n            this.contentType = 'portalSettings';\r\n    }\r\n\r\n    getTitle() {\r\n        return this.context.title;\r\n    }\r\n\r\n    touch() {\r\n        this._chDetection.detectChanges();\r\n    }\r\n\r\n\r\n    ok() {\r\n        let closing = this.context.beforeClose ? this.context.beforeClose(true) : true;\r\n        if( closing )\r\n            this._dialog.close(this.context.value);\r\n    }\r\n\r\n    cancel() {\r\n        let closing = this.context.beforeClose ? this.context.beforeClose(false) : true;\r\n        if( closing )\r\n            // restore\r\n            this._dialog.close();\r\n    }\r\n\r\n}\r\n","<div class=\"csi-modal csi-modal-container\" (click)=\"touch()\" csi-dialog-decor [dialog]=\"dialog\">\r\n    <header csi-closable (onClose)=\"cancel()\">\r\n        <span class=\"title\">{{context.title||context.property?.name}}</span>\r\n    </header>\r\n    <main [ngSwitch]=\"contentType\">\r\n        <section *ngSwitchCase=\"'fieldExpression'\" class='field-expression-container'>\r\n            <csi-field-expression [context]=\"context\" (getTitle)=\"getTitle()\"></csi-field-expression>\r\n        </section>\r\n        <section *ngSwitchCase=\"'portalSettings'\" class='portal-settings-container'>\r\n            <csi-portal-settings [context]=\"context\" [subjects]=\"subjects\"></csi-portal-settings>\r\n        </section>\r\n        <section *ngSwitchCase=\"'margins'\" class='margins-container'>\r\n            <csi-margins [context]=\"context\" (getTitle)=\"getTitle()\"></csi-margins>\r\n        </section>\r\n        <section *ngSwitchCase=\"'longText'\" class='longtext-container'>\r\n            <textarea class=\"csi-property-textarea long-text\" [(ngModel)]=\"context.value\">\r\n            </textarea>\r\n        </section>\r\n        <section *ngSwitchCase=\"'queryBuilder'\" class='query-builder-container'>\r\n            <csi-query-builder [context]=\"context\" (getTitle)=\"getTitle()\"></csi-query-builder>\r\n        </section>\r\n        <section *ngSwitchCase=\"'pageActionRuleBuilder'\" class='page-action-rule-builder-container'>\r\n            <csi-page-action-rule-builder [context]=\"context\" (getTitle)=\"getTitle()\"></csi-page-action-rule-builder>\r\n        </section>\r\n        <section *ngSwitchCase=\"'targetMatrixRows'\" class='target-matrix-rows-container'>\r\n            <csi-target-matrix-rows [context]=\"context\" (getTitle)=\"getTitle()\"></csi-target-matrix-rows>\r\n        </section>\r\n        <section *ngSwitchCase=\"'webiReports'\" class='webi-reports-container'>\r\n            <csi-webi-reports [context]=\"context\" (getTitle)=\"getTitle()\"></csi-webi-reports>\r\n        </section>\r\n        <section *ngSwitchDefault>\r\n            <h3>{{context.property?.editor?.provider}} is not yet implemented</h3>\r\n        </section>\r\n    </main>\r\n    <footer>        \r\n        <div class=\"popup-message\"><span>{{errorMessage}}</span></div>\r\n        <div class=\"btns\">\r\n            <span class=\"default-btn\" (click)=\"cancel()\">{{'Cancel' | label: 'PS_CANCEL'}}</span>\r\n            <span class=\"primary-btn\" (click)=\"ok()\" *ngIf=\"!readonly\">{{'Ok' | label: 'PS_OK'}}</span>\r\n        </div>\r\n    </footer>\r\n</div>\r\n","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { ModalPropertiesContext } from '../properties';\nimport { StudioSubjects } from '../../../common/objects/common';\nimport { IMetadataType } from '../../../common/objects/viewModel';\nimport { ReadOnlyLevel } from '../../panel';\n\n@Component({\n    selector: 'csi-modal-object',\n    styles: [\n        `\n        :host{\n            min-height: 450px;\n            min-width: 400px;\n            height: 100%;\n            width: 100%;\n        }\n\n        .csi-modal-object > main > section{\n            display: flex;\n            flex-direction: column;\n            flex: 1 1 auto;\n        }\n        .csi-modal-object > main > section > .type-selector {\n            flex: 0 0 auto;\n        }\n        .csi-modal-object > main > section > .type-selector > select {\n            height: 24px;\n            width: 100%;\n            cursor: pointer;\n        }\n        .csi-modal-object > main > section > .content {\n            display: flex;\n            flex-direction: column;\n            flex: 1 1 auto;\n        }\n        `\n    ],\n    template: `\n<div class=\"csi-modal csi-modal-object\" csi-dialog-decor [dialog]=\"dialog\">\n    <header csi-closable (onClose)=\"cancel()\">\n        <span class=\"title\">{{context.property.name}}</span>\n    </header>\n    <main>\n        <section>            \n            <div class=\"type-selector\" [hidden]=\"!showTypeSelector\">\n                <select [(ngModel)]=\"activePropertyTypeName\" [disabled]=\"lockTypeSelector\">\n                    <option *ngFor=\"let ptype of propertyTypes\" [value]=\"ptype._name\">{{ptype._displayedName || ptype._name}}</option>\n                </select>\n            </div>\n            <div class=\"content\" (click)=\"touch()\">\n                <csi-panel [component]=\"'csi-property-list'\" [subjects]=\"subjects\" [readOnly]=\"readOnly\" [parameters]=\"{showDescription: false}\"></csi-panel>\n            </div>\n        </section>\n    </main>\n    <footer>        \n        <div class=\"popup-message\"><span>{{errorMessage}}</span></div>\n        <div class=\"btns\">\n            <span class=\"default-btn\" (click)=\"cancel()\">{{'Cancel' | label: 'PS_CANCEL'}}</span>\n            <span class=\"primary-btn\" (click)=\"ok()\" *ngIf=\"readOnly===undefined\">{{'Ok' | label: 'PS_OK'}}</span>\n        </div>\n    </footer>\n</div>`\n})\n\nexport class ModalObjectComponent implements OnInit {\n    context: ModalPropertiesContext;\n\n    instance: any;\n    subjects: StudioSubjects;\n\n    // base type of object\n    basePropertyType: string;\n\n    // types derived from base type\n    propertyTypes: IMetadataType[];\n\n    // type of active collection item\n    get activePropertyTypeName(): string { return this._activePropertyType._name; }\n    set activePropertyTypeName(t: string) { this.onChangePropertyType(t); }\n\n    showTypeSelector: boolean = false;\n    lockTypeSelector : boolean = false;\n\n    errorMessage: string;    \n\n    readOnly: ReadOnlyLevel;\n\n    get dialog(): MatDialogRef<ModalObjectComponent> {\n        return this._dialog;\n    }\n\n    constructor(\n        private _dialog: MatDialogRef<ModalObjectComponent>,\n        private _chDetection: ChangeDetectorRef) {\n        this.subjects = new StudioSubjects();\n    }\n\n    initContext(context: any): void {\n        this.context = context;\n    }\n\n    ngOnInit() {\n        this.basePropertyType = this.context.property.originalTypeName;\n        if (!this.basePropertyType) {\n            this.errorMessage = \"Error: Property type is not defined. Editing impossible\";\n            return;\n        }\n\n        this.propertyTypes = this.context.metadataService.getSubTypes(this.basePropertyType);\n        this.showTypeSelector = this.propertyTypes ? this.propertyTypes.length > 1 : false;\n        if( this.context.property && this.context.property.editor && \n            this.context.property.editor.parameters && this.context.property.editor.parameters.find(p=> p == \"noTypeSelector\"))\n            this.showTypeSelector = false;\n            \n        if (this.context.value && this.context.value.__type) {\n            this.setActiveType(this.context.value.__type);\n        }\n        else {\n            if (this.propertyTypes.length) {\n                // select first                \n                this._activePropertyType = this.propertyTypes[0];\n            }\n        }\n\n        this.instance = this.context.value;\n        if (this.instance == null && this._activePropertyType) {\n            let tn = this._activePropertyType._name;\n            if (this._activePropertyType._namespace)\n                tn = this._activePropertyType._namespace + '.' + tn;\n\n            this.instance = { __type: tn };\n        }\n        this.readOnly = this.context.property.readOnly ? ReadOnlyLevel.value : undefined;\n        if (this.readOnly == ReadOnlyLevel.value)\n            this.showTypeSelector = false;\n       \n        this.instance.__parent = this.context.instance;\n        this.subjects.panel.subscribe(() => this.subjects.propertyPanel.next(this.instance));\n    }\n\n    touch() {\n        this._chDetection.detectChanges();\n    }\n\n    setActiveType(t: string) {\n        this._activePropertyType = this.propertyTypes.find(mdType => {\n            if (mdType._namespace)\n                return (mdType._namespace + '.' + mdType._name) == t;\n            else\n                return mdType._name == t;\n        });\n    }\n\n    onChangePropertyType(t: string) {\n        this.setActiveType(t);\n        if (this._activePropertyType) {\n            this.instance.__type = this._activePropertyType._name;\n            if(this.instance.typeName)\n                this.instance.typeName = this._activePropertyType._name;\n            \n            this.subjects.propertyPanel.next(this.instance);\n        }\n    }\n\n    ok() {\n        delete this.instance.__parent;\n        this._dialog.close(this.instance);\n    }\n\n    cancel() {\n        delete this.instance.__parent;\n        this._dialog.close();\n    }\n\n    private _activePropertyType: IMetadataType;\n}\n","import { Component, Input,  OnInit } from \"@angular/core\";\n\nimport { ModalPropertiesContext } from '../properties';\nimport { ValueProviderService, SelectableItem } from \"../../../common/services/dataValue.service\";\nimport { IPropertyMetadata, IPropertyEditor, IOMTypeDescriptor, FieldTypeCode } from \"../../../common/objects/viewModel\";\nimport { ValueUpdatedData, val } from \"../../../common/objects/common\";\nimport { Subject, from } from \"rxjs\";\nimport {toArray} from \"rxjs/operators\";\n\n@Component({\n    selector: \"csi-page-action-rule-builder\",\n    styles: [`\n        :host{\n            display: flex;\n            flex-direction: column;\n            flex: 1 1 auto;\n            min-width: 800px;\n        }\n        .csi-page-action-rule-builder{\n            display: flex;\n            flex-direction: column;\n            flex: 1 1 auto;            \n            padding: 1px;\n        }\n        .rule-text{\n            display: flex;\n            flex-direction: column;\n            flex: 1 1 auto;        \n            padding: 4px;    \n        }\n        \n        .long-text{\n            height: 300px;\n        }\n\n        .query-item{\n            width: 100%;\n            cursor: pointer;\n            padding: 3px;\n            flex: 0 0 auto;\n        }\n        .query-items-panel{\n            padding: 4px;\n            display: flex;\n            flex-direction: column;\n            flex: 0 0 200px;\n            border: 1px solid #aaaaaa;\n        }\n        .query-item-selector{\n            display: inline-flex;\n            flex: 0 0 auto;\n        }\n\n        .query-item-selector select{\n            height: 23px;\n        }\n        .item-rows{\n            display: flex;\n            flex-direction: column;\n            flex: 1 1 auto;\n            overflow: auto;\n        }\n        .item-row{\n            display: inline-flex;\n            flex: 0 0 auto;\n        }\n        .item-row:nth-child(even){\n            background-color: #eeeeee;\n        }\n        .column-header{            \n            display: flex;\n            flex: 0 0 20px;       \n            background-color: #dcdcdc;\n            font-weight: bold;\n            border-bottom: 1px solid #aaaaaa;                 \n            border-top: 1px solid #aaaaaa;\n        }\n\n        .col-operation{            \n            flex: 0 0 150px;\n            align-self: center;\n            text-align: center;\n        }\n        .col-leftValue-type{\n            flex: 1 1 auto;\n        }\n        .col-leftValue-field{\n        flex: 1 1 auto;\n        }\n        .col-leftValue-instance select{\n            width: 200px;\n        }\n        .col-comparison{            \n            flex: 1 1 auto;\n            text-align: center;\n        }\n        .col-rightValue{\n            flex: 1 1 auto;\n        }\n        .col-exp {            \n            flex: 1 1 auto;\n        }\n        .col-exp input{\n            width : 100%;\n            background-color: transparent;\n        }\n        .query-items .item-row {\n            display: flex;\n            flex: 0 0 auto;\n            border-bottom: 1px solid #aaaaaa;\n            border-left: 1px solid #aaaaaa;\n            border-right: 1px solid #aaaaaa;            \n        }\n        .query-items .item-row .col-name {\n            text-align: left;  \n            text-overflow: ellipsis;          \n        }\n        .add-button{\n         max-height:28px;\n        }\n        .selected{\n            background-color: #aaaaaa;\n        }\n    `],\n    templateUrl: \"pageActionRuleBuilder.component.html\"\n})\nexport class PageActionRuleBuilderComponent implements OnInit {  \n    @Input() context: ModalPropertiesContext;\n\n    get textValue(): string { return <string>(this.context.value) || ''; }\n    set textValue(v: string) { this.context.value = v; }\n\n    expItems: expressionItem[] = [];\n    expProp : {[name:string] : IPropertyMetadata};\n\n    propChanged = new Subject<ValueUpdatedData>();\n    \n    constructor(private _valueService: ValueProviderService) {\n        this.propChanged.subscribe(c=> this.onFieldChanged(c));\n    }  \n      \n    ngOnInit(): void {\n        this.context.title = \"Page Action Rule Builder\";\n        this.init();\n    \n        if(this.context.instance){\n            // load initial parameters\n            this.textValue = this.context.instance.expression;\n        }\n        this.onFieldChanged(new ValueUpdatedData(\"leftValueType\", this.leftValueTypes.Container ) )\n        this.changeText(this.textValue);\n    }\n\n    changeText(v) {\n        this.textValue = v;\n        this.expItems = this.parseText();        \n    }\n\n    onFieldChanged(upd: ValueUpdatedData){\n        let pr = val(this.expProp, upd.propertyName) as IPropertyMetadata;\n        pr.value = upd.val;\n\n        let pLc = upd.propertyName.toLowerCase();        \n\n        if(pLc  == \"leftValueType\".toLowerCase()){\n            let lv = this.expProp.leftValueField;        \n            lv.editor.parameters = [upd.val];\n            lv.editor.selectableItems = this._valueService.fieldsDirectory(lv, null);\n            lv.value = \"\";\n        }\n        else if(pLc == \"leftValueField\".toLowerCase() ){\n            let md = (<IOMTypeDescriptor>upd.val).Metadata;\n            let rv = this.expProp.rightValue;\n            if(md.IsList || md.HasSelVal || upd.val.TypeName == \"NamedObjectRef\" || upd.val.TypeName == \"RevisionedObjectRef\"){\n                rv.editor.directive = \"selector\";\n                rv.editor.parameters = [md.CDOTypeName];\n                rv.editor.selectableItems = this._valueService.ndoInstances(rv);\n                rv.value = null;                \n            }\n            else{\n                rv.editor.directive = \"text\";\n                if( md.FieldTypeCode == FieldTypeCode.TimeStamp)\n                    rv.originalTypeName = \"DateTime\";\n                else if (md.FieldTypeCode == FieldTypeCode.Boolean)\n                    rv.editor.directive = \"switchBox\";                \n                else\n                    rv.originalTypeName = \"String\";\n                rv.value = \"\";                \n            }\n        }\n    }\n\n    private parseText() : expressionItem[] {\n        let items : expressionItem[] = [];\n        if( this.textValue ){            \n            let op = '';\n            let it : expressionItem = new expressionItem();\n\n            this.textValue.split(' ').forEach(s=>{\n                let p = s.trim();\n                if( p.toLowerCase() == \"and\" || p.toLowerCase() == \"or\" ){\n                    op = p;\n                    items.push(it);\n                    it = new expressionItem(op);\n                }\n                else\n                    it.text += s;\n            });\n\n            // last item\n            if( it.text )\n                items.push(it);\n        }\n        return items;\n    }\n\n    private getLValue(){\n        let v : IOMTypeDescriptor = this.expProp.leftValueField.value;\n        if( v.TypeName == \"NamedObjectRef\" ||  v.TypeName == \"RevisionedObjectRef\")\n            return v.Name + \".Name\";\n        return v.Name;\n    }\n    private getRValue(){\n        let lf : IOMTypeDescriptor = this.expProp.leftValueField.value;\n        let t = lf.Metadata.FieldTypeCode;\n        if(t == FieldTypeCode.Integer) {\n            return `Constants.${this.expProp.rightValue.value}`;\n        }\n        else if(t == FieldTypeCode.Boolean) {\n            return `Constants.${(this.expProp.rightValue.value==true ? \"True\" : \"False\")}`;\n        }\n        else{\n            return `\"${this.expProp.rightValue.value}\"`;\n        }\n    }\n\n    addExp() : void {\n        // disable adding if boolean is not set\n        let lf : IOMTypeDescriptor = this.expProp.leftValueField.value;\n        if(lf.Metadata.FieldTypeCode == FieldTypeCode.Boolean && this.expProp.rightValue.value == \"\")\n            return;\n            \n        let s = '';\n        // first exp item should not have an bitwise operator\n        if(this.expItems.length > 0)\n            s += ` ${this.expProp.bitwiseOp.value} `;\n        \n        s += `${this.expProp.leftValueType.value}.${this.getLValue()} ${this.expProp.comparisonOp.value} ${this.getRValue()}`;\n\n        this.textValue += s;\n        this.expItems = this.parseText();\n    }\n\n    private init() {\n        this.expProp = {\n            bitwiseOp : <IPropertyMetadata> {\n                name:'bitwiseOp',  \n                value: \"And\",\n                editor: <IPropertyEditor>{directive : \"selector\", \n                    selectableItems : from(this.operations.map(s=> new SelectableItem(s))).pipe(toArray())}},\n            leftValueType : <IPropertyMetadata> {\n                name:'leftValueType', required: true,\n                editor: <IPropertyEditor>{directive : \"selector\",  \n                    selectableItems: from( Object.keys(this.leftValueTypes).map( k=> new SelectableItem(k, this.leftValueTypes[k]))).pipe(toArray())}},\n            leftValueField : <IPropertyMetadata> { \n                name: \"leftValueField\",\n                editor: <IPropertyEditor>{directive: \"selector\", provider: \"fieldsDirectory\"}},\n            comparisonOp: <IPropertyMetadata> {\n                name:'comparisonOp', required: true, \n                    value: \"=\",\n                    editor: <IPropertyEditor>{directive : \"selector\", \n                    selectableItems : from(this.comparisons.map(s=> new SelectableItem(s))).pipe(toArray())}},\n            rightValue: <IPropertyMetadata> { \n                name: \"rightValue\", value: \"\",\n                editor: <IPropertyEditor>{directive: \"text\"} }\n        };\n    }\n\n    private operations = ['And', 'Or'];\n    private comparisons= [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\"];\n    private leftValueTypes = {Container : 'CurrentContainerStatus', Resource:'ResourceStatusDetails', \n                Event:'QualityObjectStatusDetail', ChangePackage:'ChangePackage'};\n}\n\nclass expressionItem {\n    public bitwiseOp: string;\n    public leftValueType : string;\n    public leftValueField : any;\n    public comparisonOp: string;\n    public rightValue: any;\n    public text: string;\n\n    constructor(bitOp: string = \"\", txt: string = \"\"){\n        this.bitwiseOp = bitOp;\n        this.text = txt;\n    }\n}\n","<div class=\"csi-page-action-rule-builder\">\r\n    <div class=\"rule-text\">\r\n        <textarea [attr.spellcheck]=\"false\" class=\"csi-property-textarea long-text\" [value]=\"textValue\" #textcontrol (input)=\"changeText(textcontrol.value)\"></textarea>\r\n    </div>\r\n    <div class=\"query-items-panel\">\r\n        <div class=\"query-item-selector\">\r\n            <div class=\"col-operation\">\r\n                <csi-editor-selector [property]=\"expProp.bitwiseOp\" [items]=\"expProp.bitwiseOp.editor.selectableItems\" [value]=\"expProp.bitwiseOp.value\" [valueChanged]=\"propChanged\"></csi-editor-selector>\r\n            </div>\r\n            <div class=\"col-leftValue-type\">\r\n                <csi-editor-selector [property]=\"expProp.leftValueType\" [items]=\"expProp.leftValueType.editor.selectableItems\" [value]=\"expProp.leftValueType.value\" [valueChanged]=\"propChanged\"></csi-editor-selector>\r\n            </div>\r\n            <div class=\"col-leftValue-field\">\r\n                <csi-editor-selector [property]=\"expProp.leftValueField\" [items]=\"expProp.leftValueField.editor.selectableItems\" [value]=\"expProp.leftValueField.value\" [valueChanged]=\"propChanged\"></csi-editor-selector>\r\n            </div>\r\n            <div class=\"col-comparison\">\r\n                <csi-editor-selector [property]=\"expProp.comparisonOp\" [items]=\"expProp.comparisonOp.editor.selectableItems\" [value]=\"expProp.comparisonOp.value\" [valueChanged]=\"propChanged\"></csi-editor-selector>\r\n            </div>\r\n            <div class=\"col-rightValue\">\r\n                <csi-editor-selector *ngIf=\"expProp.rightValue.editor.directive=='selector'\" [property]=\"expProp.rightValue\" [items]=\"expProp.rightValue.editor.selectableItems\" [value]=\"expProp.rightValue.value\" [valueChanged]=\"propChanged\">\r\n                </csi-editor-selector>\r\n                <csi-editor-text *ngIf=\"expProp.rightValue.editor.directive=='text'\" [property]=\"expProp.rightValue\" [value]=\"expProp.rightValue.value\" [valueChanged]=\"propChanged\">\r\n                </csi-editor-text>\r\n                <csi-editor-switchbox *ngIf=\"expProp.rightValue.editor.directive=='switchBox'\" [property]=\"expProp.rightValue\" [valueChanged]=\"propChanged\">\r\n                </csi-editor-switchbox>\r\n            </div>\r\n                <button class=\"add-button\" (click)=\"addExp()\">Add</button>\r\n        </div>\r\n        <div class=\"column-header\">\r\n            <div class=\"col-operation\"></div>\r\n            <div class=\"col-exp\">Expression</div>            \r\n        </div>\r\n        <div class=\"item-rows\">\r\n            <div class=\"item-row\" *ngFor=\"let p of expItems\">\r\n                <div class=\"col-operation\">{{p.bitwiseOp}}</div>\r\n                <div class=\"col-exp\"><input class=\"col-value-input\" type=\"text\" [(ngModel)]=\"p.text\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, Input,  OnInit } from '@angular/core';\n\nimport { StudioSubjects} from '../../../common/objects/common';\nimport { LabelService } from '../../../common/services/label.service';\nimport { PanelSettings } from '../../panel';\nimport { ModalPropertiesContext } from '../properties';\nimport { PortalSettingsService, SettingSection } from '../../../common/services/portalSettings.service';\n\nimport { Observable } from 'rxjs';\n\n\n@Component({\n    selector: 'csi-portal-settings',\n    styles:[\n        `\n        :host{\n            flex: 1 1 auto;\n            display: flex;\n            flex-direction: column;\n            min-width: 600px;\n        }\n\n        .csi-portal-settings {\n            flex: 1 1 auto;\n            display: flex;\n        }\n        .left-panel {\n            min-width: 10%;\n            overflow: auto;\n            flex: 1 1;\n        }\n        .left-panel .instances {\n            height: 100%;\n            border-right: solid 1px #aaaaaa;\n        }\n        .left-panel .instance {\n            cursor: pointer;\n            padding: 3px;\n        }\n        .left-panel .instance.selected {\n            background-color: #aaaaaa;\n            color: white;\n        }\n\n        .right-panel {\n            overflow: auto;\n            width: 70%;\n            padding-left: 5px;\n            display: flex;\n            flex-direction: column;\n        }\n    }\n    `],\n    template: `\n        <div class='csi-portal-settings'>\n            <div class='left-panel'>\n                <div class=\"instances\">\n                    <div *ngFor=\"let section of sections | async\">\n                        <div class=\"instance\" [class.selected]=\"section===activeSection\" (click)=\"selectSection(section)\">{{section.type._name}}</div>\n                    </div>\n                </div>\n            </div>\n            <csi-panel-splitter direction=\"v\" [panel]=\"rightPanel\"></csi-panel-splitter>\n            <div class='right-panel' #rightPanel>\n                <csi-panel [component]=\"'csi-property-list'\" [subjects]=\"subjects\" [parameters]=\"{showDescription: false}\"></csi-panel>\n            </div>\n        </div>\n    `\n})\n\nexport class PortalSettingsComponent implements OnInit {  \n\n    @Input() context: ModalPropertiesContext;\n    @Input() subjects: StudioSubjects;\n\n    sections: Observable<SettingSection[]>;\n    activeSection: SettingSection;\n    \n    constructor(private _labelService: LabelService, private _portalSettingsService : PortalSettingsService) {\n    }  \n      \n    ngOnInit(): void {\n\n        let portalSettingsLabel = this._labelService.getLabel('PS_PORTAL_SETTINGS', 'Portal Settings');\n        this.context.title = portalSettingsLabel;\n        this.sections = this._portalSettingsService.getSections();\n        this.context.beforeClose = (ok : boolean )=> {\n            if( ok )\n                this.context.value = this._portalSettingsService.getSettingsData();\n            return true;\n        };\n    }\n\n    onPanelLoaded(panel: PanelSettings) {\n        panel.nameInput.readonly = true;\n        panel.visible = false;\n    }\n\n    selectSection(sec : SettingSection) {\n        this.activeSection = sec;\n        let inst = this._portalSettingsService.getSectionData(sec);\n        this.subjects.propertyPanel.next(inst);\n    }\n}\n","import { Component, Input, OnInit, ViewChild, ElementRef, AfterViewChecked } from \"@angular/core\";\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ModalPropertiesContext } from '../properties';\nimport { QueryGridParameter, DataContractConnectionType, QueryBoundGridParameter } from '../../../common/objects/viewModel';\nimport { ValueProviderService } from \"../../../common/services/dataValue.service\";\nimport { ISelectableItem, val } from \"../../../common/objects/common\";\nimport { PortalService } from \"../../../common/services/portal.service\";\n\nimport _ from 'lodash';\n\n@Component({\n    selector: \"csi-query-builder\",\n    styleUrls: ['queryBuilder.component.less'],\n    templateUrl: \"queryBuilder.component.html\"\n})\nexport class QueryBuilderComponent implements OnInit, AfterViewChecked {\n    @Input() context: ModalPropertiesContext;\n\n    @ViewChild(\"queryListElement\") queryListElement : ElementRef;\n\n    get textValue(): string { return <string>(this.context.value); }\n    set textValue(v: string) { this.context.value = v; }\n\n    get queryType(): string { return this.context.instance.queryType.toString(); }\n    set queryType(v: string) { this.context.instance.queryType = parseInt(v); this.typeAheadFilter = ''; this.getQueryList(); }\n\n    get typeAheadFilter(): string { return this._filter; }\n    set typeAheadFilter(v: string) { this._filter = v; this.getQueryList(); }\n\n    parameters: queryParameter[] = [];\n    isPredefined: boolean;\n    queryList: Observable<ISelectableItem[]>;\n    private gridMode = true;\n    private queryParametersField : string = \"queryParameters\";\n    private _scroll_to_selected = false;\n\n    private _filter: string;\n\n    constructor(private _valueService: ValueProviderService, private _portal: PortalService) {\n    }\n\n    ngOnInit(): void {\n        this.context.title = \"Query Builder\";\n        this.context.beforeClose = (ok: boolean) => this.onBeforeClose(ok);\n        if( this.context.instance.__type == \"GridDataSettingsPredefinedQuery\")\n            this.isPredefined = true;        \n        else if( this.context.instance.__type == \"GridDataSettingsAdHocQuery\")\n            this.isPredefined = false;\n        else if( this.context.instance.__type == \"SelectionDataSourceMap\") {\n            this.isPredefined = val(this.context.instance, \"QueryExecutionMode\") === 1;\n            this.gridMode = false;\n            this.queryParametersField = \"Parameters\";            \n        }\n\n        if (this.isPredefined) {\n            if (this.context.instance.queryType === undefined)\n                this.context.instance.queryType = 0;\n            this.getQueryList();            \n            if( this.textValue )\n                this._scroll_to_selected = true;            \n        }\n\n        let qparams = val( this.context.instance, this.queryParametersField) as any[];\n        if (qparams) {            \n            // load initial parameters\n            this.parameters = qparams.map<queryParameter>(p => new queryParameter(p.name, p.key));\n        }\n\n        if( !this.isPredefined)\n            this.changeText(this.textValue);\n    }\n\n    ngAfterViewChecked(){\n        if(this._scroll_to_selected){\n            if(this.queryListElement ){\n                let d = <HTMLDivElement>this.queryListElement.nativeElement;\n                let sel = d.querySelector(\"#q_\" + this.textValue);\n                if( sel ){\n                    this._scroll_to_selected = false;\n                    sel.scrollIntoView();\n                }\n            }\n        }\n    }\n    \n    changeText(v) {\n        this.textValue = v;\n        this.getAdHocQueryParameters(v);\n    }\n\n    selectQuery(q: ISelectableItem) {\n        if (q.childCount > 0)\n            this.getPredefQueryParameters(q.name);\n        else\n            this.parameters = [];\n\n        this.textValue = q.name;\n    }\n\n    private getAdHocQueryParameters(qText: string) {\n        let prms = qText ? qText.match(/(\\?\\w*)/ig) : [];\n\n        let newPrms = _.chain(prms)\n            .filter(x => x.length > 1)\n            .map(p => p.substr(1)).uniq().value()\n            .map(p => new queryParameter(p));\n\n        // take values from existing \n        newPrms.forEach(p => {\n            let pd = this.parameters.find(px => px.name == p.name);\n            if (pd) p.value = pd.value;\n        });\n        this.parameters = newPrms;\n    }\n\n    private getQueryList() {\n        let th = this.typeAheadFilter ? this.typeAheadFilter.toLowerCase() : '';\n        this.queryList = this._valueService.getSelectableItems(this.context.property, this.context.instance)\n            .pipe( map(qs => qs.filter(q => th ? q.name.toLowerCase().indexOf(th) != -1 : true)));\n    }\n\n    private onBeforeClose(ok: boolean): boolean {\n        if (ok) {\n            let ps : any[];\n            if( this.gridMode){\n                ps = this.parameters.map<QueryGridParameter>(p => {\n                    let existingParameter: QueryGridParameter = this.context.instance.queryParameters ? this.context.instance.queryParameters.find(qp => qp.name == p.name) : null;\n                    let q = new QueryGridParameter();\n                    q.connectionType = existingParameter ? existingParameter.connectionType : DataContractConnectionType.StaticValue;\n                    q.name = p.name;\n                    q.key = existingParameter ? existingParameter.key : p.value;\n                    q['__tempValue'] = p.value; // the value for further request the column list\n\n                    return q;\n                });\n            }\n            else{\n                ps = this.parameters.map<QueryBoundGridParameter>(p => {\n                    let prms = val(this.context.instance, \"parameters\");\n                    let existingParameter: QueryBoundGridParameter = prms ? prms.find(qp => qp.name == p.name) : null;\n                    let q = new QueryBoundGridParameter();\n                    q.connectionType = existingParameter ? existingParameter.connectionType : DataContractConnectionType.StaticValue;\n                    q.name = p.name;\n                    q.key = existingParameter ? existingParameter.key : p.value;\n                    return q;\n                });\n                \n            }\n\n            val(this.context.instance, this.queryParametersField, ps);\n        }\n        // reflect parameters \n        return true;\n    }\n\n    private getPredefQueryParameters(qText: string): void {\n        this._portal.getQueryParameters(parseInt(this.queryType), qText)\n            .subscribe(p => {\n                this.parameters = p.map(px => new queryParameter(px.Text));\n            });\n    }\n}\n\nclass queryParameter {\n    constructor(public name: string, public value: string = '', public type: string = \"String\") { }\n\n}\n","<div class=\"csi-query-builder\">\r\n    <div class=\"adhoc-query-input\" *ngIf=\"!isPredefined; else predefQuery\">\r\n        <textarea class=\"csi-property-textarea long-text\" [value]=\"textValue\" #textcontrol (input)=\"changeText(textcontrol.value)\"></textarea>\r\n    </div>\r\n    <ng-template #predefQuery>\r\n        <div class=\"predef-query-input\">\r\n            <select class=\"queryType-selector\" [(ngModel)]=\"queryType\">\r\n                <option [value]=\"0\">System</option>\r\n                <option [value]=\"1\">User</option>\r\n            </select>\r\n            <div class=\"query-search\">\r\n                <input class=\"query-search-input\" [(ngModel)]=\"typeAheadFilter\">\r\n            </div>                    \r\n            <div class=\"queries\" #queryListElement>\r\n                <div class=\"query-item\" [id]=\"'q_'+q.name\" [class.selected]=\"q.name===textValue\" *ngFor=\"let q of queryList | async\" (click)=\"selectQuery(q)\">{{q.name}}</div>\r\n            </div>            \r\n        </div>\r\n    </ng-template>\r\n    <div class=\"parameter-table\">\r\n        <div class=\"column-header\">\r\n            <div class=\"col-name\">{{'Name' | label: 'PS_NAMELBL'}}</div>\r\n            <div class=\"col-type\">{{'Type' | label: 'PS_TYPE'}}</div>\r\n            <div class=\"col-value\">{{'Value' | label: 'PS_VALUE'}}</div>\r\n        </div>\r\n        <div class=\"parameter-rows-section\">\r\n            <div class=\"parameter-rows\">\r\n                <div class=\"parameter-row\" *ngFor=\"let p of parameters\">\r\n                    <div class=\"col-name parameter\">{{p.name}}</div>\r\n                    <div class=\"col-type\">{{p.type}}</div>\r\n                    <div class=\"col-value\"><input class=\"col-value-input\" type=\"text\" [(ngModel)]=\"p.value\"></div>\r\n                </div>\r\n            </div>    \r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, Input, OnInit, OnDestroy, ElementRef, ViewChild, Renderer2, AfterViewChecked} from '@angular/core';\nimport { IPropertyMetadata } from '../../../common/objects/viewModel';\nimport { ISelectableItem, ValueUpdatedData, isIE } from '../../../common/objects/common';\nimport { Observable,Subject, Subscription } from 'rxjs';\nimport {map, switchAll} from \"rxjs/operators\";\n//import { FlexibleConnectedPositionStrategy } from '@angular/cdk/typings/overlay/position/flexible-connected-position-strategy';\n\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\nimport { MatOptionSelectionChange } from '@angular/material/core';\nimport _ from 'lodash';\nimport { PortalService } from '../../../common/services/portal.service';\nimport { FlexibleConnectedPositionStrategy } from '@angular/cdk/overlay/position/flexible-connected-position-strategy';\n\n@Component({\n    selector: 'csi-editor-selector',\n    templateUrl: 'selector.html',\n    styles: [`\n        .csi-editor-selector{\n            display: flex;\n        }\n        .input-container input.textInput {\n            flex: 1 1;\n            width: 20px;\n            border: none;\n            height: 25px;\n            cursor: pointer;\n            text-overflow: ellipsis;\n            padding-left: 4px;\n            margin-top: 1px;\n            outline: none;\n        }\n        .input-container input[type=file] {\n            display: none;\n        }\n        .input-container  {            \n            display: flex;           \n            flex: 1 1; \n            border: solid 1px #aaaaaa;\n        }\n        \n        .input-container input::-ms-clear {\n            display: none;\n        }\n\n        .selector-emptyOption  {\n            min-height: 17px;            \n        }\n\n        .selector-option {\n            text-overflow: inherit;\n            width: 100%;            \n            line-height: normal;\n            height: auto;\n            padding: 0 5px;\n        }\n\n        .option-text{\n            display: inline-block;\n            font-size: 12px;\n            font-family: \"Segoe UI\";\n            line-height: normal;\n        }\n\n        .popup-arrow {\n            flex: 0 0 10px;\n            background: no-repeat left url(Content/images/downarrow.png);        \n            cursor: pointer;\n        }\n\n        .image-icon {\n            height: 16px;\n            width: 16px;\n            align-self: center;\n        }\n\n        .upload-button{\n            width: 18px;\n            background-position: center center;\n            background-repeat: no-repeat;\n            background-size: contain;\n            background-color: #eeeeee;\n            cursor: pointer;\n        }\n        .upload-button.sound{\n            width: 18px;\n            background-size: 12px 12px;\n        }\n        .upload-button:hover{\n            border: solid 1px #aaaaaa;\n        }\n        `\n    ]\n})\n\nexport class SelectorEditorComponent implements OnInit,  OnDestroy, AfterViewChecked {\n    @Input(\"property\") __property: any;\n    @Input() valueChanged: Subject<ValueUpdatedData>;\n    @Input() resized: Subject<boolean>;\n    @Input() items: Observable<ISelectableItem[]>;\n    @Input() value: number | string;\n\n    @ViewChild(MatAutocompleteTrigger) acTrigger: MatAutocompleteTrigger;\n    @ViewChild(\"uploadFileCtl\") uploadFileCtl : ElementRef;\n\n    get property(): IPropertyMetadata { return this.__property; }\n\n    displayedIcon: string;\n    textBoxClass: string;\n    nameFilter = \"\";\n    readOnly: boolean;\n\n    uploadedFile: any;  // File\n    uploadedFileName : string;\n    fileExtAccept : string;\n    showUploadBtn = false;\n    fileItemType  : string;\n\n    private canvas: HTMLCanvasElement;\n    private canvasContext: CanvasRenderingContext2D;\n    private oldTriggerFunctions: any;\n\n    private fileDataReader = new Subject<any>();\n    private fileDataReaderSubs : Subscription;\n    private uploadDirectory : string;\n    private uploadType : string;\n    \n    private uploadedFiles : ISelectableItem[]= [];\n    private optionPanelWidth: number = 0;\n    private acPatched = false;    \n\n    constructor(private _render: Renderer2, private _portalService: PortalService) {\n    }\n\n    ngOnInit() {\n        this.readOnly = this.property.readOnly;\n        if(this.property.editor && this.property.editor.provider){\n            let fp =  this.property.editor.provider;\n            if(fp == \"imageFiles\"){\n                this.uploadDirectory = \"Images\";\n                this.fileExtAccept = \".png\";\n                this.uploadType = \"image/png\";\n                this.fileItemType = \"image\";\n                this.showUploadBtn = true;\n            }\n            else if(fp == \"soundFiles\"){\n                this.uploadDirectory = \"Sounds\";\n                this.fileExtAccept = \".mp3\";\n                this.uploadType = \"audio/mpeg\";    \n                this.fileItemType = \"sound\";\n                this.showUploadBtn = true;\n            }\n        }\n\n        this.fileDataReaderSubs = this.fileDataReader.pipe(\n                map(b => this._portalService.uploadFile(this.uploadedFileName, this.uploadDirectory, b) ),\n                switchAll())\n            .subscribe(() => {                    \n            let newFile = <ISelectableItem>{ \n                name: this.uploadedFileName, \n                value: this.uploadedFileName, \n                type: this.fileItemType, \n                img: this.uploadDirectory + '/' + this.uploadedFileName,\n                level: 0 \n            };\n\n            this.uploadedFiles.push(newFile);\n            this.value = this.uploadedFileName;\n            this.valChanged(newFile);\n            \n            this.items = this.items.pipe(map(m=> {\n                // In case the uploaded images already contained in the list\n                this.uploadedFiles = this.uploadedFiles.filter(i=> m.findIndex(mx=> mx.name == i.name) == -1 );\n                return _.concat(m, this.uploadedFiles);\n            }));\n\n        });        \n    }\n\n    ngOnDestroy() {\n        if( this.fileDataReaderSubs)\n            this.fileDataReaderSubs.unsubscribe();\n\n        if(this.acPatched)\n            this.triggerUnPatch();\n    }\n\n    ngAfterViewChecked() {\n        if( !this.acPatched && this.acTrigger ){\n            this.triggerPatch();\n            this.acPatched = true;\n        }\n    }\n\n    filterTextChange(ev: Event){\n        this.nameFilter = (<HTMLInputElement>ev.target).value;\n    }\n\n    clickDownArrow(ev: MouseEvent) {\n        if (!this.readOnly && this.acTrigger.panelOpen!==true ) \n            this.acTrigger.openPanel();\n        else \n            this.acTrigger.closePanel();\n        ev.stopPropagation();\n    }\n\n    getMaxWidth(items: ISelectableItem[]): number {\n\n        if (!this.canvas) {\n            this.canvas = <HTMLCanvasElement>document.getElementById(\"selector-canvas\");\n            if (!this.canvas) {\n                this.canvas = this._render.createElement(\"canvas\");\n                this.canvas.id = \"selector-canvas\";\n            }\n            if (!this.canvasContext) {\n                this.canvasContext = this.canvas.getContext(\"2d\");\n                this.canvasContext.font = \"12px Segoe UI\";\n            }\n        }\n\n        let maxOpt = _.maxBy(items, op => this.displayVal(op).length);\n        if (maxOpt) {\n            let txt = this.displayVal(maxOpt);\n            let m = this.canvasContext.measureText(txt);\n            let w = m.width + 10 /*padding*/ + (maxOpt.level * 10) /*indentation*/ + (maxOpt.type==\"image\"?16:0);\n            // scrollbar in IE11 wider\n            if( isIE )\n                w += 22;\n            return w;\n        }\n\n        return 0;\n    }\n\n    selectOption(opt: MatOptionSelectionChange, item: ISelectableItem) {\n        if (opt.isUserInput) {\n            this.valChanged(item);\n        }\n    }\n\n    valChanged(item: ISelectableItem) {\n\n        if (item.disabled) {\n            // Do Nothing \n            return;\n        }\n        this.value = item.value;\n        this.displayedIcon = item.img;\n        if( this.fileItemType == \"sound\")\n            this.displayedIcon = \"Content/images/portalStudioIcons/sound.png\";\n\n        this.valueChanged.next(new ValueUpdatedData(this.property.name, item.value, item.fullType));\n    }\n\n    getDisplayedValue(items: ISelectableItem[]) : string {\n\n        let dv;\n        let v = this.value;\n        if (v === undefined || v === null || v === '' ){\n            if(items && items.length > 0){\n                // Default value - first in the list\n                dv = this.displayVal(items[0]);\n                this.displayedIcon = items[0].img;\n            }\n            else {\n                // Default value - blank\n                dv = \"\";\n                this.displayedIcon = null;    \n            }\n        }\n        else {\n            // value is not empty - resolve by items\n            let comp: (si: ISelectableItem) => boolean;\n\n            if ((v != null && v !== undefined) && typeof v == 'object' && Object.getPrototypeOf(v).hasOwnProperty(\"comparer\"))\n                comp = Object.getPrototypeOf(v).comparer;\n\n            let d = items.find(i => comp ? comp.call(v, i) : (i.value === v));\n            dv = d ? this.displayVal(d) : v;\n\n            this.displayedIcon = d && d.img;\n\n            if( this.fileItemType == \"sound\")\n                this.displayedIcon = \"Content/images/portalStudioIcons/sound.png\";\n\n            this.optionPanelWidth = this.getMaxWidth(items);\n        }   \n        \n        return dv;\n    }\n\n    displayVal(item: ISelectableItem) {\n        return item.name;\n    }\n\n    fileBtnClick() {\n        let fileElement = this.uploadFileCtl.nativeElement as HTMLInputElement;\n        if (fileElement) {\n            fileElement.focus();\n            fileElement.click();\n        }\n    }\n\n    fileChanged(e : Event) {\n        let fileName = \"\";\n        let fileElement = this.uploadFileCtl.nativeElement as HTMLInputElement;\n        if (fileElement) {\n            if (fileElement.files && fileElement.files.length > 0) {\n                let file : File = fileElement.files[0];\n                if (file.type == this.uploadType) {\n                    fileName = file.name;\n                    this.fileReaderObs(file);\n                }\n            }\n        }\n        this.uploadedFileName = fileName;\n    }\n\n    private fileReaderObs(file : File) {\n        let reader = new FileReader();\n        reader.onload = () => {            \n            // convert to byte array            \n            let res : Uint8Array = new Uint8Array((<any> reader).result);\n            let data : Uint8Array[] = [];\n            for( let i = 0; i<res.length; i++)\n                data.push(<any> res[i]);\n            this.fileDataReader.next(data);\n        }        \n        reader.readAsArrayBuffer(file);\n    }\n\n\n    // next 2 methods may not be compatible with other Material version !!!\n    private triggerPatch(): void {\n        \n        if (!this.acTrigger['_getHostWidth'] || !this.acTrigger['_getOverlayPosition']) {\n            console.warn('MdAutocompleteTrigger does not have _getHostWidth or _getOverlayPosition.');\n            console.error(\"Selector's option panel is not resized.\");\n            return;\n        }\n        this.oldTriggerFunctions = {};\n        this.oldTriggerFunctions._getHostWidth = this.acTrigger['_getHostWidth'];\n        this.acTrigger['_getHostWidth'] = () => {\n            let oldWidth = this.oldTriggerFunctions._getHostWidth.call(this.acTrigger);\n            return this.optionPanelWidth > oldWidth ? this.optionPanelWidth : oldWidth;\n        };\n\n        this.oldTriggerFunctions._getOverlayPosition = this.acTrigger['_getOverlayPosition'];\n        this.acTrigger['_getOverlayPosition'] = () => {\n            let ovrPos = <FlexibleConnectedPositionStrategy> this.oldTriggerFunctions._getOverlayPosition.call(this.acTrigger);\n            ovrPos\n                .withPositions([\n                    { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' },\n                    { originX: 'end', originY: 'top' , overlayX: 'end', overlayY: 'bottom' }\n                ])\n            return ovrPos;\n        };\n    }\n\n    private triggerUnPatch(): void {\n        if (this.oldTriggerFunctions) {\n            this.acTrigger['_getHostWidth'] = this.oldTriggerFunctions._getHostWidth;\n            this.acTrigger['_getOverlayPosition'] = this.oldTriggerFunctions._getOverlayPosition;\n            delete this.oldTriggerFunctions;\n        }\n    }\n\n}\n","<div class=\"csi-editor-selector\" *ngIf=\"items | async as sitems;else loading\">\r\n    <div class=\"input-container\">\r\n        <span *ngIf=\"showUploadBtn\" class=\"upload-button {{fileItemType}}\" (click)=\"fileBtnClick($event)\" \r\n                [style.background-image]=\"displayedIcon ? ('url(' + displayedIcon + ')') : ''\">\r\n        </span>\r\n        <input type=\"file\" *ngIf=\"showUploadBtn\" #uploadFileCtl (change)=\"fileChanged($event)\" [accept]=\"fileExtAccept\">\r\n        <input type=\"text\" class=\"textInput\" matInput (keyup)=\"filterTextChange($event)\" [readonly]=\"readOnly\" [matAutocomplete]=\"auto\" \r\n                [attr.spellcheck]=\"false\" [value]=\"getDisplayedValue(sitems)\" [attr.title]=\"getDisplayedValue(sitems)\" />\r\n        <div class=\"popup-arrow\" (click)=\"clickDownArrow($event)\"></div>\r\n    </div>\r\n    <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayVal\" id=\"mySelect\">\r\n        <mat-option *ngFor=\"let si of sitems | elementFilter:nameFilter\" [value]=\"si\" [attr.indent]=\"si.level\" class=\"selector-option\"\r\n                [disabled]=\"si.disabled\" [attr.title]=\"si.name\"\r\n                (onSelectionChange)=\"selectOption($event, si)\" [class.selector-emptyOption]=\"si.name==''\" >\r\n            <img *ngIf=\"si.type==='image'\" class=\"image-icon\" [src]=\"si.img\" /> \r\n            <span class=\"option-text\">{{si.name||''}}</span>\r\n        </mat-option>\r\n    </mat-autocomplete>\r\n</div>\r\n\r\n<ng-template #loading>\r\n</ng-template>\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { IPropertyMetadata } from '../../../common/objects/viewModel';\nimport { ISelectableItem, ValueUpdatedData } from '../../../common/objects/common';\nimport { Subject } from 'rxjs';\n\n@Component({\n    selector: 'csi-editor-switchbox',\n    template:\n    `<div class=\"switchbox\">\n        <select #switchbox class=\"csi-property-selector\" [value]=\"val\" (change)=\"valChanged(switchbox.value)\" [disabled]=\"property.readOnly\">\n            <option *ngFor=\"let option of selectableItems\" [value]=\"option.value\" [selected]=\"option.value==val\">{{option.name}}</option>\n        </select>\n    </div>`,\n    styles:[`    \n        .switchbox:{}\n        .csi-property-selector {\n            width: 100%;\n            height: 27px;\n            border: solid 1px #aaaaaa;\n            outline:none;\n            padding-left:4px;\n        }\n        select::-ms-expand{\n            color: #ffffff;\n            border: none;\n            width: 15px;\n            padding-right:5px;\n            background: no-repeat right url(Content/images/downarrow.png);        \n        }\n\n    `]\n})\n\nexport class SwitchBoxEditorComponent implements OnInit{\n    @Input(\"property\") __property: any;\n    @Input() valueChanged: Subject<ValueUpdatedData>;\n\n    get property(): IPropertyMetadata { return this.__property; }\n\n    constructor() { }\n\n    val: string;\n    selectableItems: ISelectableItem[] = [\n        <ISelectableItem>{ name: 'Not Set', value: 'notset', typeName: 'boolean' },\n        <ISelectableItem>{ name: 'True', value: 'true', typeName: 'boolean' },\n        <ISelectableItem>{ name: 'False', value: 'false', typeName: 'boolean' }\n    ];\n\n    ngOnInit() {\n\n        // Exclude NotSet if the property is not nullable\n        if (this.property.notNullable === true) {\n            this.selectableItems.splice(0, 1);\n        }\n\n        // Load value\n        let n = 'notset';\n        if (this.property.value === true || this.property.value === 'true')\n            n = 'true';\n        else if (this.property.value === false || this.property.value === 'false')\n            n = 'false';\n        else {// value = undefined \n            if (this.property.notNullable === true) {\n                this.property.value = false;\n                n = 'false';\n            }\n        }\n        // TODO: the selectable items should be taken from metadata to localize name ( True -> Wahr )\n        this.val = this.selectableItems.find(i => i.value == n).value.toString();\n    }\n\n    valChanged(s: string) {\n        let v: boolean;  \n\n        if (s !== undefined && s !== null && s !== '' && s !== 'notset') {\n            v = (s === 'true');\n        }\n        \n        this.val = s;\n        this.valueChanged.next(new ValueUpdatedData(this.property.name, v, typeof v));\n    }\n\n}\n\n","import { Component, Input,  OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\n\nimport { ModalPropertiesContext } from '../properties';\nimport { Subject, Subscription } from 'rxjs';\nimport {map, switchAll} from \"rxjs/operators\";\nimport { PortalService } from '../../../common/services/portal.service';\nimport * as _ from 'lodash';\nimport { val } from '../../../common/objects/common';\n\n\n@Component({\n    selector: 'csi-target-matrix-rows',\n    template: `\n        <div class='target-matrix-data'>\n            <div class=\"buttons\">\n                <button (click)=\"addRow()\">Add Row</button>\n                <input type=\"file\" #excelInputFile (change)=\"inputFileChanged($event)\" accept=\".xls,.xlsx\">\n                <button type=\"button\" class=\"inputFileButton\" (click)=\"inputFileBtnClick($event)\">Import from Excel</button>    \n            </div>\n            <div class=\"matrix-data-grid\">\n                <div class=\"data-rows-container\">\n                    <div class=\"headers\">\n                        <div class=\"column-caption\" *ngFor=\"let col of columns\">{{col.caption}}</div>\n                        <div class=\"column-caption\">{{'Target'}}</div>\n                    </div>\n                    <div class=\"data-rows\">\n                        <div class=\"row\" *ngFor=\"let row of rows; index as rowIndex; even as rowEven; last as rowLast\">\n                            <div class=\"cell\" *ngFor=\"let c of row.cells\" [class.row-even]=\"rowEven\" [class.row-last]=\"rowLast\">\n                                <input type=\"text\" class=\"input-value\" [(ngModel)]=\"c.value\">\n                            </div>\n                            <div class=\"cell\" [class.row-even]=\"rowEven\" [class.row-last]=\"rowLast\">\n                                <input type=\"text\" class=\"input-value\" [(ngModel)]=\"row.targetValue\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>`,\n    styles:[`\n        :host {\n            display: flex;\n            flex-direction: column;\n            flex: 1 1;\n        }\n        .target-matrix-data{\n            display: flex;\n            flex-direction: column;\n            flex: 1 1;\n        }\n        .target-matrix-data .buttons{\n            display: flex;\n            flex: 0 0 auto;\n        }\n\n        .target-matrix-data .buttons button{\n            padding: 2px 4px;\n        }\n        \n        .matrix-data-grid{\n            padding: 2px;\n            border: 1px solid #cccccc;\n            display: flex;\n            flex-direction: column;\n            flex: 1 1;\n        }\n\n        .matrix-data-grid .headers{\n            flex: 0 0 auto;\n            display: flex;\n            background-color: #dddddd;\n        }\n\n        .column-caption, .cell {\n            flex: 0 0 100px;\n            border-right: 1px solid #aaaaaa;\n            padding-left: 3px;\n            padding-right: 3px;\n        }\n\n        .cell .input-value{\n            width: 100%;\n            border-color: transparent;            \n            background-color: transparent;\n        }\n\n        .cell.row-even{\n            background-color: #eeeeee;\n        }\n\n        .cell.row-last{\n            border-bottom: 1px solid #aaaaaa;\n        }\n\n        .column-caption{\n            padding-top: 2px;\n            padding-bottom: 2px;\n            background-color: #dddddd;\n        }\n        \n        .data-rows-container{\n            display: flex;\n            flex-direction: column;\n            flex: 1 1;\n            overflow: auto;\n        }\n        .data-rows {\n            display: flex;\n            flex-direction: column;\n            flex: 1 1;\n        }\n        .data-rows .row {\n            display: flex;\n            flex: 0 0 auto;\n            margin: 0;\n        }\n        input[type=file]{\n            display: none;\n        }\n    `]\n\n})\n\nexport class TargetMatrixRowsComponent implements OnInit, OnDestroy {  \n\n    @Input() context: ModalPropertiesContext;\n\n    @ViewChild(\"excelInputFile\")  excelInputFileCtl;\n\n    excelFile: string;\n    excelDataReader = new Subject<any>();\n    columns : targetMatrixColumn[];\n    rows: targetMatrixRow[];\n    excelReaderSubs: Subscription;\n\n    constructor(private _portalService: PortalService) {\n    }  \n      \n    ngOnInit(): void {\n        this.context.title = this.context.property.displayedName || this.context.property.name;\n        this.context.beforeClose = (ok: boolean) => this.onBeforeClose(ok);\n        this.rows = this.context.value as targetMatrixRow[] || [];\n\n        if(this.context.instance)\n            this.columns = _.map(val(this.context.instance, 'columns'), c=> {\n                let cx = new targetMatrixColumn();\n                cx.caption = val(c, 'caption');\n                cx.name = val(c, 'name');\n                return cx;\n            });\n\n        this.excelReaderSubs = this.excelDataReader.pipe(\n                map(b => this._portalService.targetMatrixFromExcel(b)),\n                switchAll()\n            ).subscribe(tx=> {                    \n                this.rows = tx.rows;\n                this.columns = tx.columns;\n            });        \n    }\n\n    ngOnDestroy(){\n        if( this.excelReaderSubs )\n            this.excelReaderSubs.unsubscribe();\n    }\n\n    inputFileChanged(e : Event) {\n        let fileName = \"\";\n        let fileElement = (this.excelInputFileCtl as ElementRef).nativeElement as HTMLInputElement;\n        if (fileElement) {\n            if (fileElement.files && fileElement.files.length > 0) {\n                let file = fileElement.files[0];\n                if (file.type == \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\") {\n                    fileName = file.name;\n                    this.fileReaderObs(file);\n                }\n            }\n        }\n        this.excelFile = fileName;\n    }\n\n    addRow(){\n        let r =  new targetMatrixRow();\n        r.cells = this.columns.map(col=> new targetMatrixCell(col.name));\n\n        this.rows.push(r);\n    }\n\n    private fileReaderObs(file : File) {\n        let reader = new FileReader();\n        reader.onload = () => {\n            // convert to byte array\n            let res : Uint8Array = new Uint8Array((<any>reader).result);\n            let data : Uint8Array[] = [];\n            for( let i = 0; i<res.length; i++)\n                data.push(<any> res[i]);\n            this.excelDataReader.next(data);\n        }        \n        reader.readAsArrayBuffer(file);\n    }\n\n    private onBeforeClose(ok: boolean) : boolean {\n        if( ok ){\n            this.context.value = this.rows;\n            val(this.context.instance, 'columns', this.columns);\n            val(this.context.instance, 'importedFileName', this.excelFile);\n            return true;\n        }\n\n        return true;\n    }\n\n    inputFileBtnClick(e) {\n        let fileElement = (this.excelInputFileCtl as ElementRef).nativeElement as HTMLInputElement;\n        if (fileElement) {\n            fileElement.focus();\n            fileElement.click();\n        }\n    }\n\n}\n\nclass targetMatrixColumn{\n    name: string;\n    caption: string;\n    __type: string = \"TargetMatrixColumn\";\n}\n\nclass targetMatrixCell{\n    __type: string = \"TargetMatrixCell\";\n    name: string = \"\";\n    value: string = \"\";\n\n    constructor(n: string = \"\"){\n        this.name = n;\n    }\n\n}\nclass targetMatrixRow{\n    cells: targetMatrixCell[];\n    targetValue: string = \"\";   \n    __type : string = \"TragetMatrixRow\";\n}\n","import { Component, Input, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { ValueUpdatedData } from '../../../common/objects/common';\nimport { Subject } from 'rxjs';\nimport { IPropertyMetadata } from '../../../common/objects/viewModel';\n\nimport _ from 'lodash';\n\n@Component({\n    selector: 'csi-editor-text',\n    template: \n        `<div class=\"text\">\n            <div *ngIf=\"!!resized\" class=\"resize\" [ngClass]=\"expanded?'wide':''\" (click)=\"toggleInputWidth()\">\n                <i class=\"grow fa fa-step-backward\" aria-hidden=\"true\"></i>\n                <i class=\"shrink fa fa-step-forward\" aria-hidden=\"true\"></i>\n            </div>\n            <input *ngIf=\"inputType!='area'\" class=\"csi-property-text\" [attr.type]=\"inputType\" [class.modal-wiz]=\"modalWizard\"\n                    #textInputCtl\n                    (focusout)=\"toggleInputWidth(false)\" [readonly]=\"readOnly\" [value]=\"value\" \n                    (keyup)=\"changeText()\" (paste)=\"changeText()\" (cut)=\"changeText()\" (input)=\"changeText()\" />\n\n            <textarea *ngIf=\"inputType=='area'\" class=\"csi-property-text csi-property-textarea\" \n                    #textInputCtl\n                    [readonly]=\"readOnly\" [value]=\"value\" \n                    (keyup)=\"changeText()\" (paste)=\"changeText()\" (cut)=\"changeText()\" (input)=\"changeText()\">\n            </textarea>\n\n            <div *ngIf=\"modalWizard\" class=\"modal-wiz\">\n                <span class=\"modal-wiz\" (click)=\"openModal()\"> . . . </span>\n            </div>\n        </div>`,\n    styles:[`\n    .csi-property-textarea {\n        max-width: 100%;\n        width: 100%;\n        height: 223px;\n        border: solid 1px #aaaaaa;\n    }\n\n\n    .csi-property-text {\n        max-width: 100%;\n        width: 100%;\n        height: 27px;\n        border: solid 1px #aaaaaa;\n        padding-left: 7px;\n    } \n\n    .text {\n        margin-left: -10px;\n        display: flex;\n    }\n    .text input.modal-wiz {\n        border-right: none;\n    }\n    \n    .text input[type=\"date\"] {            \n        width: 127px;   // for some unknown reason date input is wider then regular text                \n    }\n    \n    .text div.modal-wiz {\n        border-bottom: solid 1px #aaaaaa;\n        border-right: solid 1px #aaaaaa;\n        border-top: solid 1px #aaaaaa;\n    }\n    \n    .text span.modal-wiz {\n        width: 25px;\n        display: inline-block;\n        cursor: pointer;\n        padding: 1px 1px 1px 2px;\n        vertical-align: bottom;\n    }\n    \n    .text.date-value{\n        margin-left: 0px;\n    }\n    \n    .resize {\n        width: 10px;\n        padding: 0;\n        min-width: 10px;\n        max-width: 10px;\n        align-self: center;\n        color: darkgrey;\n    }\n   .grow {\n        display: block;\n        color: white;\n    }\n\n    .shrink {\n        display: none;\n    }\n\n    .shrink:hover .grow {\n        color: darkgrey;\n    }\n\n    .wide .grow {\n        display: none;\n    }\n\n    .wide .shrink {\n        display: block;\n    }\n`]\n})\n\nexport class TextEditorComponent implements OnInit {\n    @Input() value: string;\n    @Input(\"property\") __property: any; \n    @Input() valueChanged: Subject<ValueUpdatedData>;\n    @Input() wizardDialog: Subject<any>;\n    @Input() resized: Subject<boolean>;\n\n    @ViewChild(\"textInputCtl\") textInputCtl : ElementRef;\n\n    get property(): IPropertyMetadata { return this.__property; }\n\n    expanded: boolean = false;\n    get modalWizard(): boolean {\n        if(this.property && this.property.editor ){\n            if(this.property.editor.provider)\n                return true;\n            if( this.property.editor.parameters && this.property.editor.parameters.length && this.property.editor.parameters[0] === \"longText\")\n                return true;            \n        }\n        return false;\n    }\n    inputType: string = 'text';\n    readOnly: boolean;\n    typename: string;\n\n    constructor() {         \n    }\n\n    ngOnInit() {\n\n        this.typename = this.property.originalTypeName;\n        this.readOnly = this.property.readOnly;\n\n        // Convert to localized\n        if (this.typename == \"DateTime\") {\n            if (this.value){            \n                this.value = new Date(Date.parse(this.value)).toLocaleString();\n            }\n            this.inputType = 'datetime'\n        }\n        else if (this.typename == \"Int32\" || this.typename == \"int\" || this.typename == \"px\") {\n            this.inputType = 'number';\n            if (this.value === undefined)\n                this.value = '';\n        }\n\n        if (this.property.editor.options && this.property.editor.options.find(o=> o == 'area') ) {\n            this.inputType = 'area';\n            if (this.value === undefined)\n                this.value = '';\n        }\n\n    }\n\n    valChanged(s: string) {\n\n        let convertedValue : any = s;\n        this.value = s;\n        // Convert string back to value\n        if (this.typename == \"DateTime\") {\n            // DateTime cannot be required because there is no case where user inputs date-time\n            if (s) {\n                this.value = new Date(s).toISOString();\n                convertedValue = new Date(s);\n            }\n        }\n        else if (this.typename == \"Int32\" || this.typename == \"int\" || this.typename == \"px\") {\n            let n = parseFloat(s);\n            if (!_.isNaN(n)) {\n                this.value = n.toString();\n                convertedValue = n;\n            }\n            else {\n                this.value = '';\n                convertedValue = null;\n            }\n        }\n\n        this.valueChanged.next(new ValueUpdatedData(this.property.name, convertedValue, this.typename));\n    }\n\n    toggleInputWidth(exp?: boolean, s?: string) {\n\n        if (exp === undefined)\n            this.expanded = !this.expanded;\n        else\n            this.expanded = exp;\n\n        // Set focus to the text input . It's required to correctly fire blur event\n        if (this.expanded) {\n            this.setFocus();\n        }\n\n        if( this.resized )\n            this.resized.next(this.expanded);\n    }\n\n    changeText() {\n        if (this.readOnly)\n            return;\n\n        if( this.textInputCtl ){\n            this.valChanged(this.textInputCtl.nativeElement.value);\n        }\n    }\n\n    openModal() {\n        if(!this.readOnly)\n            this.wizardDialog.next(this.modalWizard);\n    }\n\n    private setFocus(){\n        if( this.textInputCtl ){\n            this.textInputCtl.nativeElement.focus();\n        }\n    }\n}\n\n","import { Component, Input,  OnInit } from '@angular/core';\n\nimport { ModalPropertiesContext } from '../properties';\nimport {Observable, of} from \"rxjs\";\nimport {map} from \"rxjs/operators\";\n\nimport { ValueProviderService } from '../../../common/services/dataValue.service';\nimport { ISelectableItem } from '../../../common/objects/common';\n\n@Component({\n    selector: 'csi-webi-reports',\n    template: `\n        <div class='webi-reports'>\n            <div class=\"search-report\">\n                <input type=\"search\" [(ngModel)]=\"searchName\" class=\"search-string\">\n            </div>\n            <div class=\"report-list\">\n                <div *ngFor=\"let r of reports | async | elementFilter:searchName; index as ind\" class=\"report-item\" \n                        [class.selected-item]=\"ind==(selectedItemIndex|async)\" (click)=\"onSelect(ind, r)\">\n                    {{r.name}}\n                </div>\n            </div>\n        </div>`,\n    styles:[`\n        :host {\n            display: flex;\n            flex-direction: column;\n            flex: 1 1;\n        }\n        .webi-reports{\n            display: flex;\n            flex-direction: column;\n            flex: 1 1;\n            padding: 3px;\n        }\n        .search-report {\n            display: flex;\n            flex: 0 0 auto;\n        }\n        .search-string {\n            flex: 1 1;\n        }\n        .report-list {\n            flex: 1 1;\n            overflow: auto;\n        }\n        .report-item {\n            cursor: pointer;\n        }\n        .selected-item{\n            background-color: #cccccc;\n        }\n    `]\n\n})\n\nexport class WebiReportsComponent implements OnInit {  \n\n    @Input() context: ModalPropertiesContext;\n\n    reports: Observable<ISelectableItem[]>;\n    selectedItemIndex: Observable<number>;\n    selectedItemName: string;\n    searchName: string;\n    \n    constructor(private _valueService: ValueProviderService) {\n    }  \n      \n    ngOnInit(): void {\n        this.context.title = \"Webi Report Name\";\n        this.reports = this._valueService.intelligenceReports(this.context.property, this.context.instance);\n\n        this.context.beforeClose = (ok: boolean) => this.onBeforeClose(ok);\n        this.selectedItemName = this.context.value;\n        this.selectedItemIndex = this.reports.pipe(map(rl=> rl.findIndex(rs=> rs.name == this.selectedItemName)));\n    }\n\n    private onBeforeClose(ok: boolean) : boolean {\n        if( ok ){\n            this.context.value = this.selectedItemName;\n            return true;\n        }\n\n        return true;\n    }\n\n    onSelect(i: number, r: ISelectableItem){\n        this.selectedItemIndex = of(i);\n        this.selectedItemName = r.name;\n    }\n\n}\n","import { Directive, OnDestroy, Input, AfterViewInit, HostListener } from \"@angular/core\";\r\nimport { MatMenuTrigger } from \"@angular/material/menu\";\r\nimport { ContextMenuItem } from \"../common/objects/common\";\r\n\r\n@Directive({\r\n    selector: '[context-popup-menu]'\r\n})\r\nexport class ContextMenuPopupDirective implements OnDestroy, AfterViewInit {\r\n    @Input('context-popup-menu') info: ContextMenuInfo;\r\n\r\n    @HostListener('contextmenu',['$event']) onContextMenu(e: MouseEvent) {\r\n        if( this.info.disabled === true || !this.info.trigger ){\r\n            return;\r\n        }\r\n\r\n        let trigger = this.info.trigger;\r\n        this.info.buildMenu.apply(this.info.execContext, [this.info.dataType, this.info.data, this.info.key]);\r\n        \r\n        event.preventDefault();\r\n        // @ts-ignore\r\n        const triggerElement: HTMLElement = trigger._element.nativeElement;\r\n        triggerElement.style.setProperty('left', `${e.clientX}px`);\r\n        triggerElement.style.setProperty('position', 'fixed');\r\n        triggerElement.style.setProperty('top', `${e.clientY}px`);\r\n        triggerElement.style.setProperty('visibility', 'hidden');\r\n        trigger.menuData = { data: this.info.data };\r\n        trigger.menu.focusFirstItem('mouse');\r\n        trigger.openMenu();        \r\n    }\r\n    \r\n    constructor(){        \r\n    }\r\n\r\n    ngAfterViewInit(){\r\n    }\r\n\r\n    ngOnDestroy(){\r\n    }\r\n}\r\n\r\n\r\nexport class ContextMenuInfo{\r\n    dataType: string;\r\n    data?: string;\r\n    trigger: MatMenuTrigger;    \r\n    buildMenu: (dataType: string, data:string, key?:string) => ContextMenuItem[];\r\n    disabled: boolean;\r\n    execContext: any;\r\n    key?:string\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n    selector: 'csi-confirm-dialog',\r\n    templateUrl: 'confirm.dialog.component.html'\r\n})\r\n\r\nexport class ConfirmDialogComponent {\r\n    context: ConfirmDialogContext;\r\n    actions: DialogAction[];\r\n\r\n    constructor(private _dialog: MatDialogRef<ConfirmDialogComponent> ) {}\r\n\r\n    initContext(context: ConfirmDialogContext)\r\n    {\r\n        this.context = context;\r\n        this.actions = this.context.actions;\r\n    }\r\n\r\n    execute(action: string): void {        \r\n        this._dialog.close(action);\r\n    }\r\n}\r\nexport class DialogAction {\r\n    action: string;\r\n    name: string;   \r\n    isPrimary: boolean = false;\r\n}\r\nexport class ConfirmDialogContext {\r\n    message: string;\r\n    title: string;        \r\n    actions: DialogAction[];\r\n}\r\n\r\n\r\n","<div [attr.title]=\"''\" class=\"csi-modal\">\r\n    <header>\r\n        <span class=\"title\">{{context.title}}</span>\r\n        <span class=\"close-icon\" (click)=\"execute('cancel')\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></span>\r\n    </header>\r\n\r\n    <main>\r\n        <div class=\"csi-modal-content\">{{context.message}}</div>\r\n    </main>\r\n    <footer>\r\n        <div class=\"btns\">\r\n            <span *ngFor='let action of actions' [ngClass]=\"{'primary-btn':action.isPrimary, 'default-btn': !action.isPrimary}\" (click)='execute(action.action)'>{{action.name}}</span>\r\n        </div>\r\n    </footer>\r\n</div>","import { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\nimport { DialogAction } from './confirm.dialog.component';\r\n\r\n@Component({\r\n    selector: 'csi-input-dialog',\r\n    templateUrl: 'input.dialog.component.html'\r\n})\r\n\r\nexport class InputDialogComponent {\r\n    alertMessage: string;\r\n    context: InputDialogContext;\r\n\r\n    constructor(private _dialogRef: MatDialogRef<InputDialogComponent>) { }\r\n\r\n    initContext(context: InputDialogContext) {\r\n        this.context = context;\r\n    }\r\n\r\n    execute(action: string): void {\r\n        if (action == 'ok') // assume that ok is submit\r\n        {\r\n            for (let i = 0; i < this.context.inputs.length; i++) {\r\n                let input = this.context.inputs[i];\r\n                if (input.value.length == 0) {\r\n                    this.alertMessage = `The '${input.name}' field is required`;\r\n                    return;\r\n                }\r\n            }\r\n            this._dialogRef.close(this.context.inputs);\r\n        }\r\n        else\r\n            this._dialogRef.close(action);\r\n    }\r\n}\r\n\r\nexport class DialogInput {\r\n    name: string;\r\n    type: string;\r\n    text: string;\r\n    value: string;\r\n}\r\n\r\nexport class InputDialogContext {\r\n    message: string;\r\n    title: string;\r\n    actions: DialogAction[];\r\n    inputs: DialogInput[];\r\n}\r\n","<div class=\"csi-modal\" [attr.title]=\"''\">\r\n    <header>\r\n        <span class=\"title\">{{context.title}}</span>\r\n        <span class=\"close-icon\" (click)=\"execute('cancel')\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></span>\r\n    </header>\r\n    <main>\r\n        <div class=\"csi-modal-content\">\r\n            <div *ngIf='context.message'>{{context.message}}</div>\r\n            <div *ngFor='let input of context.inputs' class=\"csi-modal-input\">\r\n                <span class=\"csi-modal-info\">\r\n                <input *ngIf=\"input.type=='checkbox'\" [id]=\"input.name\" type='checkbox' [checked]=\"input.value\" (change)=\"input.value=!input.value\" />\r\n                <input *ngIf=\"input.type=='text'\" [id]=\"input.name\" type='text' [(ngModel)]=\"input.value\" />\r\n                {{input.text}}</span>\r\n            </div>\r\n        </div>\r\n    </main>\r\n    \r\n    <footer>\r\n        <div *ngFor='let action of context.actions; let i=index' class=\"btns\">\r\n            <span type=\"button\" [ngClass]=\"{'primary-btn':action.isPrimary, 'default-btn': !action.isPrimary}\" [attr.type]=\"button\"\r\n                (click)='execute(action.action)'>{{action.name}}</span>\r\n        </div>\r\n    </footer>\r\n</div>\r\n<div *ngIf='alertMessage' class=\"alert alert-danger\" role=\"alert\">{{alertMessage}}</div>","import { Directive, ElementRef, AfterViewInit, OnDestroy, Renderer2, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[csi-closable]'\r\n})\r\nexport class ClosableDirective implements AfterViewInit, OnDestroy {\r\n\r\n    @Input('csi-closable') parentElement : any;\r\n    @Output('onClose') onClose = new EventEmitter<any>();\r\n\r\n    spanBtn : any;\r\n    foreColor : string = \"#1E1E1E\";\r\n\r\n    constructor(private _element: ElementRef,  private _rd: Renderer2) {\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n\r\n        const col = window.getComputedStyle(this._element.nativeElement, null).getPropertyValue(\"color\");\r\n        if( col )\r\n            this.foreColor = col;\r\n\r\n        this.spanBtn = this._rd.createElement(\"span\");\r\n        this._rd.addClass(this.spanBtn, \"close-tab-icon\");\r\n        this._rd.listen(this.spanBtn, \"click\", (ev) => this.onClick(ev));\r\n        this._rd.appendChild( this.spanBtn, this.createSvg(this._rd));\r\n        this._rd.appendChild(this._element.nativeElement, this.spanBtn);\r\n    }   \r\n\r\n    ngOnDestroy(){\r\n        this._rd.removeChild(this._element.nativeElement, this.spanBtn);\r\n    }\r\n\r\n    onClick(ev: Event){\r\n        this.onClose.emit(this.parentElement);\r\n    }\r\n\r\n    private createSvg(r: Renderer2){\r\n        let s = r.createElement(\"svg\", \"svg\");\r\n        r.setAttribute(s, \"width\", \"16\");\r\n        r.setAttribute(s, \"height\", \"16\");\r\n        r.appendChild(s, this.createSvgLine(r, true));\r\n        r.appendChild(s, this.createSvgLine(r, false));\r\n        let circle = this.createSvgCircle(r);\r\n        r.appendChild(s, circle);\r\n        r.listen(s, \"mouseover\", ()=>{ circle.style.display=\"block\"; });\r\n        r.listen(s, \"mouseout\", ()=>{ circle.style.display=\"none\"; });\r\n        return s;\r\n    }\r\n\r\n    private createSvgLine(r: Renderer2, slash = false){\r\n        const c1 = \"4\";\r\n        const c2 = \"12\";\r\n        let l = r.createElement(\"line\", \"svg\");\r\n        r.setAttribute(l, \"x1\", c1);\r\n        r.setAttribute(l, \"y2\", slash ? c1 : c2);\r\n        r.setAttribute(l, \"x2\", c2);\r\n        r.setAttribute(l, \"y1\", slash ? c2 : c1);\r\n        r.setAttribute(l, \"stroke\", this.foreColor);\r\n        r.setAttribute(l, \"stroke-width\", \"1\");\r\n        return l;\r\n    }\r\n\r\n    private createSvgCircle(r: Renderer2) : SVGCircleElement {\r\n        // <circle cx=\"8\" cy=\"8\" r=\"8\" style=\"fill:none; stroke-width:1px; stroke:white;display:none;\" />\r\n        const rad = \"8\";\r\n\r\n        let c = r.createElement(\"circle\", \"svg\");\r\n        r.setAttribute(c, \"cx\", rad);\r\n        r.setAttribute(c, \"cy\", rad);\r\n        r.setAttribute(c, \"r\", rad);\r\n        r.setAttribute(c, \"style\", \"fill:none; display:none; stroke-width:1px; stroke:\"+this.foreColor +\";\");\r\n        return c;\r\n    }\r\n    \r\n} \r\n","import { Directive, ElementRef, AfterViewInit, Input, OnDestroy, Renderer2 } from '@angular/core';\nimport { MatDialogRef, DialogPosition } from '@angular/material/dialog';\nimport {DragService } from '../drag.service';\nimport {DragInfo, dragModes} from '../drag';\nimport { uuid } from '../../common/objects/common';\n\nexport class MouseDiff{\n    x: number;\n    y: number;\n}\n\n@Directive({\n        selector: '[csi-dialog-decor]'        \n})\nexport class DialogDecorDirective implements AfterViewInit, OnDestroy {\n\n    @Input() dialog: MatDialogRef<any>;\n    @Input() dialogHeight?: number;\n    @Input() dialogWidth?: number;\n\n    private dragHandle: HTMLElement;\n    private resizeHandle: HTMLElement;\n    private leftPanel : HTMLDivElement;\n\n    private modalWindow: HTMLElement;\n    private resetPosizionOnResizing = true;\n\n    private minSize = {width: undefined, height: undefined};\n    private id = uuid.id();\n\n    constructor(private _element: ElementRef, private _rd: Renderer2, private _drag: DragService) {\n    }\n\n    ngAfterViewInit(): void {\n        this.modalWindow = this._element.nativeElement.parentElement.parentElement;\n        // Header is a handle\n        this.dragHandle = this._element.nativeElement.children[0];\n        this.modalWindow.style.position = 'relative';\n        this.dragHandle.classList.add('cursor-draggable');\n\n        const moveId = \"move-dialog\" + \"@\" + this.id;\n        this._drag.add(dragModes.moveWindow, moveId, \n                (m:DragInfo) => this.moveIt(m),  null, this.modalWindow, null);\n\n        this._element.nativeElement.setAttribute(\"dragDropId\", moveId);\n        this._element.nativeElement.classList.add(\"drag-element\");\n\n        this.minSize = {\n            width: this.modalWindow.offsetWidth,\n            height: this.modalWindow.offsetHeight\n        };\n        if (this.dialogHeight !== undefined)\n            this.minSize.height = this.dialogHeight;\n        if (this.dialogWidth !== undefined)\n            this.minSize.width = this.dialogWidth;\n\n        this.dialog.updateSize( \n            this.minSize.width + 'px', \n            this.minSize.height + 'px');\n        \n        this.createResizeHandle();\n\n        const dragId = \"resize-dialog\" + \"@\" + this.id;\n        this._drag.add(dragModes.resizeWindow, dragId, \n                (m:DragInfo) => this.resizeIt(m),  null, this.modalWindow, null);\n\n        this.resizeHandle.setAttribute(\"dragDropId\", dragId);\n        this.resizeHandle.classList.add(\"drag-element\");\n    }   \n\n    ngOnDestroy(){\n        this.dragHandle.classList.remove(\"cursor-draggable\");\n        this._drag.remove(dragModes.moveWindow, this.dragHandle.id);\n        this._drag.remove(dragModes.resizeWindow, this.resizeHandle.id);\n    }\n\n    private moveIt(d?: DragInfo){\n        if(d && d.endOfDrag )\n            return;\n        let x = d? d.diffx : 0;\n        let y = d? d.diffy : 0;\n        let newPos : DialogPosition = {            \n            top: (this.modalWindow.offsetTop + y)+'px', \n            left: (this.modalWindow.offsetLeft + x)+'px'\n        };\n\n        this.dialog.updatePosition(newPos);\n    }\n\n    private resizeIt(d: DragInfo){\n\n        if( d.endOfDrag )\n            return;\n\n        if(this.resetPosizionOnResizing){\n            this.moveIt();\n            this.resetPosizionOnResizing = false;\n        }\n\n        let newSize = {\n            width : this.modalWindow.offsetWidth + d.diffx, \n            height: this.modalWindow.offsetHeight + d.diffy\n        };        \n\n        if(newSize.width < this.minSize.width)\n            newSize.width = this.minSize.width;\n        if(newSize.height < this.minSize.height)\n            newSize.height = this.minSize.height;\n\n        this.dialog.updateSize( \n            newSize.width + 'px', \n            newSize.height + 'px');\n    }\n\n     resizePanel(d: DragInfo){\n        let currentWidth = parseFloat(this.leftPanel.style.flexBasis);\n        if( currentWidth == 0 || isNaN(currentWidth) )\n            currentWidth = this.leftPanel.offsetWidth;\n\n        this.leftPanel.style.flexBasis = (currentWidth + d.x).toString() + 'px';       \n    }\n    \n    private createResizeHandle(){\n        this.resizeHandle = this._rd.createElement(\"div\");\n        this._rd.addClass(this.resizeHandle, \"resize-handle\");\n        this._rd.appendChild(this.modalWindow, this.resizeHandle);\n    }\n} \n","import {Directive, ElementRef,  Input, AfterViewInit, Renderer2, OnDestroy } from '@angular/core';\nimport { DragService } from '../drag.service';\nimport {DragInfo, dragModes} from '../drag';\n\nexport class DragDataInfo {\n    disabled: boolean = false;\n    type: string;\n    id: string;\n    model: any;    \n    handleContainer?: HTMLElement;\n    hndClass? : string;\n    dragAction?: (d: DragInfo) => void;\n}\n\n@Directive({\n    selector: '[csi-draggable]'\n})\nexport class DraggableDirective implements AfterViewInit, OnDestroy {\n    @Input('csi-draggable') dragData: DragDataInfo;\n\n    hnd: HTMLElement;\n\n    constructor(private _el: ElementRef, private _drag: DragService, private _render: Renderer2) {       \n    }\n\n    ngAfterViewInit(){\n        if( this.dragData.disabled === undefined)\n            this.dragData.disabled = false;\n\n        if( !this.dragData.disabled ){\n            if(!this.dragData.handleContainer)\n                this.dragData.handleContainer = document.body;                            \n            let mode = dragModes.dragElement;\n            if(this.dragData.type == 'collection-item')\n                mode = dragModes.reorder;\n            else if(this.dragData.type == 'panel-splitter')\n                mode = dragModes.resizePanel;\n            \n            const dragId = this.dragData.type + \"@\" + this.dragData.id;\n            if(typeof this.dragData.dragAction == \"function\"){\n                this._drag.add(mode, dragId, (d:DragInfo) => this.dragData.dragAction(d),\n                    this.dragData.type, this.dragData.model, this.dragData.hndClass);\n            }\n            else{\n                this._drag.add(mode, dragId, (d:DragInfo) => this.dragging(d),\n                    this.dragData.type, this.dragData.model, this.dragData.hndClass);\n            }\n\n            this._el.nativeElement.setAttribute(\"dragDropId\", dragId);\n            this._el.nativeElement.classList.add(\"drag-element\");\n        }\n    }\n\n    ngOnDestroy(){\n        if( !this.dragData.disabled ){\n            this._drag.remove(this.dragData.type == 'collection-item' ? dragModes.reorder :  dragModes.dragElement, \"\");\n            this.removeHandle();\n        }\n    }\n\n    private dragging(d: DragInfo) : void{\n        if( !d.endOfDrag ){\n            if(! this.hnd ){\n                try{\n                    this.hnd = this.createHandle();\n                }\n                catch(e){\n                    console.warn(\"drag handle is not created\", d);\n                    this.hnd = null;\n                }\n            }\n            if( !this.hnd )\n                return;\n\n            let contPos = this.dragData.handleContainer.getBoundingClientRect();\n            let offset = {y: -25, x: 5};\n            this._render.setStyle(this.hnd, 'top', (d.y + offset.y - contPos.top) + 'px');\n            this._render.setStyle(this.hnd, 'left', (d.x + offset.x - contPos.left ) + 'px');\n            if(d.ctrlPressed)\n                this._render.addClass(this.hnd, \"copy\");\n            else\n                this._render.removeClass(this.hnd, \"copy\");\n        }\n        else{\n            // drops\n            this.removeHandle();\n        }\n    }\n\n    private createHandle() : any{\n\n        let root = this._render.createElement(\"div\");\n        this._render.addClass(root, \"dragging-handle\");\n\n        let imgs = this._el.nativeElement.getElementsByTagName('IMG');\n        if( imgs.length ){\n            let src = imgs[0].src;\n            let img = this._render.createElement('img');            \n            this._render.setProperty(img, 'src', src);\n            this._render.addClass(img, 'toolbox-image');\n            this._render.appendChild(root, img);                    \n        }\n\n        let txtImgs = this._el.nativeElement.getElementsByTagName('I');\n        if( txtImgs.length){\n            let t = (<HTMLElement> txtImgs[0]);\n            let txtImg = this._render.createElement('I');\n            t.className.split(' ').forEach(c=>this._render.addClass(txtImg, c));            \n            this._render.setAttribute(txtImg, \"aria-hidden\", \"true\");\n            this._render.appendChild(root, txtImg);\n        }\n        \n        let txt = (this.dragData.model && this.dragData.model.name) || this.dragData.id || this.dragData.type;\n        this._render.appendChild(root, this._render.createText(txt));\n        this._render.appendChild(this.dragData.handleContainer, root);\n\n        return root;\n    }       \n\n    private removeHandle(){\n        if(this.hnd){\n            this._render.removeChild(this.dragData.handleContainer, this.hnd);\n            delete this.hnd;\n        }\n    }    \n\n} \n","import { Directive, Input, AfterViewInit, ElementRef, OnDestroy } from '@angular/core';\nimport { DragService } from '../drag.service';\nimport { DragInfo } from '../drag';\n\nexport class DropDataInfo {\n    disabled?: boolean = false;\n    types: string;\n    drop?: (d: DragInfo, dropInf: DropDataInfo) => void;\n    over?: (d: DragInfo, dropInf: DropDataInfo) => void;\n    id: string;\n    model?: any;\n}\n\n@Directive({\n    selector: '[csi-droppable]'\n})\nexport class DroppableDirective implements AfterViewInit, OnDestroy {\n    @Input('csi-droppable') info: DropDataInfo;\n\n    constructor(private _el: ElementRef, private _drag: DragService) {\n    }\n\n    ngAfterViewInit() {        \n        if (!this.info.disabled){\n            this._drag.addZone(this.info.types.split(\",\"), this.info.id, (m: DragInfo) => this.action(m));\n            this._el.nativeElement.setAttribute(\"dragDropId\", \"drop-\" + this.info.id);\n            this._el.nativeElement.classList.add(\"drop-zone\");\n        }\n    }\n\n    ngOnDestroy() {\n        if (!this.info.disabled)\n            this._drag.removeZone(this.info.id);\n    }\n\n    private action(d: DragInfo) {\n        if (d.endOfDrag) {\n            if (this.info.drop && this.info.disabled !== true)\n                this.info.drop(d, this.info);\n        }\n        else {\n            if (this.info.over)\n                this.info.over(d, this.info);\n        }\n    }\n\n} \n","import {Injectable, Inject } from '@angular/core';\nimport { DragInfo, dragModes} from \"./drag\";\nimport { fromEvent } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\nimport { StudioStateService } from 'common/services/studioStateService';\nimport { DesignModes } from 'common/objects/common';\n\nabstract class ItemBase {\n  constructor(public id: string, public action: (d: DragInfo) => void, public model : any) {      \n  }\n\n  public isInside(m: HTMLElement, zoneStyle?:string) : boolean{\n    \n    let parent : HTMLElement = m;\n    let count = 10;\n    let found = false;\n    const zId = \"drop-\" + this.id;\n\n    while(count-- > 0 && parent && !found){\n        if( zoneStyle )\n            found = parent.classList.contains(zoneStyle);\n        else\n            found = parent.getAttribute(\"dragDropId\") === zId;\n        if( found ){\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return found;\n  }\n}\n\nexport class DragItem extends ItemBase {\n  constructor(public mode : dragModes, public id: string, public action: (d: DragInfo) => void, public dragType: string, public model: any, public hndClass : string){\n    super(id, action, model);\n  }\n}\n\nclass DropZone extends ItemBase {\n\n  constructor(public dragTypes : string[], public id: string, public action: (d: DragInfo) => void, model:any){\n    super(id, action, model);\n  }\n\n  public accept(it: DragItem){\n      // drag type of dragging item should be in the dragType list of the drop zone\n      return it && (it.mode == dragModes.dragElement || it.mode == dragModes.reorder) && it.dragType && this.dragTypes.indexOf(it.dragType)!=-1;\n  }\n\n}\n\n@Injectable()\nexport class DragService {\n    startInputName: boolean = false;\n\n    private _last: DragInfo;\n\n    private _draggables : DragItem[] = [];\n\n    // index of element in _draggables\n    private _draggableWindows : number[] = [];\n    private _draggableResizables : number[] = [];\n\n    private _activeMoved : number = -1;\n    private _activeResizable : number = -1;\n    private _dragging = false;\n    private _mouseDown = false;\n\n    private _draggingItem : DragItem;  \n    private _zones: DropZone[] = [];\n    private _lastZone: DropZone;\n    private _lastZoneElement : HTMLElement;\n    private _startDragTime: number;\n   \n    constructor(@Inject(DOCUMENT) private _document:any, private _studioStateService: StudioStateService){\n        this.initMouseHandlers();\n    }\n\n    // Adds drag item\n    public add(mode: dragModes, id: string , action: (d: DragInfo) => void, dragType: string, model: any, hndClass : string){\n        const dragItem = new DragItem(mode, id, action, dragType, model, hndClass);\n        let i = this._draggables.push(dragItem) - 1;\n\n        if( mode == dragModes.moveWindow){\n            this._draggableWindows.push(i);\n            this._activeMoved = i;\n        }\n        else if( mode == dragModes.resizeWindow){\n            this._draggableResizables.push(i);\n            this._activeResizable = i;\n        }\n    }\n\n    public remove(mode: dragModes, id: string){\n        let removedIndex : number;\n\n        if( mode == dragModes.moveWindow){\n            removedIndex = this._draggableWindows.pop();\n            // active modal handler is the last item in _draggableWindows\n            this._activeMoved = this._draggableWindows.length > 0 ? this._draggableWindows[this._draggableWindows.length-1] : -1;\n        }\n        else if( mode == dragModes.resizeWindow){\n            removedIndex = this._draggableResizables.pop();\n            // active modal handler is the last item in _draggableWindows\n            this._activeResizable = this._draggableResizables.length > 0 ? this._draggableResizables[this._draggableResizables.length-1] : -1;\n        }\n        else if( mode == dragModes.dragElement || mode == dragModes.resizePanel){\n            removedIndex = this._draggables.findIndex(d=> d.id == id);\n        }\n\n        if( removedIndex !== undefined && removedIndex != -1 )\n            this._draggables.splice(removedIndex, 1);\n    }\n\n    public addZone(acceptedTypes: string[], elementId: string, action: (d: DragInfo) => void){\n        if( this._zones.filter(z => z.id == elementId).length == 0)\n            this._zones.push (new DropZone(acceptedTypes, elementId, action, null) );\n    }\n\n    public removeZone(id: any){\n        // let i = this._zones.findIndex(z=> z.element == el);\n        // if( i != -1){\n        //     this._zones.splice(i, 1);\n        // }\n    }\n\n    public getDragDropId(m: HTMLElement, className:string) : string {\n        \n        let parent : HTMLElement = m;\n        let count = 10;\n        let found = false;\n\n        while(count-- > 0 && parent && !found){\n            found = parent.classList.contains(className);\n            if( found )\n                return parent.getAttribute(\"dragDropId\");\n            parent = parent.parentElement;\n        }\n        return null;\n    }\n\n\n    public clear(dragTypes: string[], dropTypes: string[] ){\n        if( dragTypes){\n            this._draggables = this._draggables.filter(d=> dragTypes.indexOf(d.dragType)==-1);\n        }\n        if( dropTypes ){\n            this._zones = this._zones.filter(z=> z.dragTypes.filter(d=> dropTypes.indexOf(d)!=-1).length==0);\n        }\n    }\n\n\n    private getDraggabledItem (el:HTMLElement) : DragItem {\n      \n        let i : number = -1;\n        let id = this.getDragDropId(el, \"drag-element\");\n        if( id )\n            i = this._draggables.findIndex( (d) => d.id == id );\n\n        let found = false;\n\n        if(i!=-1){\n            switch(this._draggables[i].mode){\n                case dragModes.moveWindow:\n                    if( el.classList.contains(\"cursor-draggable\") || el.parentElement.classList.contains(\"cursor-draggable\") ){\n                        found = this._activeMoved == i;\n                    }\n                    break;\n                case dragModes.resizeWindow:\n                    found = this._activeResizable == i;\n                    break;\n                case dragModes.dragElement:\n                    if(!this._draggables[i].hndClass || (this._draggables[i].hndClass && el.classList.contains(this._draggables[i].hndClass)))\n                        found = true;\n                    else\n                        found = false;\n                    break;\n                case dragModes.resizePanel:\n                    found = true;        \n                    break;\n                case dragModes.reorder:\n                    found = true;\n                    break;\n                default:\n                    found = false;   \n                    break;\n            }\n        }\n\n        if( found )\n            return this._draggables[i];\n\n        return null;\n    }\n\n    private initMouseHandlers(){\n\n        fromEvent<MouseEvent>(document, 'mouseover')\n            .pipe(\n                filter( m => this._dragging && this.isZone(m) ),\n                map<MouseEvent,DragInfo>(m => this.getDragOverInfo(m))\n            )\n            .subscribe(c=> this.dragOverZone(c)) ;\n\n        fromEvent<MouseEvent>(document, 'mousedown').subscribe(ev=> {                  \n            if( ev.which == 1) {                \n                this._mouseDown = true;\n                this._startDragTime = Date.now();\n                if( this.startDragging(ev.pageX, ev.pageY, <HTMLElement>ev.target ))\n                    ev.preventDefault();\n            }\n        });\n\n        fromEvent<MouseEvent>(document, 'mouseup').subscribe(ev=> this.mouseUp(ev));\n      \n        fromEvent<MouseEvent>(document, 'mousemove')\n            .subscribe((e) => {\n                let di = new DragInfo(e.pageX, e.pageY, this._last, e.ctrlKey);\n                if (this._mouseDown) {\n                    if (this._draggingItem && this._draggingItem.action) {\n                        this._draggingItem.action(di);\n                        this._last = di;\n                        e.preventDefault();\n                    }\n                }\n            });\n    }  \n\n    private isZone(m: MouseEvent) : boolean{\n        let z = this.findZone(m);\n        if( z ){\n            return true;      \n        }\n        if(this._lastZone && (!z || this._lastZone != z) ){\n            // should callback if any zone out\n            return true;\n        }\n        return false;\n    }  \n\n    private findZone(m: MouseEvent) : DropZone {\n        let acceptableZones = this._zones.filter(z=> z.accept(this._draggingItem));\n        let zxs = acceptableZones.filter(z=> z.isInside(<HTMLElement> (m.target)));\n        return zxs.length ? zxs[0] : null;\n    }\n\n    private findZoneElement(m: HTMLElement) : HTMLElement {\n        let parent : HTMLElement = m;\n        let count = 10;\n        let found = false;\n\n        while(count-- > 0 && parent && !found){\n            found = parent.classList.contains(\"drop-zone\");\n            if( found )\n                return parent;\n            parent = parent.parentElement;\n        }\n        return null;\n    }\n\n    private findZoneIndex(m: MouseEvent) : number {\n        let zone = this.findZone(m);\n        return zone ? this._zones.findIndex(z=> z == zone) : -1;\n    }\n\n    getDragDropElement(id: string){\n        return <HTMLElement>this._document.querySelector('[dragDropId=\"'+id+'\"]');\n    }\n\n    private getDragOverInfo(m: MouseEvent) : DragInfo{\n        let d = new DragInfo(m.pageX, m.pageY, undefined, (m as any).ctrlKey);    \n        d.dropZoneIndex = this.findZoneIndex(m);\n        d.dropZoneElement = this.findZoneElement(m.target as HTMLElement);\n        m.preventDefault();\n        return d;\n    }\n\n    private mouseUp(m: MouseEvent){\n        if( this._dragging ){\n\n            let d = new DragInfo(m.pageX, m.pageY, undefined, (m as any).ctrlKey);\n            // leave zone \n            if( this._lastZone){\n                if(this._studioStateService.activeRootElement.__designMode == DesignModes.Controls){\n                    d.leaveZone = true;\n                    if(this._lastZoneElement){\n                        this._lastZoneElement.classList.remove(\"drop-allowed\");\n                        this._lastZoneElement.classList.remove(\"drop-not-allowed\");\n                    }\n                    if(this._lastZone.action)\n                        this._lastZone.action(d);\n                }\n                \n            }\n\n            d.endOfDrag = true;\n            this._draggingItem.action(d);\n\n            if( Date.now() - this._startDragTime > 500 )\n                this.dropIt(d, m);\n\n            this._dragging = false;\n            this._draggingItem = null;\n            this._last = null;\n            this._lastZone = null;\n            this._lastZoneElement = null;\n\n            m.preventDefault();\n        }\n\n        this._mouseDown = false;\n        this._draggingItem = null;\n    }\n\n    private dropIt(d: DragInfo, m: MouseEvent){\n        d.dropZoneIndex = this.findZoneIndex(m);\n        // drop action\n        let z  = d.dropZoneIndex != - 1 ? this._zones[d.dropZoneIndex] : null;\n        if( z && z.action ){\n            d.dragModel = this._draggingItem.model;\n            d.dropZoneElement = this.findZoneElement(m.target as HTMLElement);\n            z.action(d);\n        }    \n    }\n\n    private dragOverZone(d:DragInfo){\n        \n        let z  = d.dropZoneIndex != - 1 ? this._zones[d.dropZoneIndex] : null;\n\n        if( this._lastZone ){\n            d.leaveZone = true;\n            if(this._lastZoneElement){\n                this._lastZoneElement.classList.remove(\"drop-allowed\");\n                this._lastZoneElement.classList.remove(\"drop-not-allowed\");\n            }\n\n            if( this._lastZone.action)\n                this._lastZone.action(d);        \n        }\n        \n        this._lastZone = z;\n        this._lastZoneElement = d.dropZoneElement;\n\n        if(z){      \n            if( d.dropZoneElement ){\n                d.dropZoneElement.classList.add(\"drop-allowed\");\n                d.dropZoneElement.classList.remove(\"drop-not-allowed\");\n            }\n            d.leaveZone = false;\n\n            if( z.action ){\n                // Enter zone\n                z.action(d);\n            }            \n        }  \n        \n    }\n\n    private startDragging(X:number, Y: number, el:HTMLElement) : boolean{\n\n        this._draggingItem = this.getDraggabledItem(el);\n        if( this._draggingItem ){\n            this._last = new DragInfo(X, Y, undefined, false);\n            this._last.dragMode = this._draggingItem.mode;\n            this._dragging = true;\n            this._lastZone = null;\n            return true;\n        }\n\n        return false;\n    }\n}\n","import { DragItem } from \"./drag.service\";\n\nexport enum dragModes {none, moveWindow, resizeWindow, resizePanel, dragElement, reorder};\n\nexport class DragInfo {\n    public x: number;\n    public y :number;\n\n    public diffx: number;\n    public diffy :number;\n\n    public dragMode : dragModes = dragModes.none;\n    public endOfDrag = false;\n\n    public dropZoneIndex: number = -1;\n    public dropZoneElement: HTMLElement;\n    public leaveZone: boolean = false;\n    public dragModel : DragItem;\n    public ctrlPressed : boolean = false;\n    \n    constructor(X: number, Y: number, start: DragInfo, ctrlKey: boolean){\n        this.x = X;\n        this.y = Y;\n        this.ctrlPressed = ctrlKey;\n\n        if( start ){\n\n            this.diffx = X - start.x;\n            this.diffy = Y - start.y;\n\n            start.x = this.x;\n            start.y = this.y;\n\n            this.dragMode = start.dragMode;\n        }\n    }\n}","export * from './shared.module';","import { Directive, Input, HostListener, } from \"@angular/core\";\r\nimport { MatDialog, } from \"@angular/material/dialog\";\r\nimport { InputDialogComponent, InputDialogContext } from \"./dialog/input.dialog.component\";\r\nimport { LabelService } from \"../common/services/label.service\";\r\nimport { PageGroupingService } from \"../common/services/pageGrouping.service\";\r\nimport { AlertService } from \"../alert/alert.service\";\r\n\r\n@Directive({\r\n    selector: '[context-add-group]',\r\n})\r\n\r\nexport class InputDialogAddGroupDirective {\r\n    @Input('context-add-group') info: string;\r\n    @Input('key') key: string;\r\n\r\n    @HostListener('click', ['$event']) onMouseClick(e: MouseEvent) {\r\n\r\n        if (![\"edit\",\"add\",\"addtonewgrp\"].includes(this.key))\r\n            return;\r\n\r\n         if(this._pageGroupingService.isSystemGroup(this.info)){\r\n            this._alertService.error(\"Unable to edit system folder\");\r\n            return;\r\n         }\r\n        const okLabel = this._labelService.getLabel('PS_ACTION_OK', 'Ok');\r\n        const cancelLabel = this._labelService.getLabel('PS_ACTION_CANCEL', 'Cancel');\r\n        const copyTitleLabel = \"Enter a group name:\";\r\n        const copyInputLabel = \"\";\r\n        const inputContext: InputDialogContext = {\r\n            title: copyTitleLabel,\r\n            message: '',\r\n            actions: [\r\n                { action: 'cancel', name: cancelLabel, isPrimary: false },\r\n                { action: 'ok', name: okLabel, isPrimary: true },],\r\n            inputs: [{ name: 'txt', type: 'text', text: '', value: copyInputLabel }]\r\n        };\r\n\r\n        const dockPanel = document.querySelector(\".dock-panel\");\r\n        const posDockPanel = dockPanel.getBoundingClientRect();\r\n        let dialog = this._dialog.open(InputDialogComponent, {\r\n            disableClose: false,\r\n            id: 'inputDialogAddGroupContainer',\r\n            width: `${posDockPanel.width}px`,\r\n            backdropClass: 'inputDialogAddGroup',\r\n        });\r\n\r\n        dialog.updatePosition({\r\n            top: `${posDockPanel.top - 65}px`,\r\n            right: `${posDockPanel.right}px`,\r\n            left: `${posDockPanel.left}px`,\r\n            bottom: `${posDockPanel.bottom}px`\r\n        });\r\n\r\n        dialog.componentInstance.initContext(inputContext);\r\n        dialog.afterClosed().subscribe(p => {\r\n            if (p != \"cancel\") {\r\n                const name = p[0]['value'];\r\n                if (this.key == \"add\") {          \r\n                    this._pageGroupingService.addGroup(name);\r\n                }\r\n                if (this.key == \"edit\") {   \r\n                    this._pageGroupingService.editGroup(name, this.info);       \r\n                }\r\n                if(this.key==\"addtonewgrp\"){\r\n                    this._pageGroupingService.moveToGroup(this.info, name);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    constructor(\r\n        public _dialog: MatDialog,\r\n        private _labelService: LabelService,\r\n        private _pageGroupingService: PageGroupingService,\r\n        private _alertService: AlertService\r\n    ) { }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { LabelService } from '../../common/services/label.service';\r\n\r\n@Pipe({\r\n    name: 'label',\r\n})\r\n\r\nexport class LabelPipe implements PipeTransform {\r\n\r\n    constructor(private _label: LabelService) { }\r\n\r\n    transform(defaultText: string, labelName: string, ...labelArgs: any[]): any {\r\n        if (!labelName) return;\r\n        return this._label.getLabelwithArguments(labelName, defaultText, labelArgs);\r\n    }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'panelName'\n})\nexport class PanelNamePipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if( value ){\n      let v = <string>value;\n      if( v == \"PortalMenuCommandChanges\" || v == \"PortalMenuSubMenuChanges\")\n        return \"Caption\";\n\n     if(v.startsWith(\"ActionDef\")) v = \"PageAction\" + v.slice(\"ActionDef\".length);\n     \n     if( v.endsWith(\"Changes\"))\n        value = v.substr(0, v.lastIndexOf(\"Changes\")); \n    }\n    return (value || \"\") + \" Name\";\n  }\n\n}\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\n//dialog\nimport { ConfirmDialogComponent } from './dialog/confirm.dialog.component';\nimport { InputDialogComponent } from './dialog/input.dialog.component';\n//directives\nimport { DialogDecorDirective } from './directives/dialogDecor.directive';\nimport { DraggableDirective } from './directives/draggable.directive';\nimport { DroppableDirective } from './directives/droppable.directive';\n//pipe\nimport { LabelPipe } from './pipe/label.pipe';\n//services\nimport { ConvertorService } from '../common/services/convertor.service';\nimport { DataAccessors } from '../common/services/dataAccessors';\nimport { DragService } from './drag.service';\nimport { LabelService } from '../common/services/label.service';\nimport { MetadataService } from '../common/services/metadata.service';\nimport { ValueProviderService } from '../common/services/dataValue.service';\nimport { ClosableDirective } from './directives/closable.directive';\nimport { PanelNamePipe } from './pipe/panel-name.pipe';\nimport { PageGroupingService } from '../common/services/pageGrouping.service';\nimport { ContextMenuPopupDirective } from './context-menu.directive';\nimport { InputDialogAddGroupDirective } from './inputdialog-addGroup.directive';\n\n\nconst COMPONENTS = [\n    ConfirmDialogComponent,\n    InputDialogComponent,\n    DialogDecorDirective,\n    DraggableDirective,\n    DroppableDirective,\n    ClosableDirective,\n    ContextMenuPopupDirective,\n    InputDialogAddGroupDirective,\n    LabelPipe,\n    PanelNamePipe\n];\nconst MATMODULES = [\n    MatAutocompleteModule,\n    MatDialogModule,\n    MatInputModule,\n    MatMenuModule,\n    MatOptionModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatSnackBarModule\n]\n\n@NgModule({\n    imports: [        \n        BrowserAnimationsModule,\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MATMODULES,\n    ],\n    declarations: [\n        COMPONENTS\n    ],\n    exports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        COMPONENTS,\n        MATMODULES\n    ],\n    entryComponents: [\n        ConfirmDialogComponent,\n        InputDialogComponent\n    ],\n    providers: [\n        ConvertorService,\n        DataAccessors,\n        DragService,\n        LabelService,\n        MetadataService,\n        ValueProviderService,\n        PageGroupingService\n    ]\n})\nexport class SharedModule {\n    constructor( @Optional() @SkipSelf() parentModule: SharedModule) {\n        if (parentModule) {\n            throw new Error(\n                'SharedModule is already loaded.');\n        }\n    }\n}\n","export * from './studio.module';","import { Component, OnInit } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nimport _ from 'lodash';\n\nimport {\n    IElement, IResultStatus, IUIDesigner, UpdatedInfo, val, TopMenuState,\n    DockPanel, ContentSection, IUIComponentRef, IUpdatedData, RefreshInfo, RefreshLevel, uuid, ILabel, isContainerControl, DesignModes, ExecuteCommand \n    } from '../common/objects/common';\nimport { PanelUpdatedData } from '../panel/panel';\nimport { Alert } from '../alert/alert';\nimport { IOMTypeDescriptor, OMType } from '../common/objects/viewModel';\nimport { OMTypeDescriptor } from '../common/objects/fieldDirectoryBase';\nimport { MatDialog } from '@angular/material/dialog';\n\n//Services\nimport { AlertService } from '../alert/alert.service';\nimport { ConvertorService } from '../common/services/convertor.service';\nimport { LabelService } from '../common/services/label.service';\nimport { LocalService } from '../common/services/local.service';\nimport { MetadataService } from '../common/services/metadata.service';\nimport { PortalService } from '../common/services/portal.service';\nimport { WCFService } from '../common/services/wcf.service';\n\nimport { HistoryOperation, HistoryLog, ElementHistoryData, RecordCommand, HistoryObjectType } from '../common/objects/historyLog';\nimport { ControlManager } from '../layout/design/control/controlManager';\nimport { PageWizardComponent } from './wizard/page/pageWizard.component';\nimport { BatchExportComponent } from './wizard/batchExportImport/batchExport.component';\nimport { BatchProgressPopup } from './wizard/batchExportImport/batchProgressPopup.component';\nimport { BatchImportComponent } from './wizard/batchExportImport/batchImport.component';\nimport { StudioStateService } from '../common/services/studioStateService';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    templateUrl: 'studio.component.html',\n    selector: 'csi-framework',\n    styles: [`\n    .main-right-column, .main-left-column {\n        display: flex;\n        flex-direction: column;\n        flex: 0 0 300px;\n    }\n    .hidden{\n        display: none;\n    }\n    .csi-layout-column {\n        display: flex;\n        flex-direction: column;\n        flex: 1 1 100%;\n        overflow: hidden;\n    }\n    .thin-blue-line{\n        width: 100%;\n        height: 2px;\n        background-color: #55A0B9;\n    }\n\n    /* Absolute Center Spinner */\n    .spinner {\n      position: fixed;\n      z-index: 999;\n      height: 2em;\n      width: 2em;\n      overflow: show;\n      margin: auto;\n      top: 0;\n      left: 0;\n      bottom: 0;\n      right: 0;\n    }\n    \n    /* Transparent Overlay */\n    .spinner:before {\n      content: '';\n      display: block;\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;      \n    }    \n    `]\n})\n\nexport class StudioComponent implements OnInit {\n    menuUpdated: UpdatedInfo;\n    dockPanels: { left: DockPanel[], right: DockPanel[] };\n    showTraceViewer: boolean = false;\n    \n    get metadataLoaded() { return this._metadataService.ready;}\n\n    get alerts(): Alert[] { return this._alert.alerts; };\n    get subjects() { return this._studioStateService.subjects; };\n    get openedElements() { return this._studioStateService.openedElements; };\n    get activeRootElement() { return this._studioStateService.activeRootElement; };\n    //get showSpinner() { return this._studioService.showSpinner; };\n\n    constructor(\n        private _alert: AlertService,\n        private _converter: ConvertorService,\n        private _dialog: MatDialog,\n        private _localService: LocalService,\n        private _labelService: LabelService,\n        private _metadataService: MetadataService,\n        private _portalService: PortalService,\n        private _studioStateService: StudioStateService,\n        private _wcf: WCFService) {\n\n        this._alert.init();\n    }\n\n    ngOnInit(): void {\n\n        this._labelService.load();\n        this.dockPanelsInit();\n\n        this.subjects.panel.subscribe(upd => this.panelCommand(upd));\n\n        this._studioStateService.subjects.execute.subscribe( (command:ExecuteCommand) => this.actionExecute(command) );\n\n        this.showTraceViewer = this._localService.isDisplayTraceViewer();\n        this.subjects.deleteElement.subscribe(el=> this.deleteElement(el) );\n    }\n\n    private deleteRoot(): void {\n        let rootElement = <IUIDesigner>this._studioStateService.activeRootElement;\n        let rootType = rootElement.type;\n        if (!rootType)\n            rootType = rootElement.typeName || rootElement['__type'];\n\n        if (rootType && rootType.endsWith('Changes'))\n            rootType = rootType.substr(0, rootType.lastIndexOf('Changes'));\n\n        this.deleteElement(rootElement);\n    }\n\n    private deleteElement(el : IElement | IUIComponentRef): void {\n        let elName = el.name;\n        let elType = el.type;\n        if (el.type === undefined){\n            elType = el.__type;\n        }\n        if( elType.toLowerCase() == \"webpart\" && (el as IUIComponentRef).isStatic === true){\n            // the General (programmatic) webparts cannot be removed\n            return;\n        }\n\n        let args = [elName, elType];\n        let titleLabel = <ILabel>{\n            Name: 'PS_WARNING_DELETE_ROOT_ELEMENT_TITLE',\n            DefaultValue: 'Delete {1}', arguments: args\n        };\n        let messageLabel = <ILabel>{\n            Name: 'PS_WARNING_DELETE_ROOT_ELEMENT_MESSAGE',\n            DefaultValue: 'You are about to permanently delete the selected {0} {1}. Do you want to continue?',\n            arguments: args\n        };\n\n        this._alert.confirmModal(messageLabel, titleLabel)\n            .subscribe(ok => { if (ok) this.deleteElementFinally(el); });\n    }\n\n    private deleteElementFinally(el : IElement | IUIComponentRef) {\n\n        let {name: elName, type: elType} = el;\n        let panelType = this.getPanelType(el);\n        let obs: Observable<IResultStatus>;\n        let svc = this._portalElementServiceMap[panelType];\n\n        if (svc){\n            if (svc == '*pageMap')\n                obs = this._portalService.deletePageMap(elName);\n            else if (svc == '*targetMatrix')\n                obs = this._portalService.deleteTargetMatrixItem(elName);\n            else\n                obs = this._wcf.deleteMaint(elName, svc);\n        }\n        else\n            obs = this._portalService.removeElement(elName, elType);\n\n        obs.subscribe(result => {\n            let CommitResult = <IResultStatus>result['CommitTransactionResult'];\n            if (result.IsSuccess || CommitResult.IsSuccess) {\n                let opened = this._studioStateService.openedElements.find( e=> e.name == elName && (e.type === elType || e.__maint === svc || e.__unbound === svc));\n                if( opened ){\n                    this._studioStateService.removeOpenedElement(opened);\n                    this._studioStateService.removeComponentRef((opened as IUIDesigner).componentRef);\n                    this._portalService.updateComponentCache(opened);\n                }\n                this._localService.removeElementHistory(el);\n                if(!result.IsSuccess){\n                    this._alert.success(CommitResult);\n                }\n                else{\n                    this._alert.success(result);\n                }\n                this.subjects.refreshElementPanel.next(panelType);                \n                this._studioStateService.activateRootElement();\n            }\n            else {\n                if(result.IsSuccess){\n                    this.displayError(result.Message, result.ExceptionData);\n                    \n                }else{\n                    this.displayError(CommitResult.Message, CommitResult.ExceptionData);\n                }     \n            }\n        });\n    }\n\n    private setLoadedElement(el: IUIDesigner, workspace : number) : IUIDesigner{\n        // refresh top menu commands.\n        let menu = new TopMenuState();\n        menu.save = false;\n        menu.delete = true;\n        menu.run = true;\n        this._studioStateService.refreshTopMenu(menu);\n\n        el.isRoot = true;\n        el[\"componentName\"] = el.name;\n        if( el.isRoot && el.isNew ){\n            el.__workspace = 0;\n            el.workspaceIndexes = [];\n        }\n        if( this._studioStateService.getRoot() )\n            el.scaleValue = this._studioStateService.getRoot().scaleValue || 100;\n\n        let index = _.findIndex(this._studioStateService.openedElements, (e) => { return e.name == el.name && e.type == el.type });\n        if (index >= 0) {\n            // Replace root in the same tab\n            this._studioStateService.openedElements[index] = el;\n            this._studioStateService.activateRootElement(el);\n        }\n        else {\n            this._studioStateService.addOpenedElement(el);\n            this._localService.addToElementHistory(el);\n        }\n\n        this._studioStateService.setComponentRef(this._studioStateService.activeRootElement);\n        this._studioStateService.activeRootElement.history = new HistoryLog();\n\n        workspace = (workspace === undefined) ? 0 : workspace;\n\n        this._studioStateService.activeRootElement.__workspace = workspace;  // DEV \n        this._studioStateService.activeRootElement.isReadOnly = workspace >= 1;\n        this._studioStateService.activeRootElement.__designMode = DesignModes.Controls;\n\n        return this._studioStateService.getRoot();\n    }\n\n    private loadElement({ name: elementName, type: elementType }: IElement | IUIComponentRef, workspace: number): void {\n\n        if (elementType != 'StartPage') {\n            this._portalService.getElement(elementName, elementType, this._metadataService.getWorkspaceCodeById(workspace))\n                .subscribe(\n                el => {\n                    this.setLoadedElement(el, workspace);\n                },\n                error => {\n                    let args = [elementName, elementType];\n                    let errorMessage = this._labelService.getLabelwithArguments('PS_ERROR_LOADING_OBJ_MESSAGE', 'Error occurred on loading {0} of type {1}\\r\\n', args);\n\n                    this.displayError(errorMessage, error.data);\n                });\n        }\n    }\n\n    private loadElementAsync({ name: elementName, type: elementType }: IElement | IUIComponentRef, workspace: number): Observable<IUIDesigner> {\n\n        return this._portalService.getElement(elementName, elementType, this._metadataService.getWorkspaceCodeById(workspace))\n            .pipe(map(el => this.setLoadedElement(el, workspace)));\n    }\n\n    loadNewPortalObject(type: string): void {\n        this.loadObject('', this.getSvcService(type));\n    }\n\n    loadObject(objectName: string, svc: string, loaded?: () => any, reload = false): void {\n        let existing = null;\n        if(!reload)\n            existing = objectName ? this._studioStateService.activateExistingOpenedElement(objectName) : undefined;\n        if (!existing) {\n            let observable: Observable<any>;\n            if (svc == '*targetMatrix')\n                observable = this._portalService.getTargetMatrix(objectName);\n            else if (svc == '*pageMap')\n                observable = this._portalService.getPageMap(objectName);\n            else \n                observable = this._wcf.getElement(objectName, svc);\n\n            observable.subscribe(\n                data => {\n                    let res: any;\n                    if (svc == '*targetMatrix') {\n                        res = this._converter.convertTargetMatrixToModel(data);\n                        res.__unbound = svc;\n                    }\n                    else if (svc == '*pageMap') {\n                        res = this._converter.convertSettingsToModel(data, \"PageMappingItem\", this._metadataService);\n                        res.__unbound = svc;\n                        if (res.Name) {\n                            let n = res.Name;\n                            res.name = n;\n                            delete res.Name;\n                        }\n                    }\n                    else {\n                        res = this._converter.convertMaintChangesToModel(data);\n                        res.__maint = svc;\n                        res.__unbound = 'NDO';\n                    }\n\n                    if (!objectName) {\n                        res.isNew = true;\n                        res.isDirty = true;\n                    }\n\n                    res.id = uuid.id();\n                    res.isRoot = true;\n                    res.componentName = objectName; \n                    let menu = new TopMenuState();\n                    menu.setAll(false);\n                    menu.copy = true;\n                    menu.delete = true;\n                    this._studioStateService.refreshTopMenu(menu);\n\n                    if( !reload )\n                        this._studioStateService.addOpenedElement(res);\n                    else\n                        this._studioStateService.replaceRoot(res);\n\n                    this._studioStateService.activateRootElement(res);\n                    this._studioStateService.subjects.propertyPanel.next(res);\n                    if (loaded)\n                        loaded();\n                },\n                error => {\n                    let args = [objectName, svc];\n                    let errorMessage = this._labelService.getLabelwithArguments('PS_ERROR_LOADING_OBJ_MESSAGE', 'Error occurred on loading {0} of type {1}\\r\\n', args);\n                    this.displayError(errorMessage, error.data);\n                });\n        }\n        else {\n            if (loaded)\n                loaded();\n        }\n    }\n\n    load(loadingElement: any) {\n        this.loadElement(loadingElement, 0);\n    }\n\n    activateOpenedElement(element: IElement, isSwitchTab?): void {\n        let result = this._studioStateService.activateRootElement(element);\n\n        let activateElement = () => {\n            this._portalService.updateComponentCache(element);\n            let panelType = this.getPanelType(element);\n            this.subjects.refreshElementPanel.next(panelType);\n        }\n          \n        if (result) {\n\n            if(isSwitchTab && element.__type && ['portaltabchanges',\n                 'portalmenudefinitionchanges','pagemappingitem',\n                 'actionrulechanges','actionrulechanges',\n                 'actiondefchanges', 'actioncategorychanges'].indexOf(element.__type.toLowerCase()) != -1){\n\n                this._studioStateService.activateRootElement(element);\n                this._studioStateService.subjects.propertyPanel.next(element);\n                activateElement();     \n            }\n\n            if (element.type && ['page', 'webpart', 'pageflow'].indexOf(element.type.toLowerCase()) != -1)\n                this._localService.addToElementHistory(element);\n\n            this._studioStateService.activateElement(element);\n        }\n    }\n\n    closeOpenedElement(element: IUIDesigner): void {\n        this._studioStateService.removeOpenedElement(element);\n    }\n\n    saveAndCloseOpenedElement(element: IUIDesigner): void {\n        this.saveRootElement(element, true);\n    }\n\n    actionExecute(command:ExecuteCommand) {\n        let newCommands = ['newPage', 'newWebpart', 'newPageflow', 'newAction', 'newActionCategory', 'newActionRule', 'newPageMap', 'newTargetMatrix', 'newMenu', 'newTab'];\n        let root = <IUIDesigner>this._studioStateService.getRoot();\n        let element = <any>this._studioStateService.activeRootElement;\n        let svc = root.__maint || root.__unbound;\n        let newName = null;\n        let respMessage = null;\n\n        let cmd : any = {};\n        cmd[command.cmd] = true;\n        cmd.data = command.data;\n        cmd.element = command.element;\n\n        if(cmd.data){            \n            if(cmd.data.hasOwnProperty('name')) \n                newName = cmd.data['name'];\n            if(cmd.data.hasOwnProperty('message'))\n                respMessage = cmd.data['message'];\n        }\n\n        if (cmd.save) {\n            if( root.__xml ){\n                this._alert.warningModal( \"Please switch to the Controls view and save again\", \"Save\" );\n                return;\n            }\n            this.saveRootElement(root, false);\n            element.componentName = element.name;\n        }\n        else if (cmd.saveAll) {\n            _.forEach(this._studioStateService.openedElements, (value: IUIDesigner) => {\n                if (value.isDirty) {\n                    this.saveRootElement(<IUIDesigner>value, false);\n                }\n            });\n            element.componentName = element.name;\n        }\n        else if (cmd.import) {\n            this.importRootElement(cmd.data);\n        }\n        else if (cmd.export) {\n            this.exportRootElement(root, root.__workspace);\n        }\n        else if (cmd.exportAll) {\n            this.exportRootElement(root);\n        }\n        else if (cmd.delete) {\n            this.deleteRoot();\n        }\n        else if (cmd.switchTab) {\n            this.activateOpenedElement(cmd.element, true);\n        }\n        else if (cmd.generate) {\n            this.menuGenerateCommand(cmd.data);\n        }\n        else if (cmd.batchExport) {\n            this.batchExportDialog();\n        }\n        else if (cmd.batchImport) {\n            this.batchImportDialog();\n        }\n        else if (newCommands.find(c => cmd[c] === true)) {\n            let cm = newCommands.find(c => cmd[c] === true);\n            let type = cm.substr(3);\n            if (type === 'Page')\n                this.loadNewPageDialog();\n            else if (type === 'Webpart' || type === 'Pageflow')\n                this.loadNewElement(type);\n            else\n                this.loadNewPortalObject(type);\n        }\n        else if (cmd.publish) {\n            const scaleValue = root.scaleValue + 0;\n            let selectedName = root.__selectedElement && root.__selectedElement.name;\n            root.__selectedElement = null;\n            (<any>root).activeElement = null;\n            let compToSave = _.cloneDeep<IElement>(root);\n            let firstPublish = root.type == 'Page' && !_.find((<any>root).workspaceIndexes, w => w > 0);\n            this._converter.convertRefs(compToSave);\n            (<any>root).activeElement = root;\n            this._portalService.publishElement(compToSave)\n                .subscribe(result => {\n                    delete root['__publishFlags'];\n                    let resp: IResultStatus = result;\n                    if (resp.IsSuccess) {\n                        if (firstPublish) {\n                            // set default permission to the page\n                            this._portalService.createPagePermissions(root.name, 'Default Pages').subscribe(resp => {\n                                this._alert.displayResultStatus(resp);\n                            });\n                        }\n\n                        this.loadElementAsync(root, 0).subscribe(el => {\n                            el.scaleValue = scaleValue;\n                            this._alert.displayResultStatus(resp);\n                            this._studioStateService.refreshElementPanel(this.getPanelType(el));\n\n                            let selectedItem = this._studioStateService.findItemByName(selectedName);\n                            if(selectedItem)\n                                this._studioStateService.activateElement(selectedItem);\n                            else\n                                this._studioStateService.activateRootElement();\n                        });\n                    }\n                    else {\n                        this.displayError(resp.Message, resp.ExceptionData);\n                    }\n                });\n        }\n        else if (cmd.revert) {\n            let confMsg = cmd.data == 'system' ?\n                this._labelService.getLabel('PS_REVERT_SYSTEM_CONF', \"By Reverting to the System Content, you will lose all of your changes. Do you want to continue?\") :\n                this._labelService.getLabel('PS_REVERT_PUBLISH_CONF', \"By Reverting to the last Published state, you will lose all of your changes. Do you want to continue?\");\n\n            this._alert.confirmModal(confMsg).subscribe(ok => {\n                if (ok) {\n                    this._portalService.revert(root.name, root.type, cmd.data).subscribe(() => {\n                        this._portalService.updateComponentCache(root);\n                        this.loadElement(root, 0);\n                        this.subjects.refreshElementPanel.next(this.getPanelType(root));\n                    });\n                }\n            });\n        }\n        else if (cmd.extract) {\n            this.extractWebpart(this._studioStateService.activeElement);\n        }\n        else if (cmd.reloadWebPart) {\n            this.reloadWebPart(this._studioStateService.activeElement);\n        }\n        else if (cmd.undo || cmd.redo) {\n            this._studioStateService.historyDo(cmd.undo ? HistoryOperation.undo : HistoryOperation.redo)\n                .then(upd => {\n                    this._studioStateService.propertyChanged([null, null, null, upd]);\n                });\n        }\n        else if (cmd.togglePanel) {\n            this.togglePanel(cmd.data);\n        }\n        else if (cmd.resetPanels) {\n            this.resetPanels();\n        }\n        else if (cmd.copy) {\n             if (cmd.element) {                \n                let obs : Observable<IResultStatus>;\n                let unbound = cmd.element.__unbound;\n                if (unbound) {\n                    let compToSave = _.cloneDeep<IElement>(cmd.element);\n                    if (unbound === \"*pageMap\")\n                        obs = this.savePageMap(compToSave);\n                    else if (unbound === \"*targetMatrix\")\n                        obs = this.saveTargetMatrix(compToSave);\n                }\n\n                respMessage = respMessage !== undefined? respMessage: cmd.element.__statusMessage;\n                delete cmd.element.__statusMessage;\n\n                if( !obs && !cmd.element.ExceptionData)\n                    obs = of(<IResultStatus>{IsSuccess : true, Message: respMessage});\n\n                if(cmd.element.ExceptionData){\n                    obs = of(<IResultStatus>{IsSuccess : false, Message: cmd.element.ExceptionData.Description});\n                }\n                 \n                obs.subscribe(status => {\n                    if (status.IsSuccess) {\n                        let activateElement = () => {\n                            this.activateOpenedElement(cmd.element);\n                            this._portalService.updateComponentCache(cmd.element);\n                            let panelType = this.getPanelType(cmd.element);\n                            this.subjects.refreshElementPanel.next(panelType);\n                        }\n                        \n                        if (svc)\n                            this.loadObject(newName, svc, activateElement);   //this.loadObject(cmd.element.name, svc, activateElement);\n                        else\n                            activateElement();\n                        if (status.Message)\n                            this._alert.displayResultStatus(status);\n                    }\n                    else\n                        this._alert.displayResultStatus(status);\n                });            \n            }\n        }\n        // NEXT cmd must be the last in the chain\n        else if (cmd.switchWorkspace !== undefined) {  \n             const selectedWS = cmd.data;\n             root.__workspace = selectedWS;\n             this.loadElement(root, selectedWS);\n        }\n    }\n\n    activateElement(element: IElement) {\n        this._studioStateService.activateElement(element);\n        let  m = this._studioStateService.getRoot().__topMenu;\n        if (element.type == 'Webpart') {\n            m.extract = true;\n            m.reloadWebPart = true;\n        }\n        else{\n            m.extract = false;\n            m.reloadWebPart = false;\n        }\n        this._studioStateService.refreshTopMenu();\n    }\n\n    private saveNDO(element: any, closeAfterSave: boolean): Observable<IResultStatus> {\n        let ch = this._converter.convertModelToMaintChanges(element, this._metadataService);\n        let changes = {};\n        if (element.isNew) {\n            changes['__new'] = 'new';\n        }\n        changes[element.__maint + '_ObjectChanges'] = ch;\n        return this._wcf.saveNDOInstance(element.componentName, element.__maint, changes);\n    }\n\n    private saveRootElement(element: IUIDesigner, closeAfterSave: boolean) {\n        if (!element)\n            return;\n\n        let obs: Observable<IResultStatus>;\n        let devState;\n        const isNdo = element.__unbound === 'NDO';\n        const scaleValue = element.scaleValue + 0;\n        const compName = element[\"componentName\"];\n\n        element['activeElement'] = null;\n        let compToSave = _.cloneDeep<IElement>(element);\n        element['activeElement'] = element;\n        if (element.__unbound === 'NDO') \n            obs = this.saveNDO(element, closeAfterSave);\n        else if (element.__unbound === '*pageMap')\n            obs = this.savePageMap(compToSave);\n        else if (element.__unbound === '*targetMatrix')\n            obs = this.saveTargetMatrix(compToSave);\n        else {\n            devState = compToSave[\"devContentState\"];\n            this._converter.convertRefs(compToSave);\n            obs = this._portalService.saveElement(compToSave);\n        }\n        obs.subscribe(\n            response => {\n                if (response) {\n                    let resp: IResultStatus = response;\n                    if (resp.IsSuccess) {\n                        let isNew = element.isNew;\n                        element.isDirty = false;\n                        element.isNew = false;\n                        element['devContentState'] = 1;\n                        if( element.type == \"Page\" || element.type == \"Webpart\"){\n                            if(element.layout)\n                                element['scaleValue'] = scaleValue;\n\n                            // Add dev workspace\n                            element.workspaceIndexes = element.workspaceIndexes || [];\n                            if( element.workspaceIndexes.indexOf(0) == -1)\n                                element.workspaceIndexes.push(0);\n                        }\n\n                        if (element.componentRef) {\n                            element.componentRef.isInDeveloping = true;\n                            this._studioStateService.addOrUpdateComponentRef(element.componentRef);                            \n                        }\n                        this._alert.success(resp);\n                        let isRenamed = false;\n                        // if component has been renamed get new name \n                        if (element.properties && element.properties['name'] && element.properties['name'] != compName) {\n                            let oldName = compName;\n                            element.name = element.properties.name;\n                            if (element.componentRef) {\n                                element.componentRef.name = element.name;\n                                this._studioStateService.renameComponentRef(element.componentRef, oldName);\n                            }\n                            isRenamed = true;\n                            this._localService.renameElementHistory(element, oldName);\n                        }\n\n                        if (closeAfterSave === true)\n                            this.closeOpenedElement(element);\n                        if (!isRenamed)\n                            this._localService.addToElementHistory(element);\n\n                        if (isNew || isRenamed || devState !== element['devContentState']) {  \n                            let panelType = this.getPanelType(element);\n                            this._localService.addToElementHistory(element);\n                            this.subjects.refreshElementPanel.next(panelType);\n                        }\n                        this._portalService.updateComponentCache(element);\n                        if(isNdo){\n                            this.loadObject(element.name, element.__maint, null, true);\n                        }\n                    }\n                    else {\n                        let args = [resp.Message, resp.ExceptionData ? resp.ExceptionData.Description : ''];\n                        let defautMsg = \"{0}\";\n                        if( args[1] ) \n                            defautMsg += \" Description: {1}\";\n                        let errorMessage = this._labelService.getLabelwithArguments('PS_ERROR_DESCRIPTION_MESSAGE', defautMsg, args);\n                        this.displayError(errorMessage);\n                    }\n                }\n            },\n\n            err => {\n                let args = [element.name];\n                let errorMessage = this._labelService.getLabelwithArguments('PS_ERROR_SAVE_MESSAGE', 'Error occurred attempting to save {0}!', args);\n                this.displayError(errorMessage);\n            }\n\n        );\n    }\n\n    savePageMap(compToSave: IElement): Observable<IResultStatus> {\n        let deletedFields = ['__unbound', 'history', 'id', 'propertyChanged', 'isDirty', '__designMode', 'activeElement', 'scaleValue'];\n        deletedFields.forEach(d => delete compToSave[d]);\n        // add required fields\n        let targets: any[] = (<any>compToSave).Targets;\n        if (!targets)\n            targets = (<any>compToSave).Targets = [];\n        targets.forEach(t => {\n            t.Conditions = t.Conditions || [];\n            t.Links = t.Links || [];\n        });\n        let name = compToSave.name;\n        let pm = this._converter.convertModelToSettings(compToSave);\n        pm.Name = name;\n        return this._portalService.savePageMap(pm);\n    }\n\n    saveTargetMatrix(compToSave: IElement): Observable<IResultStatus> {\n        let deletedFields = ['__unbound', 'history', 'id', 'propertyChanged', 'isDirty', '__designMode', 'activeElement', 'scaleValue'];\n        deletedFields.forEach(d => delete compToSave[d]);\n        return this._portalService.saveTargetMatrixItem(compToSave.name, compToSave);\n    }\n\n    togglePanel(dockPanelName: string) {\n        if (dockPanelName.toLowerCase() == \"traceviewer\") {\n            this._localService.toggleDisplayTraceViewer();\n            this.showTraceViewer = this._localService.isDisplayTraceViewer();\n            return;\n        }\n\n        let panel = this.getDockPanel(dockPanelName);\n        if (!panel) return;\n\n        let display: boolean = null;\n        switch (panel.name.toLowerCase()) {\n            case \"catalog\":\n                this._localService.toggleDisplayCatalog();\n                display = this._localService.isDisplayCatalog();\n                break;\n            case \"toolbox\":\n                this._localService.toggleDisplayToolbox();\n                display = this._localService.isDisplayToolbox();\n                break;\n            case \"property\":\n                this._localService.toggleDisplayProperty();\n                display = this._localService.isDisplayProperty(); /// changes\n                break;\n            default:\n                break;\n        }\n        panel.visible = display;\n    }\n\n    resetPanels(): void {\n        let panel: DockPanel;\n        let st = this._localService.isDisplayCatalog();\n        if (!st) {\n            this._localService.toggleDisplayCatalog();\n            panel = this.getDockPanel('catalog');\n            if (panel) panel.visible = true;\n        }\n\n        st = this._localService.isDisplayToolbox();\n        if (!st) {\n            this._localService.toggleDisplayToolbox();\n            panel = this.getDockPanel('toolbox');\n            if (panel) panel.visible = true;\n        }\n        st = this._localService.isDisplayProperty();\n        if (!st) {\n            this._localService.toggleDisplayProperty();\n            panel = this.getDockPanel('property');\n            if (panel) panel.visible = true;\n        }\n        st = this._localService.isDisplayTraceViewer();\n        if (st) {\n            this._localService.toggleDisplayTraceViewer();\n            this.showTraceViewer = false;\n        }\n    }\n\n    hasAnyVisiblePanels(dockPanels: Array<DockPanel>): boolean {\n        return dockPanels.filter(p => p.visible).length > 0;\n    }\n\n    private importRootElement(data: any) {\n        let rootElement = data.rootElement;\n\n        this._portalService.importComponent(rootElement.type, rootElement.name, false, data.content)\n            .subscribe(\n            element => {\n                if (element) {\n                    this._studioStateService.replaceElement(rootElement, element);\n                    element.isDirty = true;\n                    element.isRoot = true;\n                    element.__workspace = 0; // DEV\n                    this.subjects.refresh.next(new RefreshInfo(this._studioStateService.activeElement, RefreshLevel.full));\n                    this.subjects.menu.next();\n                }\n            },\n            error => {\n                let errorMessage = this._labelService.getLabel('PS_ERROR_IMPORTING_MESSAGE', \"Error occurred on importing new item\");\n                this.displayError(errorMessage);\n            });\n    }\n\n    private menuGenerateCommand(fdData: OMTypeDescriptor) {\n        if (fdData && fdData.Name && fdData.ItemType == OMType.Service) {\n            this.loadNewElement(\"Page\", (page) => {\n                page.properties[\"primaryServiceType\"] = fdData.Name;\n                page.properties[\"actions\"] = [\n                    { \"__type\": \"SubmitAction\", \"__action\": 0, \"__index\": 1, Name: \"SubmitAction\", ServiceName: fdData.Name, Location: 1, LabelText: \"Submit\" }\n                ];\n                page['codeBehind'] = 'Camstar.WebPortal.PortalFramework.WebPartPageBase';\n                page.properties['typeName'] = 'Camstar.WebPortal.PortalFramework.WebPartPageBase';\n\n                let emptyWp = ControlManager.createEmptyWebpartModel(\"BlankWP0\", 5, 3);\n                this._studioStateService.addElement(emptyWp, page.layout.tableCells[0][0]);\n\n                if (fdData) {\n                    var addFieldDirectoryToWebPart = function (ds: IOMTypeDescriptor, wp: IElement) {\n                        if (ds.Position && ds.Position.Row > 0 && ds.Position.Column > 0) {\n                            let typeDescr: OMTypeDescriptor = new OMTypeDescriptor(ds, fdData);\n                            typeDescr.Owner = fdData;\n                            typeDescr.addDragData();\n                            let newElement: IElement = ControlManager.createNewControl(typeDescr.type, typeDescr.typeName);\n                            typeDescr.controlInit(newElement, emptyWp, this._portalService);\n                            this._studioStateService.addElement(newElement, emptyWp.layout.tableCells[ds.Position.Row - 1][ds.Position.Column - 1]);\n                        }\n                    };\n\n                    if (!fdData.ChildItems) {\n                        this._portalService.getFieldsDirectory(fdData).subscribe(\n                            (om) => {\n                                if (om && om.ChildItems) {\n                                    om.ChildItems.forEach(ds => {\n                                        addFieldDirectoryToWebPart.call(this, ds, emptyWp);\n                                    });\n                                    this.subjects.refresh.next(new RefreshInfo(this._studioStateService.activeElement, RefreshLevel.full));\n                                }\n                            }\n                        );\n                    }\n                    else {\n                        fdData.ChildItems.forEach(ds => {\n                            addFieldDirectoryToWebPart.call(this, ds, emptyWp);\n                        });\n                        this.subjects.refresh.next(new RefreshInfo(this._studioStateService.activeElement, RefreshLevel.full));\n                    }\n                }\n            });\n        }\n    }\n\n    private exportRootElement(element: IElement, workspace: number = -1) {\n        this._portalService.exportComponent(element.type, element.name, (<IUIDesigner>element).isNew, this._metadataService.getWorkspaceCodeById(workspace))\n            .subscribe(\n            response => { },\n            error => {\n                let errorMessage = this._labelService.getLabel('PS_ERROR_EXPORTING_MESSAGE', \"Error occurred on exporting root element\");\n                this.displayError(errorMessage);\n            });\n    }\n\n    // propertyChanged(change: UpdatedInfo) {\n    //     this._studioStateService.setDirty();\n\n    //     let pd = change.DataOf<PropertyUpdatedData>();\n    //     if (pd.isName())\n    //         this._studioStateService.changeElementName(pd.val);\n\n    //     let menu = new CommandUpdatedData();\n    //     menu.save = true;\n    //     this.menuUpdated = new UpdatedInfo(menu);\n\n    //     // notify active element to refresh its design. For the page/webpart element the only specified properties cause refreshing\n    //     let refresh = true;\n\n    //     if (this._studioStateService.activeElement && (this._studioStateService.activeElement.type === 'Page' || this._studioStateService.activeElement.type === 'Webpart')) {\n    //         pd.path = pd.path.toLowerCase();\n    //         refresh = false;\n    //         if (_.find(this._refreshProperties, p => p.toLowerCase() == pd.path))\n    //             refresh = true;\n    //     }\n\n    //     if (refresh)\n    //         this.subjects.refresh.next(new RefreshInfo(this._studioStateService.activeElement, RefreshLevel.property));\n    // }\n\n    private batchExportDialog(): void {\n\n        let dialog = this._dialog.open(BatchExportComponent, { disableClose: true });\n        dialog.componentInstance.subjects = this.subjects;\n\n        dialog.afterClosed().subscribe(settings => {\n            if (settings) {\n                let progressPopup = this._dialog.open(BatchProgressPopup, { disableClose: true, width: '400px' });\n                progressPopup.componentInstance.title = this._labelService.getLabel(\"PS_BatchExportProgress\", \"Export Progress ...\");\n\n                this._portalService.batchExport(settings).subscribe(\n                    response => {\n                        let resp: IResultStatus = response;\n                        if (resp.IsSuccess) {\n                            this._dialog.closeAll();\n                            this._alert.success(resp);\n                        }\n                        else {\n                            let args = [resp.Message, resp.ExceptionData ? resp.ExceptionData.Description : '']\n                            let errorMessage = this._labelService.getLabelwithArguments('PS_ERROR_DESCRIPTION_MESSAGE', '{0} Description: {1}', args);\n                            this.displayError(errorMessage);\n                            this._dialog.closeAll();\n                        }\n                    },\n                    error => { },\n                    () => { progressPopup.close(); }\n                );\n            }\n        });\n    }\n\n    private batchImportDialog(): void {\n        let dialog = this._dialog.open(BatchImportComponent, { disableClose: true });\n        dialog.componentInstance.subjects = this.subjects;\n\n        dialog.afterClosed().subscribe(settings => {\n            if (settings) {\n                let progressPopup = this._dialog.open(BatchProgressPopup, { width: '400px' });\n                progressPopup.componentInstance.title = this._labelService.getLabel(\"PS_BatchImportProgress\", \"Import Progress ...\");\n\n                this._portalService.batchImport(settings).subscribe(\n                    response => {\n                        let resp: IResultStatus = response;\n                        if (resp.IsSuccess) {\n                            this._alert.success(resp.Message);\n                        }\n                        else {\n                            let args = [resp.Message, resp.ExceptionData ? resp.ExceptionData.Description : '']\n                            let errorMessage = this._labelService.getLabelwithArguments('PS_ERROR_DESCRIPTION_MESSAGE', '{0} Description: {1}', args);\n                            this.displayError(errorMessage);\n                        }\n                    },\n                    error => { },\n                    () => { progressPopup.close(); }\n                );\n            }\n        });\n    }\n    private loadNewPageDialog(): void {\n        let dialog = this._dialog.open(PageWizardComponent, { disableClose: true });\n        dialog.afterClosed().subscribe(settings => {            \n            if (settings)\n                this._portalService.getPageByTemplateType(settings.template)\n                    .subscribe(page => {                        \n                        if (settings.name) {\n                            page.name = settings.name;\n                            page.properties.name = settings.name;\n                        }\n\n                        if (settings.serviceType)\n                            page.properties.primaryServiceType = settings.serviceType;\n                        page.properties.typeName = \"Camstar.WebPortal.PortalFramework.WebPartPageBase\";\n                        page.isRoot = true;\n                        page.history = new HistoryLog();\n                        if( page.isRoot && page.isNew ){\n                            page.__workspace = 0;\n                            page.workspaceIndexes = [];\n                        }\n                        this._studioStateService.addOpenedElement(page)\n                    });\n        });\n    }\n\n    private loadNewElement(type: string, next?: (value: IUIDesigner) => void): void {\n        this._portalService.getElement(null, type)\n            .subscribe(\n            element => {\n                if (element.type == \"Webpart\")\n                    element.properties.typeName = \"Camstar.WebPortal.WebPortlets.MatrixWebPart\"\n                element.__workspace = 0;\n                element.isRoot = true;\n                element.history = new HistoryLog();\n                this._studioStateService.addOpenedElement(element);\n                if (next)\n                    next(element);\n            },\n            error => {\n                let args = [type];\n                let errorMessage = this._labelService.getLabelwithArguments('PS_ERROR_CREATING_MESSAGE', 'Error occurred on creating new {0}', args);\n                this.displayError(errorMessage)\n            });\n    }\n\n    private extractWebpart(webpart: IElement): void {\n        this._portalService.getElement(null, webpart.type)\n            .subscribe(\n            element => {\n                element.__workspace = -1;\n                element.name = webpart.name;\n                element.items = webpart.items;\n                element.layout = webpart.layout;\n                element.properties = webpart.properties;\n\n                // add items for layout-type controls\n                let refWebPartNames = [];\n                _.filter(element.items, (e:any) => isContainerControl(e.typeName) && e.layout && e.layout.tableCells)\n                    .forEach((contr:any) => _.flatten(contr.layout.tableCells).filter((c1: any) => c1.items)\n                        .forEach((c: any) => _.map(c.items, (c2: any) => refWebPartNames.push(c2.name))));\n\n                refWebPartNames.forEach(wpName => {\n                    let wp = _.find(this._studioStateService.activeRootElement.items, w => w.name == wpName);\n                    if (wp)\n                        element.items[wp.id] = wp;\n                });\n\n                this._studioStateService.addOpenedElement(element);\n            },\n            error => {\n                let args = [webpart.type];\n                let errorMessage = this._labelService.getLabelwithArguments('PS_ERROR_CREATING_MESSAGE', 'Error extracting new {0}', args);\n                this.displayError(errorMessage)\n            });\n    }\n\n    private displayError(message: string, data?: any): void {\n        if (data) {\n            if (data.exceptionType == \"PortalStudio.Models.ComponentModelException\")\n                message += \"\\r\\n\" + data.exceptionMessage;\n            else if (data.exceptionType) {\n                message += \"Exception: \" + data.exceptionType + \"\\r\\n\" +\n                    data.exceptionMessage + \"\\r\\n\" +\n                    data.message + \"\\r\\n\" +\n                    data.stackTrace;\n            }\n            else {\n                message = \"Exception: \" + val(data, \"description\");\n            }\n        }\n        this._alert.error(message);\n    }\n\n    panelCommand(upd: IUpdatedData) {\n        let cmd = <PanelUpdatedData>upd;\n        if (cmd.open) {\n            if (cmd.action)\n                this.loadObject(cmd.elementRef.name, cmd.action.svc);\n            else\n                this.loadElement(cmd.elementRef, 0);\n        }\n        else if (cmd.createNew && cmd.action && cmd.action.svc) {\n            if (cmd.action.svc == \"UIVirtualPageMaint\")\n                this.loadNewPageDialog();\n            else if (cmd.action.svc == \"WebPartMaint\")\n                this.loadNewElement(\"Webpart\");\n            else if (cmd.action.svc == \"UIPageFlowMaint\") {\n                this.loadNewElement(\"Pageflow\");\n            }\n            else\n                this.loadObject('', cmd.action.svc);\n        } else if (cmd.changeMode) {\n\n        }\n    }\n\n    private reloadWebPart(wp: IElement) {\n        let ws = this._studioStateService.getRoot().__workspace;\n        let created = wp.properties && val(wp.properties, \"created\");\n        if (created && typeof created == \"string\" && created.split('-', 1)[0] == \"0001\") {\n            // The web part cannot be reloaded if created date is not set or Date.min\n            return;\n        }\n\n        let hr = new ElementHistoryData(HistoryObjectType.Webpart);\n        hr.oldElement = _.clone(wp);\n\n        this._portalService.getWebpartElement(wp.name, wp.type, this._metadataService.getWorkspaceCodeById(ws))\n            .subscribe(webpartOrError => {\n                if (webpartOrError['name']) {\n                    let webpart = <IUIDesigner>webpartOrError;\n                    webpart.id = wp.id;\n                    this._studioStateService.replaceWebpart(wp, webpart);\n                    this._studioStateService.activeRootElement.isDirty = true;\n                    this._studioStateService.activateElement(wp);\n\n                    // record into the history\n                    hr.element = webpart;\n                    this._studioStateService.writeHistory(RecordCommand.replace, hr);\n                    this.subjects.refresh.next(new RefreshInfo(this._studioStateService.activeElement, RefreshLevel.full));\n                }\n                else {\n                    this._alert.error(<IResultStatus>webpartOrError);\n                }\n            });\n    }\n\n    private getDockPanel(name: string): DockPanel {\n        let _fn = (p: DockPanel) => p.name.toLocaleLowerCase() === name.toLocaleLowerCase();\n\n        return this.dockPanels.left.find(_fn) || this.dockPanels.right.find(_fn);\n    }\n\n    private dockPanelsInit() {\n        this.dockPanels = {\n            left: [\n                <DockPanel>{\n                    name: 'catalog',\n                    label: this._labelService.getLabel('PS_PANEL_CATALOG', 'Components'),\n                    visible: this._localService.isDisplayCatalog(),\n                    splitter: 'n',\n                    tabs: [\n                        {\n                            name: 'Components',\n                            sections: [\n                                <ContentSection>{\n                                    name: 'Pages', component: 'csi-element-panel', dataSource: 'Page'\n                                },\n                                <ContentSection>{ name: 'Web Parts', component: 'csi-element-panel', dataSource: 'Webpart' },\n                                <ContentSection>{ name: 'Pageflows', component: 'csi-element-panel', dataSource: 'Pageflow' }\n                            ]\n                        },\n                        {\n                            name: 'Navigation',\n                            sections: [\n                                <ContentSection>{ name: 'Menus', component: 'csi-portal-object-panel', dataSource: 'menu' },\n                                <ContentSection>{ name: 'Tabs', component: 'csi-portal-object-panel', dataSource: 'tab' }\n                            ]\n                        },\n                        {\n                            name: 'Modeling',\n                            sections: [\n                                <ContentSection>{ name: 'Page Actions', component: 'csi-portal-object-panel', dataSource: 'action' },\n                                <ContentSection>{ name: 'Page Actions Categories', component: 'csi-portal-object-panel', dataSource: 'actionCategory' },\n                                <ContentSection>{ name: 'Page Actions Rules', component: 'csi-portal-object-panel', dataSource: 'actionRule' },\n                                <ContentSection>{ name: 'Page Maps', component: 'csi-portal-object-panel', dataSource: 'pageMap' },\n                                <ContentSection>{ name: 'Target Matrices', component: 'csi-portal-object-panel', dataSource: 'targetMatrix' }\n                            ]\n                        }\n                    ]\n                },\n                <DockPanel>{\n                    name: 'toolbox',\n                    label: this._labelService.getLabel('PS_PANEL_TOOLBOX', 'Controls'),\n                    visible: this._localService.isDisplayToolbox(),\n                    splitter: 'h',\n                    tabs: [\n                        {\n                            name: 'Controls',\n                            sections: [\n                                <ContentSection>{ name: 'Controls', component: 'csi-control-panel' }\n                            ]\n                        },\n                        {\n                            name: 'Fields Directory',\n                            sections: [\n                                <ContentSection>{ name: 'Fields Directory', component: 'csi-field-directory' }\n                            ]\n                        }\n                    ]\n                }\n            ],\n            right: [\n                <DockPanel>{\n                    name: 'property',\n                    label: this._labelService.getLabel('PS_PANEL_PROPERTY', 'Properties'),\n                    visible: this._localService.isDisplayProperty(),\n                    tabs: [\n                        {\n                            name: 'Properties',\n                            sections: [\n                                <ContentSection>{ name: 'Properties', component: 'csi-property-list', dataSource: '' }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        };\n    }\n\n    private getPanelType(el : IElement | IUIComponentRef): string {\n        let panelType : string;\n        let compRef = <IUIComponentRef> el;\n        if( compRef.__type === \"UIComponentRef\" ){\n            panelType = compRef.type;\n        }\n        else{\n            let element = <IElement> el;\n            let maintType = element.__maint || element.__unbound;\n            if(maintType)\n                panelType = _.findKey(this._portalElementServiceMap, p => p == maintType);\n            else\n                panelType = element.type;\n        }\n        return panelType;\n    }\n\n    getSvcService(panelType: string): string {\n        return this._portalElementServiceMap[panelType.toLowerCase()];\n    }\n\n    private readonly _portalElementServiceMap = {\n        \"menu\": \"PortalMenuDefinitionMaint\",\n        \"tab\": \"PortalTabMaint\",\n        \"action\": \"ActionMaint\",\n        \"actioncategory\": \"ActionCategoryMaint\",\n        \"actionrule\": \"ActionRuleMaint\",\n        \"pagemap\": \"*pageMap\",\n        \"targetmatrix\": \"*targetMatrix\"\n    };\n}\n","<div class=\"csi-framework-template\" *ngIf=\"metadataLoaded; else mdloading\">\n    <header>\n        <csi-title-menu  [activeElement]='activeRootElement'></csi-title-menu>\n        <div class=\"thin-blue-line\"></div>\n        <csi-action-menu></csi-action-menu>\n    </header>\n    <main class=\"csi-framework-content\">\n        <div class=\"csi-main\">\n            <div #leftDock class=\"main-left-column csi-dock\" [class.hidden]=\"!hasAnyVisiblePanels(dockPanels.left)\">\n                <csi-dock-area [dockPanels]=\"dockPanels.left\" (panelCommand)=\"panelCommand($event)\" [subjects]=\"subjects\"></csi-dock-area>\n            </div>\n            <csi-panel-splitter [direction]=\"'v'\" [panel]=\"leftDock\" [panelBefore]=\"true\"></csi-panel-splitter>\n            <div class=\"csi-layout-column\">\n                <csi-layout-tabs class=\"layout-tab\" [elements]='openedElements'\n                                 [activeElement]='activeRootElement'\n                                 (closeElement)='closeOpenedElement($event)'\n                                 (closeAndSaveElement)='saveAndCloseOpenedElement($event)'></csi-layout-tabs>                \n                <csi-layout [rootElement]='activeRootElement' [subjects]=\"subjects\" [showTraceViewer]=\"showTraceViewer\"\n                            (onLoadElement)='load($event)'></csi-layout>                \n            </div>\n            <csi-panel-splitter [direction]=\"'v'\" [panel]=\"rightDock\"></csi-panel-splitter>\n            <div #rightDock class=\"main-right-column csi-dock\" [class.hidden]=\"!hasAnyVisiblePanels(dockPanels.right)\">\n                <csi-dock-area [dockPanels]=\"dockPanels.right\" (panelCommand)=\"panelCommand($event)\" [subjects]=\"subjects\"></csi-dock-area>\n            </div>\n        </div>\n        <mat-spinner *ngIf=\"false\" class=\"spinner\"></mat-spinner>\n    </main>\n</div>\n\n<ng-template #mdloading>\n    <div>Initializing...</div>\n</ng-template>","import { NgModule, Optional, SkipSelf } from '@angular/core';\n\n//app modules\nimport { AlertModule } from '../alert';\nimport { LayoutModule } from '../layout';\nimport { MenuModule } from '../menu';\nimport { PanelModule } from '../panel';\nimport { PropertyConditionModule } from '../panel/properties/propertyConditions';\nimport { SharedModule } from '../shared';\nimport { WizardModule } from './wizard';\n\n//app components\nimport { StudioComponent } from './studio.component';\n\n//app services\nimport { PortalSettingsService } from '../common/services/portalSettings.service';\nimport { MetadataService } from '../common/services/metadata.service';\n\n@NgModule({\n    imports: [\n        AlertModule,\n        LayoutModule,\n        MenuModule,\n        PanelModule,\n        PropertyConditionModule,\n        SharedModule,\n        WizardModule,\n    ],\n    declarations: [\n        StudioComponent,\n    ],\n    providers: [\n        MetadataService,\n        PortalSettingsService\n    ]\n})\nexport class StudioModule {\n    constructor( @Optional() @SkipSelf() parentModule: StudioModule) {\n        if (parentModule) {\n            throw new Error(\n                'StudioModule is already loaded. Import it in the AppModule only');\n        }\n    }\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport * as _ from 'lodash';\n\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { LabelService } from '../../../common/services/label.service';\nimport { ContentSection, StudioSubjects, BatchImportExportSettings } from '../../../common/objects/common';\nimport { Subject, Subscription } from 'rxjs';\nimport { MetadataService } from '../../../common/services/metadata.service';\n\ntype WS = { code: string, checked: boolean, name: string };\n\n@Component({\n    selector: 'batch-export-wizard',\n    styleUrls: ['batchExport.component.less', '../../../shared/internalTabs.less'],\n    templateUrl: 'batchExport.component.html'\n})\nexport class BatchExportComponent implements OnInit {\n    subjects: StudioSubjects;\n    internalTabs: ContentSection[];\n    activeTab: ContentSection;\n    exportToFileEnabled: boolean = false;\n    validationMessage: string;\n    checkedSubj = new Subject<{ n: string, t: string }[]>();\n    exportFileType: string;\n\n    wsCodes: WS[];\n    private checkedSubs: Subscription;\n    private selectedItems: { n: string, t: string }[] = [];\n    private get exportToXml(): boolean { return this.exportFileType == \"xml\"; }\n    private get exportToZip(): boolean { return this.exportFileType == \"zip\"; }\n\n    get dialog(): MatDialogRef<BatchExportComponent> {\n        return this._dialog;\n    }\n\n    constructor(\n        private _dialog: MatDialogRef<BatchExportComponent>,\n        private _labelService: LabelService,\n        private _metadataService: MetadataService) {\n\n        this.wsCodes = this._metadataService.workspaces.map(w => <WS>{ code: w.Code, checked: false, name: w.Name });\n\n        this.subjects = new StudioSubjects();\n    }\n\n    ngOnInit(): void {\n        this.internalTabs = [\n            <ContentSection>{ name: 'Pages', component: 'csi-element-panel', isSelectable: true, dataSource: 'Page' },\n            <ContentSection>{ name: 'Web Parts', component: 'csi-element-panel', isSelectable: true, dataSource: 'Webpart' },\n            <ContentSection>{ name: 'Pageflows', component: 'csi-element-panel', isSelectable: true, dataSource: 'Pageflow' }\n        ];\n        this.activeTab = this.internalTabs[0];\n        this.checkedSubs = this.checkedSubj.subscribe(s => this.selectedItems = s);\n    }\n\n    ngOnDestroy(): void {\n        if (this.checkedSubs) {\n            this.checkedSubs.unsubscribe();\n            this.checkedSubs = null;\n        }\n    }\n\n    save(): void {\n        if (this.validate())\n            this._dialog.close(this.getSettings());\n    }\n\n    cancel(): void {\n        this._dialog.close(null);\n    }\n\n    validate(): boolean {\n        let res = false;\n        if (_.some(this.wsCodes, w => w.checked)) {\n            if (this.exportToFileEnabled) {\n                if(this.exportToXml || this.exportToZip){\n                    if (this.selectedItems.length > 0)\n                        res = true;\n                    else\n                        this.validationMessage = this._labelService.getLabel(\"PS_BatchExport_Validation1\", \"No Pageflows, Pages or Web Parts are selected for export.\");\n                }else\n                     this.validationMessage = this._labelService.getLabel(\"PS_BatchExport_Validation4\", \"File type is not selected\");   \n                \n            }\n            else\n                this.validationMessage = this._labelService.getLabel(\"PS_BatchExport_Validation2\", \"Export to file was not selected.\");\n        }\n        else\n            this.validationMessage = this._labelService.getLabel(\"PS_BatchExport_Validation3\", \"Select at least one workspace to export.\");\n\n        return res;\n    }\n\n    getSettings(): BatchImportExportSettings {\n        let settings = new BatchImportExportSettings();\n        settings.ExportTo = this.exportToXml ? 0 : 1;\n        settings.SelectedWorkspaces = this.wsCodes.filter(ws => ws.checked).map(ws1=> ws1.code);\n        settings.Pages = this.selectedItems.filter(p=> p.t == \"Page\").map(p1 => p1.n).sort();\n        settings.WebParts = this.selectedItems.filter(p=> p.t == \"Webpart\").map(p1 => p1.n).sort();\n        settings.Pageflows = this.selectedItems.filter(p=> p.t == \"Pageflow\").map(p1 => p1.n).sort();\n        return settings;\n    }\n}","<div class=\"csi-modal batch-export-wizard\" csi-dialog-decor [dialog]=\"dialog\">\r\n    <header class=\"csi-modal-header\">\r\n        <span class=\"title\">{{'Batch Export' | label: 'PS_BATCH_EXPORT'}}</span>\r\n        <span class=\"close-icon\" (click)=\"cancel()\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></span>\r\n    </header>\r\n        \r\n    <form novalidate (ngSubmit)=\"save()\">\r\n        <main class=\"csi-export-body\">\r\n            <div class=\"csi-export-leftPane\">\r\n                <div class=\"csi-internal-tabs\">\r\n                    <ul>\r\n                        <li *ngFor=\"let tab of internalTabs\" [class.active]=\"activeTab==tab\"><a (click)=\"activeTab=tab\">{{tab.name}}</a></li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"csi-exportItems-panel\">\r\n                    <div *ngFor=\"let tab of internalTabs\" [hidden]=\"tab !== activeTab\" [class.active-tab]=\"tab==activeTab\">\r\n                        <csi-panel [component]=\"tab.component\" [dataSource]=\"tab.dataSource\" [subjects]=\"subjects\" [parameters]=\"{checkedSubj:checkedSubj,newAction:false}\"></csi-panel>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"csi-export-rightPane\">\r\n                <div class=\"title\">{{'Export Options' | label: 'PS_BatchExport_Options'}}</div>\r\n                <div class=\"csi-exportItems-panel\">\r\n                    <div class=\"section-content\">\r\n                        <span class=\"title\">{{'Personalization Type to Export' | label: 'PS_BatchExport_Personalization'}}</span>\r\n                        <div class=\"csi-export-persArea\">\r\n                            <label *ngFor=\"let ws of wsCodes\"><input [(ngModel)]=\"ws.checked\" type=\"checkbox\" [ngModelOptions]=\"{standalone: true}\">{{ws.name}} ({{ws.code}})</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"csi-exportItems-panel-bottom\">\r\n                    <div class=\"section-content\">\r\n                        <label><input [(ngModel)]=\"exportToFileEnabled\" type=\"checkbox\" [ngModelOptions]=\"{standalone: true}\">{{'Export To File' | label: 'PS_BatchExport_ToFile'}}</label>\r\n                        <div class=\"csi-export-fileTypeArea\" [class.areaDisabled]=\"!exportToFileEnabled\">\r\n                            <label><input name=\"fileType\" [ngModelOptions]=\"{standalone: true}\" type=\"radio\" [(ngModel)]=\"exportFileType\" value=\"xml\">{{'XML' | label: 'PS_LAYOUT_XML'}}</label>\r\n                            <label><input name=\"fileType\" [ngModelOptions]=\"{standalone: true}\" type=\"radio\" [(ngModel)]=\"exportFileType\" value=\"zip\">Zip</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n\r\n        <div *ngIf=\"validationMessage\" class=\"alert alert-warning\" (click)=\"this.validationMessage=''\">\r\n            {{validationMessage}}\r\n        </div>\r\n\r\n        <footer>        \r\n            <div class=\"btns\">\r\n                <span class=\"default-btn\" (click)=\"cancel()\">{{'Cancel' | label: 'PS_CANCEL'}}</span>\r\n                <span class=\"primary-btn\" (click)=\"save()\">{{'Start' | label: 'PS_Start'}}</span>\r\n            </div>\r\n        </footer>    \r\n    </form>\r\n</div>\r\n","import { Component } from '@angular/core';\nimport * as _ from 'lodash';\n\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { LabelService } from '../../../common/services/label.service';\n\nimport { StudioSubjects, BatchImportExportSettings } from '../../../common/objects/common';\nimport { MetadataService } from '../../../common/services/metadata.service';\n\ntype WS = { code: string, checked: boolean, name: string };\n\n@Component({\n    selector: 'batch-import-wizard',\n    styles: [`\n        :host{\n            min-width: 600px;\n            min-height: 300px;\n            height: 100%;\n            width: 100%;\n\n            display: flex;\n            flex-direction: column;\n        }\n\n        form {\n            display: flex;\n            flex-direction: column;\n            flex: 1 1 auto;\n        }\n\n        .section-types-to-import{\n            display: flex;\n            flex-direction: column;\n            padding: 10px;\n        }\n\n        .section-title{\n            font-weight: bold;\n        }\n\n        .import-persArea {\n            border: 1px solid #aaa;\n            padding: 5px;\n            max-height: 115px;\n            overflow-y: auto;\n\n            display: flex;\n            flex-direction: column;\n            flex: 1 1 auto;\n        }\n\n        .import-persArea > label input[type=checkbox] {\n            margin: 4px;\n            cursor: pointer;\n        }\n        \n        .import-persArea label{\n            display: flex;\n            align-items: center;\n        }\n\n        .section-import-from-file {\n            display: flex;\n            flex-direction: column;\n            padding: 10px;\n        }\n            \n        .section-import-from-file .file-input-area {\n            display: flex;\n        }\n\n        .section-import-from-file .file-input-area input[type=\"file\"] {\n            position: absolute;\n            left: -9999px;\n            display: none;\n            visibility: hidden;\n        }\n\n        .section-import-from-file .file-input-area input[type=\"text\"] {\n            flex: 1 0 30px;\n        }\n\n        .section-import-from-file .file-input-area  button {\n            flex: auto 0 0px;\n        }\n\n        .section-validation-message{\n            display: flex;\n            flex-direction: column;\n            padding: 10px;            \n        }\n\n        .override-existing {\n            padding-top: 10px;\n        }\n\n        .override-existing input[type=checkbox] {\n            margin: 4px;\n            cursor: pointer;\n        }\n        .override-existing label{\n            display: flex;\n            align-items: center;\n        }\n\n    `],\n    templateUrl: 'batchImport.component.html'\n})\nexport class BatchImportComponent {\n    public subjects: StudioSubjects;\n    public wsCodes: WS[];\n    validationMessage: string;\n    selectedFileName: string = \"\";\n    private selectedFile: any;\n    private overrideIfExists: boolean = true;\n\n    get dialog(): MatDialogRef<BatchImportComponent> {\n        return this._dialog;\n    }\n\n    constructor(\n        private _labelService: LabelService,\n        private _metadataService: MetadataService,\n        private _dialog: MatDialogRef<BatchImportComponent>) {\n\n        this.wsCodes = this._metadataService.workspaces.map(w => <WS>{ code: w.Code, checked: false, name: w.Name });\n        }\n\n    save(): void {\n        if (this.validate())\n            this._dialog.close(this.getSettings());\n    }\n\n    cancel(): void {\n        this._dialog.close(null);\n    }\n\n    inputFileTextKeyDown() {\n        return false; // ignore any keys on input from file textbox since it is readonly.\n    }\n\n    inputFileChanged(e) {\n        let fileName = \"\";\n        let fileElement = e.currentTarget;\n        if (fileElement) {\n            if (e.currentTarget.files && e.currentTarget.files.length > 0) {\n                let file = e.currentTarget.files[0];\n                if (file.type == \"text/xml\" || file.type == \"application/x-zip-compressed\") {\n                    fileName = file.name;\n                    this.selectedFile = file;\n                }\n            }\n        }\n        this.selectedFileName = fileName;\n    }\n\n    inputFileBtnClick(e) {\n        let fileElement = e.currentTarget.parentElement.querySelector(\"input[type=file]\");\n        if (fileElement) {\n            fileElement.focus();\n            fileElement.click();\n        }\n    }\n\n    overrideIfExistsClick(e) {\n        this.overrideIfExists = e.currentTarget.checked;\n    }\n\n    validate(): boolean {\n        let res = false;\n        if (_.some(this.wsCodes, w => w.checked)) {\n            if (this.selectedFileName)\n                res = true;\n            else\n                this.validationMessage = this._labelService.getLabel(\"PS_BatchImport_Validation1\", \"Import from File was not selected.\");\n        }\n        else\n            this.validationMessage = this._labelService.getLabel(\"PS_BatchImport_Validation2\", \"Select at least one workspace to import.\");\n        return res;\n    }\n\n    getSettings(): BatchImportExportSettings {\n        let settings = new BatchImportExportSettings();\n        settings.OverrideIfExists = this.overrideIfExists;\n        settings.SelectedWorkspaces = this.wsCodes.filter(ws => ws.checked).map(ws1=> ws1.code);\n        settings.PostedFile = this.selectedFile;\n        return settings;\n    }\n}","<div class=\"csi-modal batch-import-wizard\" csi-dialog-decor [dialog]=\"dialog\">\r\n    <header class=\"header\">\r\n        <span class=\"title\">{{'Batch Import' | label: 'PS_BATCH_IMPORT'}}</span>\r\n        <span class=\"close-icon\" (click)=\"cancel()\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></span>\r\n    </header>\r\n\r\n    <form novalidate (ngSubmit)=\"save()\">\r\n        <main>\r\n            <section class=\"section-types-to-import\">\r\n                <span class=\"section-title\">{{'Personalization Type to Import' | label: 'PS_BatchImport_Personalization'}}</span>\r\n                <div class=\"import-persArea\">\r\n                    <label *ngFor=\"let ws of wsCodes\"><input type=\"checkbox\" [(ngModel)]=\"ws.checked\" [ngModelOptions]=\"{standalone: true}\">{{ws.name}} ({{ws.code}})</label>\r\n                </div>\r\n            </section>\r\n\r\n            <section class=\"section-import-from-file\">\r\n                <span class=\"section-title\">{{ 'Import from File' | label: 'PS_ImportFromFile'}} </span>\r\n                <div class=\"file-input-area\">\r\n                    <input type=\"file\" id=\"file\" (change)=\"inputFileChanged($event)\" name=\"selectedFile\" accept=\".xml,.zip\" tabindex=\"-1\">\r\n                    <input type=\"text\" [attr.tabindex]=\"-1\" (keydown)=\"inputFileTextKeyDown()\" value=\"{{selectedFileName}}\" />\r\n                    <button type=\"button\" class=\"file-upload-button\" tabindex=\"-1\" (click)=\"inputFileBtnClick($event)\">...</button>    \r\n                </div>\r\n                <div class=\"override-existing\">\r\n                    <label><input type=\"checkbox\" (click)=\"overrideIfExistsClick($event)\" checked />{{'Override Web Part/Page/Pageflow if it already exists' | label: 'PS_BatchImport_Override'}}</label>\r\n                </div>\r\n            </section>\r\n            <section class=\"section-validation-message\">\r\n                <div *ngIf=\"validationMessage\" class=\"alert alert-warning\" (click)=\"validationMessage=''\">\r\n                    {{validationMessage}}\r\n                </div>\r\n            </section>\r\n        </main>\r\n        <footer>        \r\n            <div class=\"btns\">\r\n                <span class=\"default-btn\" (click)=\"cancel()\">{{'Cancel' | label: 'PS_CANCEL'}}</span>\r\n                <span class=\"primary-btn\" (click)=\"save()\">{{'Start' | label: 'PS_Start'}}</span>\r\n            </div>\r\n        </footer>\r\n    </form>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'batch-progress-popup',\r\n    template: `\r\n        <label style=\"display: block;\">{{getTitle()}}</label>\r\n        <div>\r\n            <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n        </div>        \r\n    `,\r\n})\r\nexport class BatchProgressPopup {\r\n    public title: string;\r\n\r\n    getTitle(): string {\r\n        return this.title;\r\n    }\r\n}","export * from './wizard.module';","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\n\nimport { PortalSettingsService, SettingSection } from '../../../common/services/portalSettings.service';\nimport { PortalService } from '../../../common/services/portal.service';\n\n@Component({\n    selector: 'csi-page-wizard',\n    styles: [`\n        :host{\n            min-height: 350px;\n            min-width: 500px;\n            height: 100%;\n            width: 100%;\n\n            display: flex;\n            flex-direction: column;            \n            flex: 1 1 auto;\n        }\n\n        .section-template-selector{\n            display: flex;\n            flex-direction: row;            \n            flex: 1 1 150px;\n        }\n\n        .section-page-parameters{\n            display: flex;\n            flex-direction: column;            \n            flex: 0 0 auto;\n            padding-left: 10px;\n        }\n\n        .section-page-parameters > div {\n            padding: 5px;\n        }\n\n        form {\n            display: flex;\n            flex-direction: column;\n            flex: 1 1 auto;\n        }\n\n        .template-type-description {\n            min-height: 100px;\n            min-width: 300px;\n            padding: 10px;\n        }\n\n        .radio-group-scrolling{  \n            overflow-y: auto;\n            flex-basis: 350px;\n        }\n            \n        .radio-group {\n            padding: 10px;\n            display: inline-flex;\n            flex-direction: column;\n        }\n\n        .radio-group label {\n            flex: 1 1 auto;\n        }\n            \n        .radio-button {\n            margin: 5px;\n        }            \n\n        span.disabled {\n            background-color: #aaaaaa;\n            cursor: not-allowed;\n        }\n\n        footer {\n            border-top: none;\n        }\n\n        .section-page-parameters > div #pageNameId{\n            width: 208px;\n        }\n\n        .section-page-parameters > div select {\n            height: 27px;\n        }\n        \n    `],\n    templateUrl: 'pageWizard.component.html'\n})\nexport class PageWizardComponent implements OnInit {\n    public pageForm: FormGroup;\n    public errorMessage: string;\n    public templateData: ITemplateDataInfo;\n\n    get dialog(): MatDialogRef<PageWizardComponent> {\n        return this._dialog;\n    }\n\n    constructor(\n        private _fb: FormBuilder,\n        private _dialog: MatDialogRef<PageWizardComponent>,\n        private _portalService: PortalService,\n        private _portalSettings: PortalSettingsService) { }\n\n    ngOnInit(): void {\n        this.pageForm = this._fb.group({\n            pageName: ['', Validators.required],\n            serviceType: '',\n            serviceTypes: [],\n            template: 'blank',\n            eproc: false\n        });\n        this._portalService.getCamstarServices().subscribe(services => {\n            this.pageForm.get('serviceTypes').setValue(services);\n        });\n        let sections = this._portalSettings.getSections();\n        sections.subscribe(sects => {\n            let templateSection = { name: \"templatesettings\" };\n            this.templateData = this._portalSettings.getSectionData(<SettingSection>templateSection);\n        })\n    }\n\n    save(): void {\n        if (this.pageForm.valid) {\n            let form = this.pageForm.value;\n            let template = form.template;\n            \n            if (template == 'modeling')\n                template = this.templateData.ModelingTemplatePage;\n            if (template == 'container')\n                template = form.eproc ? this.templateData.ContainerWithEprocedureTemplatePage : this.templateData.ContainerTemplatePage;\n\n            let page = {\n                name: form.pageName,\n                serviceType: form.serviceType,\n                template: template,\n                isEproc: form.eproc\n            }\n            this._dialog.close(page);\n        }\n    }\n\n    cancel(): void {\n        this._dialog.close();\n    }\n}\n\nexport interface ITemplateDataInfo {\n    ContainerTemplatePage: string;\n    ContainerWithEprocedureTemplatePage: string;\n    ModelingTemplatePage: string;\n    UserTemplate1?: string;\n    UserTemplate2?: string;\n    UserTemplate3?: string;\n}","<div class=\"csi-modal page-wizard\" [attr.title]=\"''\" csi-dialog-decor [dialog]=\"dialog\">\r\n\r\n    <header class=\"header\">\r\n        <span class=\"title\">Create New Page</span>\r\n        <span class=\"close-icon\" (click)=\"cancel()\">\r\n            <i class=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n        </span>\r\n    </header>\r\n\r\n    <form novalidate (ngSubmit)=\"save()\" [formGroup]=\"pageForm\">\r\n        <main class=\"main-content\">\r\n            <section class=\"section-template-selector\">\r\n                <div class=\"radio-group-scrolling\">\r\n                <mat-radio-group class=\"radio-group\" formControlName=\"template\">\r\n                    <mat-radio-button class=\"radio-button\" value=\"blank\">{{'Blank' | label: 'PS_BLANK'}}</mat-radio-button>\r\n                    <mat-radio-button class=\"radio-button\" value=\"container\">{{'Container' | label: 'PS_CONTAINER'}}</mat-radio-button>\r\n                    <mat-radio-button class=\"radio-button\" value=\"modeling\">{{'Modeling' | label: 'PS_MODELING'}}</mat-radio-button>\r\n                    <mat-radio-button class=\"radio-button\" *ngIf=\"templateData && templateData.UserTemplate1\" [value]=\"templateData.UserTemplate1\">{{templateData.UserTemplate1}}</mat-radio-button>\r\n                    <mat-radio-button class=\"radio-button\" *ngIf=\"templateData && templateData.UserTemplate2\" [value]=\"templateData.UserTemplate2\">{{templateData.UserTemplate2}}</mat-radio-button>\r\n                    <mat-radio-button class=\"radio-button\" *ngIf=\"templateData && templateData.UserTemplate3\" [value]=\"templateData.UserTemplate3\">{{templateData.UserTemplate3}}</mat-radio-button>\r\n                </mat-radio-group>\r\n            </div>\r\n                <div class=\"template-type-description\">\r\n                    <span *ngIf=\"pageForm.get('template').value == 'blank'\">\r\n                        {{'Using this template will provide a blank template for developing a general Portal page.' | label: 'PS_ADD_PAGE_BLANK'}}\r\n                    </span>\r\n                    <span *ngIf=\"pageForm.get('template').value == 'container'\">\r\n                        {{'Using this template will provide basic components for developing a container page.' | label: 'PS_ADD_PAGE_CONTAINER'}}\r\n                        <br>\r\n                        <input type=\"checkbox\" formControlName=\"eproc\"> {{'Include basic Eprocedure components' | label: 'PS_ADD_PAGE_EPROCEDURE'}}\r\n                    </span>\r\n                    <span *ngIf=\"pageForm.get('template').value == 'modeling'\">\r\n                        {{'Using this template will provide basic components for developing a modeling page.' | label: 'PS_ADD_PAGE_MODELING'}}\r\n                    </span>                    \r\n                </div>\r\n            </section>\r\n            <section class=\"section-page-parameters\">\r\n                <div>\r\n                    <label class=\"control-label\" for=\"pageNameId\">{{'Page Name' | label: 'PS_PAGE_NAME'}}</label>\r\n                    <div>\r\n                        <input class=\"\" id=\"pageNameId\" type=\"text\" placeholder=\"Page Name\" formControlName=\"pageName\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"\">\r\n                    <label class=\"control-label\" for=\"primaryServiceTypeId\">{{'Primary Service Type' | label: 'PS_PRIMARY_SERVICE_TYPE'}}</label>\r\n                    <div>\r\n                        <select class=\"\" formControlName=\"serviceType\">\r\n                            <option value=\"\"></option>\r\n                            <option *ngFor=\"let type of pageForm.get('serviceTypes').value\" [value]=\"type.ClassName\">{{type.ClassName}}</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </main>\r\n\r\n        <footer>\r\n            <div class=\"popup-message\">\r\n                <span>{{errorMessage}}</span>\r\n            </div>\r\n            <div class=\"btns\">\r\n                <span class=\"default-btn\" (click)=\"cancel()\">{{'Cancel' | label: 'PS_CANCEL'}}</span>\r\n                <span class=\"primary-btn\" (click)=\"save()\" [class.disabled]=\"!pageForm.valid\">{{'Ok' | label: 'PS_ACTION_OK'}}</span>\r\n            </div>\r\n        </footer>\r\n    </form>\r\n</div>","import { NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { PanelModule } from '../../panel';\r\nimport { SharedModule } from '../../shared';\r\n\r\n//third part modules\r\nimport { PageWizardComponent } from './page/pageWizard.component';\r\nimport { BatchExportComponent } from './batchExportImport/batchExport.component';\r\nimport { BatchImportComponent } from './batchExportImport/batchImport.component';\r\nimport { BatchProgressPopup } from './batchExportImport/batchProgressPopup.component';\r\n\r\nconst COMPONENTS = [\r\n    BatchExportComponent, \r\n    BatchImportComponent, \r\n    BatchProgressPopup,\r\n    PageWizardComponent,  \r\n]\r\n\r\n@NgModule({\r\n    imports: [\r\n        BrowserAnimationsModule,\r\n        PanelModule,\r\n        SharedModule,\r\n        ReactiveFormsModule,\r\n    ],\r\n    declarations: [\r\n        COMPONENTS,\r\n    ],\r\n    exports: [\r\n        COMPONENTS,\r\n    ],\r\n    entryComponents: [\r\n        COMPONENTS,\r\n    ],\r\n})\r\nexport class WizardModule {\r\n    constructor( @Optional() @SkipSelf() parentModule: WizardModule) {\r\n        if (parentModule) {\r\n            throw new Error(\r\n                'WizardModule is already loaded. Import it in the StudioModule only');\r\n        }\r\n    }\r\n}\r\n\r\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  portalUrl: \"\",\n  wcfUrl: \"\",\n  portalMode: \"\",\n  workspace: '0'\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nconst hr = window.location.href;\nconst i = hr.lastIndexOf('/index.html');\nconst iwcf = window.location.search.indexOf(\"&wcf=\");\n\nif( i==-1 || iwcf == -1){\n    // developer's default settings -- should be removed\n    environment.portalUrl = \"https://localhost/CamstarPortal\";\n    environment.wcfUrl = \"https://localhost/CamstarWCFServices\";\n    environment.portalMode = \"Apollo\";\n}\nelse{\n    environment.portalUrl = hr.substr(0, i - \"/PortalStudio\".length);\n    environment.wcfUrl = unescape(window.location.search.substr(iwcf+5));\n    if(window.location.host !== \"localhost\" &&  environment.wcfUrl.indexOf(\"//localhost/\") != -1){\n         environment.wcfUrl = unescape(window.location.search.substr(iwcf+5)).replace(\"localhost/\", window.location.host +\"/\");\n    }\n    \n    environment.portalMode = window.location.search.substr(12, iwcf - 12);\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"]}