{"version":3,"sources":["./src/$_lazy_route_resource lazy namespace object","./src/app/alert/alert.component.ts","./src/app/alert/alert.modal.component.ts","./src/app/alert/alert.module.ts","./src/app/alert/alert.service.ts","./src/app/alert/alert.ts","./src/app/alert/index.ts","./src/app/app.module.ts","./src/app/authorization/authorization.module.ts","./src/app/authorization/authorization.service.ts","./src/app/authorization/index.ts","./src/app/authorization/login.dialog.component.ts","./src/app/authorization/login.dialog.component.html","./src/app/authorization/start.component.ts","./src/app/common/objects/common.ts","./src/app/common/objects/fieldDirectoryBase.ts","./src/app/common/objects/historyLog.ts","./src/app/common/objects/viewModel.ts","./src/app/common/services/convertor.service.ts","./src/app/common/services/dataAccessors.ts","./src/app/common/services/dataValue.service.ts","./src/app/common/services/label.service.ts","./src/app/common/services/local.service.ts","./src/app/common/services/metadata.service.ts","./src/app/common/services/pageGrouping.service.ts","./src/app/common/services/portal.service.ts","./src/app/common/services/portalSettings.service.ts","./src/app/common/services/studioStateService.ts","./src/app/common/services/wcf.service.ts","./src/app/core/app/app.component.ts","./src/app/core/core.module.ts","./src/app/core/index.ts","./src/app/core/routing.ts","./src/app/layout/design/control/controlBase.component.ts","./src/app/layout/design/control/controlContainer.component.ts","./src/app/layout/design/control/controlContainer.component.html","./src/app/layout/design/control/controlManager.ts","./src/app/layout/design/control/controlMapping.service.ts","./src/app/layout/design/control/templates/BooleanSwitch.component.ts","./src/app/layout/design/control/templates/BooleanSwitchDesign.html","./src/app/layout/design/control/templates/businessObject.component.ts","./src/app/layout/design/control/templates/BusinessObjectDesign.html","./src/app/layout/design/control/templates/button.component.ts","./src/app/layout/design/control/templates/ButtonDesign.html","./src/app/layout/design/control/templates/checkBox.component.ts","./src/app/layout/design/control/templates/CheckBoxDesign.html","./src/app/layout/design/control/templates/colorPicker.component.ts","./src/app/layout/design/control/templates/ColorPickerDesign.html","./src/app/layout/design/control/templates/containerList.component.ts","./src/app/layout/design/control/templates/ContainerListDesign.html","./src/app/layout/design/control/templates/containerListGrid.component.ts","./src/app/layout/design/control/templates/ContainerListGridDesign.html","./src/app/layout/design/control/templates/crystalReport.component.ts","./src/app/layout/design/control/templates/CrystalReportDesign.html","./src/app/layout/design/control/templates/dataCollection.component.ts","./src/app/layout/design/control/templates/DataCollectionDesign.html","./src/app/layout/design/control/templates/dateChooser.component.ts","./src/app/layout/design/control/templates/DateChooserDesign.html","./src/app/layout/design/control/templates/dropDownList.component.ts","./src/app/layout/design/control/templates/DropDownListDesign.html","./src/app/layout/design/control/templates/duration.component.ts","./src/app/layout/design/control/templates/DurationDesign.html","./src/app/layout/design/control/templates/fileInput.component.ts","./src/app/layout/design/control/templates/FileInputDesign.html","./src/app/layout/design/control/templates/generic.component.ts","./src/app/layout/design/control/templates/GenericDesign.html","./src/app/layout/design/control/templates/htmlPanel.component.ts","./src/app/layout/design/control/templates/HTMLPanelDesign.html","./src/app/layout/design/control/templates/iframe.component.ts","./src/app/layout/design/control/templates/IframeDesign.html","./src/app/layout/design/control/templates/image.component.ts","./src/app/layout/design/control/templates/ImageControlDesign.html","./src/app/layout/design/control/templates/inquiry.component.ts","./src/app/layout/design/control/templates/InquiryDesign.html","./src/app/layout/design/control/templates/instructionText.component.ts","./src/app/layout/design/control/templates/InstructionTextDesign.html","./src/app/layout/design/control/templates/jqDataGrid.component.ts","./src/app/layout/design/control/templates/JQDataGridDesign.html","./src/app/layout/design/control/templates/jqTabContainer.companent.ts","./src/app/layout/design/control/templates/CombinedControlDesign.html","./src/app/layout/design/control/templates/label.component.ts","./src/app/layout/design/control/templates/LabelDesign.html","./src/app/layout/design/control/templates/linkButton.component.ts","./src/app/layout/design/control/templates/LinkButtonDesign.html","./src/app/layout/design/control/templates/multiSelectPickList.component.ts","./src/app/layout/design/control/templates/MultiSelectPickListDesign.html","./src/app/layout/design/control/templates/namedObject.component.ts","./src/app/layout/design/control/templates/NamedObjectDesign.html","./src/app/layout/design/control/templates/pageTab.component.ts","./src/app/layout/design/control/templates/PageTabDesign.html","./src/app/layout/design/control/templates/piMetric.componen.ts","./src/app/layout/design/control/templates/PIMetricDesign.html","./src/app/layout/design/control/templates/plmVis.component.ts","./src/app/layout/design/control/templates/PlmVisWebDesign.html","./src/app/layout/design/control/templates/radioButton.component.ts","./src/app/layout/design/control/templates/RadioButtonDesign.html","./src/app/layout/design/control/templates/readOnly.component.ts","./src/app/layout/design/control/templates/ReadOnlyDesign.html","./src/app/layout/design/control/templates/revisionedObject.component.ts","./src/app/layout/design/control/templates/RevisionedObjectDesign.html","./src/app/layout/design/control/templates/ribbonContainer.companent.ts","./src/app/layout/design/control/templates/scaleControl.component.ts","./src/app/layout/design/control/templates/ScaleControlDesign.html","./src/app/layout/design/control/templates/scrollableMenu.component.ts","./src/app/layout/design/control/templates/ScrollableMenuDesign.html","./src/app/layout/design/control/templates/sectionDropDown.companent.ts","./src/app/layout/design/control/templates/sectionDropDownMobile.companent.ts","./src/app/layout/design/control/templates/slideMenu.component.ts","./src/app/layout/design/control/templates/SlideMenuDesign.html","./src/app/layout/design/control/templates/statusMessage.component.ts","./src/app/layout/design/control/templates/StatusMessageDesign.html","./src/app/layout/design/control/templates/textBox.component.ts","./src/app/layout/design/control/templates/TextBoxDesign.html","./src/app/layout/design/control/templates/textEditor.component.ts","./src/app/layout/design/control/templates/TextEditorDesign.html","./src/app/layout/design/control/templates/title.component.ts","./src/app/layout/design/control/templates/TitleDesign.html","./src/app/layout/design/control/templates/toggleContainer.companent.ts","./src/app/layout/design/control/templates/unknown.component.ts","./src/app/layout/design/control/templates/webPartsWrapperControl.companent.ts","./src/app/layout/design/control/templates/workflowNavigator.componen.ts","./src/app/layout/design/control/templates/WorkflowNavigatorDesign.html","./src/app/layout/design/design-root.component.ts","./src/app/layout/design/design-root.component.html","./src/app/layout/design/design.component.ts","./src/app/layout/design/design.component.html","./src/app/layout/design/design.module.ts","./src/app/layout/design/designPageflow.component.ts","./src/app/layout/design/designPageflow.component.html","./src/app/layout/design/gridWizard/gridWizard.component.ts","./src/app/layout/design/gridWizard/gridWizard.component.html","./src/app/layout/design/gridWizard/gridWizard.service.ts","./src/app/layout/design/gridWizard/gridWizard.ts","./src/app/layout/design/gridWizard/gridWizardFilter.ts","./src/app/layout/design/index.ts","./src/app/layout/design/objects/cellSelection.ts","./src/app/layout/design/objects/layoutCell.ts","./src/app/layout/design/objects/layoutManager.ts","./src/app/layout/design/objects/layoutMenuItem.ts","./src/app/layout/design/pipes/componentItemFilter.ts","./src/app/layout/design/pipes/hiddenItemFilter.ts","./src/app/layout/design/toolbar.component.ts","./src/app/layout/design/toolbar.component.html","./src/app/layout/design/whereUsed/whereUsed.component.ts","./src/app/layout/design/whereUsed/whereUsed.component.html","./src/app/layout/index.ts","./src/app/layout/layout.component.ts","./src/app/layout/layout.component.html","./src/app/layout/layout.module.ts","./src/app/layout/personalizationReport/personalizationReport.component.ts","./src/app/layout/personalizationReport/personalizationReport.component.html","./src/app/layout/startPage.component.ts","./src/app/layout/startPage.component.html","./src/app/layout/tabs.component.ts","./src/app/layout/tabs.component.html","./src/app/layout/traceLog/hierarchy.component.ts","./src/app/layout/traceLog/hierarchy.component.html","./src/app/layout/traceLog/index.ts","./src/app/layout/traceLog/rawText.component.ts","./src/app/layout/traceLog/resubmitRequest.component.ts","./src/app/layout/traceLog/serviceTraceView.component.ts","./src/app/layout/traceLog/serviceTraceView.component.html","./src/app/layout/traceLog/traceItem.component.ts","./src/app/layout/traceLog/traceLog.component.ts","./src/app/layout/traceLog/traceLog.component.html","./src/app/layout/traceLog/traceLog.module.ts","./src/app/layout/traceLog/traceLog.ts","./src/app/layout/traceLog/traceRawView.component.ts","./src/app/layout/xml/xmlTextEditor.component.ts","./src/app/menu/action-menu.component.ts","./src/app/menu/action-menu.component.html","./src/app/menu/actionManager.ts","./src/app/menu/index.ts","./src/app/menu/menu.module.ts","./src/app/menu/title-menu.component.ts","./src/app/menu/title-menu.component.html","./src/app/panel/index.ts","./src/app/panel/panel.component.ts","./src/app/panel/panel.component.html","./src/app/panel/panel.module.ts","./src/app/panel/panel.ts","./src/app/panel/panelSplitter.component.ts","./src/app/panel/panels/controlPanel.component.ts","./src/app/panel/panels/controlPanel.component.html","./src/app/panel/panels/dockArea.component.ts","./src/app/panel/panels/dockArea.component.html","./src/app/panel/panels/elementPanel.component.ts","./src/app/panel/panels/elementPanel.component.html","./src/app/panel/panels/fieldDirectory.component.ts","./src/app/panel/panels/fieldDirectory.component.html","./src/app/panel/panels/portalObjectPanel.component.ts","./src/app/panel/pipe/element.filter.ts","./src/app/panel/pipe/fieldDirectory.filter.ts","./src/app/panel/properties/nameValue.ts","./src/app/panel/properties/nameValue.html","./src/app/panel/properties/properties.ts","./src/app/panel/properties/property.filter.ts","./src/app/panel/properties/propertyConditions/condition.ts","./src/app/panel/properties/propertyConditions/conditionDisplay.ts","./src/app/panel/properties/propertyConditions/editCondition.ts","./src/app/panel/properties/propertyConditions/editCondition.html","./src/app/panel/properties/propertyConditions/expression.ts","./src/app/panel/properties/propertyConditions/expression.html","./src/app/panel/properties/propertyConditions/index.ts","./src/app/panel/properties/propertyConditions/initiator.ts","./src/app/panel/properties/propertyConditions/initiator.html","./src/app/panel/properties/propertyConditions/propertyCondition.ts","./src/app/panel/properties/propertyConditions/propertyCondition.html","./src/app/panel/properties/propertyConditions/propertyConditions.module.ts","./src/app/panel/properties/propertyConditions/valueCondition.ts","./src/app/panel/properties/propertyConditions/valueCondition.html","./src/app/panel/properties/propertyList.ts","./src/app/panel/properties/propertyList.html","./src/app/panel/properties/valueEditors/fieldExpression.ts","./src/app/panel/properties/valueEditors/fieldExpression.html","./src/app/panel/properties/valueEditors/fieldExpressionDialog.ts","./src/app/panel/properties/valueEditors/labelSearch.ts","./src/app/panel/properties/valueEditors/labelSearch.html","./src/app/panel/properties/valueEditors/margins.ts","./src/app/panel/properties/valueEditors/modalCollection.ts","./src/app/panel/properties/valueEditors/modalCollection.html","./src/app/panel/properties/valueEditors/modalContainer.ts","./src/app/panel/properties/valueEditors/modalContainer.html","./src/app/panel/properties/valueEditors/modalObject.ts","./src/app/panel/properties/valueEditors/pageActionRuleBuilder.component.ts","./src/app/panel/properties/valueEditors/pageActionRuleBuilder.component.html","./src/app/panel/properties/valueEditors/portalSettings.ts","./src/app/panel/properties/valueEditors/queryBuilder.component.ts","./src/app/panel/properties/valueEditors/queryBuilder.component.html","./src/app/panel/properties/valueEditors/selector.ts","./src/app/panel/properties/valueEditors/selector.html","./src/app/panel/properties/valueEditors/switchBox.ts","./src/app/panel/properties/valueEditors/targetMatrixRows.component.ts","./src/app/panel/properties/valueEditors/textBox.ts","./src/app/panel/properties/valueEditors/webiReports.component.ts","./src/app/shared/context-menu.directive.ts","./src/app/shared/dialog/confirm.dialog.component.ts","./src/app/shared/dialog/confirm.dialog.component.html","./src/app/shared/dialog/input.dialog.component.ts","./src/app/shared/dialog/input.dialog.component.html","./src/app/shared/directives/closable.directive.ts","./src/app/shared/directives/dialogDecor.directive.ts","./src/app/shared/directives/draggable.directive.ts","./src/app/shared/directives/droppable.directive.ts","./src/app/shared/drag.service.ts","./src/app/shared/drag.ts","./src/app/shared/index.ts","./src/app/shared/inputdialog-addGroup.directive.ts","./src/app/shared/pipe/label.pipe.ts","./src/app/shared/pipe/panel-name.pipe.ts","./src/app/shared/shared.module.ts","./src/app/studio/index.ts","./src/app/studio/studio.component.ts","./src/app/studio/studio.component.html","./src/app/studio/studio.module.ts","./src/app/studio/wizard/batchExportImport/batchExport.component.ts","./src/app/studio/wizard/batchExportImport/batchExport.component.html","./src/app/studio/wizard/batchExportImport/batchImport.component.ts","./src/app/studio/wizard/batchExportImport/batchImport.component.html","./src/app/studio/wizard/batchExportImport/batchProgressPopup.component.ts","./src/app/studio/wizard/index.ts","./src/app/studio/wizard/page/pageWizard.component.ts","./src/app/studio/wizard/page/pageWizard.component.html","./src/app/studio/wizard/wizard.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component, Input, OnChanges } from '@angular/core';\r\nimport { Alert } from './alert';\r\n\r\n@Component({\r\n    selector: 'csi-alert',\r\n    template: \r\n    `<div *ngFor=\"let al of statusAlerts\" [class]=\"al.class\" role=\"alert\" title=\"Click to close\" (click)=\"close(al)\">\r\n        <div class=\"alert-time\">{{al.time | date:'mediumTime'}}</div>\r\n        <div>{{al.message}}</div>\r\n     </div>`\r\n})\r\n\r\nexport class AlertComponent implements OnChanges {\r\n    @Input() alerts: Alert[];\r\n\r\n    // Alerts displayed in status area\r\n    statusAlerts: Alert[];\r\n\r\n    ngOnChanges(changes) {\r\n        if (changes.alerts) {\r\n            let als = (<Alert[]>changes.alerts.currentValue);\r\n            this.statusAlerts = als.map(sa => sa);\r\n        }\r\n    }\r\n\r\n    close(alert): void {\r\n        this.remove(alert);\r\n    }\r\n\r\n    remove(alertToRemove: Alert) {\r\n        let i = this.alerts.findIndex(a => a.time == alertToRemove.time);\r\n        if (i != -1) {\r\n            this.alerts.splice(i, 1);\r\n            this.statusAlerts = this.alerts.filter(a => !a.modal);\r\n        }\r\n    }\r\n}","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n    selector: 'csi-alert-modal',\n    template: \n    `<div class=\"csi-modal\">\n        <header [csi-closable]=\"'close'\" (onClose)=\"closeSelectElement($event)\">\n            <span class=\"title\">{{title}}</span>\n        </header>\n        <main><div class=\"alert\">{{messageText}}</div></main>\n        <footer>\n            <div class=\"btns\">\n                <span *ngIf=\"cancelBtnCaption\" class=\"default-btn\" (click)=\"execute('cancel')\">{{cancelBtnCaption}}</span>\n                <span class=\"primary-btn\" (click)=\"execute('primary')\">{{primaryBtnCaption}}</span>\n            </div>\n        </footer>\n    `\n})\n\nexport class AlertModalComponent {\n\n    public messageText: string;\n    public messageClass: string;\n    public title: string;\n    public cancelBtnCaption: string;\n    public primaryBtnCaption: string;\n\n    constructor(private dialogRef: MatDialogRef<AlertModalComponent>) {\n    }\n\n    execute(answer: string): void {\n        this.dialogRef.close(answer);\n    }\n\n    closeSelectElement($ev : Event){\n\n    }\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AlertService } from './alert.service';\r\nimport { AlertComponent } from './alert.component';\r\nimport { AlertModalComponent } from './alert.modal.component';\r\nimport { SharedModule } from '../shared';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        SharedModule\r\n    ],\r\n    declarations: [\r\n        AlertComponent,\r\n        AlertModalComponent\r\n    ],\r\n    exports: [\r\n        AlertComponent\r\n    ],\r\n    entryComponents:[\r\n        AlertModalComponent\r\n    ],\r\n    providers: [\r\n        AlertService\r\n    ]\r\n})\r\nexport class AlertModule {\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { IResultStatus, ILabel } from '../common/objects/common';\nimport { Alert, AlertTypes } from './alert';\nimport { LabelService } from '../common/services/label.service';\n\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Observable } from 'rxjs';\nimport {map } from 'rxjs/operators';\nimport { AlertModalComponent } from './alert.modal.component';\n\n@Injectable()\nexport class AlertService {\n\n    public alerts: Alert[] = [];\n\n    constructor(\n        private _dialog: MatDialog,\n        private _labelService: LabelService,\n        private _snackBar: MatSnackBar) {\n    }\n\n    public init() : void {\n        this.alerts = [];\n    }\n\n    public displayResultStatus(status: IResultStatus) {\n        this.addAlert(status.IsSuccess ? AlertTypes.success : AlertTypes.danger, status, false);\n    }\n\n\n    public error(err: string | IResultStatus | ILabel) {\n        this.addAlert(AlertTypes.danger, err, false);\n    }\n\n    public warning(err: string | IResultStatus | ILabel) {\n        this.addAlert(AlertTypes.warning, err, false);\n    }\n\n    public success(err: string | IResultStatus | ILabel) {\n        this.addAlert(AlertTypes.success, err, false);\n    }\n\n\n    public displayResultStatusModal(status: IResultStatus) {\n        this.addAlert(status.IsSuccess ? AlertTypes.success : AlertTypes.danger, status, true);\n    }\n\n    public warningModal(err: string | IResultStatus | ILabel, title?: string | ILabel): Observable<boolean> {\n        return this.openModalAlert(AlertTypes.warning, err, title).pipe(map(action => action == \"primary\"));\n    }\n    public errorModal(err: string | IResultStatus | ILabel, title?: string | ILabel) {\n        return this.openModalAlert(AlertTypes.danger, err, title);\n    }\n\n    public confirmModal(txt: string | ILabel, title?: string | ILabel): Observable<boolean>  {\n        return this.openModalAlert(AlertTypes.choice, txt, title).pipe(map(action => action == \"primary\"));\n    }\n\n    public choiceModal(txt: string | ILabel, title?: string | ILabel, choices?: ILabel[]): Observable<string>  {\n        return this.openModalAlert(AlertTypes.choice, txt, title, choices);\n    }\n\n    private resolveText(textOrLabelOrStatus: string | IResultStatus | ILabel): string {\n        let txt: string;\n\n        if (typeof textOrLabelOrStatus === \"string\")\n            txt = <string>textOrLabelOrStatus;\n        else if ((<ILabel>textOrLabelOrStatus).Name) {\n            let lbl = <ILabel>textOrLabelOrStatus;\n            txt = lbl.arguments ?\n                this._labelService.getLabelwithArguments(lbl.Name, lbl.DefaultValue, lbl.arguments) :\n                this._labelService.getLabel(lbl.Name, lbl.DefaultValue);\n        }\n        else {\n            let rs = <IResultStatus>textOrLabelOrStatus;\n            txt = rs.Message || (rs.ExceptionData && rs.ExceptionData.Description) || \"\";\n        }\n\n        return txt;\n    }\n\n    private createAlert(t: AlertTypes, err: string | IResultStatus | ILabel, modal: boolean, title?: string | ILabel): Alert {\n\n        let alert: Alert = new Alert(t, this.resolveText(err));\n        alert.modal = modal;\n        alert.title = this.getDefaultTitle(t);\n\n        if (title !== undefined) {\n            alert.title = this.resolveText(title);\n        }\n\n        return alert;\n    }\n\n    private addAlert(t: AlertTypes, err: string | IResultStatus | ILabel, modal: boolean): void {\n\n        let newAlerts = this.alerts.map<Alert>(a => a);\n        let alert = this.createAlert(t, err, modal);\n        if (alert) {\n            newAlerts.push(alert);\n            let snackBarConfig;\n\n            switch (alert.type) {\n                case 1:\n                    snackBarConfig = {\n                        panelClass: 'snack-bar-warning'\n                    };\n                    break;\n                case 3:\n                    snackBarConfig = {\n                        panelClass: 'snack-bar-success',\n                        duration: 3000\n                    };\n                    break;\n            }\n\n            let ref = this._snackBar.open(alert.message, 'Dismiss', snackBarConfig);\n            ref.onAction().subscribe(action => {\n            });\n        }                    \n        this.alerts = newAlerts;\n    }\n\n    private openModalAlert(alertType: AlertTypes, txt: string | IResultStatus | ILabel, title?: string | ILabel, choices?: ILabel[]): Observable<string> {\n        let modalAlert = this.createAlert(alertType, txt, true, title);\n\n        let modalRef = this._dialog.open(AlertModalComponent, {disableClose: true});\n        let am = modalRef.componentInstance;\n        am.messageText = modalAlert.message;\n        am.messageClass = modalAlert.class;\n        am.title = modalAlert.title;\n        am.cancelBtnCaption = (alertType == AlertTypes.choice) ? this._labelService.getLabel('PS_ACTION_CANCEL', 'Cancel') : '';\n        am.primaryBtnCaption = this._labelService.getLabel('PS_ACTION_OK', 'Ok');\n\n        if( !choices ){\n            am.cancelBtnCaption = (alertType == AlertTypes.choice) ? this._labelService.getLabel('PS_ACTION_CANCEL', 'Cancel') : '';\n            am.primaryBtnCaption = this._labelService.getLabel('PS_ACTION_OK', 'Ok');\n        }\n        else{\n            am.cancelBtnCaption = this._labelService.getLabel(choices[0].Name, choices[0].DefaultValue);\n            am.primaryBtnCaption = this._labelService.getLabel(choices[1].Name, choices[1].DefaultValue);\n        }\n        return modalRef.afterClosed();\n    }\n\n    private getDefaultTitle(alertType: AlertTypes): string {\n        let t = '';\n        switch (alertType) {\n            case AlertTypes.success:\n                t = 'Success'; break;\n            case AlertTypes.danger:\n                t = 'Error'; break;\n            case AlertTypes.warning:\n                t = 'Warning'; break;\n            case AlertTypes.choice:\n                t = 'Confirm'; break;\n            case AlertTypes.info:\n                t = 'Info'; break;\n        }\n        return t;\n    }\n\n}\n\n","//class\r\nexport class Alert {\r\n       \r\n    time: number;\r\n    modal: boolean = false;\r\n    title: string;\r\n\r\n    constructor(public type: AlertTypes, public message: string, data?: any) {\r\n        this.time = Date.now();\r\n    }\r\n\r\n    get class(): string {\r\n        return 'alert alert-' + AlertTypes[this.type] + ' alert-dismissible';\r\n    }\r\n}\r\n\r\n//enums\r\nexport enum AlertTypes { info, danger, warning, success, choice }","export * from './alert.module';","import { NgModule, enableProdMode } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule }   from '@angular/forms';\n\n//app modules\nimport { AuthorizationModule } from './authorization';\nimport { CoreModule } from './core';\nimport { SharedModule } from './shared';\nimport { StudioModule } from './studio';\n\n//app components\nimport { AppComponent }  from './core/app/app.component';\n\nenableProdMode();\n\n@NgModule({\n    imports: [\n        //angular modules\n        BrowserModule,\n        FormsModule,\n        //app modules\n        AuthorizationModule,\n        SharedModule,\n        CoreModule,\n        StudioModule\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { NgModule }      from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { LoginDialogComponent } from './login.dialog.component';\r\nimport { StartComponent } from './start.component';\r\nimport { AuthorizationService } from './authorization.service';\r\n\r\n@NgModule({\r\n    id: 'loginModule',\r\n    imports: [\r\n        CommonModule, \r\n        FormsModule, \r\n        ReactiveFormsModule,\r\n    ],\r\n    declarations: [\r\n        LoginDialogComponent,\r\n        StartComponent\r\n    ],\r\n    entryComponents: [\r\n        LoginDialogComponent\r\n    ],\r\n    providers: [\r\n        AuthorizationService\r\n    ]\r\n})\r\nexport class AuthorizationModule { }\r\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { PortalService } from '../common/services/portal.service';\n\n@Injectable()\nexport class AuthorizationService {\n    isLoginSubject = new BehaviorSubject<boolean>(undefined);\n    authorizationHeader: string;\n    authorizationMessage: string;\n\n    constructor(private _portalService: PortalService) {}\n\n    isLoggedIn(): Observable<boolean> {\n        this._portalService.verifyLogon()\n            .subscribe(\n                authorizationHeader => {\n                    if (authorizationHeader) {\n                        this.authorizationHeader = authorizationHeader;\n                        this.isLoginSubject.next(true);\n                    }\n                    else\n                        this.isLoginSubject.next(false);\n                },\n                error => {\n                    console.log(<any>error);\n            });\n        return this.isLoginSubject.asObservable();\n    }\n\n    login(username: string, password: string, domain:string): Observable<boolean> {\n        this._portalService.login(username, password, domain)\n        .subscribe(\n            resultStatus => {                \n                if(resultStatus.error)                     \n                    this.authorizationMessage = resultStatus.error.ExceptionData.Description;\n\n                if(resultStatus.data) {       \n                    this.authorizationHeader = resultStatus.data;               \n                    this.isLoginSubject.next(true);\n                }                \n            },\n            error => {\n                console.log(<any>error);\n            }            \n        );  \n        return this.isLoggedIn();    \n    }\n\n    logout(): void {\n        this._portalService.logout().subscribe(response=>{\n            if(response) {\n                this.authorizationHeader = null;\n                this.isLoginSubject.next(false);\n            }            \n        });        \n    }\n\n    setAuthorizationHeader(header: string): void {\n        if(header) {\n            this.authorizationHeader = header;\n            this.isLoginSubject.next(true);\n        }        \n    }\n    \n}","export * from './authorization.module';","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\n\nimport { PortalService } from '../common/services/portal.service';\n\n@Component({\n    selector: 'csi-login-dialog',\n    templateUrl: 'login.dialog.component.html',\n    styles: [\n        `.main-content {\n            padding: 15px;\n        }\n        .form-footer {\n            padding: 10px;\n        }`\n    ]\n})\n\nexport class LoginDialogComponent implements OnInit {    \n    public loginForm: FormGroup;\n    public dialogMessage: string;\n    public errorMessage: string;\n    constructor(    \n        private _form: FormBuilder,       \n        private _portal: PortalService,\n        private _dialog: MatDialogRef<LoginDialogComponent>) {        \n    }\n\n    ngOnInit(): void {\n        this.loginForm = this._form.group({            \n            username: ['', Validators.required],        // default id maybe set\n            password: ['', Validators.required],        // default password maybe set\n            domain: ['.', Validators.required],\n        });\n    }\n\n    initContext(context: any)\n    {        \n        if(context && context.message)\n             this.dialogMessage = context.message;\n    }    \n\n    login(): void {\n        let form = this.loginForm.value;\n        this._portal.login(form.username, form.password, form.domain)\n        .subscribe(resultStatus => {\n            if(resultStatus.error) {\n                this.errorMessage = resultStatus.error.ExceptionData.Description;\n            }\n                \n            if(resultStatus.data)\n                this._dialog.close(resultStatus.data); //authorizationHeader\n        })    \n    }\n\n    cancel(): void {\n        this._dialog.close();\n    }\n}\n\n\n","<div class=\"csi-modal\" [attr.title]=\"''\">\r\n    <header class=\"header\">\r\n        <span class=\"title\">Login</span>\r\n        <span class=\"close-icon\" (click)=\"cancel()\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></span>\r\n    </header>\r\n    <main class=\"main-content\">\r\n        <form novalidate (ngSubmit)=\"login()\" [formGroup]=\"loginForm\">\r\n            <section class=\"csi-modal-content\">\r\n                <div *ngIf=\"dialogMessage\" [innerHTML]=\"dialogMessage\"></div>\r\n                <div>\r\n                    <label class=\"control-label\">User Name</label>\r\n                    <div>\r\n                        <input type=\"text\" placeholder=\"User Name\" formControlName=\"username\" />\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <label class=\"control-label\">Password</label>\r\n                    <div>\r\n                        <input type=\"password\" placeholder=\"Password\" formControlName=\"password\" />\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <label class=\"control-label\">Domain</label>\r\n                    <div>\r\n                        <input type=\"text\" placeholder=\"Domain\" formControlName=\"domain\" />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section class=\"form-footer\">\r\n                <span class=\"default-btn\" (click)=\"cancel()\">Cancel</span>\r\n                <span>\r\n                <button class=\"primary-btn\" type=\"submit\" [disabled]=\"!loginForm.valid\">Login</button>\r\n            </span>\r\n            </section>\r\n            <section>\r\n                <div class=\"ls-label-data\" *ngIf=\"errorMessage\" [innerHTML]=\"errorMessage\"></div>\r\n            </section>\r\n        </form>\r\n    </main>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthorizationService } from './authorization.service';\nimport { WCFService } from '../common/services/wcf.service';\n\nimport { LoginDialogComponent } from './login.dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n    selector: 'csi-start',\n    template: ``\n})\n\nexport class StartComponent implements OnInit {\n    constructor(\n        private _authService: AuthorizationService,\n        public _dialog: MatDialog,\n        private _wcfService: WCFService,\n        private _router: Router) { }\n\n    ngOnInit(): void {\n        this._authService.isLoggedIn()\n            .subscribe(isLoggedIn => {\n                if (isLoggedIn) {\n                    this.setAuthorization(this._authService.authorizationHeader);\n                }\n                else if (isLoggedIn == false) {\n                    let dialog = this._dialog.open(LoginDialogComponent, { disableClose: true });\n                    //init context\n                    let context = { message: '' };\n                    dialog.componentInstance.initContext(context);\n                    dialog.afterClosed().subscribe(authorizationHeader => {\n                        if (authorizationHeader) {\n                            let isToken = authorizationHeader.indexOf('Bearer') > -1;\n                            if (isToken) {\n                                this.setAuthorization(authorizationHeader);\n                                this._authService.setAuthorizationHeader(authorizationHeader);\n                            }\n                        }\n                    });\n                }\n            });\n    }\n    private setAuthorization(authHeader: string) {\n        //this._studioService.setAuthorization(authHeader);\n        this._wcfService.setAuthorization(authHeader);\n        this._router.navigate(['studio']);\n    }\n}\n\n","import { Subject, Observable, BehaviorSubject } from 'rxjs';\nimport { HistoryLog } from './historyLog';\nimport _ from 'lodash';\nimport { IMetadataType, IPropertyMetadata } from './viewModel';\nimport { LayoutMenuItem } from '../../layout/design/objects/layoutMenuItem';\nimport { LayoutManager } from '../../layout/design/objects/layoutManager';\nimport { ICell } from '../../layout/design/objects/layoutCell';\n\nexport interface ILocalState {\n    userProfile: IUserProfile;\n    displayCatalog: boolean;\n    displayToolbox: boolean;\n    displayProperty: boolean;\n    displayTraceViewer: boolean;\n    elementHistory: IElementRef[];\n    favProperties: IFavoriteProperty[];\n    pageGroups: PageGroupDef[];\n    whereUsedPageList : WhereUsedItemListDef[];\n    whereUsedWebPartList : WhereUsedItemListDef[];\n}\n\nexport interface IUserProfile {\n    Name: string;\n    DebugRequest: any;\n    Dictionary: string;\n    Password: IEncryptedField;\n    ServerName: string;\n    SessionID: IEncryptedField;\n    UTCOffset: any /*TimeSpan */;\n}\nexport interface IEncryptedField {\n    IsEncrypted: boolean;\n    Value: string;\n}\n\nexport interface IFavoriteProperty {\n    typeName: string;\n    names: string[];\n}\n\n//Modal\nexport interface IModal {\n\n}\n\nexport enum DesignModes{\n    Controls=1, Design=2, View=3, Xml=4, PersonalizationReport=5, WhereUsed=6\n}\n\nexport interface IUIDesigner extends IElement {\n    isNew: boolean;\n    isReadOnly: boolean;\n    isViewable: boolean;\n    isTestable: boolean;\n    isRoot?: boolean;\n    componentRef: IUIComponentRef;\n    isDirty?: boolean;\n    history: HistoryLog;\n    scaleValue?: number;\n\n    __layoutMenu: LayoutMenuItem[];\n    __topMenu: TopMenuState;\n    __xmlChanged? : boolean;\n}\n\n\n//common objects\nexport interface IElement {\n    name: string;\n    type: string;\n    typeName: string;\n    items: any;\n    id?: string;\n    layout?: any;\n    map?: any;          // workspace property mappings\n    workspaceIndexes? : number[]; \n    isStatic?: boolean;\n    _fullTypeName? : string;\n    removedWebParts? : string[];\n\n    properties?: any;\n    isReference?: boolean;\n    __selectedElement?: IElement | ICell;\n    __designMode? : DesignModes;\n    __layoutManager?: LayoutManager;\n    __xml?: string;\n    __zoomXml?: number;\n    __workspace?: number;\n    __maint?: string;\n    __unbound?: string;\n    __collapsed? : boolean;\n    __type?: string; \n}\n\nexport interface IElementRef {\n    name: string;\n    type: string;\n    description?: string;\n}\n\nexport interface IUIComponentRef extends IElementRef {\n    isStatic: boolean;\n    isLocked: boolean;\n    isReference: boolean;\n    isInDeveloping: boolean;\n    hasPublishContent: boolean;\n    owner: string;\n    __mapParameters: string[];\n\n    readonly __type: string;\n}\n\nexport class UIComponentRef implements IUIComponentRef {\n\n    public readonly __type = 'UIComponentRef';\n\n    public fullTypeName : string;\n    public type : string;\n    public description : string;\n    public name : string;    \n    public categories : string[];\n    public isStatic : boolean;\n\n    public isLocked : boolean;\n    public isReference : boolean;\n    public owner : string;\n    public isInDeveloping : boolean;\n    public hasPublishContent : boolean;\n    public hasSystemContent : boolean;\n    public componentName : string;\n\n    public __mapParameters: string[];\n\n    public get lockMode() : boolean { return this.isLocked; };\n    public get editMode() { return this.isInDeveloping && !this.isLocked; }\n    public get isNotInDevelopingOnly() {return (this.hasPublishContent || this.hasSystemContent) && this.isInDeveloping; };\n\n    public static fromSelectionValueRow(vals : string[], colHeaderIndexes : IHeader[], t: string ) :UIComponentRef {\n        let gets = (n: string) : string => {\n            let hdrIndex = colHeaderIndexes.findIndex(h=> h.Name.toLowerCase() == n);\n            if( hdrIndex != -1 )\n                return vals[hdrIndex];\n            return \"\";\n        }\n        let getb = (n: string) : boolean => {\n            let hdrIndex = colHeaderIndexes.findIndex(h=> h.Name.toLowerCase() == n);\n            if( hdrIndex != -1 )\n                return vals[hdrIndex] === \"true\";\n            return false;\n        }\n        let r = new UIComponentRef();        \n        r.name = gets(\"name\");\n        r.type = t;\n        r.isLocked = getb(\"islocked\");\n        r.description = gets(\"description\");\n        r.owner = gets(\"owner\");\n        r.fullTypeName = gets(\"codebehindfile\");\n        let dvlp = gets(\"developercontentlength\");\n        r.isInDeveloping = dvlp ? (parseInt(dvlp) > 0) : false;\n        r.isReference = true;\n        r.componentName = r.name;\n        return r;\n    }\n    \n    public static fromControlWebPart(w: any){\n        let r = new UIComponentRef();        \n        r.name = w.Name;\n        r.type = 'Webpart';\n        r.isStatic = w.IsStatic;\n        r.fullTypeName = w.FullTypeName;\n        r.isLocked = false;\n        r.hasPublishContent = false;\n        r.isInDeveloping = false;\n        r.isReference = true;\n        r.owner = null;\n        r.componentName = r.name;\n        return r;\n    }\n\n    public static get metadata () : IMetadataType{\n        return <IMetadataType>{\n            properties : [\n                <IPropertyMetadata>{name: \"Name\", originalTypeName : \"string\" },\n                <IPropertyMetadata>{name: \"ComponentName\", originalTypeName : \"string\" },\n                <IPropertyMetadata>{name: \"Description\", originalTypeName : \"string\" },\n                <IPropertyMetadata>{name: \"FullTypeName\", originalTypeName : \"string\" },\n                <IPropertyMetadata>{name: \"IsLocked\", originalTypeName : \"boolean\" },\n                <IPropertyMetadata>{name: \"IsStatic\", originalTypeName : \"boolean\" },\n                <IPropertyMetadata>{name: \"IsInDeveloping\", originalTypeName : \"boolean\" },\n                <IPropertyMetadata>{name: \"Owner\", originalTypeName : \"string\" }\n            ]            \n        }\n    }\n}\n\nexport interface IWebpartRootElement extends IElement {\n    dynamicWebParts: any[];\n    isReference: boolean;\n}\n\nexport interface ICellItemRef {\n    _ref? : boolean;\n    id?: string;\n    type: string;\n    name: string;\n}\nexport interface IMetaData {\n    name: string;\n    type: string;\n}\n\nexport interface IControl {\n    name: string;\n    description: string;\n    toolboxImage: string;\n    designImage: string;\n    designType: string;\n    type: string;\n    typeName: string;\n    assembly: string;\n}\n\n\nexport interface ICamstarService {\n    ClassName: string;\n    Description: string;\n    Namespace: string;\n}\n\nexport interface IWizardState {\n    element: any;\n    next(form: any): IWizardState;\n    back(form: any): IWizardState;\n    save(form: any): any;\n    validate(form: any): string;\n}\n\n//classes\nexport class PropertyRef {\n    name: string;\n    displayedName?: string;\n}\n\n\nexport interface ISelectableItem {\n    name: string;\n    value: any;\n    type?: string;\n    typeName?: string;\n    level?: number;\n    childCount?: number;\n    disabled?: boolean;\n    fullType?: string;\n    img?: string;\n\n    parent?: ISelectableItem;\n}\n\nexport class ControlDescriptor {\n    TypeName: string;\n    Properties: any[];\n}\n\nexport class uuid {\n    static id(pref: string = \"\"): string {\n        if( pref ){\n            let v = _.random(0, 0xFFFF).toString(16);\n            return pref + \"0000\".substr(0, 4 - v.length) + v;\n        }\n        else{\n            let v1 = _.random(0, 0xFFFFFFFF).toString(16);\n            let v2 = _.random(0, 0xFFFFFFFF).toString(16);\n            return  \"00000000\".substr(0, 8 - v1.length) + v1 + \n                    \"00000000\".substr(0, 8 - v2.length) + v2;\n        }\n    }\n}\n\nexport class PortalResult<T> {\n    error: IResultStatus;\n    data: T;\n\n    constructor(_data : T = null, _error: IResultStatus = null){\n        this.data = <T>_data;\n        this.error = _error;\n    }\n}\n\nexport enum ChangeOriginators { propertyList, design, studio, editor };\nexport enum UpdateDataTypes { any, property, value, layout, command, objectPanels, propertyList, panel };\nexport enum CachedComponentType { WebPart, Page, Pageflow, PageMap, Action, ActionCategory, Tab, Menu, TargetMatrix, Settings };\n\nexport class UpdatedInfo {\n    timestamp: number;\n\n    constructor(public data: IUpdatedData = new AnyUpdatedData(), public originator?: ChangeOriginators) {\n        this.timestamp = new Date().valueOf();\n    }\n\n    touch(): void {\n        this.timestamp = new Date().valueOf();\n    }\n\n    is(t: UpdateDataTypes) {\n        if (this.data)\n            return t === this.data.__dataType;\n\n        return false;\n    }\n\n    DataOf<T extends IUpdatedData>(): T {\n        return <T>this.data;\n    }\n}\n\nexport interface IUpdatedData {\n    __dataType: UpdateDataTypes;\n}\n\nexport class AnyUpdatedData implements IUpdatedData {\n\n    __dataType: UpdateDataTypes = UpdateDataTypes.any;\n\n    constructor(public val?: any) {\n    }\n}\n\n\nexport class PropertyUpdatedData implements IUpdatedData {\n\n    __dataType: UpdateDataTypes = UpdateDataTypes.property;\n\n    constructor(public val: any, public old: any, public path: string) {\n    }\n\n    public isName(): boolean {\n        return (this.path && this.path.toLowerCase() == 'name');\n    }\n}\n\n\nexport class ValueUpdatedData implements IUpdatedData {\n\n    __dataType: UpdateDataTypes = UpdateDataTypes.value;\n\n    constructor(public propertyName: string, public val: any, public valueType?: string) {\n        this.propertyName = this.propertyName.toLowerCase();\n    }\n}\n\nexport enum LayoutActions {\n    none, new, add_control, add_webpart, delete_control, delete_webpart, move_item, change_property,\n    merge, split, insertRowBefore, insertRowAfter, insertColumnBefore, insertColumnAfter, removeRow, removeColumn, reset,\n    toggleCellPos\n}\n\nexport class TopMenuState {\n\n    // \"New\" dropdown\n    newPage: boolean = false;\n    newWebpart: boolean = false;\n    newPageflow: boolean = false;\n    newMenu: boolean = false;\n    newTab: boolean = false;\n    newAction: boolean = false;\n    newActionCategory: boolean = false;\n    newActionRule: boolean = false;\n\n    save: boolean = false;\n    saveAll: boolean = false;\n    undo: boolean = false;\n    redo: boolean = false;\n    copy: boolean = false;\n    delete: boolean = false;\n    import: boolean = false;\n    export: boolean = false;\n    exportAll: boolean = false;\n    run: boolean = false;\n    publish: boolean = false;\n    revert: boolean = false;\n    extract: boolean = false;\n    reloadWebPart: boolean = false;\n    generate: boolean = false;\n    batchExport: boolean = false;\n    batchImport: boolean = false;\n    switchTab: boolean = false;\n    togglePanel: boolean = false;\n    switchWorkspace: number = -1;\n    resetPanels = false;\n    element: IElement;\n    data: any;\n\n    constructor() {\n    }\n\n    setAll(v: boolean) {\n        this.save = v;\n        this.undo = v;\n        this.redo = v;\n        this.copy = v;\n        this.delete = v;\n        this.import = v;\n        this.export = v;\n        this.run = v;\n        this.publish = v;\n        this.revert = v;\n        this.extract = v;\n        this.reloadWebPart = v;\n\n        this.newPage = v;\n        this.newWebpart = v;\n        this.newMenu = v;\n        this.newTab = v;\n        this.newAction = v;\n        this.newActionCategory = v;\n        this.newActionRule = v;\n\n    }\n}\n\nexport class ExecuteCommand{\n\n    constructor(public cmd: string, public element: IElement, public data: any){        \n    }\n}\n\nexport enum PanelCommands { none, refresh }\n\nexport class ObjectPanelsUpdatedData implements IUpdatedData {\n\n    __dataType: UpdateDataTypes = UpdateDataTypes.objectPanels;\n\n    constructor(public panelName: string = null, public command: PanelCommands = PanelCommands.none) {\n    }\n}\n\nexport class StartPage implements IElement {\n    name: string;\n    id: string;\n    type: string;\n    typeName: string;\n    items: any[];\n\n    properties: any;\n    isDirty: boolean;\n    isReference: boolean;\n    selectedElement: IElement;\n    __unbound: string = \"StartPage\";\n\n    constructor(name: string, type: string) {\n        this.name = name;\n        this.type = type;\n    }\n}\n\nexport interface IRecordSet {\n    Headers: IHeader[];\n    Rows: IRow[];\n    TotalCount: number;\n}\nexport interface IHeader {\n    Name: string;\n    Label: ILabel;\n    TypeCode: TypeCode;\n}\nexport interface IRow {\n    Values: string[];\n}\nexport interface ILabel {\n    Name: string;\n    ID?: number;\n    Value?: string;\n    DefaultValue: string;\n    LabelType?: LabelType;\n    Category?: string;\n\n    arguments?: any[];\n}\nexport interface ISelectionValuesInfo {\n    Parameters: IQueryParameter[];\n    Options: IQueryOptions;\n}\nexport interface IQueryOptions {\n    RowSetSize?: number;\n    StartRow?: number;\n    QueryType?: QueryType;\n    ChangeCount?: number;\n    RequestRecordCount: boolean;\n    RequestRecordSetAndCount: boolean;\n    RequestHeadersOnly: boolean;\n    RequestHeadersAndRowCount: boolean;\n}\nexport interface IQueryParameter {\n    Name: string;\n    Value: string;\n}\nexport interface IInfo {\n    RequestValue: boolean;\n    RequestSelectionValues: boolean;\n    RequestSelectionValuesInfo: ISelectionValuesInfo;\n}\nexport enum LabelType {\n    System = 0,\n    User = 1\n}\nexport enum TypeCode {\n    Empty = 0,\n    Object = 1,\n    DBNull = 2,\n    Boolean = 3,\n    Char = 4,\n    SByte = 5,\n    Byte = 6,\n    Int16 = 7,\n    UInt16 = 8,\n    Int32 = 9,\n    UInt32 = 10,\n    Int64 = 11,\n    UInt64 = 12,\n    Single = 13,\n    Double = 14,\n    Decimal = 15,\n    DateTime = 16,\n    String = 18\n}\nexport enum QueryType {\n    System = 0,\n    User = 1\n}\n\nexport interface IExceptionDataType {\n    Code: number;\n    Description: string;\n    FailureContext: string;\n    Source: string;\n}\n\nexport interface IResultStatus {\n    IsSuccess: boolean;\n    Message: string;\n    ExceptionData?: IExceptionDataType;\n}\n\nexport interface IResponse {\n    Environment: any;\n    Value: any;\n}\n\nexport interface IApiResult {\n    status: IResultStatus;\n    content: string;\n}\n\nexport class DirectAccessSubmitResult {\n    result: IResultStatus;\n    response: string;\n}\n\n\nexport interface IPersSection {\n    Name: string;\n    NameLbl?: string;\n    Workspace?: string;\n    WorkspaceLbl?: string;\n    IsOpen: boolean;\n    Type?: string; /* PersSectionType enum */\n    Description?: string;\n    DescriptionLbl?: string;\n    LastModifiedBy?: string;\n    LastModified?: string;\n    TypeName?: string;\n    TypeNameLbl?: string;\n    Title?: string;\n    TitleLbl?: string;\n    DataContracts?: IPersDataContract[];\n\n}\n\nexport interface IPersDataContract extends IPersSection {\n    HeaderRows?: string[];\n    SortCol?: string;\n    SortAsc: boolean;\n    DataMembers: any[];\n    DataMembersLbl: string;\n}\n\nexport interface IPersVirtualPageInfoSection extends IPersSection {\n    PageName: string;\n    Behavior: string; /* Behavior Type enum */\n    BehaviorLbl: string;\n    PrimaryServiceType: string;\n    PrimaryServiceTypeLbl: string;\n    LastModified: string;\n    LastModifiedLbl: string;\n    LastModifiedBy: string;\n    LastModifiedByLbl: string;\n    CodeBehind: string;\n    CodeBehindLbl: string;\n    CreatedBy: string;\n    CreatedByLbl: string;\n}\n\nexport interface IPersWebPart extends IPersSection {\n    Controls?: any[];\n    WebPartName: string;\n    WorkspaceContent: IPersWebPart[];\n    CreatedBy?: string;\n    IsReference: boolean;\n    OpenWebPartLbl: string;\n    ControlLbl: string;\n}\n\nexport interface IPersControls extends IPersSection {\n    ControlProperties: any[];\n}\n\nexport interface IDesignControl{\n    element: IElement;\n    subjects?: StudioSubjects;\n    collapsible?: boolean;\n    isCollapsed?: boolean;\n    isReference?: boolean;\n}\n\nexport enum PersSectionType {\n    DataContract = 0,\n    WebPart,\n    VirtualPageInfoSection,\n    Control\n}\n\nexport enum RefreshLevel { layoutMode, layoutExec, full, property };\n\nexport class RefreshInfo {\n    constructor(public element: IElement, public level: RefreshLevel, public data: any = undefined) {\n    }\n}\n\nexport class StudioSubjects {\n    public menu: Subject<TopMenuState>;\n    public property: Subject<any>;\n    public panel: Subject<IUpdatedData>;\n    public layoutMenuUpdate: Subject<LayoutActions[]>;\n    public refresh: Subject<RefreshInfo>;\n    public refreshRoot: Subject<DesignModes>;\n    public nameChanged: Subject<string>;\n    public refreshElementPanel: Subject<string>;\n    public deleteElement : Subject<IUIComponentRef>;\n    public propertyPanel : BehaviorSubject<IUIComponentRef|any>;\n    public dropAreas : Subject<string[]>;\n    public execute: Subject<ExecuteCommand>;\n\n    constructor() {\n        this.menu = new Subject<TopMenuState>();\n        this.property = new Subject<any>();\n        this.panel = new Subject<IUpdatedData>();\n        this.layoutMenuUpdate = new Subject<LayoutActions[]>();\n        this.refresh = new Subject<RefreshInfo>();\n        this.nameChanged = new Subject<string>();\n        this.refreshElementPanel = new Subject<string>();\n        this.deleteElement = new Subject<IUIComponentRef>();\n        this.propertyPanel = new BehaviorSubject<IUIComponentRef|any>(null);\n        this.refreshRoot = new Subject<DesignModes>();\n        this.dropAreas = new Subject<string[]>();\n        this.execute = new Subject<ExecuteCommand>();\n    }\n}\n\nexport class TypeHandlerParameter {\n    Name: string;\n    Type: string;\n    Value: string;\n}\n\nexport class TypeHandler {\n    protected __type = \"TypeHandler\";\n    public Name: string;\n    public Parameters: TypeHandlerParameter[];\n\n    public getMethodSignature(): string {\n        let prms = this.Parameters.map(prm => prm.Name + ':' + TypeHandler.getShortType(prm.Type));\n        return `${this.Name}(${prms.join()})`;\n    }\n\n    public static getShortType = (fullType: string) => {\n        if (fullType) {\n            let typeName = fullType.split(',', 1)[0];\n            if (typeName)\n                return _.last(typeName.split('.'));\n        }\n        return '';\n    }\n\n    public comparer(i: ISelectableItem): boolean {\n        if (typeof i.value == \"object\") {\n            let h = <TypeHandler>i.value;\n            if (h.Name == this.Name && h.Parameters.length == this.Parameters.length)\n                return true;\n        }\n        return false;\n    }\n\n}\n\nexport class RevisionedObjectRef {\n    protected __type = \"RevisionedObjectRef\";\n    public name: string;\n    public revisionOfRecord: boolean;\n    public revision: string;\n    public cdoTypeName: string;\n\n    constructor(name: string, revision: string, ror: boolean) {\n        this.name = name;\n        this.revision = revision;\n        this.revisionOfRecord = ror;\n    }\n\n    public comparer(i: ISelectableItem): boolean {\n        if (typeof i.value == \"object\") {\n            let h = <RevisionedObjectRef>i.value;\n            if (h.cdoTypeName === this.cdoTypeName) {\n                if (h.name === this.name) {\n                    if (this.revision || h.revision)\n                        return this.revision === h.revision;\n                    return h.revisionOfRecord === this.revisionOfRecord;\n                }\n            }\n        }\n        return false;\n    }\n}\n\nexport class TypeProperty {\n    Description: string;\n    Name: string;\n    TypeName: string;\n    Writable: boolean;\n}\n\nexport class TypeDescriptor {\n    ClientEvents: string[];\n    ClientMethods: string[];\n    ClientProperties: string[];\n    Events: string[];\n    Handlers: TypeHandler[];\n    Properties: TypeProperty[];\n}\n\nexport class BatchImportExportSettings {\n    constructor() { };\n    Pages: string[];\n    WebParts: string[];\n    Pageflows: string[];\n    SelectedWorkspaces: string[];\n    OverrideIfExists: boolean;\n    ExportTo: number;\n    PostedFile?: any;\n}\n\nexport class LayoutBuilder {\n\n    public static getLayout(rows: number, cols: number): any {\n\n        let layout = {\n            __type: 'GridLayout',\n            columnNumber: cols,\n            rowNumber: rows,\n            tableCells: LayoutBuilder.getTableCells(rows, cols)\n        };\n        return layout;\n    }\n\n    public static getTableCells(rows, cols): any[] {\n        let tableCells = [];\n\n        for (let r = 0; r < rows; r++) {\n            tableCells.push([]);\n\n            for (let c = 0; c < cols; c++) {\n                tableCells[r].push(LayoutBuilder.newCell(r,c));\n            }\n        }\n\n        return tableCells;\n    }\n\n    public static newCell(r:number, c:number, hidden: boolean = false){\n        return <ICell>{\n            col: c, row: r,\n            colSpan: 1, rowSpan: 1,\n            isEmpty: true,\n            id: uuid.id('cell'),\n            isHidden: hidden,\n            items: {},\n            properties: {\n                __type: 'GridLayoutCell', \n                column: c, \n                row: r, \n                isStatic: false,\n                staticName :  r + '_' + c,\n                style: { __type: 'Style' } \n            },\n            name: 'cell_' + r + '_' + c,\n            type: 'cell', typeName: 'GridLayoutCell'\n        }\n    }\n\n    public static getDefaultTab(ctl: IElement): any {\n\n        return {\n            __arrayType: 'TabDefinition[]',\n            __type: 'TabDefinition',\n            name: 'TabDefinition0',\n            visible: true,\n            index: 0,\n            layout: LayoutBuilder.getLayout(2, 1)\n        };\n    }\n}\n\nexport class GroupDef {\n    constructor(\n        public groupName: string,\n        public icon: string,\n        public groupKey: string,\n        public items?: Observable<IUIComponentRef[]>,\n        public groupType?: string,\n        public isOpen?: boolean\n    ) { \n        if( groupKey )\n            this.groupKey = groupKey.toLowerCase();\n    }\n    public count: Observable<number> = null;\n}\n\nexport class PageGroupDef {\n    constructor( public groupName: string, public groupKey: string, public items?:PageGroupDefItem[],public deleted?:boolean) { \n        if( groupKey )\n            this.groupKey = groupKey.toLowerCase();\n    }\n}\n\nexport class PageGroupDefItem {\n    constructor( public name: string, public deleted?:boolean) { \n    }\n}\n\nexport class WhereUsedItemListDef {\n    constructor( public wepPartName: string, public items: any[] ) { \n    }\n}\n\nexport function val(o: any, key: string, setValue?: any, oType?: string): any {\n    if (o === undefined)\n        return undefined;\n\n    let keyLc = key.toLowerCase();\n    let fieldKey = Object.keys(o).find(k => k.toLowerCase() == keyLc) || key;\n    if (setValue !== undefined) {\n        if (oType !== undefined)\n            o.__type == oType;\n\n        if (setValue === null)\n            delete o[fieldKey];\n        else\n            o[fieldKey] = setValue;\n    }\n    return o ? o[fieldKey] : undefined;\n}\n\nexport function isContainerControl(controlTypeName: string) {\n    return _.includes(['ToggleContainer', 'SectionDropDown','SectionDropDownMobile', 'RibbonContainer', 'JQTabContainer', 'WebPartsWrapperControl'], controlTypeName);\n}\n\n//classes\nexport class DockPanel {\n    name: string;\n    label: string;\n    height?: string;\n\n    tabs: DockTab[];\n    activeTab?: DockTab;\n\n    visible?: boolean;\n    splitter?: string; // v=vertical, h=horizontal, 'n'=none\n\n}\n\nexport class DockTab {\n    name: string;\n    sections: ContentSection[];\n    expandedSection?: ContentSection;\n}\n\nexport class ContentSection {\n    name: string;\n    component: string;\n    isSelectable: boolean;\n    dataSource: string;\n}\n\nexport function isIE(){\n    return /Trident\\/|MSIE/.test(window.navigator.userAgent);\n}\n\n\n\nexport class ContextMenuItem{    \n    public checked: boolean;\n    public linePos : ContextMenuItemPositions;\n    public nameItem : string;\n    public key : string;\n\n    constructor(\n        public type: ContextMenuItemTypes, \n        public text: string, \n        opt? : any\n        ){\n\n        this.key = text && text.toLowerCase();\n        \n        if(opt){\n            if(typeof opt.checked != \"undefined\")\n                this.checked = opt.checked === true;\n            if(opt.linePos)\n                this.linePos = opt.linePos;\n            if(opt.nameItem)\n                this.nameItem = opt.nameItem;\n            if(opt.key)\n                this.key = (<string> opt.key).toLowerCase();\n        }\n    }\n}\n\n\nexport enum ContextMenuItemTypes { caption = \"caption\", checked = \"checked\", selected = \"selected\" }\nexport enum ContextMenuItemPositions { above=\"above\", below=\"below\" };\n","import { IOMTypeDescriptor, IOMMetadata, IOMTypePosition, OMType, FieldTypeCode } from './viewModel';\nimport { PortalService } from '../services/portal.service';\nimport { IElement, StudioSubjects, TopMenuState } from '../objects/common';\n\nimport _ from 'lodash';\nimport { StudioStateService } from '../services/studioStateService';\n\nexport class FieldDirectoryBase {\n\n    public search: string = '';\n    public pdsearch: string = '';\n    public parametricPanel: boolean;\n    public errorMessage: string;\n    public subjects: StudioSubjects;\n    // service list\n    public list: OMTypeDescriptor[] = [];\n\n    // parametric data list\n    public pdlist: OMTypeDescriptor[] = [];\n\n    // relative or absolute field expression mode has global meaning\n    public static RelativeMode: boolean = true;\n\n    public get relativeMode(): boolean {\n        return FieldDirectoryBase.RelativeMode;\n    }\n    public set relativeMode(r: boolean) {\n        FieldDirectoryBase.RelativeMode = r;\n    }\n\n    get readonly(): boolean { return false; }\n    protected portal: PortalService;\n    protected studioState: StudioStateService;\n\n    constructor(_portal: PortalService, _studioService: StudioStateService) {\n        this.portal = _portal;\n        this.studioState = _studioService;\n    }\n\n    public toggle(it: OMTypeDescriptor) {\n        it._expanded = !it._expanded;\n\n        if (it._expanded) {\n            if (!it.ChildItems) \n                this.loadChildren(it);            \n            else\n                this.openCloseChildren(it, true);\n        }\n        else {\n            this.openCloseChildren(it, false);\n        }\n    }\n    public select(it: OMTypeDescriptor) {\n        if (!it._selected) {\n            _.forEach(this.list, (item) => {\n                if (item._selected === true) {\n                    item._selected = false;\n                    return false;\n                }\n            });\n            it._selected = true;\n            const menu = new TopMenuState();\n            menu.generate = true;\n            menu.data = it;\n            this.studioState.refreshTopMenu(menu);\n        }\n    }\n\n    public togglePanels(onParametric: boolean) {\n        if (onParametric) {\n            // click on parametric - open if not opened\n            if (!this.parametricPanel) {\n                this.parametricPanel = true;\n                this.loadParamtericData();\n            }\n        }\n        else {\n            // click on services - open if not opened\n            if (this.parametricPanel) {\n                this.parametricPanel = false;\n            }\n        }\n    }\n\n    public openCloseChildren(owner: OMTypeDescriptor, open: boolean) {\n\n        let itemIndex = this.list.indexOf(owner);\n        for (var i = itemIndex+1; i < this.list.length; i++) {\n            let l = this.list[i];\n\n            if (l.Owner && l.Owner == owner)\n                l._hidden = !open;\n\n            if (l.ChildItems && l.ChildItems.length) {\n                this.openCloseChildren(l, open);\n            }\n        }\n    }\n\n\n    public loadChildren(typeDescriptor: OMTypeDescriptor) {\n\n        let itemIndex = _.findIndex(this.parametricPanel ? this.pdlist : this.list, typeDescriptor) + 1;\n\n        this.portal.getFieldsDirectory(typeDescriptor).subscribe(\n            (om) => {\n                if (om && om.ChildItems) {\n                    om.ChildItems.forEach(ds => {\n                        let c: OMTypeDescriptor = new OMTypeDescriptor(ds, typeDescriptor);\n                        c.Owner = typeDescriptor;\n                        if (!this.parametricPanel)\n                            this.list.splice(itemIndex++, 0, c);\n                        else\n                            this.pdlist.splice(itemIndex++, 0, c);\n                    });\n                    typeDescriptor.ChildItems = om.ChildItems;\n                }\n            }\n        );\n    }\n\n    public loadParamtericData(refresh?: boolean) {\n        let pddIgnore = ['DataPointDetails', 'DataPointSummary', 'ParametricData', 'DPCollection'];\n\n        if (refresh === true)\n            this.pdlist = [];\n\n        if (this.pdlist.length == 0) {\n            this.portal.getFieldsDirectory(<IOMTypeDescriptor>{\n                ItemType: OMType.Root, TypeName: 'ParametricData'}).subscribe(\n                service => {\n                    if (service && service.ChildItems) {\n                        service.ChildItems.forEach(srv => {\n                            if( pddIgnore.indexOf(srv.Name) == -1){\n                                let it = new OMTypeDescriptor();\n                                it.Name = srv.Name;\n                                it.TypeName = srv.TypeName;\n                                it.IsExpand = true;\n                                it.setPadding();\n                                this.pdlist.push(it);\n                            }\n                        });\n                    }\n                },\n                error => this.errorMessage = <any>error);\n        }\n    }\n\n    public loadServices(refresh?: boolean) {\n        if (refresh === true)\n            this.list = [];\n\n        if (this.list.length == 0) {\n            this.portal.getFieldsDirectory(<IOMTypeDescriptor>{\n                ItemType: OMType.Root, TypeName: 'Service'}).subscribe(\n                service => {\n                    if (service && service.ChildItems) {\n                        service.ChildItems.forEach(srv => {\n                            let it = new OMTypeDescriptor();\n                            it.Name = srv.Name;\n                            it.TypeName = srv.TypeName;\n                            it.IsExpand = true;\n                            it.setPadding();\n                            this.list.push(it);\n                        });\n                    }\n                    this.servicesLoaded();\n                },\n                error => this.errorMessage = <any>error);\n        }\n    }\n\n    servicesLoaded() {\n    }\n\n}\n\nexport class OMTypeDescriptor implements IOMTypeDescriptor {\n    ChildItems: IOMTypeDescriptor[];\n    FieldExpression: string;\n    Name: string;\n    TypeName: string;\n    ItemType: OMType;\n    IsExpand: boolean;\n    Link: string;\n    IsBrowseOnly: boolean;\n    Metadata: IOMMetadata;\n    Position: IOMTypePosition;\n    Uid: string;\n    Owner: IOMTypeDescriptor;\n    _selected: boolean;\n    // Nesting level\n    _nesting: number;\n    // image class\n    _imageClass: string;\n    //padding for indentation\n    _padding: string;\n    _expanded: boolean = false;\n    _hidden: boolean = false;\n    _draggable: boolean = false;\n\n    // dragData\n    type: string;\n    typeName: string;\n\n    constructor(ds?: IOMTypeDescriptor, owner?: OMTypeDescriptor) {\n        if (ds) {\n            this.IsBrowseOnly = ds.IsBrowseOnly;\n            this.Metadata = ds.Metadata;\n            this.TypeName = ds.TypeName;\n            this.ItemType = ds.ItemType;\n            this.Name = ds.Name;\n            this.Uid = ds.Uid;\n            this.Link = ds.Link;\n            this.IsExpand = ds.IsExpand;\n        }\n        else {\n            this.ItemType = OMType.Service;\n        }\n\n        this._draggable = this.ItemType == OMType.Field || this.ItemType == OMType.Property || this.ItemType == OMType.Link;\n\n        if (!this.Metadata) {\n            this.Metadata = <IOMMetadata>{ Description: '', FieldTypeCode: FieldTypeCode.Object };\n        }\n\n        this._imageClass = OMType[this.ItemType];\n        if (this.Metadata) {\n            if (this.Metadata.IsReadOnly)\n                this._imageClass += ' readonly';\n\n            if (this.Metadata.IsInherited)\n                this._imageClass += ' inherited';\n\n            if (this.Metadata.IsList)\n                this._imageClass += ' list';\n\n            if (this.Metadata.IsRequired)\n                this._imageClass += ' required';\n        }\n        if (owner) {\n            this.Owner = owner;\n            this._nesting = owner._nesting + 1;\n        }\n        else\n            this._nesting = 0;\n\n        this.setPadding();\n\n    }\n\n    public setPadding() {\n        let padding = this._nesting * 20 + 2;\n        if (!this.IsExpand) {\n            // the arrow is hidden for scalar. should compensate by padding\n            padding += 18;\n        }\n        this._padding = padding.toString() + 'px';\n    }\n\n    public addDragData(): void {\n        this.type = '';\n\n        let typeMapping = {\n            NamedObjectRef: 'NamedObject',\n            ContainerRef: 'ContainerListGrid',\n            RevisionedObjectRef: 'RevisionedObject',\n            SubentityRef: 'NamedSubentity',\n            NamedSubentityRef: 'NamedSubentity',\n            String: 'TextBox',\n            Boolean: 'CheckBox',\n            Int32: 'TextBox',\n            EncryptedField: 'TextBox',\n            DateTime: 'DateChooser'\n        };\n\n        this.type = typeMapping[this.TypeName];\n        if (!this.type)\n            this.type = \"TextBox\";\n\n        if (this.Metadata.IsEnum)\n            this.type = 'DropDownList';\n\n        if (this.Metadata.IsList)\n            this.type = 'JQDataGrid';\n\n        if (this.type != 'JQDataGrid' && this.type != 'ContainerListGrid')\n            this.typeName = \"Camstar.WebPortal.FormsFramework.WebControls.\" + this.type;\n        else\n            this.typeName = \"Camstar.WebPortal.FormsFramework.WebGridControls.\" + this.type;\n    }\n\n    public getFieldExpression(): string {\n        let owner: IOMTypeDescriptor = this.Owner;\n        let res: string = this.Name;\n        let type: string = '';\n\n        while (owner) {\n            if (owner.ItemType == OMType.Service) {\n                res = (!FieldDirectoryBase.RelativeMode ? owner.Name : '') + '.' + res;\n                break;\n            }\n            if (owner.ItemType == OMType.Type) {\n                type = ':' + owner.Name;\n            }\n            else {\n                res = owner.Name + type + '.' + res;\n                type = '';\n            }\n            owner = owner.Owner;\n        }\n\n        return res;\n    }\n\n    public controlInit(ctl: IElement, owner: IElement, portal: PortalService, ) {\n\n        if (!ctl.properties)\n            ctl.properties = {};\n\n        let fExp = this.getFieldExpression();\n\n        // Take full field expression\n        let oldRel = FieldDirectoryBase.RelativeMode;\n        FieldDirectoryBase.RelativeMode = false;\n        const fullExp = this.getFieldExpression();\n        FieldDirectoryBase.RelativeMode = oldRel;\n        const dataSubMode = fullExp.indexOf(\"ObjectChanges.\") != -1 ? 2 : 0;\n\n        if (ctl.typeName == 'JQDataGrid') {\n\n            ctl.properties = {\n                gridDataMode: 1 /*ItemList*/, \n                dataSubmissionMode:  dataSubMode,\n                settings: {\n                    __type: \"GridDataSettingsItemList\",\n                    allowDataNaigation: true,\n                    fieldExpressions: fExp,\n                    columns: [],\n                    editorSettings: {\n                        __type: \"JQGridEditorSettings\",\n                        editingMode: 0     // Inline\n                    }\n                }\n            };\n\n            portal.resolveGridColumns(fullExp).subscribe(\n                (columns) => {\n                    if (columns) {\n                        ctl.properties.settings.columns = columns;\n                    }\n                }\n            );\n\n        }\n        else {\n            ctl.properties.fieldExpressions = fExp;\n        }\n        if (this.Metadata.IsRequired)\n            ctl.properties.required = true;\n\n        if (owner) {\n            let n: string;\n            // generate new name\n            for (let index: number = 0; ; index++) {\n\n                let suffix = \"_\" + this.Name + (index ? index.toString() : '');\n                if (this.Owner) \n                    n = this.Owner.Name + suffix;                \n                else \n                    n = owner.name + suffix;\n\n                if (owner && owner.items && _.find(owner.items, (v,i) => v['name'] === n))\n                    continue;\n                else\n                    break;\n            }\n            ctl.name = n;\n        }\n    }\n\n}","import { uuid, IElement, LayoutActions } from './common';\r\nimport * as _ from 'lodash';\r\n\r\nexport enum HistoryOperation { undo=1, redo=2 };\r\n\r\nexport class HistoryLog {\r\n\r\n    private _undoStack: LogItem[] = [];\r\n\r\n    private undoPointer: number = 0;\r\n    public get undoCount(): number { return this.undoPointer; }\r\n    public get redoCount(): number { return this._undoStack.length - this.undoPointer; }\r\n\r\n    constructor() {\r\n        this.undoPointer = 0;\r\n    }\r\n\r\n    public recordHistoryItem(cmd: RecordCommand, data: IHistory): void {\r\n        // discard all items next to undoPointer\r\n        this._undoStack.splice(this.undoPointer, this._undoStack.length - this.undoPointer);\r\n\r\n        if (cmd == RecordCommand.propertyChange) {\r\n            let lastRecord = _.last(this._undoStack);\r\n            if (lastRecord && _.isFunction(lastRecord.specificData.tryToCombine)) {\r\n                // combine text changes into one transaction\r\n                if (lastRecord.specificData.tryToCombine(data))\r\n                    return;\r\n            }\r\n        }\r\n        this._undoStack.push(new LogItem(cmd, data));\r\n        this.undoPointer = this._undoStack.length;\r\n    }\r\n\r\n    public pop(operation: HistoryOperation): LogItem {\r\n        let c: LogItem;\r\n        if (operation == HistoryOperation.undo) {\r\n            c = this._undoStack[this.undoPointer - 1];\r\n            this.undoPointer--;\r\n        }\r\n        else {\r\n            c = this._undoStack[this.undoPointer];\r\n            this.undoPointer++;\r\n        }\r\n        return c;\r\n    }\r\n\r\n    public display(operation: string): string[] {\r\n        return this._undoStack\r\n            .filter((d, i) => operation == 'undo' ? (i < this.undoPointer) : (i >= this.undoPointer))\r\n            .map(l => l.toDisplay());\r\n    }\r\n}\r\n\r\nexport enum HistoryObjectType { Webpart, Control, Property, Layout };\r\n\r\nexport enum RecordCommand { add, remove, layoutChange, move, propertyChange, replace }\r\n\r\nexport interface IHistory {\r\n    objectType: HistoryObjectType,\r\n    toDisplay(): string;\r\n    tryToCombine?(data: IHistory): boolean;\r\n}\r\n\r\n// add, delete, move - Control, Webpart\r\nexport class ElementHistoryData implements IHistory {\r\n    public element: IElement;\r\n    public oldElement: IElement;\r\n    public cellId: string;\r\n    public fromCellId: string;\r\n\r\n    constructor(public objectType: HistoryObjectType) {\r\n    }\r\n\r\n    toDisplay(): string {\r\n        return `${this.element.name} of ${this.element.typeName}`;\r\n    }\r\n\r\n}\r\n\r\nexport class LayoutHistoryData implements IHistory {\r\n\r\n    public column: number;\r\n    public row: number;\r\n    public objectType: HistoryObjectType = HistoryObjectType.Layout;\r\n\r\n    constructor(public command: LayoutActions, public layoutBefore: any, public layoutAfter: any, public layoutOwner: IElement) {\r\n    }\r\n\r\n    toDisplay(): string {\r\n        let r = LayoutActions[this.command];\r\n        return r;\r\n    }\r\n}\r\n\r\ntype nv = { [name: string]: any };\r\n\r\nexport class PropertyHistoryData implements IHistory {\r\n    public objectType: HistoryObjectType = HistoryObjectType.Property;\r\n\r\n    constructor(public instance: any, public path: string, public oldValues: nv, public newValues: nv, public isName: boolean) {\r\n    }\r\n\r\n    toDisplay(): string {\r\n        return `${this.path} from ${JSON.stringify(this.oldValues)} to ${JSON.stringify(this.newValues)}`;\r\n    }\r\n\r\n    tryToCombine(data: IHistory): boolean {\r\n        let d = <PropertyHistoryData>data;\r\n        if (d.path == this.path) {\r\n            this.newValues[this.path] = d.newValues[d.path];\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n\r\nexport class LogItem {\r\n    public specificData: IHistory;\r\n    public id: string;\r\n\r\n    constructor(public command: RecordCommand, data: IHistory) {\r\n        this.id = uuid.id('log-');\r\n        this.specificData = data;\r\n    }\r\n\r\n    toDisplay(): string {\r\n        let r = RecordCommand[this.command]; \r\n        if (this.specificData)\r\n            r += (' ' + HistoryObjectType[this.specificData.objectType] + ' ' + this.specificData.toDisplay());\r\n\r\n        return r;\r\n    }\r\n}\r\n\r\n","import { ISelectableItem, TypeHandler, TypeHandlerParameter } from './common';\nimport { Observable } from 'rxjs';\nimport _ from 'lodash';\n\nexport interface IElement {\n    id: string;    \n    name: string;\n    type: string;\n    typeName: string;\n    properties: any[];\n    position: IPosition;\n    isDirty: boolean;\n}\n\nexport interface ICombinedElement extends IElement {\n    items: IElement[];\n    layout: any;\n    originalXml: string;\n}\n\nexport interface ILayout {\n}\n\nexport interface IGridLayout extends ILayout {\n    cells: any[];\n    colNumber: number;\n    rowNumber: number;\n\n    tableCells?: any[][];\n}\n\nexport interface IPosition {\n}\n\nexport interface IGridPosition extends IPosition {\n}\n\nexport interface IMetadataType {\n    _abstract: boolean;\n    _name: string;\n    _namespace: string;\n    _type: string;\n    _displayedName?: string;\n    baseTypeNames?: string[];\n    properties?: IPropertyMetadata[];\n    enumValues?: IMetadataEnumValue[];\n}\n\n\nexport interface IPropertyEditor {\n    directive: string;\n    options?: string[];\n\n    // parsed options\n    provider?: string;\n    filter?: string;\n    parameters?: string[];\n\n    // dynamic\n    selectableItems?: Observable<ISelectableItem[]>;\n}\n\nexport class PropertyCategory {\n    public description?: string;\n    public name: string;\n\n    constructor(public caption: string) {\n        this.name = this.caption.toLowerCase();\n    }\n}\n\nexport interface IPropertyMetadata {\n    category: string;\n    name: string;\n    originalTypeName?: string;\n    editor?: IPropertyEditor;\n    hidden?: boolean;\n    readOnly?: boolean;\n    required?: boolean;\n    enumValues?: any[];\n    displayedName?: string;\n    defaultValue?: string | number;\n    accessor?: string;\n    dependencies?: string[];\n    order?: number;\n    notNullable?: boolean;\n    favorite?: boolean;    \n\n    value?: any;\n    originalValue?: any;\n}\n\nexport interface ICamstarService {\n    ClassName?: string;\n    Description: string;\n    Namespace: string;\n}\n\nexport interface IMetadataEnumValue {\n    name: string;\n    value: any;\n}\n\nexport enum OMType {\n    Service = 0,\n    Link = 1,\n    Type = 2,\n    Property = 3,\n    Field = 4,\n    Root = 5\n}\n\n\nexport interface IOMTypeDescriptor {\n    ChildItems: IOMTypeDescriptor[];\n    FieldExpression: string;\n    Name: string;\n    TypeName: string;\n    ItemType: OMType;\n    IsExpand: boolean;\n    Link: string;\n    IsBrowseOnly: boolean;\n    Metadata: IOMMetadata;\n    Position: IOMTypePosition;\n    Uid: string;\n    Owner: IOMTypeDescriptor;\n}\n\nexport class IOMMetadata{\n    CDOTypeName: string;\n    CreateOnInitialize: boolean;\n    DefaultValue: string;\n    Description: string;\n    FieldTypeCode: FieldTypeCode;\n    HasSelVal: boolean;\n    IsEnum: boolean;\n    IsInherited: boolean;\n    IsList: boolean;\n    IsReadOnly: boolean;\n    IsRequired: boolean;\n    IsUserDefinedField: boolean;\n    LabelID: number;\n}\n\nexport enum FieldTypeCode {\n    Object = 0,\n    Integer = 1,\n    Float = 2,\n    Fixed = 3,\n    String = 4,\n    TimeStamp = 5,\n    Boolean = 6,\n    Decimal = 7,\n    Reference = 8,\n    Enumeration = 9\n}\n\n\nexport class IOMTypePosition {\n    Column: number;\n    ColumnSpan : number;\n    Row: number;\n    RowSpan: number;\n}\n\nexport class CodeBehindDescriptor {\n    ClassName: string;\n    Description: string;\n    Namespace: string;\n}\n\nexport enum ListItemActions { add, change, delete, replace }\n\nexport class ImageFile {\n    Name: string;\n    Source: string;\n}\n\nexport class WorkspaceItem {\n    Code: string;\n    Color: string;\n    Description: string;\n    ID: number;\n    Name: string;\n    Sequence: number;\n}\n\nexport class GridColumnDefinition {\n    __type: string;\n    name: string;\n    editable: boolean;\n    width: number;\n    required: boolean;\n    labelName: string;\n    editorProperties: {};\n}\n\nexport class JQGridCustomScript{\n    __type: string;\n    Name: string;\n    Handler: string;\n}\n\nexport class ConditionExpression {\n    public leftValueColumnName?: string;\n    public value1?: SetDataValueItem;\n    public value2?: SetDataValueItem;\n    public and?: ConditionExpression[];\n    public or?: ConditionExpression[];\n    public comparisonType?: number;\n\n    constructor() {\n        this.comparisonType = 0;\n    }\n\n    public __shortDescription: string;\n    public __type = \"ConditionExpression\";\n}\n\nexport class InitiatorDefinition {\n    public name: string;\n    public key: string;\n    public event: string;\n\n    protected __type = 'InitiatorDefinition';\n}\n\nexport class SetDataValueItemBase {\n    public key?: string;\n    public initiators?: InitiatorDefinition[];\n    public requestDataMode?: any;\n    public allowEmptyValue?: boolean;\n}\n\nexport class SetDataValueItem extends SetDataValueItemBase {\n    protected __type = 'SetDataValueItem';\n}\n\nexport class PropertyConditionExpression{\n    public property?: string;\n    public description?: string;\n    public condition?: ConditionExpression;\n    public valueIfTrue?: SetDataValueItem;\n\n    public isExpanded = false;\n\n    protected __arrayType = \"PropertyConditionExpression[]\";\n    protected __type = \"PropertyConditionExpression\";\n}\n\nexport class ValueReference{\n    public connectionType: DataContractConnectionType;\n    public key?: string;\n    public property?: string;\n    protected __type = \"ValueReference\";\n}\n\nexport class DataMemberConnection extends ValueReference {\n    public name: string;\n    protected __type = \"DataMemberConnection\";\n}\n\nexport class QueryGridParameter extends DataMemberConnection {\n    protected __type = \"QueryGridParameter\";\n}\n\nexport class QueryBoundGridParameter extends ValueReference {\n    public name: string;\n    public type: string;\n    \n    protected __type = \"QueryBoundGridParameter\";\n}\n\nexport enum DataContractConnectionType{\n    Control,\n    None,\n    PageDataContract,\n    SessionDataContract,\n    SessionVariable,\n    FieldExpression,\n    StaticValue,\n    GridItem\n}\n\nexport enum QueryTypes {System, User}\n\nexport class QueryData {\n    public ID : string;\n    Text: string;\n    Decription: string;\n    ParamCount: number;    \n}\n\nexport class QueryOptions {\n    public ChangeCount? : number;\n    public QueryType : QueryTypes;\n    public RequestHeadersAndRowCount? : boolean;\n    public RequestHeadersOnly? : boolean;\n    public RequestRecordCount? : boolean;\n    public  RequestRecordSetAndCount? : boolean;\n    public RowSetSize? : number;\n    public StartRow? : number;\n}\n\nexport class QueryParameter{\n    Name: string;\n    Value: string;\n}\nexport class ColumnData{\n    public Name : string;\n    public LabelName : string;\n    public TypeCode : string;\n}\n\nexport type PropertyDescription = { [name: string] : string };\n\nexport type PropertyDescriptions = { [section: string] : PropertyDescription};\n\nexport enum BOAuthenticationType{ Enterprise, LDAP, WINAD}\n\nexport class ConnectionProfileData {\n    public ServerDataMember: string;\n    public BOAuthTypeDataMember: BOAuthenticationType;\n    public UserNameDataMember: string;\n    public PasswordDataMember: string;\n}\n\nexport class HandlerParameter {\n    protected __type: string = \"HandlerParameter\";\n    public name: string;\n    public type: string;\n    public value: SetDataValueItem;    \n}\n\nexport enum GridDataModes {\n    DataTable,\n    ItemList,\n    SubEntityList,\n    SelectionValues,\n    PredefinedQuery,\n    AdHocQuery,\n    Generic\n}\n\nexport class WhereUsedItem{\n    name: string;\n    workSpace: string;\n}\n\nexport class HandlerItem {\n    protected __type: string = \"HandlerItem\";\n    public name: string = \"\";\n    public parameters: HandlerParameter[] = [];\n\n    public static parse(s: string | HandlerItem) : HandlerItem{\n        // parse method and parameters\n        let h = new HandlerItem();\n        if( !s ){\n            h.name = '';\n            h.parameters = [];            \n        }\n        else{\n            if( _.isString(s) ){\n                let spl = s.split('(');\n                h.name = spl[0];\n                h.parameters = (spl[1] ? spl[1].replace(')', '').split(',') : [])\n                    .filter(sp=> !!sp)\n                    .map(ps=> {\n                            let spp = ps.split(':');\n                            return <HandlerParameter> {name: spp[0], type: spp[1], value: undefined } \n                    });\n                }\n            else{\n                let hs = s as HandlerItem;\n                h.parameters = hs.parameters;\n                h.name = hs.name;\n                // cut the parameters from the name\n                let i = h.name.indexOf('(');\n                if( i != -1)\n                    h.name = h.name.substr(0, i);\n            }\n        }\n        return h;\n    }\n\n    public get methodSignature() : string {\n        let prms = this.parameters.map(prm => prm.name  +':'+ HandlerItem.getShortType(prm.type));\n        return `${this.name}(${prms.join()})`;\n    }\n\n    public static getShortType = (fullType: string) => {\n        if(fullType ){\n            let typeName = fullType.split(',', 1)[0];\n            if( typeName )\n                return _.last(typeName.split('.'));\n        }\n        return '';\n    }\n\n    public toTypeHandler() : TypeHandler{\n        let th = new TypeHandler();\n        th.Name = this.name;\n        if( this.parameters )\n            th.Parameters = this.parameters.map(par=> {\n                let hp = new TypeHandlerParameter(); \n                hp.Name = par.name; \n                hp.Type = par.type;\n                return hp;\n            });\n\n        return th;\n    }\n\n    public static fromTypeHandler(th: TypeHandler) : HandlerItem{\n        let h = new HandlerItem();\n        if( !th )\n            return h;\n\n        h.name = th.Name;\n        h.parameters = \n            th.Parameters ? \n            th.Parameters.map(p=> { \n                let tp = new HandlerParameter(); \n                tp.name = p.Name; \n                tp.type = p.Type; \n                return tp;\n            } ) \n            : [];\n\n        return h;\n    }\n\n    public static equals(h1: HandlerItem, h2: HandlerItem) : boolean {\n        if( !h1 && !h2 )\n            return true;\n\n        else if( (!h1 && h2) || (h1 && !h2) )\n            return false;\n\n        else if( h1.name == h2.name && h1.parameters.length == h2.parameters.length)\n            return true;\n\n        return false;\n    }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { IElement } from '../objects/common';\nimport { IGridLayout, ListItemActions } from '../objects/viewModel';\nimport { MetadataService } from './metadata.service';\nimport _ from 'lodash';\n\n@Injectable()\nexport class ConvertorService {\n\n    constructor() {\n    }\n\n    private cleanReferencedItem(wp:IElement){\n\n        const propList = [\"name\",\"type\",\"typeName\",\"isReference\",\"_fullTypeName\",\"id\"];\n        let keyList = Object.keys(wp).filter( k=> propList.indexOf(k) == -1).map(ks=> ks );\n        keyList.forEach( k=> delete wp[k]);\n    }\n\n    private rootWebparts: IElement[];\n\n    // Used on saving and publishing\n    public convertRefs(root: IElement) {\n        if (root.layout && root.layout.__type === \"GridLayout\") {\n            this.rootWebparts = root.items;            \n            this.convertLayoutRefs(<IGridLayout>root.layout, root.items);\n        }\n\n        if (root.items) {\n            _.forEach(root.items, wp => {\n                if( wp.isReference){\n                    this.cleanReferencedItem(wp);\n                }\n                if (wp.layout && wp.layout.__type === \"GridLayout\")\n                    this.convertLayoutRefs(<IGridLayout>wp.layout, wp.items);\n            });\n        }\n    }\n\n    private convertLayoutRefs(layout: IGridLayout | any, items: IElement[]) {        \n        if (layout && layout.tableCells) {\n            _.forEach(layout.tableCells, row => {\n                _.forEach(row, cell => {\n                    if (cell.items) {\n                        _.forEach(cell.items, it => {\n                            let refItem = this.findItemByName(it.name, items);\n                            if (refItem) {\n                                it.typeName = refItem._fullTypeName;\n\n                                if (it.type.toLowerCase() == \"control\") {\n                                    if (refItem.typeName == \"JQTabContainer\") {\n                                        _.forEach(refItem.properties.tabDefinitions, t => {\n                                            this.convertLayoutRefs(t.layout, this.rootWebparts);\n                                        });\n                                    }\n                                    else if (refItem.layout) {\n                                        this.convertLayoutRefs(refItem.layout, this.rootWebparts);\n                                    }\n                                }\n                            }\n                        });\n                    }\n                });\n            });\n        }\n    }\n\n    public convertMaintChangesToModel(maint: any): any {\n\n        let ns = \"Camstar.WCF.ObjectStack\";\n        let type: string;\n\n        if (!maint.__type && maint.Self) {\n            maint.__type = maint.Self.CDOTypeName+':'+ns;\n        }\n        if (!type && maint.__type) {\n            let xt: string[] = (<string>maint.__type).split(':');\n            if (xt.length) {\n                type = xt[0];\n                ns = xt[1];\n            }\n        }\n\n        if (!type) {\n            console.warn('convertMaintChangesToModel: type unresolved', maint);\n            type = \"object\";\n        }\n        else {\n            let i = type.lastIndexOf(\"Maint\");\n            if (i != -1)\n                type = type.substr(0, i) + \"Changes\";\n        }\n        let res = { typeName: type, __type: type };\n        if (ns)\n            res['__ns'] = ns;\n\n        _.forEach(maint, (v, k) => {\n            let ks = k.split('_');\n            if (ks.length == 2) {\n                let field = ks[1];\n                if (field != \"ObjectToChange\") {\n                    field = _.camelCase(field);\n                    let val: any = undefined;\n                    if (v) {\n                        val = (v.Value) ? v.Value : v;\n                        if (!_.isEmpty(val)) {\n                            if (_.isArray(val)) {\n                                let newarray = [];\n                                _.forEach(val, (va, i) => {\n                                    let av;\n                                    if (this.isNDORef(va))\n                                        av = { name: va['Name'], __type: 'NamedObjectRef', CDOTypeName: va['CDOTypeName'] };\n                                    else\n                                        av = this.convertMaintChangesToModel(va);\n                                    av['__index'] = i;\n                                    newarray.push(av);\n                                });\n                                val = newarray;\n                            }\n                            else if (_.isObject(val)) {\n                                let objVal = <any>val;\n                                if (objVal.CDOTypeName !== undefined && objVal.Name !== undefined) {\n                                    // NDORef\n                                    val = objVal.Name;\n                                }\n                                else {\n                                    val = this.convertMaintChangesToModel(val);\n                                }\n                            }\n                        }\n                    }\n                    if (val)\n                        res[field] = val;\n                }\n            }\n        });\n\n        return res;\n    }\n\n\n    public convertModelToMaintChanges(obj, metadataService: MetadataService): any {\n        let ns = obj.__ns || 'Camstar.WCF.ObjectStack';\n        let ch = {\n            __type : obj.__type + ':' + ns\n        };\n\n        let ownerType = metadataService.getMetadataType(obj.typeName || obj.__type);\n        if (ownerType){\n            if( ownerType._name != \"NamedObjectRef\") {\n                _.forEach(ownerType.properties, p => {\n                    let n = p.name.toLowerCase();\n                    let propValue = _.find(obj, (v, k) => k.toString().toLowerCase() == n);\n                    if (propValue) {\n                        if (_.isArray(propValue)) {\n                            let pArray = [];\n\n                            // deleted items\n                            let deletedCnt = 0;\n                            let sorted = _.sortBy(propValue, [\"__index\"]);\n\n                            sorted.forEach(pv => {\n                                let i: number = pv['__index'];\n                                i -= deletedCnt;\n\n                                if (pv['__action'] == ListItemActions.delete) {\n                                    pArray.push({ ListItemAction: ListItemActions.delete, ListItemIndex: i });\n                                    deletedCnt++;\n                                }\n                                else if (pv['__action'] == ListItemActions.change) {\n                                    let chVal = this.convertModelToMaintChanges(pv, metadataService);\n                                    chVal['ListItemIndex'] = i;\n                                    pArray.push(chVal);\n                                }\n                                else if (pv['__action'] == ListItemActions.add) {\n                                    let chVal = this.convertModelToMaintChanges(pv, metadataService);\n                                    pArray.push(chVal);\n                                }\n                            });\n                            propValue = pArray;\n                        }\n                        else {\n                            if( p.editor && p.editor.provider && p.editor.provider == \"ndoInstances\") {\n                                let cdoType = p.editor.parameters[0];\n                                if( cdoType.startsWith(\"#\"))\n                                    cdoType = obj.CDOTypeName;\n                                propValue = { CDOTypeName: cdoType, Name: propValue };\n                            }\n                            else {\n                                if (_.isString(propValue) || _.isNumber(propValue) || _.isBoolean(propValue)) {\n                                    // Scalar field\n                                    propValue = { Value: propValue };\n                                }\n                                else {\n                                    // Object field\n                                    propValue = this.convertModelToMaintChanges(propValue, metadataService);\n                                    // check whether the value has just type only. it's considered as empty\n                                    let keys = _.keys(propValue);\n                                    if (keys.length ==0 || (keys.length == 1 && keys[0] == '__type'))\n                                        propValue = null;\n\n                                    // if property type == object type - delete the __type\n                                    let t: string = propValue && propValue['__type'];\n                                    if (t) {\n                                        let tn = t.split(':');\n                                        if (tn.length > 0 && tn[0] == p.originalTypeName) {\n                                            delete propValue['__type'];\n                                        }\n                                    }\n                                    if (propValue != null){\n                                        if(obj.isNew === true) {\n                                            propValue['FieldAction'] = 0; // 0 = create, 1- replace (default)\n                                        }\n                                        else{\n                                            // If the object exists then omit the type because it cannot be changed after creation\n                                            if(propValue['__type'])\n                                                delete propValue['__type'];\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        if (propValue != null) {\n                            let creatorType = metadataService.getPropertyCreatorType(ownerType, p);\n                            ch[creatorType._name + '_' + p.name] = propValue;\n                        }\n                    }\n                });\n            }\n            else{\n                // NamedObjectRef\n                ch['Name'] = obj.name || obj.Name;\n            }\n        }\n        if (obj['__index'] !== undefined && obj['__action'] !== undefined) {\n            if (obj['__action'] !== ListItemActions.add )\n                ch['ListItemIndex'] = obj.__index;\n            ch['ListItemAction'] = obj['__action']; // add, change, delete, replace\n            if( ownerType && ownerType._name === \"NamedObjectRef\")\n                delete ch['CDOTypeName'];\n            else\n                ch['CDOTypeName'] = obj.__type;\n        }\n        return ch;\n    }\n\n    public convertTargetMatrixToModel(tm: any, type?: string): any {\n        return tm;\n    }\n\n    public convertSettingsToModel(st : any, typeName: string, metadataService: MetadataService): any {\n\n        let res: any;\n        let isArray = _.endsWith(typeName, '[]');\n\n        if (_.isString(st) || _.isNumber(st) || _.isBoolean(st))\n            return st;\n\n        if (metadataService.isSystemType(typeName)) {\n            if (st === undefined) {\n                if (typeName.toLowerCase() == 'string')\n                    st = null;\n                return st;\n            }\n            if (!isArray)\n                return st;\n        }\n\n        if (isArray) {\n            res = [];\n            if (st) {\n                res = (<any[]>st).map( v => \n                    this.convertSettingsToModel(v, typeName.replace('[]', ''), metadataService)\n                );\n            }\n        }\n        else {\n            // it's object\n            let type = metadataService.getMetadataType(typeName);\n            res = {};\n\n            if( !type ){\n                console.error(\"Metadata: type not found\", typeName, st);\n                return res;\n            }\n\n            res.__type = typeName;\n\n            _.forEach(type.properties, pr => {\n                let fn = (pr.name + 'Field').toLowerCase();\n                let v = _.find(st, (v, k: string) => k.toLowerCase() == fn);\n\n                let converted = this.convertSettingsToModel(v, pr.originalTypeName, metadataService);\n                res[pr.name] = converted;\n\n                if (pr.originalTypeName.toLowerCase() == 'boolean') {\n                    pr.notNullable = true;\n                }\n            });\n        }\n        return res;\n    }\n\n    public convertModelToSettings(st): any {\n\n        let res: any;\n\n        if (_.isArray(st)) {\n            res = (<any[]>st).map(v => this.convertModelToSettings(v));\n        }\n\n        else if (_.isObject(st)) {\n            // it's object\n            let stObj = <any>st;\n            res = {};\n            let stType: string = stObj.__type;\n            if (_.isString(stType) && stType.indexOf('.') != -1)\n                stType = stType.split('.')[1];\n\n            delete stObj.name;\n            delete stObj.__type;\n\n            let isAllEmpty = true;\n            delete stObj.__action;\n\n            // add trailed 'Field'\n            _.forEach(st, (v, k) => {\n\n                let conv = this.convertModelToSettings(v);\n                if (_.isArray(conv))\n                    if (conv.length == 0)\n                        conv = null;\n\n                if (conv !== null && conv !== undefined)\n                    isAllEmpty = false;\n\n                let field = this.toCamelCase(k + 'Field');\n                res[field] = conv;\n\n                if (stType == 'GridSettings') {\n                    ['VisibleRows', 'PagesRequested'].forEach(nf => {\n                        if (k == nf) {\n                            let specified = !(st[nf] === null || st[nf] === undefined);\n                            res[this.toCamelCase(nf + 'FieldSpecified')] = specified;\n                            if (specified)\n                                isAllEmpty = false;\n                        }\n                    });\n                }\n            });\n\n            if (isAllEmpty) {\n                res = null;\n            }\n            else if (_.isArray(res) && res.length == 0) {\n                res = null;\n            }\n\n            if (stType == \"UIComponentDataContractLink\") {\n                if (res) {\n                    res['__deletedField'] = false;\n                    res['__deletedFieldSpecified'] = false;\n                }\n            }\n            else if (stType == \"DataSource\") {\n                if( res['loginPasswordField'] === undefined )\n                    res['loginPasswordField'] = \"\";\n            }\n        }\n        else {\n            res = st;\n        }\n\n        return res;\n    }\n\n    public elementSerialize(element: IElement) : string{\n        const ignoredKeys = [\"history\", \"__layoutManager\",\"__selectedElement\",\n        \"__xml\", \"__designMode\", \"__zoomXml\", \n        \"isRoot\", \"__layoutMenu\", \"__workspace\", \"scaleValue\", \"componentRef\", \"isDirty\", \"workspaceIndexes\",\n        \"activeElement\"];\n\n        return JSON.stringify(element, (k, v) => {\n            if (ignoredKeys.indexOf(k) != -1 ) \n                return undefined;\n            else\n                return v;\n            });\n    }\n\n    private toCamelCase(s: string) {\n        if (s.toLowerCase() == 'cdonamefield') {\n            s = 'CDONameField';\n        }\n\n        return s[0].toLowerCase() + s.substring(1);\n    }\n\n    private findItemByName(name: string, list: IElement[]) {\n        let item = null;\n        _.forEach(list, v => {\n            if (v.name == name) {\n                item = v;\n                return false;\n            }\n        });\n        return item;\n    }\n\n    private isNDORef(v): boolean {\n        if (v['CDOTypeName'] && v['ID'])\n            return true;\n        else\n            return false;\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { IPropertyMetadata, ListItemActions, JQGridCustomScript, QueryOptions, QueryParameter, HandlerItem, ConnectionProfileData, BOAuthenticationType} from '../objects/viewModel';\nimport { MetadataService } from './metadata.service';\nimport { LayoutBuilder, IElement, ILabel, val,  TypeHandler, RevisionedObjectRef, uuid} from '../objects/common';\nimport { AlertService } from '../../alert/alert.service';\n\nimport * as _ from 'lodash';\nimport { StudioStateService } from './studioStateService';\nimport { PortalService } from './portal.service';\n\n@Injectable()\nexport class DataAccessors {\n\n    constructor(private metadataService: MetadataService, private _studioStateService: StudioStateService,  private _alertService: AlertService, private _portalService : PortalService) {\n    }\n\n    public callSetter(v: any, instance: any, properties: IPropertyMetadata[], valType: string, property: IPropertyMetadata, populating: boolean): boolean {\n        let accessor: PropertyAccessor = this[property.accessor];\n        if (accessor && _.isFunction(accessor.setter)) {\n            accessor.setter(v, instance, properties, valType, property, populating);\n            return true;\n        }\n        return false;\n    }\n\n    public callGetter(propertyContext: any, property: IPropertyMetadata): any {\n        let accessor: PropertyAccessor = this[property.accessor];\n        if (accessor && _.isFunction(accessor.getter)) {\n            return accessor.getter(propertyContext, property);\n        }\n        return;\n    }\n\n    public hasGetter(property: IPropertyMetadata): any {\n        let accessor: PropertyAccessor = this[property.accessor];\n        return (accessor && _.isFunction(accessor.getter));\n    }\n\n    public DataContract = new PropertyAccessor(\n        (propertyContext: any, property: IPropertyMetadata) => {\n            if (propertyContext.properties) {\n                let dc = this.metadataService.getByKey(propertyContext.properties, 'dataContract');\n                if (dc)\n                    return this.metadataService.getByKey(dc, 'dataMembers');\n            }\n            else {                \n                let linkMap = null;\n                if( property.name == \"DataContractLinks\"){\n                    linkMap = val(propertyContext, \"dataContractMap\");\n                    return val(linkMap, \"links\");\n                }\n                else if( property.name == \"DataContractReturnLinks\"){\n                    linkMap = val(propertyContext, \"dataContractReturnMap\");\n                    return val(linkMap, \"returnLinks\");\n                }\n            }\n            return null;\n        },\n        (v: any, propertyContext: any, properties : IPropertyMetadata[], t: string, property: IPropertyMetadata) => {\n            let linkMap;\n            if( property?.name == \"DataContractLinks\"){\n                linkMap = val(propertyContext, \"dataContractMap\");\n                if( !linkMap )\n                    linkMap = (propertyContext.dataContractMap = {__type: \"UIComponentDataContractMap\" });\n                linkMap.links = v;\n                return;\n            }\n            else if(property?.name == \"DataContractReturnLinks\"){\n                linkMap = val(propertyContext, \"dataContractReturnMap\");\n                if( !linkMap )\n                    linkMap = (propertyContext.dataContractReturnMap = {__type: \"UIComponentDataContractReturnMap\" });\n                linkMap.returnLinks = v;\n                return;\n            }\n\n            if (!propertyContext.properties)\n                propertyContext.properties = {};\n\n            let dc = this.metadataService.getByKey(propertyContext.properties, 'dataContract');\n            if (dc)\n                dc['dataMembers'] = v;\n            else{\n                if( v !== null)\n                    propertyContext.properties.dataContract = { __type: 'UIComponentDataContract', dataMembers: v };\n                else\n                    propertyContext.properties.dataContract = null;\n            }\n        });\n\n    public DynamicWebParts = new PropertyAccessor(\n        (propertyContext: any) => {\n            let webParts = [];\n            if (propertyContext && propertyContext.items) {\n                _.forEach(propertyContext.items, w => {\n                    let wp = _.cloneDeep(w);\n                    wp.__type = w.typeName;\n                    webParts.push(wp);\n                });\n            }\n            return webParts;\n        });\n\n    public ValueReference_DependenceType = new PropertyAccessor(undefined,\n        (v: any, propertyContext: any, properties: IPropertyMetadata[]) => {\n            let changed = propertyContext.connectionType !== v;\n            \n            propertyContext.connectionType = v;\n            if( changed )\n                propertyContext.key = '';        \n\n\n            let connectionName = this.metadataService.getMetadataType('DataMemberConnectionType').enumValues[v].name;\n            let propertyProperty = properties.find(px => px.name.toLowerCase() == \"property\");\n            if (propertyProperty) {\n                if (connectionName == 'Control') {\n                    propertyProperty.editor.provider = \"elementProperties\";\n                    propertyProperty.hidden = false;\n                }\n                else {\n                    propertyProperty.hidden = true;\n                    propertyProperty.editor.provider = null;\n                }\n            }\n            let requestDataModeProperty = properties.find(px => px.name.toLowerCase() == \"requestdatamode\");\n            let eventProperty = properties.find(px => px.name.toLowerCase() == \"event\");\n\n            let keyProperty = properties.find( px => px.name.toLowerCase() == \"key\");\n            if (keyProperty) {\n                keyProperty.displayedName = connectionName;\n                keyProperty.value = null;\n                keyProperty.hidden = false;\n                keyProperty.editor.filter = null;\n                keyProperty.editor.directive = \"selector\";\n\n                if (eventProperty) eventProperty.hidden = true;\n                if (requestDataModeProperty) requestDataModeProperty.hidden = true;\n\n                if (connectionName == 'Control') {\n                    keyProperty.editor.provider = \"elements\";\n                    if (eventProperty) eventProperty.hidden = false;\n                    if (requestDataModeProperty) requestDataModeProperty.hidden = false;\n                }\n                else if (connectionName == 'PageDataContract') {\n                    //keyProperty.editor.provider = \"pageDataContracts\";\n                    keyProperty.editor.directive = \"text\";\n                    keyProperty.editor.provider = null;\n                }\n                else if (connectionName == 'SessionDataContract') {\n                    keyProperty.editor.provider = \"sessionDataContracts\";\n                }\n                else if (connectionName == 'FieldExpression') {\n                    keyProperty.editor.directive = \"text\";\n                    keyProperty.editor.provider = \"fieldExpression\";\n                }\n                else if (connectionName == 'StaticValue') {\n                    keyProperty.editor.directive = \"text\";\n                    keyProperty.editor.provider = null;\n                }\n                else if (connectionName == 'SessionVariable') {\n                    keyProperty.editor.directive = \"text\";\n                    delete keyProperty.editor.provider;\n                    delete keyProperty.editor.options;\n                }\n                else if (connectionName == 'GridItem') {\n                    keyProperty.editor.directive = \"text\";\n                    keyProperty.editor.provider = null;\n                }\n                else {\n                    keyProperty.editor.provider = null;\n                }\n\n                if (connectionName == 'None') {\n                    keyProperty.hidden = true;\n                    keyProperty.editor.directive = \"text\";\n                    keyProperty.editor.provider = null;\n                }\n            }\n        });\n\n\n    public RequestDataMode = new PropertyAccessor(undefined,\n        (v: any, propertyContext: any, properties: IPropertyMetadata[]) => {\n\n            let eventProperty = properties.find(p => p.name.toLowerCase() == 'event');\n            if (eventProperty) {\n                if (v === undefined || v === null) {\n                    propertyContext.event = null;\n                    eventProperty.hidden = true;\n                    return;\n                }\n                eventProperty.hidden = v !== 0;\n                propertyContext.requestDataMode = v;               \n            }\n        });\n       \n    public Control_Type = new PropertyAccessor(\n        (propertyContext: any) => {\n            if (propertyContext && propertyContext.typeName) {\n                return propertyContext.typeName;\n            }\n        });\n\n    // GridCell\n    public Cell_Column = new PropertyAccessor((propertyContext: any) => { if (propertyContext) { return propertyContext.col; } });\n    public Cell_ColumnSpan = new PropertyAccessor((propertyContext: any) => { if (propertyContext) { return propertyContext.colSpan; } });\n    public Cell_Row = new PropertyAccessor((propertyContext: any) => { if (propertyContext) { return propertyContext.row; } });\n    public Cell_RowSpan = new PropertyAccessor((propertyContext: any) => { if (propertyContext) { return propertyContext.rowSpan; } });\n\n    public Cell_StyleProp = new PropertyAccessor(\n            (propertyContext: any, prop: IPropertyMetadata) => { \n                let style = val(propertyContext.properties, \"style\");\n                let v = val(style, prop.name);\n                if(v === undefined){\n                    if(!(prop.editor && prop.editor.directive == \"enum\" ))\n                        v = '';\n                }\n                return v;\n            },\n            (v: any, propertyContext: any, properties: IPropertyMetadata[], t: string, prop:IPropertyMetadata) => {\n                let style = val(propertyContext.properties, \"style\");\n                if(!style)\n                    style = val(propertyContext.properties, \"style\", {__type: 'Style'});                \n                val(style, prop.name, v);\n            });\n    \n    public GridDataMode = new PropertyAccessor(undefined,\n        (v: any, propertyContext: any, properties: IPropertyMetadata[]) => {\n\n            if (propertyContext.properties.gridDataMode !== v) {\n                // process if changed\n                propertyContext.properties.gridDataMode = v;\n\n                const settingTypes: string[] = [\"GridDataSettingsDataTable\", \"GridDataSettingsItemList\", \"GridDataSettingsSubentityList\",\n                    \"GridDataSettingsSelVal\", \"GridDataSettingsPredefinedQuery\", \"GridDataSettingsAdHocQuery\", \"GridDataSettingsGeneric\"];\n\n                let settingsType = settingTypes[v];\n\n                // change type or create new grid Settings\n                if (propertyContext.properties.settings && propertyContext.properties.settings.__type === settingsType) {\n                    // no changes\n                }\n                else {\n                    propertyContext.properties.settings = { __type: settingsType };\n                }\n\n                let s = _.find(properties, p => p.name.toLowerCase() == 'settings');\n                if (s)\n                    s.value = propertyContext.properties.settings;\n            }\n        });\n\n    public Margin = new PropertyAccessor(\n        (propertyContext: any) => this.thickness_get('Margin', propertyContext),\n\n        (v: any, propertyContext: any, properties: IPropertyMetadata[]) =>\n            this.thickness_set('Margin', v, propertyContext, properties)\n    );\n\n    public Padding = new PropertyAccessor(\n        (propertyContext: any) => this.thickness_get('Padding', propertyContext),\n        \n        (v: any, propertyContext: any, properties: IPropertyMetadata[]) => \n            this.thickness_set('Padding', v, propertyContext, properties)\n    );\n\n    public SectionDefinition = new PropertyAccessor(\n        (propertyContext: any) => {\n\n            // convert layout to section\n            let lt = propertyContext.layout;\n            let sec = propertyContext.properties.section || { __type: 'SectionDefinition', layout: {__type: 'GridLayout'}, dynamicWebParts : []};\n            if (lt) {\n                sec.layout = _.cloneDeep(lt);\n                sec.dynamicWebParts = propertyContext.items || [];\n                return sec;\n            }\n        }\n    );\n\n    public JQTabContainer_Tabs = new PropertyAccessor(\n        // Getter -- maybe it's needed to collect internal web parts\n        (propertyContext: any) => {\n            return propertyContext.properties.tabDefinitions;\n        },\n\n        // Setter\n        (v: any, propertyContext: any) => {\n            // fix tab definition, add default values\n            let maxIndex = v.length;\n            let tds = _.filter(<any[]>v, td => td.__action !== ListItemActions.delete).map(t => {\n\n                if (!val(t, \"name\")) {\n                    t.name = 'TabDefinition' + maxIndex;\n                    t.index = maxIndex;\n                    maxIndex++;\n                }\n                if (!t.id)\n                    t.id = uuid.id('tab');\n\n                if (!t.layout) {\n                    t.layout = LayoutBuilder.getLayout(2, 1);\n                }\n\n                delete t.__action;\n                return t;\n            });\n\n            propertyContext.properties.tabDefinitions = tds;\n            delete propertyContext.properties.section;\n        }\n    );\n\n    public TagItemSource = new PropertyAccessor(undefined,\n        (v: any, propertyContext: any, properties: IPropertyMetadata[]) => {\n            if (v === undefined || v === null)\n                v = 0;\n\n            if (propertyContext.tagItemSource !== v) {\n                // changed\n                propertyContext.tagItemValue = '';\n            }\n\n            propertyContext.tagItemSource = v;\n\n            let propertyTagItemValue = _.find(properties, px => { return px.name.toLowerCase() == \"tagitemvalue\"; });\n            if (propertyTagItemValue) {\n                if (v == 0) {\n                    // Control\n                    propertyTagItemValue.displayedName = 'Control';\n                    propertyTagItemValue.editor.directive = \"selector\";\n                    propertyTagItemValue.editor.provider = \"elements\";\n                }\n                else if (v == 1) {\n                    // Session Variable\n                    propertyTagItemValue.displayedName = 'SessionVariable';\n                    propertyTagItemValue.editor.directive = \"text\";\n                    delete propertyTagItemValue.editor.provider;\n                    delete propertyTagItemValue.editor.options;\n                }\n            }\n        }\n    );\n\n    public SelectionDependsOnItem_DependenceType = new PropertyAccessor(undefined,\n        (v: any, propertyContext: any, properties: IPropertyMetadata[]) => {\n\n            let changed = propertyContext.dependenceType !== v;\n\n            propertyContext.dependenceType = v;\n            if( changed )\n                propertyContext.dependenceValue = '';\n            \n            let propertyDependenceValue = properties.find(p => p.name.toLowerCase() == \"dependencevalue\" );\n            let propertyMethod = properties.find(p => p.name.toLowerCase() == \"method\");\n            let propertyServiceName = properties.find(p => p.name.toLowerCase() == \"servicename\");            \n            let propertyRequestDataMode = properties.find(p => p.name.toLowerCase() == \"requestdatamode\" );\n            let propertyEvent = properties.find(p => p.name.toLowerCase() == \"event\" );\n            \n            if( propertyEvent ) propertyEvent.hidden = true;\n                \n            propertyDependenceValue.editor.filter = null;\n            propertyDependenceValue.editor.directive = \"selector\";\n            if (propertyMethod) propertyMethod.hidden = true;\n            if (propertyServiceName) propertyServiceName.hidden = true;\n\n            switch (v) {\n                case 0: // Control\n                    propertyDependenceValue.displayedName = 'Control';\n                    if( propertyRequestDataMode ) propertyRequestDataMode.hidden = false;\n                    propertyDependenceValue.editor.provider = \"elements\";\n                    if (propertyMethod) propertyMethod.hidden = false;\n                    if (propertyServiceName) propertyServiceName.hidden = false;\n                    break;\n                case 1: // Action\n                    propertyDependenceValue.displayedName = 'Action';\n                    propertyDependenceValue.editor.provider = \"elements\";\n                    propertyDependenceValue.editor.filter = \"actions\";\n                    if( propertyEvent ) propertyEvent.hidden = true;\n                    if( propertyRequestDataMode ) propertyRequestDataMode.hidden = true;\n                    break;\n                case 2: // fieldexpression\n                    propertyDependenceValue.displayedName = 'FieldExpression';\n                    propertyDependenceValue.editor.directive = \"text\";\n                    propertyDependenceValue.editor.provider = \"fieldExpression\";\n                    if( propertyEvent ) propertyEvent.hidden = true;\n                    if( propertyRequestDataMode ) propertyRequestDataMode.hidden = true;\n                    break;\n                case 3: // Session Data Contract\n                    propertyDependenceValue.displayedName = 'SessionDataContract';\n                    propertyDependenceValue.editor.provider = \"sessionDataContracts\";\n                    if( propertyEvent ) propertyEvent.hidden = true;\n                    if( propertyRequestDataMode ) propertyRequestDataMode.hidden = true;\n                    break;\n                case 4: // Session Variable\n                    propertyDependenceValue.displayedName = 'SessionVariable';\n                    propertyDependenceValue.editor.directive = \"text\";\n                    propertyDependenceValue.editor.provider = null;\n                    if( propertyEvent ) propertyEvent.hidden = true;\n                    if( propertyRequestDataMode ) propertyRequestDataMode.hidden = true;\n                    break;\n            }\n        });\n    \n    public Content_Layout = new PropertyAccessor(\n        (propertyContext: any) => {\n\n            let lt = propertyContext.layout;\n            return lt;\n        }\n    );\n\n    public RevisionedObjectRef_accessor = new PropertyAccessor(\n        (propertyContext: any, property: IPropertyMetadata) => {\n            let v = <RevisionedObjectRef>val(propertyContext.properties, property.name);\n            if (v) {\n                let ro = new RevisionedObjectRef(v.name, v.revision, v.revisionOfRecord);\n                ro.cdoTypeName = v.cdoTypeName;\n                return ro;\n            }\n            return v;\n        },\n        (v: any, propertyContext: any, properties: IPropertyMetadata[], vt: string, property: IPropertyMetadata) => {\n            val(propertyContext.properties, property.name, v);\n        }\n    );\n\n    public GridColumns = new PropertyAccessor(undefined,\n        (v: any, propertyContext: any, properties: IPropertyMetadata[], vt: string, property: IPropertyMetadata) => {\n            let pname = property.name.toLowerCase();\n            let fexKey = _.findKey(propertyContext, (pv, k: string) => k.toLowerCase() == pname);\n            let oldFex = fexKey ? propertyContext[fexKey] : null;\n            let requestSelVal = propertyContext.__type == \"GridDataSettingsSelVal\";\n\n            propertyContext[fexKey] = v;\n            property.value = v;\n\n            let columnsProperty = _.find(properties, p => p.name.toLowerCase() == 'columns');\n\n            // The dialog is called only if field expression is changed \n            let openDialog: boolean;\n            if (v)\n                openDialog = (v != oldFex);           \n            else \n                openDialog = false;\n\n            if (openDialog) {\n                let fieldExp: string = v;\n                if (fieldExp[0] == '.') {\n                    // add service \n                    let root: IElement = this._studioStateService.activeRootElement;\n                    let servKey = _.findKey(root.properties, (p, k) => k.toLowerCase() == 'primaryservicetype');\n                    if (servKey)\n                        fieldExp = root.properties[servKey] + fieldExp;\n                    else {\n                        this._alertService.warningModal(<ILabel>{ Name: 'PS_SERVICE_UNDEFINED', DefaultValue: 'Service name is not defined. Columns are not generated.' });\n                        return;\n                    }\n                }\n                let mdlLabel: ILabel = <ILabel>{ Name: 'PS_GENERATE_COLUMNS', arguments: [fieldExp], DefaultValue: 'Generate columns for {0} ?' };\n                this._alertService.confirmModal(mdlLabel).subscribe( ok => {\n                    if (ok) {\n                        this._portalService.resolveGridColumns(fieldExp, requestSelVal).subscribe(\n                            columns => {\n                                if (_.isArray(columns)) {\n                                    if (columnsProperty)\n                                        columnsProperty.value = columns;\n                                    propertyContext.columns = columns;\n                                }\n                                else {\n                                    // error\n                                    propertyContext[property.name] = property.value = null;\n                                    this._alertService.errorModal(columns);\n                                }\n                            }\n                        );\n                    }\n                });                \n            }\n        });\n\n    public query_GridColumnsSetup = new PropertyAccessor(undefined,\n        (v: any, propertyContext: any, properties: IPropertyMetadata[], vt: string, property: IPropertyMetadata) => {\n            let pname = property.name.toLowerCase();\n            let oldValue  = _.find(propertyContext, (pv, k: string) => k.toLowerCase() == pname);\n\n            if( !oldValue && (v === undefined || v==null))\n                return;\n\n            propertyContext[property.name] = v;\n            property.value = v;\n\n            let columnsProperty = _.find(properties, p => p.name.toLowerCase() == 'columns');\n            // replace parameters                        \n            let query = v;\n            if( pname==\"querytext\")\n                _.forEach(propertyContext.queryParameters, c=> {query = query.replace('?'+c.name, `'${c.__tempValue}'`); delete c.__tempValue; });\n\n            if (v !== oldValue) {\n                let mdlLabel: ILabel = <ILabel>{ Name: 'PS_GENERATE_COLUMNS', arguments: [v], DefaultValue: 'Generate columns for {0} ?' };\n                this._alertService.confirmModal(mdlLabel).subscribe( ok => {\n                    if (ok) {\n                        let params = _.map(propertyContext.queryParameters, (px:any) => <QueryParameter>{Name: px.name, Value : px.__tempValue });\n\n                        let obs = pname==\"querytext\" ? \n                            this._portalService.getAdHocQueryColumns(query, <QueryOptions>{RowSetSize: 1}) :\n                            this._portalService.getQueryColumns(query, <QueryOptions>{RowSetSize: 1}, params);\n\n                        obs.subscribe(\n                            columns => {                                \n                                if (_.isArray(columns)) {\n                                    if (columnsProperty)\n                                        columnsProperty.value = columns;\n                                    propertyContext.columns = columns;\n                                }\n                                else {\n                                    // error\n                                    propertyContext[property.name] = property.value = null;\n                                    this._alertService.errorModal(columns);\n                                }\n                            }\n                        );\n                    }\n                });                \n            }\n        });\n            \n    public ConnectionDefinition_FromWebPart = new PropertyAccessor(\n        (propertyContext: any) => {\n            return propertyContext.fromWebPartName;\n        },\n\n        (v: any, propertyContext: any, properties: IPropertyMetadata[], vt: string, property: IPropertyMetadata) => {\n            propertyContext.fromWebPartName = v;\n            properties.find(p => p.name.toLowerCase() == 'fromwebpartname').value = v;\n            property.value = v;\n        });\n\n    public ConnectionDefinition_ToWebPart = new PropertyAccessor(\n        (propertyContext: any) => {\n            return propertyContext.toWebPartName;\n        },\n\n        (v: any, propertyContext: any, properties: IPropertyMetadata[], vt: string, property: IPropertyMetadata) => {\n            propertyContext.toWebPartName = v;\n            properties.find(p => p.name.toLowerCase() == 'towebpartname').value = v;\n            property.value = v;\n        });\n\n    public JQGridCustomScript = new PropertyAccessor(\n        (propertyContext: any) => {\n            let initVal: JQGridCustomScript[] = propertyContext.customScriptHandlers;\n            // Processed only if we click in the modal collection editor\n            //delete propertyContext['__selectedInModalCollection'];\n            let resVal: JQGridCustomScript[];\n            initVal = initVal || [];\n            let isColumn = !(<string>propertyContext.__type).startsWith('GridDataSettings');\n            let eventList = isColumn ?\n                ['click', 'change', 'onAddCellAttributes'] :\n                ['renderCompleted', 'rowDeleted', 'editingStarted'];\n\n            resVal = eventList.map<JQGridCustomScript>(e =>\n                initVal.find(iv => iv.Name === e || iv['name'] === e) || \n                <JQGridCustomScript>{ Name: e, Handler: '', __type: 'JQGridCustomScript' }\n            );\n            return resVal;\n        },\n        (v: any, propertyContext: any, properties: IPropertyMetadata[], vt: string, property: IPropertyMetadata) => {\n            // cleanup empty handlers\n            propertyContext.customScriptHandlers = _.filter<JQGridCustomScript>(v, e => !_.isEmpty(e['Handler']) || !_.isEmpty(e['handler']) );\n        }\n    );\n\n    public SelectionDataSourceMap_SourceType = new PropertyAccessor(undefined,\n        (v: any, propertyContext: any, properties: IPropertyMetadata[]) => {\n            if (propertyContext.sourceType != v) {\n                propertyContext.sourceType = v;\n            }\n\n            let mp = this.mapProperties([\"StaticSource\", \"SetData\", \"Query\", \"QueryType\", \"QueryExecutionMode\", \"Parameters\"], properties);\n            _.forEach(mp, v => v.hidden = true);\n\n            switch (v) {\n                case 0: // StaticSource\n                    mp['StaticSource'].hidden = false;\n                    mp['QueryExecutionMode'].value = null;\n                    delete propertyContext.queryExecutionMode;\n                    break;\n                case 1: // SetData\n                    mp['SetData'].hidden = false;\n                    mp['QueryExecutionMode'].value = null;\n                    delete propertyContext.queryExecutionMode;\n                    break;\n                case 2: // Query\n                    mp['Query'].hidden = false;\n                    mp['QueryType'].hidden = false;\n                    mp['QueryExecutionMode'].hidden = false;\n                    mp['Parameters'].hidden = false;\n                    break;\n            }\n        });\n\n    public SelectionDataSourceMap_QueryExecutionMode = new PropertyAccessor(undefined,\n        (v: any, propertyContext: any, properties: IPropertyMetadata[]) => {\n\n            let changed = false;\n            if (propertyContext.queryExecutionMode!= v) {\n                propertyContext.queryExecutionMode = v;\n                changed = true;\n                propertyContext.query = '';\n            }\n\n            let mp = this.mapProperties([\"Query\", \"QueryType\"], properties);\n            _.forEach(mp, v => v.hidden = true);\n\n            switch (v) {\n                case 0: // adhoc\n                    mp['Query'].hidden = false;\n                    break;\n                case 1: // preDefined\n                    mp['QueryType'].hidden = false;\n                    mp['Query'].hidden = false;\n                    break;\n            }\n            if (changed) {\n                mp['Query'].value = '';\n            }\n        });\n\n    public SelectionDataSourceMap_Query = new PropertyAccessor(undefined,\n        (v: any, propertyContext: any, properties: IPropertyMetadata[]) => {\n            \n            if (val(propertyContext, \"query\") != v) {\n                val(propertyContext, \"query\", v);\n                let pp = properties.find(p=> p.name.toLowerCase() == \"parameters\");\n                if( pp ){\n                    pp.value = val(propertyContext, \"parameters\");\n                }\n            }\n        });\n            \n    public PageContent_CSSClass = new PropertyAccessor(\n        (propertyContext: any) => {\n            let st = val(propertyContext.properties, \"style\");\n            if( st )\n                return val(st, \"CSSClass\") || '';\n            return '';\n        },\n        (v: any, propertyContext: any, properties: IPropertyMetadata[]) => {\n            let st = val(propertyContext.properties, \"style\");\n            if(!st)\n                st = val(propertyContext.properties, \"style\", {__type: 'Style'});            \n            val(st, \"CSSClass\", v);\n        });\n    \n    public WebPart_HiddenRootProperty = new PropertyAccessor(\n        (propertyContext: any, property: IPropertyMetadata) => {\n            return val(propertyContext.properties, property.name) || '';\n        },\n        (v: any, propertyContext: any, properties: IPropertyMetadata[], t, property: IPropertyMetadata) => {\n            // Hide height/width for WebPart in root mode\n            if( propertyContext.isRoot === true) {\n                property.hidden = true;\n                return;\n            }\n            if( !propertyContext.properties )\n                propertyContext.properties = {};\n            \n            if( v === undefined || v === null)\n                v = \"\";\n            else\n                v = v.toString();\n\n            val(propertyContext.properties, property.name, v);\n        });\n\n        private mapProperties(names: string[], properties: IPropertyMetadata[]): { [name: string]: IPropertyMetadata } {\n        let res: { [name: string]: IPropertyMetadata } = {};\n        names.forEach(n => { res[n] = _.find(properties, p => p.name.toLowerCase() == n.toLowerCase()) });\n        return res;\n    }\n    \n    public Event_HandlerSource = new PropertyAccessor(undefined,\n        (v: any, propertyContext: any, properties: IPropertyMetadata[], t, property: IPropertyMetadata) => {\n            val(propertyContext, property.name, v);\n\n            let ctlProp = properties.find(p=> p.name.toLowerCase() == 'control');\n            if( ctlProp )\n                ctlProp.hidden = (v !== 1 /*Control*/);\n\n            let isClientEvent = property.enumValues.length <5;\n            let handlerProp = properties.find(p=> p.name.toLowerCase() == 'handler');\n            if( handlerProp ){\n                if( (isClientEvent && v ===2) || ( !isClientEvent && v === 5) /*static method*/ ){\n                    handlerProp.editor.directive = \"text\";\n                    handlerProp.editor.provider = null;\n                }\n                else{\n                    handlerProp.editor.directive = \"selector\";\n                    handlerProp.editor.provider = !isClientEvent ? \"handlers\" : \"clientHandlers\";\n                }\n            }\n        });\n\n    public EventHandlerMapItem_Handler = new PropertyAccessor(\n        (propertyContext: any, property: IPropertyMetadata) => {\n                let handlerItem : HandlerItem = HandlerItem.parse(val(propertyContext, property.name));\n                let th : TypeHandler = handlerItem.toTypeHandler();\n                if( property.editor.directive == \"text\"){\n                    return th ? th.Name: \"\";\n                }\n                return th ? th.Name : \"\";\n            },\n            (v: any, propertyContext: any, properties: IPropertyMetadata[], t, property: IPropertyMetadata) => {\n                // v is TypeHandler. Should be converted to HandlerItem\n                let oldHandler = HandlerItem.parse(val(propertyContext, \"Handler\"));\n                \n                let handlerItem : HandlerItem;\n                if( !_.isString(v))\n                    handlerItem = HandlerItem.fromTypeHandler(v as TypeHandler);\n                else {\n                    handlerItem = new HandlerItem();\n                    handlerItem.name = v as string;\n                    if( oldHandler )\n                        handlerItem.parameters = oldHandler.parameters;\n                }\n\n                if( !HandlerItem.equals(handlerItem, oldHandler)){\n                    // changed\n                    val(propertyContext, property.name, handlerItem.name ? handlerItem : null);\n                    // set new parameters\n                    let propertyParameters = properties.find( p=> p.name.toLowerCase() == \"parameters\");\n                    if( propertyParameters )\n                        propertyParameters.value = handlerItem.parameters.length > 0 ? handlerItem.parameters : null;;\n                }\n            }\n        );\n    \n        public EventHandlerMapItem_Parameters = new PropertyAccessor(\n            (propertyContext: any, property: IPropertyMetadata) => {\n                    let handlerItem = val(propertyContext, \"handler\");\n                    return handlerItem ?  val(handlerItem, \"parameters\") : null;\n                },\n                (v: any, propertyContext: any, properties: IPropertyMetadata[], t, property: IPropertyMetadata) => {\n                    let handlerItem = val(propertyContext, \"handler\");\n                    if( handlerItem )\n                        val(handlerItem, \"parameters\", v);\n                }\n            );\n\n        public ClientGenericEventHandler_HandlerSource = new PropertyAccessor(undefined,\n            (v: any, propertyContext: any, properties: IPropertyMetadata[], t, property: IPropertyMetadata) => {\n                val(propertyContext, property.name, v);\n    \n                let ctlProp = properties.find(p=> p.name.toLowerCase() == 'control');\n                if( ctlProp )\n                    ctlProp.hidden = (v !== 1 /*Control*/);\n    \n                let handlerProp = properties.find(p=> p.name.toLowerCase() == 'handler');\n                if( handlerProp ){\n                    if(v === 2 /* method */ ){\n                        handlerProp.editor.directive = \"text\";\n                        handlerProp.editor.provider = null;\n                    }\n                    else{\n                        handlerProp.editor.directive = \"selector\";\n                        handlerProp.editor.provider = \"handlers\";\n                    }\n                }\n            });\n        \n        public Intelligence_ReportName = new PropertyAccessor(undefined,\n                (v: any, propertyContext: any, properties: IPropertyMetadata[], t, property: IPropertyMetadata) => {\n                    let oldRepName = val(propertyContext.properties, \"ReportName\");\n                    if(v!== null && v !== oldRepName){\n                        let connProfile = val(propertyContext.properties, \"ConnectionProfile\");\n                        if( connProfile ){\n                            this._alertService.warning(<ILabel> {Name: \"PS_REQ_REPORT_PARAMS\",  DefaultValue : \"Requesting report parameters. Wait...\"});\n                            let conn = new ConnectionProfileData();\n                            conn.ServerDataMember = val( connProfile, \"Server\");\n                            conn.BOAuthTypeDataMember = val(propertyContext.properties, \"BOAuthentication\") || BOAuthenticationType.Enterprise;\n                            let propReportName = properties.find(p=> p.name.toLowerCase() ==  \"reportname\") as IPropertyMetadata;\n                            this._portalService.getReportParameters(conn, v).subscribe(prms=>{\n                                if( _.isArray(prms) ){\n                                    let crParameters = prms.map(pp=> {return {__type: \"CRParameter\", name: pp.NameDataMember};});\n                                    val(propertyContext.properties, propReportName.name, v);\n                                    let propParameters = properties.find(p=> p.name.toLowerCase() == \"parameters\") as IPropertyMetadata;\n                                    val(propertyContext.properties, propParameters.name, crParameters);\n                                    propParameters.value = crParameters;\n                                    this._alertService.success(<ILabel> {Name: \"PS_RECEIVED_REPORT_PARAMS\",  DefaultValue : \"Report parameters received.\"});\n                                }\n                                else{\n                                    val(propertyContext.properties, propReportName.name, v);\n                                    // prms is an error\n                                    this._alertService.error(prms);\n                                }\n                            });\n                        }\n                    }\n                });\n                    \n        public PageMappingTarget_TargetType = new PropertyAccessor(undefined,\n            (v: any, propertyContext: any, properties: IPropertyMetadata[]) => {\n\n                if (val(propertyContext, \"TargetType\") != v) \n                    val(propertyContext, \"TargetType\", v);\n                let targetProp = properties.find(p=> p.name.toLowerCase() == \"target\");\n\n                switch( v ){\n                    case 0: /*Page*/\n                        targetProp.editor.provider = \"ndoInstances\";\n                        targetProp.editor.parameters = [\"UIVirtualPage\"];\n                        break;\n                    case 1: /*Pageflow*/\n                        targetProp.editor.provider = \"ndoInstances\";\n                        targetProp.editor.parameters = [\"UIPageFlow\"];\n                        break;\n                    case 2: /*PageMappingItem*/\n                        targetProp.editor.provider = \"mappings\";\n                        targetProp.editor.parameters = null;\n                        break;\n                    default:\n                        targetProp.editor.provider = null;\n                        targetProp.editor.parameters = null;\n                        break;\n            }\n        });\n\n        public LabelName = new PropertyAccessor(undefined,\n            (v: any, propertyContext: any, properties: IPropertyMetadata[], t, property: IPropertyMetadata, populating: boolean) => {\n                val(propertyContext.properties, property.name, v);\n                if(populating !== true && property.editor.parameters && property.editor.parameters.length ){\n                    let textPropertyName = property.editor.parameters[0];\n                    let textValue = val(propertyContext.properties, textPropertyName);\n                    if( textValue ){\n                        let message = <ILabel>{Name: 'PS_LABEL_OVERRIDE', DefaultValue: 'The label text field associated with label name is not empty.  The text overides the label value.  Would you like to clear the text?'};\n                        this._alertService.confirmModal(message)\n                            .subscribe( ok => {\n                            if (ok) {\n                                // clear text\n                                val(propertyContext.properties, textPropertyName, null);\n                                let textProperty = properties.find( p=> p.name.toLowerCase() == textPropertyName.toLowerCase() );\n                                if( textProperty )\n                                    textProperty.value = null;\n                            }\n                        });                            \n                    }\n                }        \n            });\n\n        public TargetMatrixItem_Rows = new PropertyAccessor(undefined,\n            (v: any, propertyContext: any, properties: IPropertyMetadata[], t, property: IPropertyMetadata, populating: boolean) => {    \n                if( populating ){\n                    // trick to not display the value\n                    property.editor.directive = \"modal\";\n                }\n                else{\n                    val(propertyContext, property.name, v);\n                    let pColumns = properties.find(p=> p.name.toLowerCase() == \"columns\");\n                    pColumns.value = val(propertyContext, \"columns\");\n                    let pImportFile = properties.find(p=> p.name.toLowerCase() == \"importedfilename\");\n                    pImportFile.value = val(propertyContext, \"ImportedFileName\") || \"\";\n                }\n            }\n        );\n\n        public PIMetricQueryName = new PropertyAccessor(\n            undefined,\n            (v: any, propertyContext: any, properties: IPropertyMetadata[], valType, property) => {\n                if(property.name.toLowerCase().startsWith(\"trend\")){\n                    if( v !== val(propertyContext.properties, \"trendQueryName\")){\n                        // reset query parametres if value changed\n                        val(propertyContext.properties, \"trendQueryParameters\", null);\n                        val(propertyContext.properties, \"trendValueColumn\", null);\n                        val(propertyContext.properties, \"trendQueryName\", v);\n                    }\n                }\n                else{\n                    if( v !== val(propertyContext.properties, \"valueQueryName\")){\n                        // reset query parametres if value changed\n                        val(propertyContext.properties, \"valueQueryParameters\", null);\n                        val(propertyContext.properties, \"valueColumn\", null);\n                        val(propertyContext.properties, \"valueQueryName\", v);\n                    }\n                }\n            });            \n    \n        private thickness_get(field: string,  propertyContext: any){\n        let m : any;\n        if( propertyContext.__type === 'GridLayoutCell')\n            propertyContext = propertyContext.cell;\n            \n        if( propertyContext.__type === 'Style'){\n            // webpart or page\n            m = val(propertyContext, field);\n        }\n        else if(propertyContext.type === 'Webpart' || propertyContext.type === 'cell'){\n            let st = val(propertyContext.properties, \"style\");\n            if( st )\n                m = val(st, field);\n        }\n        else{\n            // for control\n            m = val(propertyContext, 'control'+field);\n        }\n            // left, top, rignt, bottom\n        return m ? [m.left, m.top, m.right, m.bottom].join() : '';\n    }\n\n    private thickness_set(field: string, v: any, propertyContext: any, properties: IPropertyMetadata[]){\n        if (v) {\n            // v = CSV array [left, top, rignt, bottom]\n            let pv: any[] = (<string>v).split(',').map(a => a ? parseFloat(a) : 0);\n            let m = { left: pv[0], top: pv[1], right: pv[2], bottom: pv[3], __type: field };\n            if( propertyContext.__type === 'Style'){\n                // webpart or page\n                val(propertyContext, field, m);\n            }\n            else if(propertyContext.type === 'Webpart' || propertyContext.type === 'cell' || propertyContext.__type === 'GridLayoutCell'){\n                let pc = propertyContext.__type === 'GridLayoutCell' ? propertyContext.cell : propertyContext;\n                if(!pc.properties)\n                    pc.properties = {};\n                let st = val(pc.properties, \"style\") || val(pc.properties, \"style\", {__type: 'Style'});\n                val(st, field, m);\n            }                \n            else{\n                // for control\n                val(propertyContext, 'control'+field, m);\n            }\n        }\n        else {\n            if( propertyContext.__type === 'Style'){\n                // webpart or page\n                val(propertyContext, field, null);\n            }\n            else if(propertyContext.type === 'Webpart'){\n                let st = val(propertyContext.properties, \"style\");\n                if( st )\n                    val(st, field, null);\n            }\n            else{\n                // for control\n                val(propertyContext, 'control'+field, null);\n            }\n        }\n    }\n}\n\nexport class PropertyAccessor {\n    constructor(\n        public getter: (propertyContext: any, property?: IPropertyMetadata) => any,\n        public setter?: (val: any, propertyContext: any, properties?: IPropertyMetadata[], valueType?: string, property?: IPropertyMetadata, populating?: boolean ) => void) {\n    }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { IPropertyMetadata, CodeBehindDescriptor, ImageFile, IOMTypeDescriptor, ConnectionProfileData, BOAuthenticationType, QueryOptions, QueryTypes } from '../objects/viewModel';\nimport { IElement, ISelectableItem, UpdatedInfo, UpdateDataTypes, PropertyUpdatedData, TypeDescriptor, TypeHandler, RevisionedObjectRef, IUIComponentRef, val, IResultStatus } from '../objects/common';\nimport { PortalService } from './portal.service';\nimport { MetadataService } from './metadata.service';\nimport { WCFService } from './wcf.service';\nimport { environment } from '../../../environments/environment';\nimport { Observable, from, of, empty} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport _ from 'lodash';\nimport { AlertService } from '../../alert/alert.service';\nimport { StudioStateService } from './studioStateService';\n\n@Injectable()\nexport class ValueProviderService {\n\n    static Cache = {};\n\n    constructor( @Inject(MetadataService) private _metadataService: MetadataService, \n                @Inject(StudioStateService) private _studioStateService: StudioStateService,\n                @Inject(PortalService) private portalService: PortalService,\n                @Inject(WCFService) private wcfService: WCFService,\n                @Inject(AlertService) private alert: AlertService\n            ) {\n    }\n\n    public consolidatedDependencies = {\n        '__elements__': ['actions', 'layout'],\n        '__contracts__':['dataMembers']\n    };\n\n    get cache(): any { return ValueProviderService.Cache; }\n\n    errorMessage: any;\n\n    public matchDependency(updated: UpdatedInfo, property: IPropertyMetadata): boolean {\n        let reload = false;\n        if (!updated.is(UpdateDataTypes.property)) {\n            return;\n        }\n        let upd = <PropertyUpdatedData>updated.data;\n        let path = upd.path.toLowerCase();\n        if (path == property.name.toLowerCase()) {\n            // ignore itself changes\n            reload = false;\n        }\n        else {\n            if (property.dependencies) {\n                property.dependencies.forEach(d => {\n                    if (d.toLowerCase() == path)\n                        reload = true;\n                    else {\n                        // test consolidated dependencies\n                        let cd = <string[]>this.consolidatedDependencies[d]\n                        if (cd && cd.indexOf(path) != -1)\n                            reload = true;\n                    }\n                });\n            }\n        }\n\n        return reload;\n    }\n\n    public getSelectableItems(property: IPropertyMetadata, instance: any): Observable<ISelectableItem[]> {\n        let providerName = property.editor.provider;\n        if( !providerName && property.editor.options){\n            // try to parse\n            this._metadataService.parseOptions(property);\n            providerName = property.editor.provider;\n        }\n\n        if( providerName ){\n            let provider: (p: IPropertyMetadata, f: (v: ISelectableItem[]) => void, instance?: any) => void = this[providerName];\n            if (_.isFunction(provider)) {\n                let pr = provider.call(this, property, instance);\n                if(pr instanceof Promise)\n                    return from(pr);\n                else\n                    return pr;\n            }\n        }\n\n        // error\n        console.error(\"No provider for \" + property.name);\n        let empty : ISelectableItem[] = [];\n        return from([empty]);\n    }\n\n    public camstarServices(property: IPropertyMetadata): Observable<ISelectableItem[]> {\n        return this.portalService.getCamstarServices().pipe(\n            map(services => {\n                var selectableServices: ISelectableItem[] = [];\n                this.addEmptyItem(property, selectableServices);\n                if (services) {\n                    services.forEach(srv => {\n                        selectableServices.push( new SelectableItem(srv.ClassName, srv.ClassName, srv.ClassName));\n                    });\n                }\n                this.cache[\"camstarServices\"] = selectableServices;\n                return selectableServices;\n            }));\n    }\n\n    public enum(property: IPropertyMetadata): Promise<ISelectableItem[]> {\n        let enums = property.enumValues;\n        let items: ISelectableItem[] = [];\n\n        this.addEmptyItem(property, items);\n\n        if (!enums) {\n            // load from metadata type \n            let mdType = this._metadataService.getMetadataType(property.originalTypeName);\n            if (mdType) {\n                enums = mdType.enumValues;\n            }\n        }\n        if (enums) {\n            enums.forEach(e =>\n                items.push(new SelectableItem(e.name, e.value, null))\n            );\n        }\n        return Promise.resolve<ISelectableItem[]>(items);\n    }\n\n    public elements(property: IPropertyMetadata): Promise<ISelectableItem[]>{\n        let filter: (arg0: ISelectableItem) => ISelectableItem;\n        let result: ISelectableItem[] = [];\n\n        let root = this._studioStateService.getRoot();\n        let allElements: ISelectableItem[] = [];\n        if (root.type == 'Webpart') {\n            let addingItem = new SelectableItem(root.name, root.name, root.typeName, 0);\n            addingItem.type = root.type;\n            addingItem.fullType = root['_fullTypeName'];\n\n            let childItems = this.getAllElements(root, 1, root.name);\n            addingItem.childCount = childItems.length;\n            allElements.push(addingItem);\n            allElements = allElements.concat(childItems);\n        }\n        else {\n            allElements = this.getAllElements(root);\n        }\n\n        this.addEmptyItem(property, result);\n\n        if (property.editor.filter)\n            filter = Filters[property.editor.filter];\n\n        allElements.forEach(el => {\n            let fEl = _.isFunction(filter) ? <ISelectableItem>filter(el) : el;\n            if (fEl)\n                result.push(fEl);\n        });\n\n        // Add dependency if it is not set\n        if (!property.dependencies)\n            property.dependencies = [\"__elements__\"];\n        return Promise.resolve<ISelectableItem[]>(result);\n    }\n\n    private getAllElements(element: IElement, level: number = 0, parentPath: string=''): ISelectableItem[] {\n        let ret: ISelectableItem[] = [] ;\n        if (element) {\n            _.sortBy(element.items, (i:any) => i.name)\n                .forEach(item => {\n                    let path = parentPath ? parentPath + '.' + item.name : item.name;\n\n                    let addingItem = new SelectableItem(item.name, path, item.typeName, level);\n                    addingItem.type = item.type;\n                    addingItem.fullType = item._fullTypeName;\n\n                    let childItems = this.getAllElements(item, level + 1, path);\n                    addingItem.childCount = childItems.length;\n                    ret.push(addingItem);\n                    ret = ret.concat(childItems);\n                });\n            if (element.typeName === 'JQDataGrid') {\n                if (element.properties) {\n                    let settings = element.properties.settings;\n                    if (settings && settings.columns) {\n                        let addInlineControls = settings.__type === \"GridDataSettingsItemList\" && settings.editorSettings && \n                            settings.editorSettings.editingMode === 0; // Inline.\n                        _.forEach(settings.columns, col => {\n                            let value = `${parentPath}.${element.name}.${col.name}`;\n                            ret.push(new SelectableItem(col.name, value, \"Control\", level));\n                            if (addInlineControls)\n                                ret.push(new SelectableItem(`${col.name}<Inline>`, `${value}<Inline>`, \"Control\", level));\n                        });\n                    }\n                }                \n            }\n\n            if (element.properties && element.properties.actions) {\n                // Add actions\n                ret.push(new SelectableItem('Actions', 'Actions', 'Actions', level, true));\n\n                element.properties.actions.forEach(a => {\n                    let it = new SelectableItem(a.name, 'Actions.' + a.name, a.__type, level + 1);\n                    it.type = 'actionButton';\n                    it.fullType = a._fullTypeName;\n                    ret.push(it);\n                });\n            }\n        }\n        return ret;\n    }\n\n    public sessionDataContracts(property: IPropertyMetadata): Observable<ISelectableItem[]> {\n        return this.portalService.getSessionDataContracts().pipe( map(\n            result => {\n                let res: ISelectableItem[] = [];\n                this.addEmptyItem(property, res);\n                _.forEach(result, (s) => res.push(new SelectableItem(s, s, 'sessionDataContract')));\n                this.cache[property.editor.provider] = res;\n                return res;\n            }));\n    }\n\n    public ndoInstances(property: IPropertyMetadata): Observable<ISelectableItem[]> {\n        return this.portalService.getModelingInstanceRefs(property.editor.parameters[0]).pipe(\n            map( elements => {\n                let res: ISelectableItem[] = [];\n                this.addEmptyItem(property, res);\n                _.forEach(elements, (e) => res.push(new SelectableItem(e.name, e.name, e.type)));\n                return res;\n            }));\n    }\n\n    public reportDataSources(property: IPropertyMetadata): Observable<ISelectableItem[]> {\n        return this.portalService.getSettings().pipe(map(s => {\n            let res: ISelectableItem[] = [];\n            if (s.intelligenceSettingsField &&  s.intelligenceSettingsField.dataSourcesField) {\n                _.forEach(s.intelligenceSettingsField.dataSourcesField, (s) => res.push(new SelectableItem(s.nameField)));\n            }\n            return res;\n        }));\n    }\n\n    public reportTemplates(property: IPropertyMetadata): Observable<ISelectableItem[]> {\n        return this.wcfService.getSelectionValues(\"ReportTemplateMaint\", \"ObjectToChange\", false).pipe(map(rpts => {\n            let res: ISelectableItem[] = [];\n            if (rpts.Rows) {\n                var names = new Set();\n                this.addEmptyItem(property, res);\n                _.forEach(rpts.Rows, row => {\n                    let name = row.Values[0];\n                    let revision = row.Values[1];\n                    let si: SelectableItem;\n                    if (!names.has(name)) {\n                        names.add(name);\n                        let val = new RevisionedObjectRef(name, null, true);\n                        val.cdoTypeName = \"ReportTemplate\";                    \n                        res.push(new SelectableItem(name, val));\n                    }\n                    let displayName = `${name}: ${revision}`;\n                    let val = new RevisionedObjectRef(name, revision, false);\n                    val.cdoTypeName = \"ReportTemplate\";\n                    si = new SelectableItem(displayName, val);\n                    si.level = 5;\n                    res.push(new SelectableItem(displayName, val));\n                });\n            }\n            return res;\n        }));        \n    }\n    \n    public gridQueries(property: IPropertyMetadata, instance: any): Observable<ISelectableItem[]> {     \n\n        let queryType = \"QueryList_System\";\n        let addEmpty = property.editor.parameters && property.editor.parameters.indexOf(\"emptyItem\")!=-1;\n\n        if(property.editor.parameters && property.editor.parameters.indexOf(\"userQuery\")!=-1)\n            queryType = \"QueryList_User\";\n        else if(instance.queryType === \"1\")\n            queryType = \"QueryList_User\";\n\n        const cacheKey = \"gridQueries.\" + queryType;\n        let cachedList = this.cache[cacheKey] as SelectableItem[];\n        if( cachedList && cachedList.length){\n            return of(cachedList);\n        }\n\n        return this.portalService.getQueryData(queryType).pipe(\n            map(result => {\n                let queryList: ISelectableItem[] = [];\n                if( addEmpty )\n                    this.addEmptyItem(property, queryList);\n\n                queryList = queryList.concat(\n                    result.map(q => {\n                        let s=new SelectableItem(q.Text, q.Text); \n                        s.childCount = q.ParamCount; \n                        return s;\n                    }));\n                this.cache[cacheKey] = queryList;\n                return queryList;\n            }));\n    }\n\n    public queryBuilder(property: IPropertyMetadata, instance: any): Observable<ISelectableItem[]> {     \n        return this.gridQueries(property, instance);\n    }\n\n    public queryColumns(property: IPropertyMetadata, instance: any): Observable<ISelectableItem[]> {     \n\n        let qtype : QueryTypes = QueryTypes.System;\n        if(property.editor.parameters && property.editor.parameters.indexOf(\"userQuery\")!=-1)\n            qtype = QueryTypes.User;\n        else if(instance.queryType === \"1\")\n            qtype = QueryTypes.User;\n\n        const queryOptions : QueryOptions = {\n            QueryType: qtype,\n            StartRow: 1,\n            RowSetSize: 1\n        };\n        const isTrend = property.name.toLowerCase().startsWith(\"trend\");\n        const queryName = val(instance.properties, (isTrend ? \"trend\" : \"value\") + \"QueryName\");\n        if(!queryName){\n            return of([]);\n        }\n        const qParameters : any[] = val(instance.properties, isTrend ? \"TrendQueryParameters\" : \"ValueQueryParameters\") || [];\n        const queryParameters = qParameters.map(param => { return { Name: param.name, Value: \"\" }});\n\n        return this.portalService.getQueryColumns(queryName, queryOptions, queryParameters).pipe(\n            map(result => \n                [new SelectableItem('','','')]\n                    .concat(result.map(q => new SelectableItem(q.name, q.name)))\n            ));\n    }\n\n    public actionHandlers(property: IPropertyMetadata): Promise<ISelectableItem[]> {\n        let typeOfHandler = property.editor.parameters[0];\n        let cb = new CodeBehindDescriptor();\n        let ret: Promise<ISelectableItem[]>;\n\n        let root = <any>this._studioStateService.getRoot();\n        let rootType = root.codeBehind;\n        if (!rootType)\n            rootType = root._fullTypeName;\n\n        if (rootType) {\n            let cacheKey = \"ActionHandlers,\" + typeOfHandler + \",\" + rootType;\n            if (this.cache[cacheKey]) {\n                ret = Promise.resolve<ISelectableItem[]>(this.cache[cacheKey]);\n            }\n            cb.Description = rootType;\n            this.portalService.getActionHandlers(cb, typeOfHandler).subscribe(\n                result => {\n                    let res: ISelectableItem[] = [];\n                    this.addEmptyItem(property, res);\n                    _.forEach(result, (s) => res.push(new SelectableItem(s, s, typeOfHandler + 'ActionHandler')));\n\n                    // cached type of handler and codeBehind type\n                    this.cache[cacheKey] = res;\n                    ret = Promise.resolve<ISelectableItem[]>(res);\n                }\n            );\n        }\n        if (!ret) \n            ret = Promise.resolve<ISelectableItem[]>([]);\n\n        return ret;\n    }\n\n    public pageDataContracts(property: IPropertyMetadata, instance: any): Promise<ISelectableItem[]> {\n\n        let root = <any>this._studioStateService.getRoot();\n        let contracts = [];\n        let isTargetFilter = (property.editor.filter === \"targetContracts\");\n\n        if (!isTargetFilter) {\n            if (root.properties && root.properties.dataContract && root.properties.dataContract.dataMembers) {\n\n                contracts = root.properties.dataContract.dataMembers.map((elem) => {\n                    if(elem.Name){\n                        elem.name = elem.Name;\n                        delete elem.Name;\n                    }\n                    return elem;\n                });\n            }\n        }\n        else {\n            let pageName;\n            if(instance.__parent && instance.__parent.__type == \"PageMappingAction\" ){ //\"FloatPageOpenAction\"\n                let mapItem = val(instance.__parent, \"mapItem\");\n                if( mapItem )\n                    return this.portalService.getPageMaps().pipe(\n                        map( s=> _.concat(\"\", _.first(s.filter(dx=> dx.name == mapItem)).__mapParameters)),\n                        map( prms => prms.map(x=> new SelectableItem(x, x, x)))\n                    ).toPromise();\n                else\n                    return Promise.resolve<ISelectableItem[]>([new SelectableItem(\"\",\"\",\"\")]);\n            }\n            pageName = val(instance.__parent, \"PageName\") as string;\n            if( pageName )\n                return this.pageLoadedContracts(pageName).toPromise();\n        }\n\n        let res: ISelectableItem[] = [];\n        this.addEmptyItem(property, res);\n        _.forEach(contracts, (c) => res.push(new SelectableItem(c.name, c.name, 'dataContract')));\n        return Promise.resolve<ISelectableItem[]>(res);\n    }\n\n    public contractDataMembers(property: IPropertyMetadata, instance: any): Promise<ISelectableItem[]> | Observable<ISelectableItem[]> {\n        let root = <any>this._studioStateService.getRoot();\n        // Get contract data members if page mapping item         \n        if( root.__type === \"PageMappingItem\") {\n            let contractFilter = property.editor.filter;            \n            if( contractFilter == \"targetContracts\"){\n                if(instance.__parent){\n                    let targetType = val(instance.__parent, \"TargetType\") as number;\n                    let target = val(instance.__parent, \"Target\") as string;\n                    switch(targetType){\n                        case 0: /*page*/       return this.pageLoadedContracts(target);\n                        case 1: /*pageflow*/   return this.pageMappingActualParameters(property); \n                        case 2: /*pageMapping*/return this.pageMappingActualParameters(property);\n                    }\n                }\n            }\n            else{   // contractFilter == \"sourceContracts\"\n                return this.pageMappingActualParameters(property);\n            }\n        }\n        else\n            return this.pageDataContracts(property, instance);\n    }\n\n    public gridColumns(property: IPropertyMetadata, instance: any): Observable<ISelectableItem[]> {\n        const gridSettings = instance.__parent;\n        if (gridSettings.columns) {\n            let columns: ISelectableItem[] = gridSettings.columns.filter( el => el.name != \"_dummy_\")\n                                                                 .map((el) => new SelectableItem(el.name));\n\n            columns.push(<ISelectableItem>{name: \"--index--\"},<ISelectableItem>{name: \"\"});\n            columns.sort(function(a,b){\n                    let x = a.name.toLowerCase();\n                    let y = b.name.toLowerCase();\n                    return x < y ? -1 : x > y ? 1 : 0;\n                });\n                                                                                                              \n            return of(columns);\n        }\n    }\n\n    public pageMappings(property: IPropertyMetadata): Observable<ISelectableItem[]> {\n        return this.portalService.getPageMaps().pipe(map(\n            (result : IUIComponentRef[]) => {\n                let res: ISelectableItem[] = [];\n                this.addEmptyItem(property, res);\n                _.forEach(result, (r : IUIComponentRef) => res.push(new SelectableItem(r.name, r.name, r.name)));\n                this.cache[\"pageMaps\"] = res;\n                return res;\n            }\n        ));\n    }\n\n    public pageMappingParameters(property: IPropertyMetadata): Observable<ISelectableItem[]> {\n        return this.portalService.getSuggestedMappingParameters().pipe(map(\n            result => {\n                let res: ISelectableItem[] = [];\n                this.addEmptyItem(property, res);\n                _.forEach(result, (s) => res.push(new SelectableItem(s, s, 'pageMappingParameter')));\n                this.cache[\"pageMappingParameters\"] = res;\n                return res;\n            }));\n    }\n    \n    public pageMappingActualParameters(property: IPropertyMetadata): Observable<ISelectableItem[]> {\n        let root = this._studioStateService.activeRootElement;\n        let rootParameters = val(root, \"Parameters\");\n        let res: ISelectableItem[] = [];\n        _.forEach(rootParameters, p => res.push(new SelectableItem(p.Name, p.Name, 'pageMappingParameter')));\n        return of(res);\n    }\n\n    public pageLoadedContracts(pageName: string) : Observable<ISelectableItem[]>{\n        return this.portalService.getElement(pageName, \"page\").pipe( map(e=>{\n            let dc = val(e.properties, \"dataContract\");      \n            if( dc ){\n                let dataMembers = val(dc, \"dataMembers\") as any[];\n                if( dataMembers ){\n                    let res : SelectableItem[] = [new SelectableItem('', '', '')];\n                    dataMembers.forEach(d=> res.push(new SelectableItem(val(d, \"name\"))));\n                    return res;\n                }\n            }\n            return [];\n        }));\n    }\n\n    public mappings(property: IPropertyMetadata): Observable<ISelectableItem[]> {\n        return this.portalService.getMappings().pipe(\n            map(m=> { \n                let r = this.addEmptyItem(property);                         \n                m.forEach(s=> r.push(new SelectableItem(s)));\n                return r;\n            }));\n    }\n\n    public imageFiles(property: IPropertyMetadata, instance: any): Observable<ISelectableItem[]> {\n        let obs : Observable<ISelectableItem[]>;\n        if( Object.keys(this.cache).find(k=> k == \"imageFiles\")){\n            // load from the cache\n            obs = of(this.cache[\"imageFiles\"]);\n        }\n        else{\n            obs = this.portalService.getImages().pipe(map(\n                images => {\n                    let res = _.concat(this.addEmptyItem(property),\n                        _.map<ImageFile, ISelectableItem>(images, im => <ISelectableItem>{ name: im.Name, value: im.Name, type: 'image', img: environment.portalUrl + '/' + im.Source, level: 0 }));\n                    this.cache[\"imageFiles\"] = res;\n                    return res;\n                }));\n            }\n        return obs;\n    }\n\n    public elementProperties(property: IPropertyMetadata, instance: any): Observable<ISelectableItem[]> {\n\n        let ctrl: IElement;\n        let typeName: string;\n        if (instance && property.dependencies && property.dependencies.length > 0) {\n            let c = null;\n            if( property.dependencies.find(d=> {\n                    let pv = val(instance, d);\n                    if(_.isString(pv))\n                        c =  this._studioStateService.findElement(pv);\n                    return c!==undefined && c!==null; \n                }) !== undefined\n            ){\n                ctrl = c;\n            }\n        }\n        else {\n            // for current active element\n            ctrl = this._studioStateService.activeElement;\n        }\n\n        if (ctrl) {\n            typeName = ctrl['_fullTypeName'] || ctrl['codeBehind'];\n            if (!typeName) {\n                if (ctrl.typeName != 'JQDataGrid')\n                    typeName = \"Camstar.WebPortal.FormsFramework.WebControls.\" + ctrl.typeName;\n                else\n                    typeName = \"Camstar.WebPortal.FormsFramework.WebGridControls.\" + ctrl.typeName;\n            }\n            let typeDescriptorSection = !_.isEmpty(property.editor.parameters) ? property.editor.parameters[0] : 'Properties';\n            let typeDescriptor = this._metadataService.typeDescriptors[typeName];\n            if (typeDescriptor) {\n                let res = this.buildListOfTypeDescriptor(property, typeName, typeDescriptorSection);\n                return of(res);\n            }\n\n            return this.portalService.getTypeDescriptor(typeName)\n                .pipe( map(\n                    result => {\n                    if (result) {\n                        // save descriptor into the cache\n                        this._metadataService.typeDescriptors[typeName] = result;\n                        return this.buildListOfTypeDescriptor(property, typeName, typeDescriptorSection);\n                    }\n                }));\n\n        }\n        else {\n            return of([]);\n        }\n    }\n\n    public handlers(property: IPropertyMetadata, instance: any): Observable<ISelectableItem[]> {\n        \n        let typeName: string;\n        let handlerSource = val(instance, \"handlerSource\");\n\n        switch(handlerSource){\n            case 0: /* self */\n                typeName  = this._studioStateService.activeElement['_fullTypeName'];\n                if( !typeName )\n                    typeName  = this._studioStateService.activeElement.codeBehind;\n                break;\n            case 1: /* control */{\n                    let ctrlName = val(instance, \"control\");\n                    if( ctrlName ){\n                        let ctrl =  this._studioStateService.findElement(ctrlName);\n                        if( ctrl )\n                            typeName = ctrl['_fullTypeName'];\n                    }\n                }\n                break;\n            case 2: /* web part */\n                {\n                    let wpOwner  = this._studioStateService.findElementOwner(this._studioStateService.activeRootElement, this._studioStateService.activeElement);\n                    if(wpOwner)\n                        typeName = wpOwner['codeBehind'] || wpOwner['_fullTypeName'];\n                }\n                break;\n            case 3: /* page */\n                typeName = \"Camstar.WebPortal.PortalFramework.WebPartPageBase\";\n                break;\n            case 4: /* service */\n                typeName = \"Camstar.WebPortal.FormsFramework.WCFService\";\n                break;\n            case 5: /* static method */\n                break;                \n        }\n\n        if(!typeName)\n            return of( [new SelectableItem(\"\",\"\",\"\")]);\n\n        let typeDesciptor = this._metadataService.typeDescriptors[typeName];\n        const section = \"Handlers\";\n        if (typeDesciptor) {\n            let res = this.buildListOfTypeDescriptor(property, typeName, section);\n            return of(res);\n        }\n        else{\n            return this.portalService.getTypeDescriptor(typeName)\n                .pipe( map(result => {\n                    if (result) {\n                        // save descriptor into the cache\n                        this._metadataService.typeDescriptors[typeName] = result;\n                        return this.buildListOfTypeDescriptor(property, typeName, section);\n                    }\n                }));        \n        }\n    }\n    \n    public clientHandlers(property: IPropertyMetadata, instance: any): Observable<ISelectableItem[]> {\n        \n        let typeName: string;\n        let handlerSource = val(instance, \"handlerSource\");\n\n        switch(handlerSource){\n            case 0: /* self */\n                typeName  = this._studioStateService.activeElement['_fullTypeName'];\n                break;\n            case 1: /* control */{\n                    let ctrlName = val(instance, \"control\");\n                    if( ctrlName ){\n                        let ctrl =  this._studioStateService.findElement(ctrlName);\n                        if( ctrl )\n                            typeName = ctrl['_fullTypeName'];\n                    }\n                }\n                break;\n            case 2: /* static method */\n                break;                \n        }\n    \n        if(!typeName)\n            return of([]);            \n\n        let typeDesciptor = this._metadataService.typeDescriptors[typeName];\n        const section = \"ClientMethods\" ;\n        if (typeDesciptor) {\n            let res = this.buildListOfTypeDescriptor(property, typeName, section);\n            return of(res);\n        }\n        else{\n            return this.portalService.getTypeDescriptor(typeName)\n                .pipe( map(result => {\n                    if (result) {\n                        // save descriptor into the cache\n                        this._metadataService.typeDescriptors[typeName] = result;\n                        return this.buildListOfTypeDescriptor(property, typeName, section);\n                    }\n                }));        \n        }\n    }\n\n    public exportableMaintServices(property: IPropertyMetadata): Observable<ISelectableItem[]> {\n        return this.portalService.getExportableMaintServices()\n            .pipe(map(services => {\n                var selectableServices: ISelectableItem[] = [];\n                this.addEmptyItem(property, selectableServices);\n                if (services) {\n                    services.forEach(srv => {\n                        selectableServices.push( new SelectableItem(srv, srv));\n                    });\n                }\n                this.cache[\"exportableMaintServices\"] = selectableServices;\n                return selectableServices;\n            }));\n    }\n\n    public soundFiles(property: IPropertyMetadata): Observable<ISelectableItem[]> {\n        return this.portalService.getSounds()\n            .pipe( map(soundFiles => {\n                var res : ISelectableItem[] = [];\n                this.addEmptyItem(property, res);\n                if (soundFiles) {\n                    soundFiles.forEach(soundFile => {\n                        res.push( new SelectableItem(soundFile.Name, soundFile.Name));\n                    });\n                }\n                return res;\n            }));\n    }\n\n    public intelligenceDataSources(property: IPropertyMetadata, instance: any): Observable<ISelectableItem[]>{\n        let result = this.addEmptyItem(property);\n        let dataSources = val(instance, \"DataSources\");\n        _.forEach( dataSources, ds=> result.push( new SelectableItem(val(ds, \"name\"))));\n        return of(result);\n    }\n\n    public intelligenceReports(property: IPropertyMetadata, instance: any): Observable<ISelectableItem[]>{\n        let connProfile = val(instance.properties, \"ConnectionProfile\");\n        if( connProfile ){\n            let conn = new ConnectionProfileData();\n            conn.ServerDataMember = val( connProfile, \"Server\");\n            conn.BOAuthTypeDataMember = val(instance.properties, \"BOAuthentication\") || BOAuthenticationType.Enterprise;\n            return this.portalService.getWebiReportsList(conn).pipe( map( d=> {\n                if( _.isArray(d) ){\n                    let result = this.addEmptyItem(property);\n                    (d as string[]).map( n=> result.push(new SelectableItem(n)));\n                    return result;\n                }\n                else{\n                    this.alert.displayResultStatusModal(d as IResultStatus);\n                    return [];\n                }\n            }));\n        }\n        return empty();\n    }\n\n    public fieldsDirectory(property: IPropertyMetadata, instance: any): Observable<ISelectableItem[]>{        \n        let result = this.addEmptyItem(property);\n        if(!property.editor.parameters[0] )\n            return of(result);\n\n        let tds = <IOMTypeDescriptor>{TypeName: property.editor.parameters[0]};\n        return this.portalService.getFieldsDirectory(tds).pipe( map( d=> {\n                if( d.ChildItems ){\n                    d.ChildItems.forEach( c=> result.push(new SelectableItem(c.Name, c)))\n                }\n                return result;\n            }\n        ));\n    }\n\n    public targetMatrices(property: IPropertyMetadata, instance: any): Observable<ISelectableItem[]> {\n        return this.portalService.getTargetMatrices().pipe(\n            map(\n                tm => [new SelectableItem(\"\",\"\",\"\")].concat(\n                    tm.map(t=> new SelectableItem(t.name)))\n\n            ));\n    }\n\n    public selValues(property: IPropertyMetadata, instance: any): Observable<ISelectableItem[]>{\n        let result = this.addEmptyItem(property);\n        \n        \n        let tds = <IOMTypeDescriptor>{TypeName: property.editor.parameters[0]};\n        return this.portalService.getFieldsDirectory(tds).pipe( map( d=> {\n             d.ChildItems.forEach( c=> result.push(new SelectableItem(c.Name, c)))\n             return result;\n            }\n        ));\n    }\n    \n    private buildListOfTypeDescriptor(property: IPropertyMetadata, typeName: string, section: string): ISelectableItem[] {\n        let desc = <TypeDescriptor>(this._metadataService.typeDescriptors);\n        desc[typeName];\n        return _.concat(this.addEmptyItem(property),\n            _.map(desc[section], px => {\n                let s = _.isString(px) ? px : val(px, \"Name\");\n                if( section == \"Handlers\"){\n                    let th = new TypeHandler();\n                    th.Name = s;\n                    th.Parameters = val(px,\"Parameters\");\n                    return new SelectableItem(th.getMethodSignature(), th);\n                }\n                return new SelectableItem(s);\n            }));\n    }\n\n    private addEmptyItem(property: IPropertyMetadata, items?: ISelectableItem[]): ISelectableItem[] {\n        let res: ISelectableItem[] = items || [];\n\n        if (property.required !== true) {           \n            // add empty item at the top of list\n            res.push(new SelectableItem('', '', ''));\n        }\n\n        return res;\n    }\n\n}\n\n\nclass Filters {\n\n    static buttons = (e: ISelectableItem) => {\n        if (e.type=='' || e.type == 'Webpart' || e.type == 'Actions' ||\n            (e.type == 'Control' && e.typeName.toLowerCase() == 'button') ||\n            (e.type == 'actionButton')) {\n\n            if (e.type == 'Webpart' || e.type == 'Actions')\n                e.disabled = true;\n            else\n                e.disabled = false;\n\n            return e;\n        }\n        return null;\n    }\n\n    static controls = (e: ISelectableItem) => {\n        if (e.type == '' || e.type == 'Webpart' || e.type == 'Control'){\n            if (e.type == 'Webpart')\n                e.disabled = true;\n            else\n                e.disabled = false;\n            return e;\n        }\n        return null;\n    }\n\n    static actions = (e: ISelectableItem) => {\n        if (e.type == '' || e.type == 'actionButton') {\n            return e;\n        }\n        return null;\n    }\n}\n\nexport class SelectableItem implements ISelectableItem {\n    constructor(public name: string, public value: any = undefined, public typeName: string = '', public level: number = 0, public disabled: boolean = false) {\n        if (value === undefined)\n            this.value = name;\n        this.type = typeName;\n    }\n    type: string;\n    childCount: number = 0;   \n    parent: ISelectableItem = null;\n    fullType: string;\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PortalService } from './portal.service';\n\n@Injectable()\nexport class LabelService {\n    constructor(private _portalService: PortalService) {\n        this.load();\n    }\n\n    public load(){\n        this.getLangDictionary();\n    }\n\n    public getLabel(labelName: string, defaultValue: any): string {\n        return this.getLabelwithArguments(labelName, defaultValue, null);\n    }\n\n    public getLabelwithArguments(labelName: string, defaultValue: string, args: any[]): string {\n        if (!defaultValue) return;\n        if (this._dictionary && this._dictionary[labelName]) {\n            if (args)\n                return this.substituteString(this._dictionary[labelName], args);\n            return this._dictionary[labelName];\n        }\n        if (args)\n            return this.substituteString(defaultValue, args);\n        return defaultValue;\n    }\n\n    public getLabelCategories(): Observable<any[]> {\n        return Observable.create(obs => {\n            if (this._categories) {\n                obs.next(this._categories)\n                obs.complete();\n            }\n            else {\n                this._categories = [];\n                this._portalService.getLabelCategories()\n                    .subscribe(categories => {\n                        this._categories = categories.sort(c=> c.name);\n                        obs.next(categories);\n                        obs.complete();\n                    },\n                    error => {\n                        console.log(<any>error);\n                    });\n            }\n        });\n    }\n\n    public getLabels(categoryId: string, labelSearchName: string, labelSearchText: string): Observable<any[]> {\n        return Observable.create(obs => {\n            this._portalService.getLabels(categoryId, labelSearchName, labelSearchText).subscribe(labels => {\n                obs.next(labels);\n                obs.complete()\n            },\n                error => {\n                    console.log(<any>error);\n                });\n        });\n    }\n\n    private substituteString(value: string, args: string[]): string {\n        for (let i = 0; i < args.length; i++) {\n            value = value.replace(`{${i}}`, args[i]);\n        }\n        return value;\n    }\n\n    private getLangDictionary(): void {\n        this._dictionary = [];\n        this._portalService.getStudioLabels()\n            .subscribe(labels => {\n                this._dictionary = labels;\n            },\n            error => {\n                console.log(<any>error);\n            });\n    }\n\n    private _dictionary: any;\n    private _categories: any;\n}","import { Injectable } from '@angular/core';\nimport { IElement, IElementRef, ILocalState, IUserProfile, IFavoriteProperty, PageGroupDef, WhereUsedItemListDef, PageGroupDefItem } from '../objects/common';\nimport _ from 'lodash';\n\n@Injectable()\n\nexport class LocalService {\n    _localState: ILocalState;\n\n    constructor() {\n        this.getStateFromLocalStorage();\n    }\n\n    getUserProfile(): IUserProfile {\n        return this._localState.userProfile;\n    }\n\n    isDisplayCatalog(): boolean {\n        return this._localState.displayCatalog;\n    }\n\n    isDisplayToolbox(): boolean {\n        return this._localState.displayToolbox;\n    }\n\n    isDisplayProperty(): boolean {\n        return this._localState.displayProperty;\n    }\n\n    isDisplayTraceViewer(): boolean {\n        return this._localState.displayTraceViewer;\n    }\n\n    setUserProfile(userProfile: IUserProfile): boolean {\n        this._localState.userProfile = userProfile;\n        this.saveStateToLocalStorage();\n        return true;\n    }\n\n    resetSettings(): void {\n        this.initializeState();\n        this.saveStateToLocalStorage();\n    }\n\n    toggleDisplayCatalog(): void {\n        this._localState.displayCatalog = !this._localState.displayCatalog;\n        this.saveStateToLocalStorage();\n    }\n\n    toggleDisplayToolbox(): void {\n        this._localState.displayToolbox = !this._localState.displayToolbox;\n        this.saveStateToLocalStorage();\n    }\n\n    toggleDisplayProperty(): void {\n        this._localState.displayProperty = !this._localState.displayProperty;\n        this.saveStateToLocalStorage();\n    }\n\n    toggleDisplayTraceViewer(): void {\n        this._localState.displayTraceViewer = !this._localState.displayTraceViewer;\n        this.saveStateToLocalStorage();\n    }\n\n\n    addToElementHistory(element: IElement): void {\n        //added if clause for restrict number of types for recent elements\n        if(element.type && ['page', 'webpart', 'pageflow'].indexOf(element.type.toLowerCase()) != -1) {\n            this.removeElementHistory(element);\n            let elementRef = { name: element.name, type: element.type };\n\n            if (this._localState.elementHistory)\n                this._localState.elementHistory = [elementRef, ...this._localState.elementHistory];\n            else\n                this._localState.elementHistory = [elementRef];\n            this.saveStateToLocalStorage();\n        }\n    }\n\n    removeElementHistory(elementRef: IElementRef): void {\n        if (this._localState.elementHistory) {\n            let existingElement = this._localState.elementHistory.find(eh => eh.name == elementRef.name && eh.type == elementRef.type);\n            if (existingElement) {\n                let index = this._localState.elementHistory.indexOf(existingElement);\n                if (index != -1) {\n                    this._localState.elementHistory.splice(index, 1);\n                }\n            }\n        }\n        this.saveStateToLocalStorage();\n    }\n\n    getElementHistory(): IElementRef[] {\n        if (!this._localState.elementHistory)\n            return null;\n        return this._localState.elementHistory.slice(0, 6);\n    }\n\n    renameElementHistory(element: IElement, oldName: string): void {\n        if (this._localState.elementHistory) {\n            let existingElement = this._localState.elementHistory.find(eh => eh.name == oldName && eh.type == element.type);\n            if (existingElement)\n                existingElement.name = element.name;\n        }\n        this.saveStateToLocalStorage();\n    }\n\n    public isLogged(): boolean {\n        if (this._localState && this._localState.userProfile && this._localState.userProfile.SessionID) {\n            return true;\n        }\n\n        return false;\n    }\n\n    public getFavProperties(typeName: string): string[] {\n        if (this._localState && this._localState.favProperties) {\n            let fp = this._localState.favProperties.find(p => p.typeName == typeName);\n            if (fp)\n                return fp.names;\n\n            return [];\n        }\n    }\n\n    public setFavProperties(t: string, pnames: string[]): void {\n        if (this._localState) {\n            if (!this._localState.favProperties)\n                this._localState.favProperties = [];\n\n            let fp = this._localState.favProperties.find(p => p.typeName == t);\n            if (!fp)\n                this._localState.favProperties = [<IFavoriteProperty>{ typeName: t, names: pnames }];\n            else\n                fp.names = pnames;\n            this.saveStateToLocalStorage();\n        }\n    }\n\n    public addPageList(wName: string, pages: any[]): void {\n        if (this._localState) {\n            if (this._localState.whereUsedPageList) {\n\n                this._localState.whereUsedPageList = this._localState.whereUsedPageList.filter(el => {\n                    return el.wepPartName !== wName;\n                })\n                this._localState.whereUsedPageList.push(new WhereUsedItemListDef(wName, pages))\n            }\n            else{\n                this._localState.whereUsedPageList = [new WhereUsedItemListDef(wName, pages)]\n            }\n\n            this.saveStateToLocalStorage();\n        }\n    }\n\n    public addWebPartList(wName: string, pages: any[]): void {\n        if (this._localState) {\n            if (this._localState.whereUsedWebPartList){\n\n                this._localState.whereUsedWebPartList = this._localState.whereUsedWebPartList.filter( el => {\n                    return el.wepPartName !== wName;\n                })\n                this._localState.whereUsedWebPartList.push(new WhereUsedItemListDef(wName, pages))\n            }\n            else{\n                this._localState.whereUsedWebPartList = [new WhereUsedItemListDef(wName, pages)]\n            }\n\n            this.saveStateToLocalStorage();\n        }\n    }\n\n    public getPageList(): any {\n        return this._localState.whereUsedPageList;\n    }\n\n    public getWebPartList(): any {\n        return this._localState.whereUsedWebPartList;\n    }\n\n    public getPageGroups(): PageGroupDef[] {\n        if (!this._localState.pageGroups) {\n            this._localState.pageGroups = [];\n        }\n        return this._localState.pageGroups;\n    }\n\n    public addPageGroup(pageGroupName: string, deleted?: boolean): void {\n        this._localState.pageGroups = this._localState.pageGroups || [];\n\n        let pg = this._localState.pageGroups.find(n => n.groupName == pageGroupName);\n        if (!pg) {\n            const newGrpK = pageGroupName.replace(/\\s/g, \"\").toLowerCase();\n            this._localState.pageGroups.push(\n                new PageGroupDef(pageGroupName, newGrpK, [], deleted));\n        }\n        if (pg && deleted) {\n            pg.deleted = deleted;\n        }\n        this.saveStateToLocalStorage();\n    }\n\n    public editPageGroup(newName: string, oldName: string): void {\n        if (this._localState.pageGroups) {\n            const existGrp = this._localState.pageGroups.find(el => el.groupName == oldName);\n            if (existGrp)\n                existGrp.groupName = newName;\n            existGrp.groupKey = newName.replace(/\\s/g, \"\").toLowerCase();           \n        }\n        this.saveStateToLocalStorage();\n    }\n\n    public addPageToGroup(pageName: string, pageGroup: string, deleted?: boolean): void {\n        const group = this._localState.pageGroups.find(n => n.groupName == pageGroup);\n        if (!group) {\n            this.addPageGroup(pageGroup);\n        }\n        let item = new PageGroupDefItem(pageName, deleted);\n        let isDelItem = this._localState.pageGroups.find(n => n.groupName == pageGroup).items.find(i => i.deleted == true);\n        if (!isDelItem)\n            this._localState.pageGroups.find(n => n.groupName == pageGroup).items.push(item);\n        else {\n            isDelItem.deleted = false;\n        }\n        this.saveStateToLocalStorage();\n    }\n\n    public removeGroup(pageGroup: string) {\n        if (this._localState.pageGroups) {\n            _.remove(this._localState.pageGroups, (eh) => eh.groupName == pageGroup);\n            this.saveStateToLocalStorage();\n        }\n    }\n\n    public removePageFromGroup(pageName: string, pageGroup: string): void {\n        this._localState.pageGroups = this._localState.pageGroups || [];\n        const existingGroup = this._localState.pageGroups.find(eh => eh.groupName == pageGroup);\n        let existingLocalPages : PageGroupDefItem[] = [];\n        if (existingGroup) \n            existingLocalPages= _.remove(existingGroup.items, n => n.name == pageName);\n        \n        if(!existingLocalPages.length || !existingGroup)\n            this.addPageToGroup(pageName, pageGroup, true);            \n        this.saveStateToLocalStorage();\n    }\n\n    public resetSettingsPageGroups(): void {\n        if (!this._localState)\n            this._localState = <ILocalState>{};\n        this._localState.pageGroups = new Array();\n    }\n\n    private initializeState(): void {\n        if (!this._localState)\n            this._localState = <ILocalState>{};\n\n        this._localState.displayCatalog = true;\n        this._localState.displayToolbox = true;\n        this._localState.displayProperty = true;\n        this._localState.displayTraceViewer = false;\n        this._localState.elementHistory = new Array();\n    }\n\n    private getStateFromLocalStorage(): void {\n        let localStorageState = localStorage.getItem('PS_LOCAL_SETTINGS');\n        this._localState = <ILocalState>JSON.parse(localStorageState);\n\n        //if localState hasn't be initialized\n        if (!this._localState)\n            this.initializeState();\n\n        this.saveStateToLocalStorage();\n    }\n\n    private saveStateToLocalStorage(): void {\n        // reduce element history to 10 recent items\n        const historySize = 5;\n        if (this._localState.elementHistory.length > historySize) {\n            let l = this._localState.elementHistory.length;\n            while (l-- > historySize)\n                this._localState.elementHistory.pop();\n        }\n        localStorage.setItem(\"PS_LOCAL_SETTINGS\", JSON.stringify(this._localState));\n    }\n\n}","import { Injectable } from '@angular/core';\nimport { IMetadataType, IPropertyMetadata, PropertyCategory, PropertyDescriptions, WorkspaceItem } from '../objects/viewModel';\nimport { PortalService } from './portal.service';\nimport { Observable, merge} from 'rxjs';\nimport {map } from \"rxjs/operators\";\n\nimport _ from 'lodash';\nimport { UIComponentRef, IUIComponentRef } from '../objects/common';\n\nexport type PersonalizationTypes = { [name: string]: IMetadataType };\n\n\n@Injectable()\nexport class MetadataService {\n    public AllTypes: PersonalizationTypes;\n    public get _types(): PersonalizationTypes {return this.AllTypes;}\n    public AllSettings : any;    \n\n    private static _typeDescriptors: any = {};\n\n    private errorMessage: any;\n    public get typeDescriptors() { return MetadataService._typeDescriptors; }\n\n    public propertyDescriptions : PropertyDescriptions;\n    public propertyCategories : PropertyCategory[];    \n    public workspaces : WorkspaceItem[];\n    public nonVirtualWebparts : string[];\n\n    ready = false;\n\n    constructor(private _portalService: PortalService) {\n\n        this.propertyCategories = this.__propertyCategories.map( p=> new PropertyCategory(p));\n        let mergedObs = merge(\n            this._portalService.getMetadata().pipe(map(md => [\"metadata\", md])), \n            this._portalService.getDescriptions().pipe(map(ds => [\"descriptions\", ds])), \n            this._portalService.getWorkspaces().pipe(map(ws => [\"workspaces\", ws])), \n            this._portalService.getWebPartsList().pipe(map(ws => [\"webparts\", ws])),\n            this._portalService.getCamstarServices().pipe(map(cs=> [\"camstarServices\", cs])),\n            this._portalService.getSettings().pipe(map(cs=> [\"portalSettings\", cs])),\n        );\n      \n        mergedObs.subscribe((m:[string, any])=>{\n            let k = m[0];\n            if( k == \"metadata\"){\n                this.AllTypes = m[1]; \n                _.forEach(this.AllTypes, t=> _.forEach(t.properties, p=> this.parseOptions(p)));    \n            }\n            else if( k == \"descriptions\"){\n                this.propertyDescriptions = <PropertyDescriptions>m[1];\n            }\n            else if( k == \"workspaces\"){\n                this.workspaces = <WorkspaceItem[]>m[1];\n            }\n            else if( k == \"webparts\"){\n                this.nonVirtualWebparts = (<IUIComponentRef[]>m[1]).map(w=> w.name);\n            }\n            else if( k == \"camstarServices\"){\n                // Nothing to do\n            }\n            else if( k == \"portalSettings\"){\n                this.AllSettings = m[1];\n            }\n        },\n        (error) => {\n            this.errorMessage = <any>error;\n            console.error(this.errorMessage);\n        },\n        () => {\n            // Complete\n            this.ready = true;\n        } \n        );\n    }\n\n    public getMetadataType(typeName: string): IMetadataType {\n\n        // Even if the instance is null the property list is created by type\n        let metadata: IMetadataType = null;\n        if (typeName) {\n            typeName = typeName.replace('[]', '').toLowerCase();\n            metadata = <IMetadataType>this._types[typeName];\n            if (!metadata && typeName.startsWith('om.')) {\n                typeName = typeName.substr(3);\n                metadata = <IMetadataType>this._types[typeName];\n            }\n            else if(!metadata && typeName.toLowerCase() == \"UIComponentRef\".toLowerCase()) {\n                metadata = UIComponentRef.metadata;\n            }\n        }\n        return metadata;\n    }\n\n    public getSubTypes(typeName: string): IMetadataType[] {\n        let basePropertyTypeLc = typeName.toLowerCase();\n        let basePropertyTypeExt = basePropertyTypeLc + '@';\n        let res = [];\n        let ct = this._types[basePropertyTypeLc];\n        if (ct) {\n            // Include current type\n            if (ct._abstract !== true)\n                res.push(ct);\n\n            for (var c in this._types) {\n                let pt = this._types[c];\n                if (pt.baseTypeNames) {\n                    pt.baseTypeNames.forEach((b) => {\n                        if (b.toLowerCase() == basePropertyTypeLc || b.toLowerCase() == basePropertyTypeExt ) {\n                            if (pt._abstract !== true)\n                                res.push(pt);\n                        }\n                    });\n                }\n            }\n        }\n        return res;\n    }\n\n    public  getWorkspaceCodeById(workspace: number): string {\n        let wsCode = '';\n        if (workspace != -1) {\n            let ws = _.find(this.workspaces, w => w.ID == workspace);\n            if (ws)\n                wsCode = ws.Code;\n        }\n        return wsCode;\n    }\n\n    public getPropertyCreatorType(type: IMetadataType, property: IPropertyMetadata) {\n        let t = type;\n        if (type.baseTypeNames) {\n            type.baseTypeNames.forEach(bt => {\n                bt = _.trimEnd(bt, '@');\n                let tp = this.getMetadataType(bt);\n                if (tp && tp.properties) {\n                    if (tp.properties.find(vp => vp.name.toLowerCase() === property.name.toLowerCase())) {\n                        t = tp;\n                        return t;\n                    }\n                }\n            });\n        }\n        return t;\n    }\n\n    // Gets value by case-insensitive key\n    public getByKey(obj: any, k: string) {\n        if (obj) {\n            k = k.toLowerCase();\n            return _.find(obj, (v, name: string) => { return name.toLowerCase() == k; });\n        }\n        return undefined;\n    }\n\n    public getPrimaryService(){\n        return \"\";\n    }\n\n    public loadType(ns: string, typeName: string, withDependencies: boolean = true): Observable<PersonalizationTypes> {\n\n        ns = ns.toLowerCase();\n        let namesp: string = '';\n\n        switch (ns) {\n            case 'config':\n                namesp = 'Camstar.WebPortal.PortalConfiguration'; break;\n            case 'om':\n                namesp = 'Camstar.WCF.ObjectStack'; break;\n            case 'pers':\n            default:\n                break;\n        }\n\n        let pref = ns + '.';\n        return this._portalService.getMetadataTypes(namesp, [typeName]).pipe(\n            map( md => {\n                _.forEach(md, m => {\n                    m._namespace = ns;\n                    m.properties.forEach(p=>{\n                        if (!this.isSystemType(p.originalTypeName)) {\n                            let pt = this.getMetadataType(pref + p.originalTypeName);\n                            if (pt)\n                                p.originalTypeName = pref + p.originalTypeName;                                \n                        }\n                    });\n                    this.addWithNS(ns, m);\n                });\n                return md;\n            }));\n    }\n\n    public isSystemType(t: string): boolean {\n        const sysTypes: string[] = ['int32', 'boolean', 'string', 'number', 'int32[]', 'boolean[]', 'string[]', 'number[]'];\n        t = t.toLowerCase();\n        return sysTypes.indexOf(t) != -1;\n    }\n\n    public parseOptions(pr: IPropertyMetadata){\n        let pe = pr.editor;\n        if( pe && pe.options){\n            // Parse options\n            pr.editor.options.forEach(s => {\n                let p = s.split('=');\n                if (p.length > 1) {\n                    if (p[0] == 'provider')\n                        pe.provider = p[1];\n                    else if (p[0] == 'filter')\n                        pe.filter = p[1];\n                    else if (p[0] == 'parameter') {\n                        if (!pe.parameters) pe.parameters = [];\n                        pe.parameters.push(p[1]);\n                    }\n                }\n            });\n        }\n        if (pe && pe.directive == \"enum\" && !pr.enumValues) {\n            // Load enum values\n            if(pr.originalTypeName){\n                let t : IMetadataType = this.AllTypes[pr.originalTypeName.toLowerCase()];\n                if( t ) {\n                    pr.enumValues = t.enumValues;                    \n                }                    \n            }\n        }\n    }\n\n    private addWithNS(ns: string, m: IMetadataType) {\n        // modify property types\n        this._types[ns + '.' + m._name.toLowerCase()] = m;\n    }    \n\n    private __propertyCategories: string[] = [\"Equivalency\", \"General\", \"Behavior\", \"Appearance\", \"Layout\",    \n        \"System\", \"Data\", \"Selection Values\", \n        \"Predefined Buttons\", \"Dependency\", \"Paging\", \"History\", \"Report Settings\", \"Grid Options\", \n        \"Other\", \"Simple\", \"Advanced\", \"Favorites\"\n    ];\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { LocalService } from \"./local.service\";\r\nimport { ContextMenuItem, ContextMenuItemTypes, GroupDef, IUIComponentRef, ContextMenuItemPositions } from \"../objects/common\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { PortalService } from \"./portal.service\";\r\nimport { LabelService } from \"./label.service\";\r\nimport { StudioStateService } from \"./studioStateService\";\r\nimport { PortalSettingsService } from \"./portalSettings.service\";\r\nimport _ from 'lodash';\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Injectable()\r\nexport class PageGroupingService {\r\n    private systemGroups = [\r\n        this.grp('PS_ALLPAGECATEGORY', 'All'),\r\n        this.grp('PS_CHGMGMTPAGECATEGORY', 'Change Management'),\r\n        this.grp('PS_GENERALPAGECATEGORY', 'General'),\r\n        this.grp('PS_MDLPAGECATEGORY', 'Modeling'),\r\n        this.grp('PS_QUALITYPAGECATEGORY', 'Quality'),\r\n        this.grp('PS_SHOPFLOORPAGECATEGORY', 'Shopfloor'),\r\n        this.grp('PS_UNDEFINEDPAGECATEGORY', 'Undefined')\r\n    ];\r\n\r\n    private SpecialGroups = [\"all\",\"undefined\"];\r\n    private _pageAssignments: PageAssignment[] = [];\r\n\r\n    constructor( _portalService: PortalService,\r\n            private _labelService: LabelService, \r\n            private _localService: LocalService,\r\n            private _settingsService : PortalSettingsService,\r\n            private _studioStateService:StudioStateService) {\r\n        \r\n        // load groups from Settings and merge with local storage\r\n        this.assignPages();\r\n    }\r\n    \r\n    public getContextMenuItems(dataType: string, data: string): ContextMenuItem[] {\r\n\r\n        let res = [new ContextMenuItem(ContextMenuItemTypes.caption, data, {linePos: ContextMenuItemPositions.below})];\r\n        if (dataType == 'page') {\r\n            const page = data;\r\n            const pageGroups = this.systemGroups.map(g=> new ContextMenuItem(ContextMenuItemTypes.checked, g.groupName, {key: g.groupKey}));\r\n            // get groups for the page\r\n            res = res.concat(pageGroups.filter(pg=>! this.SpecialGroups.includes(pg.key.toLowerCase())));\r\n            this._localService.getPageGroups().map(p => new GroupDef(p.groupName, 'fa-folder', p.groupKey))\r\n                .forEach(gr => {\r\n                    if (!pageGroups.find(n => n.text == gr.groupName))\r\n                        res.push(new ContextMenuItem(ContextMenuItemTypes.checked, gr.groupName, {key:gr.groupKey}));\r\n                });\r\n            res.push(new ContextMenuItem(ContextMenuItemTypes.selected, \"Add a new group\", {linePos : ContextMenuItemPositions.above, nameItem: page, key: \"addToNewGrp\"}));\r\n            res.forEach(r=> {\r\n                    if(r.type == ContextMenuItemTypes.checked){\r\n                        r.checked = !! this._pageAssignments.find(p=> p.name == page && p.groupKey == r.key);\r\n                        r.nameItem = page;\r\n                    }\r\n            });\r\n        }\r\n        else if (dataType == 'group') {\r\n            res.push(new ContextMenuItem(ContextMenuItemTypes.selected, \"Edit\", {nameItem: data, key: \"edit\"}));\r\n            res.push(new ContextMenuItem(ContextMenuItemTypes.selected, \"Remove\", {nameItem: data, key: \"remove\"}));\r\n            res.push(new ContextMenuItem(ContextMenuItemTypes.selected, \"Add a new group\", {linePos: ContextMenuItemPositions.above , nameItem: \"addGroup\", key: \"add\"}));\r\n            res.push(new ContextMenuItem(ContextMenuItemTypes.selected, \"Restore default settings\", {nameItem : data, key: \"restore\"}));\r\n        }\r\n        return res;\r\n    }\r\n\r\n    public getPageGroups(pageItems: Observable<IUIComponentRef[]>): Observable<GroupDef[]> {\r\n        return pageItems.pipe(map( pitems =>{\r\n            const removedGroup = this._localService.getPageGroups().filter(p=> p.deleted);\r\n\r\n            // system groups without removed\r\n            const grps = this.systemGroups.filter(g=> !removedGroup.find(r=> g.groupKey == r.groupKey));\r\n            // add local groups that not exists\r\n            this._localService.getPageGroups().forEach(lgr => {   \r\n                if (lgr.deleted !== true && !grps.find(n => n.groupName == lgr.groupName))\r\n                    grps.push(new GroupDef(lgr.groupName, 'fa-folder', lgr.groupKey));\r\n            });\r\n\r\n\r\n            // Fill group items\r\n            grps.forEach(g => {\r\n                const gk = g.groupKey;\r\n                if(gk == this.SpecialGroups[0] /*All*/){\r\n                    g.items = of(pitems);\r\n                }\r\n                else if(gk == this.SpecialGroups[1] /* Undefined */){\r\n                    g.items = of(pitems.filter(it => !this._pageAssignments.find(a=> a.name == it.name)));\r\n                    g.count = g.items.pipe(map(it => it.length));            \r\n                }\r\n                else {\r\n                    g.items = of(pitems.filter(it => this._pageAssignments.find(a=> a.name == it.name && a.groupKey == gk)));\r\n                }\r\n            });\r\n\r\n            return grps.sort((a, b) => a.groupName.localeCompare(b.groupName));\r\n        }));\r\n    }\r\n\r\n    public getWebPartGroups(): GroupDef[] {\r\n        return [\r\n            this.grp('PS_GENERALPAGECATEGORY', 'General'),\r\n            this.grp('PS_INTELLIGENCELBL', 'Intelligence'),\r\n            this.grp('PS_VIRTUALWEBPARTSCTGY', 'Virtual Web Parts')\r\n        ];\r\n\r\n    }\r\n\r\n    public toggle(item: ContextMenuItem) {\r\n        item.checked = !item.checked;\r\n        if (item.checked && item.type != ContextMenuItemTypes.selected) {\r\n            this._localService.addPageToGroup(item.nameItem, item.text);\r\n        }\r\n        else{\r\n            this.removePageFromGroup(item);\r\n        }\r\n\r\n        this.refreshGroups();\r\n    }\r\n\r\n    public isSystemGroup(name: string) : boolean{\r\n        return !!this.systemGroups.find(g=> g.groupName == name);\r\n    }\r\n\r\n    private grp(nameLabelName: string, nameLabelText: string, icon: string = 'fa-folder'): GroupDef {\r\n        let lbl = this._labelService.getLabel(nameLabelName, nameLabelText);\r\n        if (lbl.endsWith(\"({0})\"))\r\n            lbl = lbl.replace(\"({0})\", \"\");\r\n        let key = nameLabelText.replace(\" \", \"\").toLowerCase();\r\n\r\n        return new GroupDef(lbl, icon, key, null, null, false);\r\n    }\r\n\r\n    private assignPages(){\r\n        this._pageAssignments = [];\r\n        const studioSettings = this._settingsService.getSectionData(\"studioSettings\");\r\n        Object.keys(studioSettings)\r\n            .filter(kx=> /PagesField$/.test(kx) )\r\n            .forEach(k=>\r\n                studioSettings[k].forEach( \r\n                    (m:any) => this._pageAssignments.push(new PageAssignment(m.nameField, k.substr(7, k.length-17) /* remove default and PagesField */))\r\n                )\r\n        );\r\n\r\n        this._localService.getPageGroups().forEach(p=>{\r\n            if(p.items)\r\n                p.items.forEach(i=>{\r\n                    if(i.deleted === true)\r\n                        _.remove(this._pageAssignments, (pa) => pa.name == i.name && p.groupKey == pa.groupKey);\r\n                    else\r\n                        this._pageAssignments.push(new PageAssignment(i.name, p.groupKey));\r\n                });\r\n        });\r\n    }\r\n\r\n    public restoreSettings() {\r\n        this._localService.resetSettingsPageGroups();\r\n    }\r\n\r\n    public addGroup(name: string) {\r\n        this._localService.addPageGroup(name);\r\n        this.refreshGroups();\r\n    }\r\n\r\n    public removeGroup(groupName: string) {\r\n        const sgrp = this.systemGroups.find(n => n.groupName == groupName);\r\n        if (!sgrp) {\r\n            this._localService.removeGroup(groupName);\r\n        }\r\n        else {\r\n            // If system group = add group to local with deleted status\r\n            this._localService.addPageGroup(groupName, true)\r\n        }\r\n    }\r\n\r\n    public moveToGroup(namePage: string, nameGroup: string) {\r\n        const allGrp = this._localService.getPageGroups()\r\n        const gr = allGrp.find(n => n.groupName == nameGroup);\r\n        if (!gr) {\r\n            this._localService.addPageGroup(nameGroup);\r\n        }\r\n        this._localService.addPageToGroup(namePage, nameGroup);\r\n        this.refreshGroups();\r\n    }\r\n\r\n    public editGroup(newName: string, oldName: string) {\r\n        this._localService.editPageGroup(newName, oldName);\r\n        this.refreshGroups();\r\n    }\r\n\r\n    public removePageFromGroup(item: ContextMenuItem) {\r\n        this._localService.removePageFromGroup(item.nameItem, item.text);\r\n    }\r\n\r\n    private refreshGroups(){\r\n        this.assignPages();\r\n        this._studioStateService.refreshElementPanel(\"Page\");\r\n    }\r\n\r\n}\r\n\r\nclass PageAssignment{\r\n    constructor(public name: string, public groupKey: string){\r\n        this.groupKey = groupKey.toLowerCase();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, tap } from \"rxjs/operators\";\n\nimport _ from 'lodash';\n\nimport { environment } from '../../../environments/environment';\nimport { IUserProfile, IEncryptedField, PortalResult, IResultStatus, IUIComponentRef, IElement, ControlDescriptor, TypeDescriptor, ILabel, TypeCode, CachedComponentType, uuid, val, \n    IControl, IUIDesigner, BatchImportExportSettings, IApiResult, UIComponentRef } from '../objects/common';\nimport {\n    ICamstarService, IOMTypeDescriptor, CodeBehindDescriptor, ImageFile, WorkspaceItem, GridColumnDefinition,\n    QueryData, QueryOptions, QueryParameter\n} from '../objects/viewModel';\nimport { TraceLog, TraceItem } from '../../layout/traceLog/traceLog';\nimport { LocalService } from './local.service';\nimport { PersonalizationTypes } from './metadata.service';\n\nimport { ConvertorService } from './convertor.service';\n\ntype PortalResultObs<T> = Observable<PortalResult<T>>;\n\n@Injectable()\nexport class PortalService {\n\n    constructor(private _http: HttpClient, \n               private _localService: LocalService,\n               private _convertorService: ConvertorService\n         ) { \n    }\n\n    private _services_cache: ICamstarService[] = null;\n    private _nonVirtualWebPartsCache : IUIComponentRef[];\n\n    public login(username: string, password: string, domain: string): PortalResultObs<string> {\n        let pwd = <IEncryptedField>{ Value: password, IsEncrypted: false };\n        let tzOffset = (new Date()).getTimezoneOffset() / 60;\n\n        let profile = { Name: username, Password: pwd, UTCOffset: (tzOffset<0 ? (\"-PT\" + -tzOffset) : (\"PT\"+tzOffset)) +\"H\" };\n        let body = { profile: profile, domain: domain };\n\n        let resProc = (result: any)=>{\n            if (result.LogonResult.IsSuccess) {\n                this._profile = <IUserProfile>result.profile;\n                if( !this._profile.UTCOffset )\n                    this._profile.UTCOffset = \"PT0H\";\n                this._localService.setUserProfile(this._profile);\n                this.keepSessionAlive();\n                return new PortalResult(this.getAuthorizationHeader());\n            }\n            else {\n                return new PortalResult(null, <IResultStatus> result.LogonResult);\n            }\n        };\n\n        return <PortalResultObs<string>>this.post<PortalResult<string>>('Logon', body, resProc);\n    }\n\n    private keepSessionAlive(): void {\n        let timeoutTime = 300000;\n        setInterval(() => {\n            this.post<any>('SessionReset')\n                .subscribe(\n                    (response: any) => {\n                },\n                error => {\n                    this.handleError(error);\n                }\n                );\n        }, timeoutTime);\n    }\n\n    public checkUserLoggedIn(): boolean {\n        let profile = this._localService.getUserProfile();\n        if (profile)\n            return true;\n        return false;\n    }\n\n    public verifyLogon(): Observable<any> {\n        return this.post<IUserProfile>(\"VerifyLogon\", undefined, \"profile\")\n            .pipe(map(profile => {\n                if (profile) {\n                    this._profile = profile;\n                    this._localService.setUserProfile(this._profile);\n                    this.keepSessionAlive();\n                    return this.getAuthorizationHeader();\n                }\n                return undefined;\n            }), catchError(this.handleError));\n    }\n\n    public logout(): Observable<boolean> {\n        return this.post<boolean>('Logout', null, () => this._localService.setUserProfile(null));\n    }\n\n    public getCamstarServices(): Observable<ICamstarService[]> {\n        if( this._services_cache && this._services_cache.length ){\n            return of(this._services_cache);\n        }\n        return this.post<ICamstarService[]>('GetAvailableServices', null, \"services\")\n            .pipe(tap((services: ICamstarService[])=> this._services_cache = services));\n    }\n\n    public getSessionDataContracts(): Observable<any[]> {\n        return this.post<any[]>('GetSessionDataContract', null, (resp) => {\n            return resp.contract.DataMembersDataMember.map((c:any) => c.NameDataMember);\n        });\n    }\n\n    public getStudioLabels(): Observable<any> {\n        let parameters = {\n            categoryIds: \"81\", //Portal Studio Label Category\n        };\n        return this.post<any[]>('GetLabels', parameters)\n            .pipe(map(labels => labels.map( l =>{return { [l.Name] : l.Value };} )));\n    }\n\n    public getLabels(labelCategoryIds: string, searchLabelName: string, searchText: string): Observable<any[]> {\n        let parameters ={\n            categoryIds: labelCategoryIds,\n            searchLabelName: searchLabelName,\n            searchLabelText: searchText\n        };\n\n        return this.post<ILabel[]>(\"GetLabels\", parameters)\n            .pipe( map( labels => labels.map(l => {return {\n                    id: l.ID,\n                    name: l.Name,\n                    defaultValue: l.DefaultValue,\n                    value: l.Value,\n                    category: l.Category\n                };})));\n    }\n\n    public getLabelCategories(): Observable<any> {\n\n        return this.post<any[]>(\"GetLabelCategories\")\n            .pipe(map(categories => categories.map( c=> {return { name: c.Text, value: c.ID }; } )));\n    }\n\n    public getActionHandlers(codeBehindDef: CodeBehindDescriptor, typeOfHandler: string): Observable<any[]> {\n        return this.post<any[]>('Get' + typeOfHandler + 'ActionHandlers', { 'codeBehind': codeBehindDef }, \"handlers\");\n    }\n\n    public getTypeDescriptor(typename: string): Observable<TypeDescriptor> {\n        return this.post<TypeDescriptor>('GetTypeDescriptor', { 'typeName': typename }, \"type\");\n    }\n\n    public getFieldsDirectory(tds: IOMTypeDescriptor): Observable<IOMTypeDescriptor> {        \n        return this.post<IOMTypeDescriptor>('GetFieldsDirectory', { 'type': tds }, \"type\");\n    }\n\n    public getQueryData(qName: string): Observable<QueryData[]> {\n        return this.post<QueryData[]>('GetQueryList', { 'query': qName || '' }, \"list\");\n    }\n\n    public resolveObjectColumns(fieldExp: string): Observable<any[]> {\n        return this.post<any[]>('ResolveObjectColumns', { 'objectExpression': fieldExp }, \"headers\");\n    }\n\n    public resolveGridColumns(fieldExp: string, isSelVal = false): Observable<GridColumnDefinition[]> {\n        let op = isSelVal ? 'ResolveSelectionValuesColumns' : 'ResolveObjectColumns';\n\n        return this.post<GridColumnDefinition[]>(op, isSelVal ? { 'selvalExpression': fieldExp } : { 'objectExpression': fieldExp }, \"headers\")\n            .pipe(map( r => \n                this.getGridColumns(r, fieldExp))\n                );\n    }\n\n    public downloadFile(fileName: string, directory: string): Observable<any> {\n        return this.post<any>('Download', { 'filename': fileName, 'directory': directory }, \"content\");\n    }\n\n    public uploadFile(fileName: string, directory: string, dataBytes: Uint8Array): Observable<PortalResult<any>> {\n        return this.post<PortalResult<any>>('Upload', { 'filename': fileName, 'directory': directory, 'content': dataBytes })\n            .pipe(map( (r: any) => {\n                return new PortalResult(r);\n            }), catchError(this.handleError));\n    }\n\n    public getSettings(): Observable<any> {\n        return this.post<any>(\"GetSettings\");\n    }\n\n    public saveSettings(settings: any): Observable<IResultStatus> {\n        return this.post<IResultStatus>(\"SaveSettings\", { 'settings': settings });\n    }\n\n    public getExportableMaintServices(): Observable<string[]> {\n        return this.post<string[]>(\"GetExportableMaintServices\");\n    }\n\n    public getSounds(): Observable<ImageFile[]> {\n        return this.post<ImageFile[]>(\"GetSounds\", null, \"sounds\");\n    }\n\n\n    public getPageMaps(): Observable<IUIComponentRef[]> {\n        return this.post<string>(\"LoadPageMapping\", undefined, \"xml\")\n            .pipe(map((xml: string) => {\n                let xmlDoc = new DOMParser().parseFromString(xml, \"application/xml\");\n                let res: IUIComponentRef[] = [];\n                let nl = xmlDoc.documentElement.getElementsByTagName(\"PageMappingItem\");\n                _.forEach(nl, p => {\n                    let tg = p.getElementsByTagName(\"Parameters\");\n                    let itemParameters : string[] = [];\n                    _.forEach(tg, t=> itemParameters.push(t.attributes[\"Name\"].value) );\n\n                    if (p.attributes && p.attributes[\"Name\"]) {\n                        let pmref = new UIComponentRef();\n                        pmref.name = p.attributes[\"Name\"].value;\n                        pmref.type = 'pageMap';\n                        pmref.componentName = pmref.name;\n                        pmref.isReference = true;\n                        pmref.__mapParameters = itemParameters;\n                        res.push(pmref);                            \n                    }\n                });\n                return res;\n            }));\n    }\n\n    public getTargetMatrices(): Observable<IUIComponentRef[]> {\n        return this.post<string[]>(\"LoadAllTargetMatrixItems\", undefined, \"retVal\")\n            .pipe(map( (items:string[]) => {\n                    return _.map<string, IUIComponentRef>(items, s => {\n                        let tm = new UIComponentRef ();\n                        tm.isReference = true;\n                        tm.componentName = s;\n                        tm.name = s;\n                        tm.type = 'targetMatrix';\n                        return tm;\n                    });\n                }\n            ));\n    }\n\n    public getTargetMatrix(name: string): Observable<any> {\n        if (!name) {\n            // create new page map\n            let res = { __type: \"TargetMatrixItem\" };\n            name = \"TargetMatrixItem\" + '-' + new Date().getMilliseconds().toString(); // new name\n            res[\"name\"] = name;\n            return new Observable<any>(subscriber => subscriber.next(res));\n        }\n        return this.post<string>(\"LoadTargetMatrixItem\", { 'name': name }, \"xml\")\n            .pipe( map((xml:string) => this._getTargetMatrixItemFromXml(xml)));\n    }\n\n    private _getTargetMatrixItemFromXml(xml: string) : IElement{\n        let xmlDoc = new DOMParser().parseFromString(xml, \"text/xml\");\n        let name = xmlDoc.documentElement.getAttribute(\"Name\");\n        let res: IElement = <IElement>{\n            id: uuid.id(),\n            name: name,\n            type: 'TargetMatrixItem',\n            typeName: 'TargetMatrixItem',\n            items: {}\n        };\n\n        let rows = [];\n        let columns = [];\n\n        for(let i=0; i<xmlDoc.documentElement.childNodes.length; i++){\n            let p : any  = xmlDoc.documentElement.childNodes.item(i);\n            if (p.localName == \"Columns\") {\n                let attrs = (p as any).attributes;\n                if( attrs ){\n                    let nameAttr = attrs.getNamedItem('Name');\n                    let captionAttr = attrs.getNamedItem('Caption');\n                    columns.push({\n                        name: nameAttr && nameAttr.textContent, caption: captionAttr && captionAttr.textContent, __type: 'TargetMatrixColumn'\n                    });\n                }\n            }\n            else if (p.localName == \"Rows\") {\n                let cells = columns.map(cx=> { return {name: cx.name, value: null, __type: 'TargetMatrixCell'};});\n                for(let ii=0; ii<p.childNodes.length; ii++){\n                    let c = p.childNodes.item(ii) as any;\n                    if( c.attributes ){\n                        let nameAttr = c.attributes.getNamedItem('Name');\n                        let valAttr = c.attributes.getNamedItem('Value');\n                        let colName = nameAttr.textContent;\n                        let clx = cells.find(c1=> c1.name == colName);\n                        clx.value = valAttr && valAttr.textContent;\n                    }\n                }\n\n                let tvAttr = (p as any).attributes && (p as any).attributes.getNamedItem('TargetValue');\n                rows.push({\n                    targetValue: tvAttr && tvAttr.textContent,\n                    cells: cells,\n                    __type: 'TargetMatrixRow'\n                });\n            }\n        }\n        res['columns'] = columns;\n        res['rows'] = rows;\n        return res;\n    }\n\n    public getPageMap(name: string): Observable<any> {\n\n        if (!name) {\n            // create new page map\n            let res = { __type: \"PageMappingItem\" };\n            name = \"PageMappingItem\" + '-' + new Date().getMilliseconds().toString(); // new name\n            res[\"nameField\"] = name;\n            return new Observable<any>(subscriber => subscriber.next(res));\n        }\n\n        return this.post<any>(\"LoadPageMapItem\",{ 'name': name }, \"pageMap\");\n    }\n\n    public getSuggestedMappingParameters(): Observable<any> {\n        return this.post<any>(\"GetSuggestedMappingParameters\", undefined, \"parameters\");\n    }\n\n    public savePageMap(pageMapping: any): Observable<IResultStatus> {\n\n        let name = pageMapping['Name'];\n        pageMapping.nameField = pageMapping.Name;\n        delete pageMapping.Name;\n\n        if( pageMapping && pageMapping.sourcePagesField){\n            pageMapping.sourcePagesField.forEach((s:any) => s.actionField = null);\n        }\n\n        return this.post<IResultStatus>(\"SavePageMap\", { 'name': name, 'pageMap': pageMapping });\n    }\n\n    public deletePageMap(name: string): Observable<IResultStatus> {\n        return this.post('DeletePageItem', { 'name': name });\n    }\n\n    public deleteTargetMatrixItem(name: string): Observable<IResultStatus> {\n        return this.post('DeleteTargetMatrixItem', { 'name': name });\n    }\n\n    private post<T>(op: string, prms:any = null, responseOut : string | ((pr : any) => any) = undefined): Observable<T> {\n\n        let resField = op + \"Result\";\n        if( op.startsWith(\"metadata/\"))\n            resField = \"MetadataOperationResult\";\n        else if( op.startsWith(\"component/\"))\n            resField = \"ComponentOperationResult\";\n\n        return this._http.post<any>(this.getOperationUrl(op), prms && JSON.stringify(prms), this.getHeaders())\n            .pipe(map( parsedResponse => {\n                let ret : T;\n                \n                if( parsedResponse && parsedResponse[resField] !== undefined){\n                    if( responseOut ){\n                        // Function\n                        if( typeof responseOut == \"function\" ){\n                            ret = <T>( <((pr : any) => any)>responseOut)(parsedResponse);\n                        }\n                        else{\n                            // string\n                            ret = <T>parsedResponse[responseOut as string];                                            \n                        }\n                    }\n                    else{ \n                        // Field\n                        ret = <T> parsedResponse[resField];\n                    }    \n                }\n\n                return ret;\n\n            }), catchError(this.handleError));\n    }\n\n    public saveTargetMatrixItem(name: string, targetMatrixItem: any): Observable<IResultStatus> {\n\n        let initDocXml = \n        `<?xml version=\"1.0\" encoding=\"utf-16\"?>\n            <TargetMatrixItem xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" Name=\"${name}\" xmlns=\"camstar.com/Portal.Personalization.Model\">\n            </TargetMatrixItem>`;\n\n        let xmlDoc = new DOMParser().parseFromString(initDocXml, \"text/xml\");\n        let ns = \"camstar.com/Portal.Personalization.Model\";\n\n        let de = xmlDoc.documentElement;\n        let cols = val(targetMatrixItem, \"columns\");\n        _.forEach(cols, c=>{\n            let cl = xmlDoc.createElementNS(ns, \"Columns\");\n            cl.setAttribute(\"Name\", c.name);\n            cl.setAttribute(\"Caption\", c.caption);\n            de.appendChild(cl);\n        });\n\n        let rows = val(targetMatrixItem, \"rows\");\n        _.forEach(rows, r=>{\n            let rl = xmlDoc.createElementNS(ns, \"Rows\");\n            rl.setAttribute(\"TargetValue\", r.targetValue);\n            if( r.cells ){\n                r.cells.forEach((cell, index)=>{\n                    let cll = xmlDoc.createElementNS(ns, \"Cells\");\n                        cll.setAttribute(\"Name\", cell.name);\n                        cll.setAttribute(\"Value\", cell.value);\n                        rl.appendChild(cll);\n                    });\n            }\n            de.appendChild(rl);\n        });\n\n        let oSerializer = new XMLSerializer();\n        let xml = oSerializer.serializeToString(xmlDoc);\n\n        return this.post<IResultStatus>('SaveTargetMatrix', { 'name': name, 'xml': xml });\n    }\n\n    public getImages(): Observable<ImageFile[]> {\n        return this.post<ImageFile[]>('GetImages', undefined ,\"images\");\n    }\n\n    public getExposedProperties(controls: ControlDescriptor[]): Observable<ControlDescriptor[]> {\n        return this.post<ControlDescriptor[]>(this.getOperationUrl('GetExposedProperties'), { 'controls': controls });\n    }\n\n    public getWorkspaces(): Observable<WorkspaceItem[]> {\n        return this.metadataCall<WorkspaceItem[]>('workspaces')\n            .pipe( map( w => {\n                let wsps: WorkspaceItem[] = [<WorkspaceItem>{ ID: 0, Code: \"DEV\", Name: \"Developer\", Description: \"Developer Workspace\", Sequence: 0 }];\n                let ret = [wsps[0], ..._.orderBy(w, 'Sequence', 'desc')];\n                // Trim the opaque at the begining\n                ret.filter(w => w.Color).forEach(w => w.Color = '#' + w.Color.substr(3));                                             \n                return ret;\n            }));\n    }\n\n    public updateComponentCache(element: IElement): void {\n        let componentCacheType = this.getCachedComponentType(element);\n        if (componentCacheType !== null) {\n            let parameters = {\n                name: element.name,\n                type: componentCacheType\n            };\n            this.post<any>(\"UpdateCachedComponent\", parameters)\n                .subscribe((response: any) => {\n                },\n                error => {\n                    this.handleError(error);\n                });\n        }\n    }\n\n    public getWebPartsList(): Observable<IUIComponentRef[]> {\n        if( this._nonVirtualWebPartsCache ){\n            return of(this._nonVirtualWebPartsCache.map(w => UIComponentRef.fromControlWebPart(w)));\n        }\n        else{\n            return this.post<IUIComponentRef[]>('GetWebPartsList', undefined, \"webParts\")\n                .pipe(map((webParts : IUIComponentRef[]) => {\n                    this._nonVirtualWebPartsCache = webParts;\n                    return webParts.map(w => UIComponentRef.fromControlWebPart(w));\n                }));\n        }\n    }\n\n    public getQueryParameters(type: number, queryName: string): Observable<any> {\n        let query = \"\";\n        let parameters = [queryName];\n\n        if (type == 0) //System\n            query = 'ParamList_System';\n        else //User\n            query = 'ParamList_User';\n\n        return this.post<any>('GetParameterList', { 'query': query, parameters: parameters }, \"list\");\n    }\n\n    public getQueryColumns(query: string, options: QueryOptions, parameters: QueryParameter[]): Observable<GridColumnDefinition[]> {\n        return this.post<any[]>('GetQueryColumnsList', { 'query': query, 'options': options, 'parameters': parameters }, \"list\")\n            .pipe(map(columns => this.getGridColumns(columns)));\n    }\n\n    public getAdHocQueryColumns(query: string, options: QueryOptions): Observable<GridColumnDefinition[] | IResultStatus> {\n\n        return this.post<any[]>(\"GetAdHocQueryColumnsList\", { 'query': query, 'options': options }, \"headers\")\n            .pipe(map( (list:any[]) => this.getGridColumns(list) ));\n    }\n\n    public createPagePermissions(pageName: string, defaultPageRole: string): Observable<IResultStatus> {\n        return this.post<IResultStatus>('CreatePagePermissions', { 'pageName': pageName, 'defaultPageRole': defaultPageRole });\n    }\n\n\n    public getTraceLog(pageName: string): Observable<TraceLog> {\n        return this.post<TraceItem[]>('GetTraceLog', { 'pageName': pageName }, \"items\")\n            .pipe(map( (items : TraceItem[]) => {\n                    if(items){\n                        var trLog = new TraceLog();\n                        trLog.items = items.reverse();\n                        return trLog;\n                    }\n                    return null;\n                } ));\n    }\n\n    public getWebiReportsList(conn: any): Observable<string[]> {\n        return this.post<string[]>(\"GetWebiReportsList\", { profile: conn }, \"reports\")\n            .pipe(map((reports: string[]) => reports.sort()));\n    }\n\n    public getReportParameters(conn: any, reportName: string): Observable<any[]> {\n        return this.post<any[]>('GetWebiReportParameters', { profile: conn, reportName: reportName }, \"parameters\");\n    }\n\n    public getMappings(): Observable<string[]> {\n        return this.post<string[]>('GetSuggestedMappingNames', undefined, \"names\");\n    }\n\n    public targetMatrixFromExcel(excelData: Uint8Array): Observable<any> {\n        return this.post<any>('LoadFromExcel', { excel: excelData }, res=> this._getTargetMatrixItemFromXml(res.xml));\n    }\n\n\n    // Migrated from studio.service\n    public getControls(): Observable<IControl[]> {\n        const uriOfimage: string =  'Content/';\n        return  this.post<IControl[]>('GetControls')\n                    .pipe(map((controls : IControl[]) => \n                    controls.map((c)=>{ c.toolboxImage = uriOfimage + c.toolboxImage;\n                                        c.typeName=c.assembly +'.'+ c.type;\n                                        c.designImage = uriOfimage + c.designImage;    \n                                    return c;\n                                })));     \n    }\n\n    public getModelingInstanceRefs(cdo: string): Observable<IElement[]> {\n        return this.post<IElement[]>('GetInstanceReferences', { 'cdoName': cdo});\n    }\n\n    public getMetadata(): Observable<PersonalizationTypes> {\n        return this.metadataCall<PersonalizationTypes>(\"get\");\n    }\n\n    public getDescriptions(): Observable<any> {\n        return this.metadataCall<any>(\"descriptions\");\n    }\n\n    public getMetadataTypes(ns:string, types: string[]): Observable<PersonalizationTypes> {\n        return this.metadataCall<PersonalizationTypes>(\"types\", ns, types);\n    }\n\n    public getElement(elementName: string, type: string, workspaceCode: string = \"\"): Observable<IUIDesigner> {\n        return this.componentCall<IUIDesigner>(\"get\", elementName, type, workspaceCode);\n    }\n\n    public copyElement(element: IElement, newName: string, workspaceCode : string): Observable<IElement> {\n        \n        if (element.__unbound && element.__unbound !== \"NDO\") {\n            let compToSave = _.cloneDeep<IElement>(element);\n            compToSave.name = newName;\n            return of<IElement>(compToSave);\n        }\n\n        // Copy unbound elements must be implement\n\n        return this.componentCall<IElement>(\"copy\", element.name, element.type || element.__maint, workspaceCode, newName);\n        \n    }\n    private componentCall<T>(op: string, name: string, type: string, workspaceCode: string = \"\", data: string = null): Observable<T> {\n        let prm = {\n            'name': name, \n            'type': type.toLowerCase(), \n            'workspace' : workspaceCode,\n            'content': data\n        };\n\n        return this.post<IApiResult>('component/'+op, prm)\n            .pipe(map((response: any) => this.processPortalResponse(response)));\n    }\n\n    private metadataCall<T>(op: string, data: any = null, dataArray : string[] = []): Observable<T> {\n        let prm = {inpParams: [data].concat(dataArray)};\n\n        return this.post<IApiResult>('metadata/'+op, prm)\n            .pipe(\n                map((response: any) => this.processPortalResponse(response) )\n            );\n    }\n\n    private processPortalResponse(response: IApiResult) : any {    \n        if (response){\n            let res = response.status;\n            if(res.IsSuccess){\n                if(response.content){\n                    let content = JSON.parse(response.content); \n                        if (content.type !== undefined && (content.type == \"Page\" || content.type == \"Webpart\")) {\n                           if (response.status.Message) {\n                               content.__statusMessage = response.status.Message;\n                           }    \n                        }\n                        \n                    return content;\n                }\n                else\n                    return res;\n            }\n            else{\n                // The error handling must be improved\n                if( res.ExceptionData && res.ExceptionData.Description)\n                    alert(res.ExceptionData.Description);\n\n                return res;\n            }\n        }\n        else {\n            let errRes = <IResultStatus>{IsSuccess: false, Message: \"No result\"}\n            console.error(errRes.Message, response);\n            return errRes;\n        }\n    }\n\n    public getWebpartElement(elementName: string, type: string, workspaceCode: string): Observable<IUIDesigner|IResultStatus> {\n        // Should add             \n        return this.getElement(elementName, type, workspaceCode);\n    }\n\n    public getPageByTemplateType(template: string): Observable<IUIDesigner> {\n        return Observable.create(obs => {\n            let type = \"Page\";\n            if(template == \"blank\") {\n                this.getElement(null, type).subscribe(page=> { \n                    obs.next(page);\n                    obs.complete();     \n                });            \n            }\n            else {                                     \n                this.getElement(template, type).subscribe(page => {\n                    page.isDirty = true;\n                    page.isNew = true;\n                    obs.next(page);\n                    obs.complete(); \n                });                \n            } \n        });\n    }\n\n\n    public exportComponent(type: string, name: string, isNew: boolean = false, workspace: string): Observable<IApiResult> {\n       \n        let optPar = {\n            'type': type, \n            'name' : name, \n            'workspace' : workspace + \"\" === '' ? 'all' : workspace,\n            'isNew' : isNew.toString()\n        };\n\n        function dataEncodeUTF16(data) {\n            let buf = new ArrayBuffer(data.length*2);\n            let bufView = new Uint16Array(buf);\n            for (let i=0; i < data.length; i++) {\n                 bufView[i] = data.charCodeAt(i);\n            }\n            return bufView;\n        }\n\n        return this.post<any>('component/export', optPar) \n        .pipe(\n            map((data: any) => {\n                let dataUTF16 = dataEncodeUTF16(data.content);\n                let blob = new Blob([dataUTF16], {type: \"text/xml;charset=UTF-16;\"});    \n                let fileName = name + \".xml\";\n\n                // download file.\n                if (navigator.msSaveBlob) // IE10+\n                    navigator.msSaveBlob(blob, fileName);\n                else { // other browsers.\n                    let url = window.URL.createObjectURL(blob);\n                    if (\"download\" in document.createElement(\"a\")) {\n                        let a = document.createElement(\"a\");\n                        a.style.display = \"none\";\n                        a.href = url;\n                        a.setAttribute(\"download\", fileName);\n                        a.click();\n                    }\n                }\n\n                \n                return data;\n        \n            }\n        ));\n    }\n\n    public importComponent(type: string, name: string, isDev: boolean, xmlContent: ArrayBuffer): Observable<any> {\n        let data = new Uint8Array(xmlContent); \n        let array = Array.from(data);\n        \n        return this.post(\"ImportComponent\", {'type': type, 'name' : name, 'isDev': isDev, 'xmlData': array})\n        .pipe(map((response: any) => this.processPortalResponse(response)));\n    }\n\n    public applyXml(name: string, type: string, xmlContent: string): Observable<IUIDesigner> {  \n        return this.componentCall<IUIDesigner>(\"applyxml\", name, type, \"\", xmlContent);\n    }\n\n    public elementToXml(element: IElement, workspace : string): Observable<string> {\n        return this.componentCall<string>(\"toxml\", element.name, element.type, workspace, element[\"isNew\"] === true ? \"true\" : \"false\")\n            .pipe(tap(xml=> element.__xml = xml));\n    }\n\n    public removeElement(name: string, type: string): Observable<IResultStatus> {\n        return this.componentCall<IResultStatus>(\"delete\", name, type);\n    }\n\n    public publishElement(element: IElement): Observable<any> {\n        return this.componentCall<IResultStatus>(\"publish\", element.name, element.type, undefined, this._convertorService.elementSerialize(element));\n    }\n\n    public saveElement(element: IElement): Observable<IResultStatus> {        \n        return this.componentCall<IResultStatus>(\"save\", element[\"componentName\"], element.type, undefined, this._convertorService.elementSerialize(element));\n    }\n\n    public revert(name: string, elType: string, toContent: string): Observable<any> {\n        return this.componentCall<IResultStatus>(\"revert\", name, elType, undefined, toContent);\n    }\n\n    public isUsed(name: string, elType: string, wpName: string): Observable<any> {\n        return this.componentCall<IResultStatus>(\"isused\", name, elType, \"csi\", wpName);\n    }\n\n    public batchExport(settings: BatchImportExportSettings): Observable<IResultStatus> {\n        return this.post<ArrayBuffer>('BatchExport', { \"settings\" : settings} )   \n             .pipe(map((data: ArrayBuffer) => {\n                // received bytes with structure\n                //  1 - \"0\"-error ; \"1\" - success\n                //  XXXX - int length of message (hex format)\n                //  XXXXXXXX - long length of data (hex format)\n                //  data bytes\n\n                let ret = <IResultStatus>{IsSuccess: false, Message : \"\"};\n                let i = 0;\n                let s = String.fromCharCode(data[i++]);\n                ret.IsSuccess = s == \"1\";\n                for(s=\"\";i < 5; i++) s += String.fromCharCode(data[i])\n                \n                let messageLength = parseInt(s, 16);                 \n\n                for(s = \"\";i < (5+8); i++)\n                    s += String.fromCharCode(data[i])\n                \n                let dataLength = parseInt(s, 16);\n                for(s = \"\";i < (1+4+8+messageLength); i++)\n                    s += String.fromCharCode(data[i])\n                \n                ret.Message = s;\n                if( !ret.IsSuccess )\n                    return ret;\n\n                let ab = new Uint8Array(data, 1+4+8+messageLength, dataLength);\n                let datablob = new Blob([ab]).slice(1+4+8+messageLength);\n\n                let fileName = \"BatchExport\";\n                if(settings.ExportTo === 0) \n                    fileName += \".xml\"\n                else\n                    fileName += \".zip\";\n\n                // download file.\n                if (navigator.msSaveBlob) // IE10+\n                    navigator.msSaveBlob(datablob, fileName);\n                else { // other browsers.\n                    var url = window.URL.createObjectURL(datablob);\n                    let a = document.createElement(\"a\");\n                    if (\"download\" in a) {\n                        a.style.display = \"none\";\n                        a.href = url;                        \n                        a.setAttribute(\"download\", fileName);\n                        a.click();\n                    }\n                }\n\n                return ret;\n            }));\n    }\n\n    public batchImport(settings: BatchImportExportSettings): Observable<IResultStatus> {\n\n        const fd = new FormData();\n        const opts =  settings.PostedFile.name + \",\" + \n                settings.OverrideIfExists + \",\" + \n                settings.SelectedWorkspaces + \",\" +\n                settings.PostedFile.size;\n                \n        fd.append('options', settings.PostedFile, opts);        \n\n        return this._http.post<IResultStatus>(this._portalUrl + 'BatchImport', fd )\n            .pipe(map((resp : any) => <IResultStatus>resp.BatchImportResult ));\n    }\n\n    private getAuthorizationHeader(): string {\n        if (this._profile)\n            return 'Bearer ' + this._profile.Name + ';' + this._profile.SessionID.Value + ';' + this._profile.UTCOffset\n        return null;\n    }\n\n    private getOperationUrl(key: string): string {\n       \n        return this._portalUrl + key;\n    }\n\n    private getHeaders() : any\n    {\n        return {\n            headers: new HttpHeaders({'Content-Type' :'application/json', 'Accept' : 'application/json'})\n        };\n    }\n\n    private handleError(err: any) : never {\n        let errorXml = err.error as string;\n        // in a real world app, we may send the server to some remote logging infrastructure\n        // instead of just logging it to the console\n        let errText = '';\n        if (errorXml) {\n            // Brute parsing XML error response\n            let startReason = errorXml.indexOf('<Reason>');\n            if (startReason != -1) {\n                startReason += '<Reason>'.length;\n                let endReason = errorXml.indexOf('</Reason>', startReason);\n                if (endReason != -1) {\n                    errText = errorXml.substr(startReason, endReason - startReason);\n                    // extract <Text>....</Text>\n                    let startText = errText.indexOf('<Text');\n                    if (startText != -1) {\n                        startText += (errText.indexOf('>', startText) + 1);\n                        errText = errText.substr(startText, errText.lastIndexOf('</Text>') - startText);\n                    }\n                }\n            }\n        }\n\n        if (errText)\n            console.error(errText);\n        else\n            console.error(errorXml);\n\n        throw(new Error(errText || 'Server error'));\n    }\n\n    private createGridColumn(header: any, baseFieldExp: string, width: number = 150): GridColumnDefinition {\n\n        if (header.Name[0] == '$') {\n            let colType: string;\n            // parse name\n            //string.Format(\"${0},{1},{2},{3}\", IsReadOnly, IsRequired, TypeName, Name),\n            let sp = header.Name.substring(1).split(',');\n            let editable = sp[0] != 'True';\n            let typeName = sp[2];\n            let name = sp[3];\n\n            switch (typeName) {\n                case \"DateTime\":\n                    colType = 'JQDateChooser';\n                    break;\n                case \"Boolean\":\n                    colType = 'JQFieldCheckBox';\n                    width = 30;\n                    break;\n                case \"Enum\":\n                    colType = 'JQDropDownList';\n                    break;\n                case \"NamedObjectRef\":\n                    colType = 'JQNamedObject';\n                    break;\n                case \"NamedSubentityRef\":\n                    colType = 'JQNamedSubentity';\n                    break;\n                case \"RevisionedObjectRef\":\n                    colType = 'JQRevisionedObject';\n                    break;\n                default:\n                    colType = editable ? 'JQTextBox' : 'JQFieldReadonly';\n                    width = 200;\n                    break;\n            }\n\n            let edProperties = {};\n            if (colType == 'JQNamedObject')\n                edProperties = { __type: 'EditorPropertiesNDO', FieldExpressions: baseFieldExp + \".\" + name };\n            else if (colType == 'JQRevisionedObject')\n                edProperties = { __type: 'EditorPropertiesRDO', FieldExpressions: baseFieldExp + \".\" + name };\n            else\n                edProperties = null;\n\n            return <GridColumnDefinition>{\n                __type: colType,\n                name: name,\n                editable: editable,\n                width: width,\n                required: sp[1] == \"True\",\n                labelName: header.Label ? header.Label.Name : null,\n                editorProperties: edProperties\n            };\n        }\n        else {\n            let colType: string;\n            let code: TypeCode;\n            if (_.isString(header.TypeCode))\n                code = <TypeCode>TypeCode[(<string>header.TypeCode)];\n            else\n                code = header.TypeCode;\n\n            switch (code) {\n                case TypeCode.DateTime:\n                    colType = 'JQDateChooser';\n                    break;\n                case TypeCode.Boolean:\n                    colType = 'JQFieldCheckBox';\n                    width = 30;\n                    break;\n                default:\n                    colType = 'JQFieldReadonly';\n                    width = 200;\n                    break;\n            }\n\n            let lbl: string = header.LabelName;\n            if (header.Label)\n                lbl = (<ILabel>header.Label).Name;\n\n            return <GridColumnDefinition>{\n                __type: colType,\n                name: header.Name,\n                editable: false,\n                width: width,\n                required: false,\n                editorProperties: {},\n                labelName: lbl\n            };\n        }\n    }\n\n    private getGridColumns(resultList: any[], baseFieldExp: string = null): GridColumnDefinition[] {\n        if (resultList) {\n            let list: any[] = resultList; // .headers /*|| result.list || */[];\n            return list.map( h => this.createGridColumn(h, baseFieldExp));\n        }\n        return <GridColumnDefinition[]>[];\n    }    \n\n    private getCachedComponentType(element: IElement): CachedComponentType {\n        let retVal = null;\n        if (element) {\n            if (element.typeName) {\n                switch (element.typeName) {\n                    case \"PageContent\":\n                        retVal = CachedComponentType.Page;\n                        break;\n                    case \"WebPartDefinition\":\n                        retVal = CachedComponentType.WebPart;\n                        break;\n                    case \"PageFlowContent\":\n                        retVal = CachedComponentType.Pageflow;\n                        break;\n                    case \"PortalTabChanges\":\n                        retVal = CachedComponentType.Tab;\n                        break;\n                    case \"PortalMenuDefinitionChanges\":\n                        retVal = CachedComponentType.Menu;\n                        break;\n                    case \"ActionDefChanges\":\n                        retVal = CachedComponentType.Action;\n                        break;\n                }\n            }\n        }\n        return retVal;\n    }\n\n    private _profile: IUserProfile;\n    private _portalUrl = environment.portalUrl + '/PortalStudioService.svc/web/';\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { MetadataService } from './metadata.service';\nimport { PortalService } from './portal.service';\nimport { ConvertorService } from './convertor.service';\nimport { IMetadataType } from '../objects/viewModel';\nimport { AlertService } from '../../alert/alert.service';\nimport { val, ILabel } from '../../common/objects/common';\nimport {tap, concat, map} from \"rxjs/operators\";\n\nimport * as _ from 'lodash';\n\n@Injectable()\n\nexport class PortalSettingsService {\n\n    private settings: any = {};\n    private configTypes : {[name:string] : IMetadataType};     \n\n    constructor( @Inject(MetadataService) private _metadataService: MetadataService, \n            @Inject(PortalService) private _portalService: PortalService, \n            @Inject(ConvertorService) private _convertor: ConvertorService, \n            private _alert : AlertService) {\n    }\n    \n    public save(): Observable<any> {\n\n        let convSettings = this._convertor.convertModelToSettings(this.settings);\n\n        // Languages should not be null\n        if (!convSettings.languageSettingsField)\n            convSettings.languageSettingsField = {};\n\n        if (!convSettings.languageSettingsField.languagesField)\n            convSettings.languageSettingsField.languagesField = [];\n\n        return this._portalService.saveSettings(convSettings).pipe(\n            tap(ps=> {\n                if(ps.IsSuccess) \n                    this._alert.success(<ILabel> {Name: \"PS_PSETTINGS_SAVED\", DefaultValue: \"Portal Settings are saved correctly.\"});\n            }));\n    }\n\n    public getSections() : Observable<SettingSection[]> {\n        return this._metadataService.loadType('config', 'PortalSettings').pipe(\n            tap( md => { this.configTypes = md;} ), \n            concat(this._portalService.getSettings()),\n            tap(sx=> {this.settings = this.convSettings(sx);}),\n            map(ss => this.sectionNames.map(sn=> new SettingSection(sn, this.configTypes))));\n    }\n\n    private convSettings(conf:any){\n        // response is a dictionary\n     \n        let cnvSettings = this._convertor.convertSettingsToModel(conf, 'config.portalsettings', this._metadataService);\n        let settings = {};\n        delete cnvSettings.__type;\n        \n        _.forEach(cnvSettings, (v, n) => {\n            if (v === undefined || v === null)\n                v = {};\n\n            if (v['name'])\n                v.__name = true;\n            else\n                v.name = n;\n            settings[n] = v;\n        });\n        return settings;\n    }\n\n    public getSectionData(s: SettingSection | string) : any {\n        if(typeof s == \"string\"){\n            return this._metadataService.AllSettings[s + \"Field\"];\n        }\n\n        return val(this.settings, (<SettingSection>s).name);\n    }\n\n    public getSettingsData() {\n        return this.settings;\n    }\n\n    private sectionNames = [\"Default\", \"Studio\", \"Domain\", \"Theme\", \"Language\", \"TimeZone\", \"CurrentCulture\", \n            \"Grid\", \"Search\", \"SmartScanning\", \"Caching\", \"Intelligence\", \"CDOForms\", \"ExportGroups\", \n            \"StatusMessage\", \"Template\", \"Appearance\"];            \n}\n\nexport class SettingSection{\n    public type: IMetadataType;\n    public name : string;\n\n    constructor( n: string, mdTypes: {[name:string] : IMetadataType}){\n        this.name = n.toLowerCase() + 'settings';\n        this.type = mdTypes && mdTypes[this.name];\n    }\n}","import { IElement, IUIDesigner, IUIComponentRef, StartPage, StudioSubjects, UpdatedInfo, PropertyUpdatedData, val, ILabel, DesignModes, LayoutActions, TopMenuState} from '../objects/common';\nimport { WorkspaceItem, IPropertyMetadata } from '../objects/viewModel';\nimport { LayoutCell, ICell, ICellItem } from '../../layout/design/objects/layoutCell';\nimport { HistoryLog, LogItem, ElementHistoryData, LayoutHistoryData, RecordCommand, HistoryObjectType, PropertyHistoryData, HistoryOperation, IHistory } from '../objects/historyLog';\nimport * as _ from 'lodash';\nimport { map } from 'rxjs/operators';\nimport { of, Observable } from 'rxjs';\nimport { PanelSettings } from '../../panel/panel';\nimport { LayoutManager } from '../../layout/design/objects/layoutManager';\nimport { Injectable } from \"@angular/core\";\n\nexport class CellVisitorContext {\n    owner: IElement;\n    data: any;\n    tabContainer: IElement;\n\n    constructor(_data: any = {}) {\n        this.data = _data;\n    }\n};\nexport declare type CellVisitor = (cell: LayoutCell, context: CellVisitorContext) => boolean;\n\nexport class ItemVisitorContext {\n    owner: IElement;\n    data: any;\n    tabContainer: IElement;\n\n    constructor(public searchingItem: any, _data: any = {}) {\n        this.data = _data;\n    }\n};\nexport declare type ItemVisitor = (container: IElement, context: ItemVisitorContext) => boolean;\n\n@Injectable()\nexport class StudioStateService {\n    public openedElements: IElement[];\n    public cachedWebparts: IUIDesigner[];\n    public webPartList : any;\n\n    public activeRootElement: any;\n    \n    public get activeElement(): any {return this.getRoot() && this.getRoot().__selectedElement ; }\n    public set activeElement(e: any) {if(this.getRoot())  this.getRoot().__selectedElement = e; }\n\n    public get activeWorkspace(): number { return this.activeRootElement && this.activeRootElement.__workspace !== undefined ? this.activeRootElement.__workspace : -1; }\n    public set activeWorkspace(ws: number) { this.activeRootElement.__workspace = ws; }\n\n    public panels: IUIComponentRef[] = [];\n    public displayCellPosition = false;\n\n    public hideStart: boolean;\n    public showSplash: boolean;\n\n    public subjects: StudioSubjects;\n    public elementInDesign: IElement;\n\n    private _checkedElements: { n: string, t: string }[];\n \n    get checkedElements(){ return this._checkedElements;}\n    set checkedElements(val){ this._checkedElements = val;}\n\n    private workspaces: WorkspaceItem[];\n    _alertService: any;\n\n    constructor() {\n        this.openedElements = [];\n        this.cachedWebparts = new Array();\n        this.hideStart = false;\n        this.showSplash = true;\n        this.subjects = new StudioSubjects();\n        this._checkedElements = [];\n\n        //setup startPage\n        let startPage = new StartPage('Start Page', 'StartPage');\n        this.addOpenedElement(startPage);\n    }\n\n    public checkAll(AllCheckedElements:any, items: any, doCheck: boolean, checkedSubj: any) {\n        let tempCheckedElements;\n        items.forEach(items => {\n                AllCheckedElements = items.map(el => <any>{ n: el.name, t: el.type });\n            if (doCheck){\n                tempCheckedElements = this._checkedElements;\n                 AllCheckedElements = AllCheckedElements.filter(function(el){\n                    return tempCheckedElements.findIndex((item) => item.n === el.n) === -1;\n                });\n\n                this._checkedElements = this._checkedElements.concat(AllCheckedElements);\n            }\n            else{   \n                let AllCheckedElements = items.map(el => <any>{ n: el.name, t: el.type });\n                this._checkedElements = this._checkedElements.filter( function(el) { \n                    return AllCheckedElements.findIndex( (item) => item.n === el.n) === -1;\n                }n            };\n            checkedSubj.next(this._checkedElements);\n        }); \n    }\n\n    public checkElement(el: IUIComponentRef, checkedSubj: any): void {\n            let foundIndex = this._checkedElements.findIndex(e => e.n == el.name && e.t == el.type);\n            if (foundIndex != -1)\n            this._checkedElements.splice(foundIndex, 1);\n            else\n            this._checkedElements.push({ n: el.name, t: el.type });\n            \n            checkedSubj.next(this._checkedElements);\n    }\n\n    public isChecked(name: string, type: string): boolean {\n        return this._checkedElements.findIndex(e => e.n == name && e.t == type) != -1;\n    }\n\n    public getRoot(): IUIDesigner {\n        return <IUIDesigner>(this.activeRootElement);\n    }\n\n    public addOpenedElement(element: IElement): void {\n        if (element !== undefined) {\n            if( this.isDesignedElement(element) && (element as IUIDesigner).scaleValue === undefined)\n                (element as IUIDesigner).scaleValue = 100;\n\n            this.openedElements = [...this.openedElements, element];\n            this.activateRootElement(element);\n            this.activateElement(element);\n        }\n    }\n\n    public activateElement(element: IElement): void {\n        const root = this.getRoot();\n        if( !element || !element.type ){\n            root.__selectedElement = null;\n        }\n\n        if( element ){\n            if( !(element.__maint || element.__unbound)){\n                this.refreshHowLong(root);                \n                let oldSelectedOwner = root.__selectedElement ? this.findOwnerOfElement(<IElement> root.__selectedElement) : null;\n                root.__selectedElement = element as IElement;\n                this.refreshElement(this.findOwnerOfElement(element));\n                if( oldSelectedOwner ){\n                    this.refreshElement(oldSelectedOwner);\n                }\n            }\n        }\n\n        this.refreshTopMenu();\n    }\n\n    public removeItem(el: IElement, owner:IElement = null){\n        const k = _.findKey(owner.items, w=> w.name == el.name);\n        if(k){\n            delete owner.items[k];\n            if( el.type.toLowerCase() == \"webpart\"){\n                owner.removedWebParts = owner.removedWebParts || [];\n                owner.removedWebParts.push(el.name);\n            }\n        }\n    }\n\n    public activateCell(cell: ICell): void {\n\n        if( !cell )\n            return;\n\n        this.getRoot().__selectedElement = cell;\n\n        this.subjects.propertyPanel.next(cell);\n        this.refreshTopMenu();\n    }\n\n    public updateLayoutMenu(layoutActions: LayoutActions[]){\n        this.subjects.layoutMenuUpdate.next(layoutActions);\n    }\n\n    public refreshElement(element: any){\n        if( !element || (element && element.isRoot) )\n            this.refreshRoot();\n        else\n            this.subjects.refresh.next(element);\n    }\n\n    public refreshControl(control: IElement){\n        const owner = this.findOwnerOfElement(control);\n        this.subjects.refresh.next(owner);\n    }\n\n    public propertyChanged(p: [any, any, IPropertyMetadata, any]){\n        // let newValue : any = p[0];\n        // let oldValue : any = p[1];\n        // let property : IPropertyMetadata = p[2];\n        let instance : any = p[3];\n        this.setDirty();\n        let owner = this.findOwnerOfElementOrCell(instance);\n        if(owner)\n            this.refreshElement(owner);\n        this.refreshTopMenu();\n    }\n\n    public refreshElementPanel(panelType: string){\n        this.subjects.refreshElementPanel.next(panelType);\n    }\n\n    public refreshHowLong(element): void {\n        if (element && this.activeRootElement === element) {\n            let properties = this.activeRootElement.properties;\n            if (properties && properties[\"lastModified\"]) {\n                let ms = Date.parse(properties[\"lastModified\"]);\n                if (ms > 0) {\n                    let diffMin = Math.floor((Date.now() - ms) / (1000 * 60));\n                    let days = Math.floor(diffMin / (60 * 24));\n                    let howLongValue = \"\";\n                    if (days > 0) {\n                        howLongValue = days + \" days, \";\n                        diffMin -= days * 60 * 24;\n                    }\n                    let hours = Math.floor(diffMin / 60);\n                    if (hours > 0) {\n                        howLongValue += hours + \" hours, \";\n                        diffMin -= hours * 60;\n                    }\n                    if (diffMin >= 0)\n                        howLongValue += diffMin + \" mins\";\n                    properties[\"howLong\"] = howLongValue;\n                }                \n            }            \n        }\n    }\n\n    public activateRootElement(element: IElement = null): boolean {\n        if( !element )\n            element = this.getRoot();\n\n        //only activate existing elements\n        let existingElement = this.openedElements.find(oe => oe == element);\n        if (existingElement && existingElement != this.activeRootElement) {\n\n            if (this.activeRootElement && this.activeRootElement.id == existingElement.id)\n                return false;\n\n            this.activeRootElement = existingElement;\n\n            if (!this.activeRootElement.__designMode)\n                this.activeRootElement.__designMode = DesignModes.Controls;\n\n            return true;\n        }\n        return false;\n    }\n\n    public activateExistingOpenedElement(elementName: string): IElement {\n        var len = this.openedElements.length;\n        for (var i = 0; i < len; i++)\n            if (this.openedElements[i].name === elementName) {\n                this.activateRootElement(this.openedElements[i]);\n                return this.openedElements[i];\n            }\n        return null;\n    }\n\n    public replaceRoot(e:IUIDesigner){\n        let existingElementIndex =  this.openedElements.findIndex( oe => oe.name == e.name);\n        if( existingElementIndex != -1 ){\n            this.openedElements[existingElementIndex] = e;\n        }\n    }\n\n    public updatePropertyPanel(ref : any){\n        this.subjects.propertyPanel.next(ref);\n    }\n\n    public searchPanelText(panel:PanelSettings, txt: string){\n        panel.searchInput.next(txt);\n    }\n\n    public refreshRoot(displayMode?:DesignModes){\n        let r = this.getRoot();\n        this.subjects.refreshRoot.next(displayMode || r.__designMode);\n        if( r.type == \"Webpart\" )\n            this.subjects.refresh.next(<any>r);\n    }\n\n    public setDirty() {\n        this.getRoot().isDirty = true;\n        this.refreshTopMenu();    // just refresh the action menu\n    }\n\n    public layoutCommand(cmd:LayoutActions){\n        const layoutManager: LayoutManager = this.elementInDesign && this.elementInDesign.__layoutManager;\n        if( layoutManager ){\n            layoutManager.executeCommand(cmd);            \n            this.setDirty();\n            this.refreshElement(this.elementInDesign);\n        }\n    }\n\n    public selectCell(cell: LayoutCell){\n        let cellOwner = this.findCellOwner(cell);\n        if (cellOwner && cellOwner['__type'] == 'TabDefinition') {\n            cellOwner = this.findCellTabContainer(cell);\n        }\n        \n        if (cellOwner) {\n            if(this.elementInDesign && this.elementInDesign != cellOwner){\n                // clear old selecton\n                this.elementInDesign.__layoutManager.clearSelection();\n            }\n            this.elementInDesign = cellOwner;\n            let layoutManager: LayoutManager = cellOwner.__layoutManager;\n            if( layoutManager.selectCell(cell)){\n                this.activateCell(cell);\n                this.updateLayoutMenu(layoutManager.getCommands());\n            }            \n        }\n    }\n\n    public replaceElement(oldElement: IElement, newElement: IElement): void {\n        let index = _.findIndex(this.openedElements, ['name', newElement.name]);\n        if (index > -1) {\n            this.openedElements[index] = newElement;\n            this.activateRootElement(newElement);\n        }\n    }\n\n    public removeOpenedElement(element: IElement): void {\n        let index = this.openedElements.indexOf(element);\n        if (index > -1) {\n            //Remove from openedElements\n            this.openedElements.splice(index, 1);\n\n            //Reset Active Elements \n            if (this.openedElements.length > 0) {\n                let newElement = this.openedElements[this.openedElements.length - 1]\n                this.activateRootElement(newElement);\n                this.activateElement(newElement);\n            }\n            else {\n                this.activateElement(null);\n                this.activeRootElement = null;\n            }\n        }\n    }\n\n    public getUniqueName(name: string, items: any, nameKey: string = \"name\") : string {\n        let txt: string = name;\n        let index: number = 0;\n\n        // find digital tail of existing name\n        let rx = /(\\d+)(?!.*\\d)/.exec(name);\n        if(rx){\n            txt = name.substr(0, rx.index);\n            index = parseInt(rx[0]);\n        }\n\n        while(_.some(items, it => val(it, nameKey) === name)){\n            name = txt + (index++).toString();            \n        }\n\n        return name;\n    }\n\n    //Edit Element Methods        \n    public addElement(newElement: any, cell: LayoutCell | ICell): boolean {\n        let cellOwner = newElement.type == \"Webpart\" ? this.activeRootElement : this.findCellOwner(cell);\n        if (!cellOwner)\n            return false;\n        let newName = this.getUniqueName(newElement.name, cellOwner.items);\n        newElement.name = newName;\n        if(newElement.properties)\n            newElement.properties.name = newName;\n\n        cellOwner.items = cellOwner.items || {};\n        cellOwner.items[newElement.id] = newElement;\n\n        if( newElement.type == \"Webpart\"){\n            // Add items from the added element to the root\n            _.filter(newElement.items, it => !_.isEmpty(it.items))\n                .forEach(w=>cellOwner.items[w.id] = w);\n        }\n        \n        let cellItem: ICell = cell;\n        if (cell.cell)\n            cellItem = cell.cell;\n\n        // add reference to the cell items\n        cellItem.items = cellItem.items || {};        \n      let nextKey=  this.generateNewIndex(cellItem)\n\n        cellItem.items[nextKey] = \n            <ICellItem> {\n                _ref: true, \n                id: newElement.id, \n                name: newElement.name, \n                type: newElement.type.toLowerCase()  \n            };            \n        cellItem.isEmpty = false;\n\n        this.setDirty();\n     \n        return true;\n    }\n\n    public replaceWebpart(old: IElement, wp: IElement){\n        let owner = this.findOwnerOfElement(old);\n        let el = owner.items[old.id];\n\n        // replace exising\n        el.items = wp.items;\n        el.properties = wp.properties;\n        el.layout = wp.layout;\n        el.typeName = wp.typeName;                \n    }\n\n    public changeElementName(newName: string): void {\n        // If the name of page or webpart changed the name in the tab will not be changed until saving\n        if (this.activeElement != this.activeRootElement) {\n            // Sync changes in references\n            let cont: CellVisitorContext = new CellVisitorContext({ oldName: this.activeElement.name, newName: newName });\n            let vis: CellVisitor = (cell: LayoutCell, context: CellVisitorContext) => {\n                let stop = false;\n                _.forEach(cell.items, it => {\n                    if (it.name == cont.data.oldName) {\n                        it.name = cont.data.newName;\n                        stop = true;\n                    }\n                });\n                return stop;\n            };\n            this.cellIterator(this.activeRootElement, vis, cont);\n            this.activeElement[\"name\"] = newName;\n\n            this.subjects.nameChanged.next(newName);\n        }\n    }\n\n    public historyDo(op: HistoryOperation): Promise<UpdatedInfo> {\n        let upd = new UpdatedInfo();\n        let cell: LayoutCell;\n        let hist: HistoryLog = this.activeRootElement.history;\n        let item: LogItem = hist.pop(op);\n        if (item) {\n            let oType = item.specificData.objectType;\n            if (oType == HistoryObjectType.Control || oType == HistoryObjectType.Webpart) {\n                let data = <ElementHistoryData>(item.specificData);\n                let itemCmd = item.command;\n                if (op == HistoryOperation.redo) {\n                    // swap operation opposite\n                    if (itemCmd == RecordCommand.add)\n                        itemCmd = RecordCommand.remove;\n                    else if (itemCmd == RecordCommand.remove)\n                        itemCmd = RecordCommand.add;                    \n                }\n                let owner : IElement;\n                switch (itemCmd) {          \n                    case RecordCommand.remove:\n                        // The element should be added back to the cell\n                        cell = this.findCellById(this.activeRootElement, data.cellId);\n                        if (cell){\n                            this.addElement(data.element, cell);\n                            owner = this.findOwnerOfElementOrCell(cell);\n                        }\n                        break;\n                    case RecordCommand.add:\n                        // The element should be removed from the cell\n                        owner = this.findOwnerOfElementOrCell(data.element);\n                        this.removeElement(data.element);\n                        break;\n                    case RecordCommand.move:\n                        // The element should be moved from the cell to fromCell\n                        cell = this.findCellById(this.activeRootElement, op == HistoryOperation.undo ? data.fromCellId : data.cellId);\n                        if (cell){\n                            this.moveElement(data.element, cell);\n                            owner = this.findOwnerOfElement(data.element);\n                        }\n                        break;\n                    case RecordCommand.replace:\n                        if( op == HistoryOperation.undo)\n                            this.replaceWebpart(data.element, data.oldElement);\n                        else\n                            this.replaceWebpart(data.oldElement, data.element);\n                        break;\n                }\n                if( owner )\n                    this.refreshElement(owner);\n                else\n                    this.refreshRoot();\n            }\n            else if (oType == HistoryObjectType.Layout) {\n                let data = <LayoutHistoryData>(item.specificData);\n                data.layoutOwner.layout.tableCells = op == HistoryOperation.undo ? data.layoutBefore : data.layoutAfter;\n                this.refreshRoot();\n            }\n            else if (oType == HistoryObjectType.Property) {\n                let data = <PropertyHistoryData>(item.specificData);\n                if (item.command == RecordCommand.propertyChange) {\n                    // restore value\n                    let vals = op == HistoryOperation.undo ? data.oldValues : data.newValues;\n                    _.forEach(vals, (v, propertyName: string) => {\n                        propertyName = propertyName.toLowerCase();\n                        let properties = data.instance.properties || data.instance;\n                        let pk = _.findKey(properties, (v, k: string) => k.toLowerCase() == propertyName) || propertyName;\n                        upd.data = new PropertyUpdatedData(v, properties[pk], pk);\n                        properties[pk] = v;\n                    });\n                    this.selectItem(data.instance);\n                }\n            }\n        }\n\n        return Promise.resolve<UpdatedInfo>(upd);\n    }\n\n    public selectItem(item){\n        this.subjects.propertyPanel.next(item);\n    }\n\n    public cellIterator(cellOwner: IElement, visitor: CellVisitor, context: CellVisitorContext): boolean {\n        let stop = false;\n\n        if (!cellOwner.isReference && cellOwner.layout && cellOwner.layout.tableCells) {\n            _.forEach(cellOwner.layout.tableCells, rows => {\n                if (stop) return false;\n\n                _.forEach(rows, cell => {\n                    if (stop) return false;\n\n                    context.owner = cellOwner;\n                    stop = visitor(cell, context);\n                    if (stop) return false;\n                        \n                    _.forEach(cell.items, it => {\n                        if (stop) return false;\n                        if (it.layout) {\n                            stop = this.cellIterator(it, visitor, context);\n                            if (stop) return false;                                \n                        }                    \n\n                        let item = it;\n                        if (it._ref === true) {\n                            if (it.type == \"webpart\")\n                                item = _.find<IElement>(this.activeRootElement.items, i => i.name == it.name);\n                            else\n                                item = _.find<IElement>(cellOwner.items, i => i.name == it.name);\n\n                            if (!item) \n                                console.warn(it.name + ' is not found ', it);                                \n                        }\n                        if (item) {\n                            if (item.properties && item.properties.tabDefinitions) {\n                                context.tabContainer = item;\n                                _.forEach(item.properties.tabDefinitions, tab => {\n                                    stop = this.cellIterator(tab, visitor, context);\n                                    if (stop)\n                                        return false;\n                                });\n                            }\n                            else if (item.layout) {\n                                stop = this.cellIterator(item, visitor, context);\n                                if (stop) return false;\n                            }\n                        }\n                    });\n                });\n            });\n        }\n        return stop;\n    }\n\n    public itemIterator(itemContainer: IElement, visitor: ItemVisitor, context: ItemVisitorContext): boolean {\n        let stop = false;\n\n        if (itemContainer.items) {\n            stop = visitor(itemContainer, context);\n            if (stop) return true;\n\n            _.forEach(itemContainer.items, (item) => {\n                stop = this.itemIterator(item, visitor, context);\n                if (stop) return false;\n            });\n        }\n        return stop;\n    }\n\n    public findOwnerOfItem(el: IElement): IElement {\n\n        let visitor: ItemVisitor = (container: IElement, context: ItemVisitorContext): boolean => {\n            if (_.findKey(container.items, it => it == context.searchingItem)) {\n                context.data.found = container;\n                return true;       // stop iteration\n            }\n            return false; // continue iterating\n        };\n\n        let visitorContext = new ItemVisitorContext(el, { found: null });\n        if (this.itemIterator(this.activeRootElement, visitor, visitorContext))\n            return visitorContext.data.found;\n\n        return undefined;\n\n    }\n\n    public findItemByName(itemName : string): IElement {\n\n        let visitor: ItemVisitor = (container: IElement, context: ItemVisitorContext): boolean => {\n            let v = _.find(container.items, it => it.name == context.searchingItem)\n            if (v) {\n                context.data.found = v;\n                return true;       // stop iteration\n            }\n            return false; // continue iterating\n        };\n\n        let visitorContext = new ItemVisitorContext(itemName, { found: null });\n        if (this.itemIterator(this.activeRootElement, visitor, visitorContext))\n            return visitorContext.data.found;\n\n        return undefined;\n    }\n\n    public findChildElement(name: string, cellId?: string) : IElement {\n        let cell = this.findCellById(this.activeRootElement, cellId);\n        if( cell ){\n            let owner = this.findCellOwner(cell); // owner = webpart or page\n            if( owner )\n                return _.find(owner.items, c=> c.name == name);\n        }\n\n        return null;\n    }\n\n    public removeElement(element: IElement) {\n        //remove element from items list\n        let cell = this.findCellByElement(element);\n        let cellOwner = this.findCellOwner(cell);\n        let removed = false;\n        const lm = cellOwner.__layoutManager;        \n        \n        if( lm ){\n            removed = lm.removeCellItem(cell, element);\n            if( removed ) \n                this.removeItem(element, cellOwner);\n        }            \n    }\n\n    public removeElementFromCell(el?: IElement, action?:string){\n        el = el || this.activeElement;\n        let cell = this.findCellByElement(el);\n        let owner = this.findCellOwner(cell);\n\n        let removed = false;\n        const lm = owner.__layoutManager;        \n        if( lm ){\n            removed = lm.removeCellItem(cell, el);\n            if( removed ) \n                this.removeItem(el, owner);\n        }\n\n        this.getRoot().isDirty = removed;\n        if (removed) {\n            this.setDirty();\n\n            if(action !== \"move\"){\n                let hr = new ElementHistoryData(this.activeElement.type == 'Control' ? HistoryObjectType.Control : HistoryObjectType.Webpart);\n                hr.cellId = cell.id;\n                hr.element = this.activeElement;\n                this.writeHistory(RecordCommand.remove, hr);\n            }\n          \n            this.activateElement(owner);\n            this.refreshElement(owner);        \n            this.refreshTopMenu(); \n        }\n\n        return removed;\n    }\n\n    public moveElement(sourceElement: IElement, targetCell: LayoutCell, sourceCell?: LayoutCell, sourceOwner? : IElement, copyEl?: IElement ): boolean {\n        let ret = false;\n        if (sourceElement) {\n            sourceCell = sourceCell || this.findCellByElement(sourceElement);\n            sourceOwner = sourceOwner || this.findCellOwner(sourceCell);\n            let targetOwner = this.findCellOwner(targetCell);\n            if(sourceOwner.name == targetOwner.name ){\n                // move item in the same owner\n                const k = _.findKey(sourceCell.items, i=> i.name == sourceElement.name);\n                if(k && copyEl===undefined){\n                    let ref = sourceCell.items[k];\n                   delete sourceCell.items[k];\n                    if(!targetCell.items)\n                        targetCell.items = {};\n                    let nextKey=  this.generateNewIndex(targetCell)\n                    targetCell.items[nextKey] = ref;\n                    // add  to history !!!\n                }\n                if (copyEl) {\n                    this.addElement(copyEl, targetCell);\n                }   \n            }\n            else{\n                if( copyEl===undefined && this.removeElementFromCell(sourceElement, \"move\")){             \n                    this.addElement(sourceElement, targetCell); \n               }\n               else{\n                    this.addElement(copyEl, targetCell);\n               }               \n            }\n\n        if (sourceElement == this.activeElement)\n              this.activateElement(null);\n              ret = true;         \n        }\n\n        if( !ret )\n            window.alert(\"Move failed. Source item is not found.\");\n\n        return ret;\n    }\n    \n    public generateNewIndex(cell:any): number {\n        let keysOfItems = Object.keys(cell.items);\n        let nextKey = keysOfItems.length;\n        while(keysOfItems.includes(nextKey + \"\")){\n            nextKey = nextKey + 1;\n        }\n\n        return nextKey\n    }\n\n    public getRefWebpartsFromState(elementName: string): IUIDesigner {\n        let wp = this.cachedWebparts.find(ref => ref.name == elementName);\n        return wp ? _.cloneDeep(wp) : null;\n    }\n\n    public storeRefWebpart(element:IUIDesigner) {\n        const elementName = element.name;\n        if( !this.getRefWebpartsFromState(elementName)){\n            this.cachedWebparts = [...this.cachedWebparts, element];\n        }\n    }\n\n    public findCellOwner(cell: any): IElement {\n        return this.findElementByCellId(this.activeRootElement, cell.id);\n    }\n\n    public findCellTabContainer(cell: any): IElement {\n        return this.findElementByCellId(this.activeRootElement, cell.id, true);\n    }\n\n    public findCellByElement(element: IElement): LayoutCell {\n\n        let visitor: CellVisitor = (cell: LayoutCell, context: CellVisitorContext): boolean => {\n            let elName = context.data.elementName;\n            if (_.find(cell.items, it => it.name == elName)) {\n                context.data.found = cell;\n                return true;       // stop iteration\n            }\n            return false; // continue iterating\n        };\n\n        let visitorContext = new CellVisitorContext({ 'elementName': element.name, found: null });\n        if (this.cellIterator(this.activeRootElement, visitor, visitorContext))\n            return visitorContext.data.found;\n\n        return undefined;\n    }\n\n    public findOwnerOfElementOrCell(element: IElement | ICell | LayoutCell): any {\n        let e = element as any;\n        if( e.__type === \"GridLayoutCell\"){\n            return this.findCellOwner((e as LayoutCell).cell);\n        }\n        else if(e.type === \"cell\"){\n            return this.findCellOwner(e as ICell);\n        }\n        else{\n            return this.findOwnerOfElement(<IElement>element);\n        }\n    }\n        \n    public findOwnerOfElement(element: IElement): any {\n\n        let visitor: CellVisitor = (cell: LayoutCell, context: CellVisitorContext): boolean => {\n            let elName = context.data.elementName;\n            if (_.find(cell.items, it => it.name == elName)) {\n                context.data.found = context.owner;\n                return true;       // stop iteration\n            }\n            return false; // continue iterating\n        };\n\n        let visitorContext = new CellVisitorContext({ 'elementName': element.name, found: null });\n        if (this.cellIterator(this.activeRootElement, visitor, visitorContext))\n            return visitorContext.data.found;\n\n        return undefined;\n    }\n\n    public isControlNameUnique(cell: any, name: string, owner?: IElement): boolean {\n        let isUnique = true;\n        owner = owner || this.findCellOwner(cell);\n        if (owner && owner.items)\n            isUnique = !_.some(owner.items, it => it[\"name\"] == name);\n        return isUnique;\n    }\n\n    private findElementByCellId(element: any, cellId: string, isTabContainer = false): any {\n\n        let visitor: CellVisitor = (cell: LayoutCell, context: CellVisitorContext): boolean => {\n            if (cell.id == context.data.cellId) {\n                context.data.found = !isTabContainer ? context.owner : context.tabContainer;\n                return true;       // stop iteration\n            }\n\n            return false; // continue iterating\n        };\n\n        let visitorContext = new CellVisitorContext({ 'cellId': cellId, found: null });\n        if (this.cellIterator(element, visitor, visitorContext))\n            return visitorContext.data.found;       \n                \n        return undefined;\n    }\n\n    public findCellById(element: any, cellId: string): LayoutCell {\n\n        let visitor: CellVisitor = (cell: LayoutCell, context: CellVisitorContext): boolean => {\n            if (cell.id == context.data.cellId) {\n                context.data.found = cell;\n                return true;       // stop iteration\n            }\n            return false; // continue iterating\n        };\n\n        let visitorContext = new CellVisitorContext({ 'cellId': cellId, found: null });\n        if (this.cellIterator(element, visitor, visitorContext))\n            return visitorContext.data.found;\n\n        return undefined;\n    }\n\n    public getObjPath(o: any, so: any, stack: string[]): boolean{\n        let found = false;\n        if( so == o)\n            return true;\n        \n        if(typeof so != \"undefined\" && so != null && typeof so == \"object\"){\n            _.forEach( so, (v, k:any) => {\n                if( _.isNumber(k) )\n                    k = k.toString();\n                if( !k.startsWith(\"__\") && typeof v != \"undefined\" && v != null && typeof v == \"object\") {\n                    stack.push(k);\n                    if(this.getObjPath(o, v, stack) ){\n                        // found\n                        found = true; \n                        return false;\n                    }\n                    stack.pop();\n                    // continue searching\n                    return true;\n                }\n            });\n        }\n        return found;\n    }\n\n    public refreshTopMenu(menu?: TopMenuState): void {\n        if( menu )\n            this.getRoot().__topMenu = menu;\n        this.subjects.menu.next(this.getRoot().__topMenu);\n    }\n\n    setComponentRef(element: IUIDesigner): void {\n        if (element.type && this.panels) {\n            for (let el of this.panels) {\n                if (el.name === element.name && el.type === element.type) {\n                    element.componentRef = el;\n                    break;\n                }\n            }\n        }\n    }\n\n    removeComponentRef(componentRef: IUIComponentRef) {\n        if (componentRef && this.panels) {\n            let index = this.panels.indexOf(componentRef);\n            if (index > -1)\n                this.panels.splice(index, 1); // remove item\n        }\n    }\n\n    public addOrUpdateComponentRef(componentRef: IUIComponentRef) {\n        if (componentRef) {\n            let type = componentRef.type;\n            if (this.panels) {\n                let index = this.panels.map(item => { return (item.type === type) ? item.name : \"\" }).indexOf(componentRef.name);\n                if (index > -1) // update\n                    this.panels[index] = componentRef;\n                else // add\n                    this.panels.push(componentRef);\n            }\n        }\n    }\n\n    public renameComponentRef(componentRef: IUIComponentRef, oldName: string) {\n        if (componentRef) {\n            let type = componentRef.type;\n            if (this.panels) {\n                let index = this.panels.map(item => { return (item.type === type) ? item.name : \"\" }).indexOf(oldName);\n                if (index > -1) // update\n                    this.panels[index] = componentRef;\n            }\n        }\n    }\n\n    public getCustomWorkspaceColor(): string {\n        let color: string;\n        let rootWs: number = this.activeRootElement ? this.activeRootElement['__workspace'] : 0;\n        if (rootWs != 0) {\n            let ws = _.find(this.workspaces, w => w.ID == rootWs);\n            if (ws) \n                color = ws.Color;            \n        }\n        return color;\n    }\n\n    public isModelingBehavior() {\n        if (this.activeRootElement)\n            return !_.isEmpty(this.activeRootElement.__maint);\n\n        return false;\n    }\n    public getWorkspaceCodeById(workspace: number): string {\n        let wsCode = '';\n        if (workspace != -1) {\n            let ws = _.find(this.workspaces, w => w.ID == workspace);\n            if (ws)\n                wsCode = ws.Code;\n        }\n        return wsCode;\n    }\n    public isDesignedElement(element: IElement){\n        return [\"page\", \"webpart\", \"pageflow\"].findIndex(e=> (element.type || \"\").toLowerCase() == e) != -1;\n    }\n    public findElement(path: string, parent?: IElement): IElement {\n\n        if (!path)\n            return null;\n\n        let el: IElement = null;\n\n        if (parent === undefined)\n            parent = this.getRoot();\n\n        let pathParts = path.split('.');\n        let parentItem: IElement;\n        if (parent['isRoot'] && parent.type == 'Webpart')\n            parentItem = parent;\n        else\n            parentItem = _.find(parent.items, (it: IElement) => it.name == pathParts[0]);\n\n        if (parentItem) {\n            if (pathParts.length > 1)\n                el = _.find(parentItem.items, (it: IElement) => it.name == pathParts[1]);\n            else\n                el = parentItem;\n\n            if( pathParts.length > 2 ){\n                parentItem = el;\n                el = _.find(parentItem.items, (it: IElement) => it.name == pathParts[2]);\n            }\n        }\n        return el;\n    }\n\n    public findElementOwner(startElement: IElement, el: IElement): IElement {\n\n        let found: IElement = null;\n\n        if (startElement.items) {\n            _.forEach(startElement.items, (it) => {\n                if (!found) {\n                    if (it == el) {\n                        found = startElement;\n                    }\n                    else {\n                        if (it.items)\n                            found = this.findElementOwner(it, el);\n                    }\n                }\n            });\n        }\n        return found;\n    }\n\n    public getPrimaryService(el?: any): string {\n        if (el == undefined)\n            el = this.activeRootElement;\n        let ps: string = '';\n\n        if (el.properties && el.properties.primaryServiceType) {\n            return el.properties.primaryServiceType;\n        }\n\n        if (el.type == 'Webpart' && el.items) {\n            _.forEach(el.items, e => {\n                if (!ps) {\n                    ps = this.getPrimaryService(e);\n                }\n            });\n        }\n\n        return ps;\n    }\n\n    public writeHistory(rc: RecordCommand, hItem: IHistory): void {\n        let r = this.getRoot();\n        if (r) {\n            if (!r.history)\n                r.history = new HistoryLog();\n            r.history.recordHistoryItem(rc, hItem);\n        }\n    }\n\n    public isNameValid(name: string, instance: any) : Observable<boolean> {\n        let exist = false;\n        if(instance && instance.type){\n            let owner: IElement;\n            if(instance.type == \"Control\")\n                owner = this.findOwnerOfItem(this.activeElement);\n            else if(instance.type == \"Webpart\")\n                owner = this.activeRootElement;\n            else if(instance.type == \"Page\")\n                owner = null;\n            else{\n                console.error('validate name - unknown type', instance);\n            }\n\n            if( owner ){\n                if( _.find(owner.items, v => v.name == name && v.id != this.activeElement.id))\n                    exist = true;\n            }\n        }\n\n        if( exist ){\n            let err : ILabel = {\n                Name: 'PS_NAME_EXISTS_ERROR',\n                DefaultValue: '{0} with name {1} already exists. Changes are discarded.',\n                arguments:[instance.type, name]\n            };\n            return this._alertService.errorModal(err)\n                .pipe(map(d => false));           // always returns False - regardless of pressed button on the popup alert\n        }\n\n        return of(!exist);\n    }\n\n    public renameLayoutRefs(instance: any, oldname: string, newname: string) {\n        let owner: IElement;\n        if(instance.type === \"Control\")\n            owner = this.findOwnerOfItem(this.activeElement);\n        else if(instance.type === \"Webpart\")\n            owner = this.findOwnerOfElement(instance);\n\n        if( owner ){\n            let lm = owner.__layoutManager;\n            if( lm ){\n                lm.renameLayoutRefs(oldname, newname);\n            }\n            else{\n                console.log(\"no layout\", oldname);\n            }\n        }\n    }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {map} from \"rxjs/operators\";\n\nimport { IUIComponentRef, IUserProfile, IResultStatus, IInfo, IRecordSet, IResponse, DirectAccessSubmitResult, UIComponentRef } from '../objects/common';\nimport { AlertService } from '../../alert/alert.service';\n\nimport { environment } from '../../../environments/environment';\nimport * as _ from 'lodash';\n\n@Injectable()\nexport class WCFService {\n    private _headers = {headers: null};\n    userProfile: IUserProfile;\n\n    static selValeCache: { [name: string]: IRecordSet } = {};\n\n    constructor( @Inject(HttpClient) private _http: HttpClient, @Inject(AlertService) private _alertService: AlertService) {\n    }\n\n    //setAuthorization - sets authorization header security credentials after user is verified   \n    public setAuthorization(authorizationHeader: string): void {\n        this._headers.headers = new HttpHeaders({\"Content-Type\": \"application/json\"});\n        // parse auth header \n        let ph = authorizationHeader.substr('Bearer '.length).split(';');\n        // Name;SessionID;UTCOffset\n        this.userProfile = <IUserProfile>{\n            Name: ph[0],\n            SessionID: { IsEncrypted: true, Value: ph[1] },\n            UTCOffset: ph[2]\n        };\n    }\n\n    public getSelectionValues(svc: string, field: string, force: boolean = false): Observable<IRecordSet> {\n\n        if (!force) {\n            // check the cache\n            let rs = WCFService.selValeCache[svc];\n            if (rs) {\n                let rs = WCFService.selValeCache[svc];\n                return new Observable<IRecordSet>((s) => { s.next(rs); s.complete(); });\n            }\n        }\n\n        var inf: IInfo = <IInfo>{\n            RequestSelectionValues: true,\n            RequestSelectionValuesInfo: {\n                Parameters: [\n                    { Name: 'NameFilter', Value: '%' },\n                    { Name: 'SpecificTypeOnly', Value: 0 },\n                    { Name: 'WorkspaceCode', Value: environment.workspace }\n                ]\n            }\n        };\n\n        var infoData = {};\n        infoData[(svc + \"_Info_\" + field)] = inf;\n\n        return this.getData(svc, \"GetEnvironment\", { Info: infoData })\n            .pipe( map((r: IResponse) => {\n                if( r ){\n                    let rs = <IRecordSet>(r.Environment[svc + \"_Environment_\" + field].SelectionValues);\n                    WCFService.selValeCache[svc] = rs;\n                    return rs;\n                }\n                else{\n                    return null;\n                }\n            }));\n    }\n\n    private getData(svc: string, operation: string, requestData: any): Observable<IResponse> {\n\n        let rqData = {\n            userProfile: this.userProfile,\n            request: requestData\n        };\n\n        return this._http.post<any>(this.getUrl(svc, operation), JSON.stringify(rqData), this._headers)\n            .pipe(map( resp => {\n                let status = <IResultStatus>resp[operation + \"Result\"];\n                if (status.IsSuccess) {\n                    return resp.result;\n                }\n                else {\n                    this.alertError(status);\n                    return null;\n                }\n            }));\n    }\n\n    public getElementRefs(cdo: string, type: string, force?: boolean): Observable<IUIComponentRef[]> {\n        return this.getSelectionValues(cdo, 'ObjectListInquiry', force)\n            .pipe(map((env: IRecordSet) => {\n                let refs = (env.Rows || []).map(r => UIComponentRef.fromSelectionValueRow(r.Values, env.Headers, type ) );\n                return refs;\n            }));\n    }\n\n    public getElement(name: string, svc: string): Observable<any> {\n        if (!name) {\n            // create new empty object\n            let cdoType = this.getCDOTypeName(svc);\n            let cdoName =  cdoType == \"ActionDef\"? \"PageAction\" : cdoType;\n            name = cdoName + '-' + new Date().getMilliseconds().toString(); // new name\n            let res = { __type: this.getCDOTypeName(svc) + \"Changes\" };\n            res[cdoType + \"Changes_Name\"] = name;\n\n            return new Observable<any>(subscriber => subscriber.next(res));\n        }\n\n        return this.loadNDOInstance(name, svc)\n            .pipe(map((ndo: any) => ndo));\n    }\n\n    public loadNDOInstance(name: string, svc: string): Observable<any> {\n        var infoData = {};\n        infoData[(svc + \"_Info_\" + \"ObjectChanges\")] = <IInfo>{\n            RequestValue: true\n        };\n\n        let rqData = {\n            userProfile: this.userProfile,\n            request: { Info: infoData }\n        };\n\n        let cdo = _.camelCase(svc);\n        rqData[cdo] = {};\n        let maint = rqData[cdo];\n        maint[svc + '_ObjectToChange'] = { 'Name': name };\n\n        let operation = \"Load\";\n\n        return this._http.post<any>(this.getUrl(svc, operation), JSON.stringify(rqData), this._headers)\n            .pipe(map((resp: any) => {\n                let status = <IResultStatus>resp[operation + \"Result\"];\n                if (status.IsSuccess) {\n                    return resp.result.Value[svc + '_ObjectChanges'];\n                }\n                else {\n                    this.alertError(status);\n                    return null;\n                }\n            }));\n    }\n\n    public saveNDOInstance(name: string, svc: string, changes: any): Observable<any> {\n\n        let isNew: boolean = changes.__new !== undefined;\n\n        let maint = {};\n        maint[svc + '_ObjectToChange'] = { 'Name': name };\n\n        let methods = [\n            {\n                ServiceMethod: 3,   // Load\n                Cdo: maint\n            },\n            {\n                ServiceMethod: 9,   // execute\n                Cdo: changes\n            }\n        ];\n\n        if (isNew) {\n            methods[0].ServiceMethod = 5;       // new\n            methods[0].Cdo = undefined;\n        }\n\n        let rqData = {\n            userProfile: this.userProfile,\n            methods: methods\n        };\n\n        let operation = \"CommitTransaction\";\n        return this._http.post<any>(this.getUrl(svc, operation), JSON.stringify(rqData), this._headers)\n            .pipe(map((response: any) => {\n                let status = <IResultStatus>response[operation + \"Result\"];\n                if (status.IsSuccess) {\n                    return status;\n                }\n                else {\n                    this.alertError(status);\n                    return null;\n                }\n            }));\n    }\n\n    public deleteMaint(name: string, svc: string): Observable<IResultStatus> {\n\n        let maint = {};\n        maint[svc + '_ObjectToChange'] = { 'Name': name };\n\n        let methods = [\n            { \n                ServiceMethod: 0,   // delete\n                Cdo: maint\n            },\n            {\n                ServiceMethod: 9   // execute\n            }\n        ];\n\n        let rqData = {\n            userProfile: this.userProfile,\n            methods: methods\n        };\n\n        return this._http.post<IResultStatus>(this.getUrl(svc, \"CommitTransaction\"), JSON.stringify(rqData), this._headers);\n    }\n\n    public directAccessSubmit(request: string, debugRequest?: any): Observable<DirectAccessSubmitResult> {\n        let rqData = {\n            userProfile: this.userProfile,\n            inputXml: request\n        };\n\n        if (debugRequest)\n            rqData.userProfile.DebugRequest = debugRequest;\n\n        let operation = \"Submit\";\n\n        return this._http.post<any>(this.getUrl(\"DirectAccess\", operation), JSON.stringify(rqData), this._headers)\n            .pipe(map((resp: any) => {\n                let status = <IResultStatus>resp[operation + \"SubmitResult\"];\n                return <DirectAccessSubmitResult>{ result: status, response: resp.outputXml };\n            }));\n    }\n\n    private getUrl(svc: string, operation: string): string {\n        return environment.wcfUrl + '/' + svc + 'Service.svc/web/' + operation;\n    }\n\n    private getCDOTypeName(svc: string): string {\n        let res = svc;\n        if (svc.endsWith(\"Maint\"))\n            res = svc.substr(0, svc.length - \"Maint\".length);\n\n        if (svc == \"ActionMaint\")\n            res = \"ActionDef\";\n\n        return res;\n    }\n\n    // private handleError(error: Response) {\n\n    //     let err;\n    //     if (_.isFunction(error.json))\n    //         err = error.json().error || 'Server error';\n    //     else\n    //         err = 'Server error';\n\n    //     this.alertError(status);\n\n    //     return Observable.throw(err);\n    // }\n\n    private alertError(status: any) {\n        this._alertService.error(status);\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'csi-app',\n    template: '<router-outlet></router-outlet>'\n})\n\nexport class AppComponent {}","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { LocalService } from '../common/services/local.service';\nimport { PortalService } from '../common/services/portal.service';\nimport { WCFService } from '../common/services/wcf.service';\n\nimport { AppComponent } from './app/app.component';\n\nimport { Routing } from './routing';\nimport { StudioStateService } from '../common/services/studioStateService';\n\nexport const COMPONENTS = [\n    AppComponent,\n]\n\n@NgModule({\n    imports: [\n        CommonModule,\n        HttpClientModule,\n        MatDialogModule,\n        BrowserAnimationsModule,\n        Routing,\n    ],\n    exports: [\n        COMPONENTS,\n    ],\n    declarations: COMPONENTS,\n    providers: [\n        LocalService,\n        PortalService,\n        StudioStateService,\n        WCFService\n    ]\n})\n\nexport class CoreModule {\n    constructor( @Optional() @SkipSelf() parentModule: CoreModule) {\n        if (parentModule) {\n            throw new Error(\n                'CoreModule is already loaded. Import it in the AppModule only');\n        }\n    }\n}\n\n","export * from './core.module';","import { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule, ExtraOptions } from '@angular/router';\r\n\r\nimport { StartComponent } from '../authorization/start.component';\r\nimport { StudioComponent } from '../studio/studio.component';\r\n\r\nconst initRoutes: Routes = [\r\n    { path: 'studio', component: StudioComponent },\r\n    { path: '', component: StartComponent, pathMatch: 'prefix' },\r\n    { path: '**', component: StartComponent}\r\n];\r\n\r\nconst appRoutes: Routes = [\r\n    ...initRoutes\r\n]\r\n\r\nexport const appRoutingProviders: any[] = [];\r\nexport const Routing: ModuleWithProviders<RouterModule> = RouterModule.forRoot(appRoutes, <ExtraOptions>{ enableTracing: false });\r\n","import { Component, Input, ChangeDetectionStrategy, HostBinding, OnInit } from '@angular/core'\nimport { IElement, StudioSubjects, IDesignControl } from '../../../common/objects/common';\nimport { ControlManager } from './controlManager';\n\n@Component({\n    selector: 'csi-control',\n    template: '<div></div>',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class ControlComponentBase implements OnInit, IDesignControl {\n    @Input(\"element\") __element: any;\n    @Input() subjects: StudioSubjects;\n    @HostBinding('class.csi-control-image') simpleControl: boolean = false;\n    @HostBinding('class.csi-control-LayoutContainer') layoutContainerControl: boolean = false;\n\n    controlManager: ControlManager;\n\n    get element(): IElement { return this.__element; }\n    set element(v: IElement) { this.__element = v; }\n    isReference:boolean;\n    get labelClass() : string {\n        return 'label-' + this._labelPositions[this.controlManager.getControlProperty(\"labelPosition\", 0)] + \n            ((this.controlManager.getControlProperty(\"required\") === true) ? \" field-required\" : \"\");\n    }\n\n    getLabelClass(defaultPosition: number){\n        return 'label-' + this._labelPositions[this.controlManager.getControlProperty(\"labelPosition\", defaultPosition)] + \n            ((this.controlManager.getControlProperty(\"required\") === true) ? \" field-required\" : \"\");\n    }\n\n    ngOnInit(): void {\n        this.controlManager = new ControlManager(this.element);\n        this.simpleControl = !this.isLayoutContainer(this.element);\n        this.layoutContainerControl = !this.simpleControl;             \n    }\n\n    isLayoutContainer(element: IElement): boolean {\n        return element.layout || element.typeName == \"JQTabContainer\";\n    }\n\n    private _labelPositions = [\"top\", \"bottom\", \"left\", \"right\", \"hidden\"];\n}\n\n","import { Component, ComponentRef, Input, ChangeDetectorRef, ChangeDetectionStrategy, ViewContainerRef, ViewChild, OnInit, OnDestroy } from '@angular/core'\nimport { ComponentFactoryResolver } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport {debounceTime, filter} from \"rxjs/operators\";\n\nimport { IElement, StudioSubjects, isContainerControl, RefreshInfo, IDesignControl, DesignModes } from '../../../common/objects/common';\nimport { ControlManager, ControlTab } from './controlManager';\nimport { ControlMappingService } from './controlMapping.service';\nimport { DesignComponent } from '../design.component';\nimport { StudioStateService } from '../../../common/services/studioStateService';\n\n@Component({\n    selector: 'csi-control-container',\n    templateUrl: 'controlContainer.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    entryComponents: [DesignComponent]\n})\n\nexport class ControlContainerComponent implements OnInit, OnDestroy {\n    @Input(\"element\") __element: any;\n    @Input() showCollapsed: boolean;\n    @Input() subjects: StudioSubjects;\n    @Input() isReference : boolean;\n\n    @ViewChild('controlHolder', { read: ViewContainerRef, static: true }) controlHolder: ViewContainerRef;\n\n    componentRef: ComponentRef<IDesignControl>;\n\n    public controlManager: ControlManager;\n    private refreshSubscription: Subscription;\n\n    get element(): IElement { return this.__element; }\n    set element(v: IElement) { this.__element = v; }\n\n    constructor(\n        private _cd: ChangeDetectorRef, \n        private _studioState: StudioStateService,\n        private _controlMappingService: ControlMappingService,\n        private _componentfactoryResolver: ComponentFactoryResolver) {\n    }\n\n    ngOnInit() {\n        this.controlManager = new ControlManager(this.element);\n        this.buildComponent();\n    }\n\n    ngOnDestroy() {\n        if (this.componentRef) {\n            if (this.refreshSubscription)\n                this.refreshSubscription.unsubscribe();\n            this.componentRef.destroy();\n        }\n    }\n\n    setActiveTab(tab : string|ControlTab) {\n        if (this.controlManager.setActiveTab(tab))\n            this.buildComponent();\n        else\n            this._studioState.selectItem(this.element);\n    }\n\n    private buildComponent() {\n\n        if (this.componentRef)\n            this.componentRef.destroy();\n\n        const componentType = this._controlMappingService.getControlComponent(this.element.typeName);\n        if( componentType ){\n            const componentFactory = this._componentfactoryResolver.resolveComponentFactory<IDesignControl>(componentType);\n            this.controlHolder.clear();\n    \n            this.componentRef = this.controlHolder.createComponent<IDesignControl>(componentFactory, 0);\n            this.componentRef.instance.element = this.controlManager.getControlModel();\n\n            //Load active tab for design elements\n            if (isContainerControl(this.element.typeName)) {\n                this.componentRef.instance.collapsible = true;\n                this.componentRef.instance.isCollapsed = this.showCollapsed;\n                this.componentRef.instance.isReference = this.isReference;\n            }\n\n            this.componentRef.instance.subjects = this.subjects;\n            this.refreshSubscription = this.subjects\n                .refresh.pipe(\n                    filter(r => r.element == this.componentRef.instance.element),\n                    debounceTime(700))\n                .subscribe(r => this.refreshComponent(r));\n            this._cd.markForCheck();\n        }\n        else{\n            console.error(\"The component \" + this.element.typeName + \" was not resolved\");\n        }\n    \n    }\n\n    activateControl(event: Event){\n        if( this._studioState.getRoot().__designMode == DesignModes.Controls ){\n            this._studioState.activateElement(this.element);\n            event.stopPropagation();\n        }\n    }\n\n    private refreshComponent(r: RefreshInfo) {\n        this._cd.markForCheck();\n    }\n}\n","<div (click)=\"activateControl($event)\" >    \n    <ng-template #controlHolder></ng-template>\n</div>\n","import { IElement, LayoutBuilder, uuid } from '../../../common/objects/common';\nimport _ from 'lodash';\n\nexport class ControlTab {\n    index: number;\n    name: string;\n    labelText: string;\n    labelName: string;\n    visible: boolean;\n    elementTabModel: IElement;\n    isActive: boolean;\n\n    constructor(tab: any, index: number) {\n        this.visible = tab.visible || tab.Visible;\n\n        this.labelText = tab.labelText || tab.LabelText;\n        this.labelName = tab.labelName || tab.LabelName;\n\n        this.elementTabModel = {\n            name : tab.name || tab.Name,\n            id : uuid.id('tab'),\n            layout: tab.layout || tab.Layout,\n            type: \"Control\",\n            typeName: '',\n            items: {}\n        };\n\n        this.name = this.elementTabModel.name;\n        this.index = tab.index !== undefined ? tab.index : tab.Index;\n    }\n\n    getTitle(): string {\n        return this.labelText || this.labelName || this.name;\n    }\n}\n\nexport class ControlManager {\n    elementModel: IElement;\n    elementType: string;\n    controlProperties: { [name: string]: any; };\n    tabs: ControlTab[];\n    activeTab: ControlTab;\n    hasTabs: boolean;\n\n    constructor(element: IElement) {\n        this.elementModel = element;\n        this.elementType = element.typeName;\n        this.controlProperties = element.properties || {};\n\n        this.setupTabs();\n    }\n\n    getControlModel(): IElement {\n        return this.elementModel;\n    }\n\n    getControlProperty(name: string, defaultValue?: any, intToArray?: boolean): any {\n        var propertyValue = this.controlProperties[name];\n        if (propertyValue === undefined) {\n            let valueFound = false;\n\n            // then try to find case insensitive property value.\n            let obj = this.controlProperties;\n            for (let propName of name.split('.')) {\n                valueFound = false;\n                if (obj) {\n                    for (let p of Object.getOwnPropertyNames(obj)) {\n                        if (p.toLowerCase() === propName.toLowerCase()) {\n                            obj = propertyValue = obj[p];\n                            valueFound = true;\n                            break;\n                        }\n                    }\n                    if (!valueFound)\n                        obj = propertyValue = null;\n                }\n                else\n                    break;\n            }\n\n            if (!valueFound) {\n                switch (name) {\n                case 'label':\n                    propertyValue = this.getControlProperty('labelText') || this.getControlProperty('labelName') || this.elementModel.name;\n                    break;\n                case 'id':\n                    propertyValue = this.elementModel.id;\n                    break;\n                case 'typeName':\n                    propertyValue = this.elementType;\n                    break;\n                case 'width':\n                    propertyValue = this.getControlProperty('controlWidth');\n                    break;\n                case 'height':\n                    propertyValue = this.getControlProperty('controlHeight');\n                    break;\n                case 'margin':\n                    propertyValue = this.getControlProperty('controlMargin');\n                    break;\n                }\n            }\n        }\n        if (intToArray) {\n            let intProp = propertyValue || defaultValue;\n\n            if (_.isNumber(intProp)){\n                let i = parseInt(intProp.toString());\n                propertyValue = new Array(i).fill(1);\n            }\n        }\n        if (propertyValue === false)\n            return false;\n\n        return propertyValue || defaultValue;\n    }\n\n    getControlStyle(...attrs: string[]): any {\n        let css = {};\n        if (!attrs.length)\n            attrs = [\"width\", \"height\", \"margin\"];\n\n        for (let attr of attrs) {\n            switch (attr) {\n            case \"width\":\n            case \"height\":\n                let val = this.getControlProperty(attr);\n                if (val && _.isNumber(val))\n                    css[attr + \".px\"] = val;\n                break;\n            case \"margin\":\n                let margin = this.getControlProperty(\"margin\");\n                if (margin) {\n                    // returned by property grid\n                    if (typeof margin === 'string') {\n                        let items = margin.split(\",\");\n                        if (items.length === 4) {\n                            margin = {};\n                            margin.left = _.isNumber(items[0]) ? items[0] : 0;\n                            margin.top = _.isNumber(items[1]) ? items[1] : 0;\n                            margin.right = _.isNumber(items[2]) ? items[2] : 0;\n                            margin.bottom = _.isNumber(items[3]) ? items[3] : 0;\n                        }\n                    }\n\n                    if (margin.top)\n                        css[\"margin-top.px\"] = margin.top;\n                    if (margin.right)\n                        css[\"margin-right.px\"] = margin.right;\n                    if (margin.bottom)\n                        css[\"margin-bottom.px\"] = margin.bottom;\n                    if (margin.left)\n                        css[\"margin-left.px\"] = margin.left;\n                }\n                break;\n            }\n        }\n        \n        return css;\n    }\n\n    // if active tab is the same returns false ( means: noChanged )\n    public setActiveTab(tabOrName: ControlTab | string): boolean {\n        let tab: ControlTab;\n        if (_.isString(tabOrName)) {\n            tab = this.tabs.find(t => t.name == <string>tabOrName);\n        }\n        else {\n            tab = <ControlTab>tabOrName;\n        }\n        if (tab) {\n            if (this.activeTab && this.activeTab == tab){\n                return false;\n            }\n            this.activeTab = tab;\n            // reset active flag\n            this.tabs.forEach(t => t.isActive = false);\n            this.activeTab.isActive = true;\n        }\n        else {\n            this.activeTab = tab;\n            this.tabs.forEach(t => t.isActive = false);\n        }\n\n        // save active flag in model\n        this.elementModel['__activeTab'] = this.activeTab.name;\n        return true;\n    }\n\n    public getActiveTabElement() {\n        return this.activeTab ? this.activeTab.elementTabModel : null;\n    }\n\n    public getControlClass(){\n        return \"csi-\" + this.elementType;\n    }\n\n    public static createNewControl(controlType: string, serverControlType: string): IElement {\n        let newName = uuid.id(controlType + \"-\");\n        return <IElement>{\n            id: uuid.id(),\n            name: newName,\n            type: 'Control',\n            typeName: controlType,\n            items: null,\n            layout: null,\n            properties: { 'name': newName },\n            isReference: false,\n            _fullTypeName: serverControlType\n        };\n    }\n\n    public static createEmptyWebpartModel(wpName: string, rows: number, cols: number): any {\n        let wpTypeName = \"WebPartDefinition\";\n        let codeBehind = \"Camstar.WebPortal.WebPortlets.MatrixWebPart\";\n        let emptyWp = {\n            _fullTypeName: codeBehind,\n            id: uuid.id(),\n            name: wpName,\n            isReference: false,\n            items: null,\n            layout: LayoutBuilder.getLayout(rows, cols),\n            properties: {\n                __type: wpTypeName,\n                isReference: false,\n                name: wpName,\n                typeName: codeBehind,\n                created: new Date().toISOString()\n            },\n            type: \"Webpart\",\n            typeName: wpTypeName\n        };\n        return emptyWp;\n    }\n\n    private setupTabs(): void {\n        this.tabs = this.getControlTabs();\n        this.hasTabs = (this.tabs && this.tabs.length > 0);\n    }\n\n    private getControlTabs(): ControlTab[] {\n        var retVal: ControlTab[] = [];\n        var tabDefinitions = this.getControlProperty(\"tabDefinitions\", null);\n        if (tabDefinitions) {\n            retVal = _.map(tabDefinitions, (t, i:number) => new ControlTab(t, i));\n            let firstVisibleIndex = tabDefinitions.findIndex(t => t.visible);\n            if (firstVisibleIndex != -1)\n                retVal[firstVisibleIndex].isActive = true;        \n        }\n        return retVal;\n    }\n\n\n}","import { Type, Injectable } from '@angular/core';\r\nimport { IDesignControl } from '../../../common/objects/common';\r\n//import {COMPONENT_DIRECTIVES as Cmp} from './control.components';\r\nimport { BooleanSwitchComponent } from './templates/BooleanSwitch.component';\r\nimport { BusinessObjectComponent } from './templates/businessObject.component';\r\nimport { ButtonComponent } from './templates/button.component';\r\nimport { JQTabContainer } from './templates/jqTabContainer.companent';\r\nimport { RibbonContainer } from './templates/ribbonContainer.companent';\r\nimport { SectionDropDown } from './templates/sectionDropDown.companent';\r\nimport { ToggleContainer } from './templates/toggleContainer.companent';\r\nimport { WebPartsWrapperControl } from './templates/webPartsWrapperControl.companent';\r\n\r\nimport { WorkflowNavigatorComponent } from './templates/workflowNavigator.componen';\r\nimport { CheckBoxComponent } from './templates/checkBox.component';\r\nimport { ColorPickerComponent } from './templates/colorPicker.component';\r\nimport { ContainerListComponent } from './templates/containerList.component';\r\nimport { ContainerListGridComponent } from './templates/containerListGrid.component';\r\nimport { CrystalReportComponent } from './templates/crystalReport.component';\r\nimport { DataCollectionComponent } from './templates/dataCollection.component';\r\nimport { DateChooserComponent } from './templates/dateChooser.component';\r\nimport { DropDownListComponent } from './templates/dropDownList.component';\r\nimport { DurationComponent } from './templates/duration.component';\r\nimport { FileInputComponent } from './templates/fileInput.component';\r\nimport { GenericComponent } from './templates/generic.component';\r\nimport { HTMLPanelComponent } from './templates/htmlPanel.component';\r\nimport { IframeComponent } from './templates/iframe.component';\r\nimport { ImageComponent } from './templates/image.component';\r\nimport { InquiryComponent } from './templates/inquiry.component';\r\nimport { InstructionTextComponent } from './templates/instructionText.component';\r\nimport { JQDataGridComponent } from './templates/jqDataGrid.component';\r\nimport { LabelComponent } from './templates/label.component';\r\nimport { LinkButtonComponent } from './templates/linkButton.component';\r\nimport { MultiSelectPickListComponent } from './templates/multiSelectPickList.component';\r\nimport { NamedObjectComponent } from './templates/namedObject.component';\r\nimport { PageTabComponent } from './templates/pageTab.component';\r\nimport { PIMetricComponent } from './templates/piMetric.componen';\r\nimport { PlmVisComponent } from './templates/plmVis.component';\r\nimport { RadioButtonComponent } from './templates/radioButton.component';\r\nimport { ReadOnlyComponent } from './templates/readOnly.component';\r\nimport { RevisionedObjectComponent } from './templates/revisionedObject.component';\r\nimport { ScaleControlComponentBase } from './templates/scaleControl.component';\r\nimport { ScrollableMenuComponent } from './templates/scrollableMenu.component';\r\nimport { SlideMenuComponent } from './templates/slideMenu.component';\r\nimport { StatusMessageComponent } from './templates/statusMessage.component';\r\nimport { TextBoxComponent } from './templates/textBox.component';\r\nimport { TextEditorComponent } from './templates/textEditor.component';\r\nimport { TitleComponent } from './templates/title.component';\r\n\r\n\r\n@Injectable()\r\nexport class ControlMappingService {\r\n\r\n    constructor(){}\r\n\r\n    public getControlComponent(typeName: string): Type<IDesignControl> {\r\n        switch (typeName) {\r\n            case 'BooleanSwitch':\r\n                return BooleanSwitchComponent;\r\n            case 'WebiReport':\r\n                return BusinessObjectComponent;\r\n            case 'Button':\r\n            case 'FlyoutDropDown':\r\n                return ButtonComponent;\r\n            case 'CheckBox':\r\n                return CheckBoxComponent;\r\n            case 'ColorPicker':\r\n                return ColorPickerComponent;\r\n            case 'ContainerList':\r\n                return ContainerListComponent;\r\n            case 'ContainerListGrid':\r\n                return ContainerListGridComponent;\r\n            case 'CrystalReport':\r\n                return CrystalReportComponent;\r\n            case 'DataCollection':\r\n            case 'ShopFloorDCControl':\r\n                return DataCollectionComponent;\r\n            case 'DateChooser':\r\n                return DateChooserComponent;\r\n\r\n            case 'JQTabContainer':\r\n                return JQTabContainer;\r\n\r\n            case 'RibbonContainer':\r\n                return RibbonContainer;\r\n            case 'SectionDropDown':\r\n            case 'SectionDropDownMobile':\r\n                return SectionDropDown;\r\n            case 'ToggleContainer':\r\n                return ToggleContainer;\r\n            case 'WebPartsWrapperControl':\r\n                return WebPartsWrapperControl;\r\n            case 'BooleanDropDown':\r\n            case 'DropDownList':\r\n            case 'DiscoveryAreaControl':\r\n                return DropDownListComponent;\r\n            case 'Duration':\r\n                return DurationComponent;\r\n            case 'FileInput':\r\n            case 'FileBrowse':\r\n                return FileInputComponent;\r\n            case 'ChartControl':\r\n            case 'Checklist':\r\n            case 'Generic':\r\n            case 'LastChangeInfo':\r\n            case 'ModelingObjectList':\r\n            case 'SPCChartControl':\r\n            case 'UserFields':\r\n            case 'ViewDocumentsControl':\r\n            case 'WebPartContainer':\r\n            case 'WorkflowViewerControl':\r\n            case 'IntelligenceReportObject':\r\n            case 'Breadcrumb':             \r\n                return GenericComponent;\r\n            case 'PlmVisWebControl':\r\n                return PlmVisComponent;\r\n            case 'IFrame':\r\n            case 'PagePanel':\r\n                return IframeComponent;\r\n            case 'ImageControl':\r\n                return ImageComponent;\r\n            case 'InquiryControl':\r\n                return InquiryComponent;\r\n            case 'InstructionText':\r\n                return InstructionTextComponent;\r\n            case 'JQDataGrid':\r\n                return JQDataGridComponent;\r\n            case 'Label':\r\n                return LabelComponent;\r\n            case 'LinkButton':\r\n                return LinkButtonComponent;\r\n            case 'MultiSelectPickList':\r\n                return MultiSelectPickListComponent;\r\n            case 'NamedObject':\r\n            case 'NamedSubentity':\r\n                return NamedObjectComponent;\r\n            case 'PageTabContainer':\r\n                return PageTabComponent;\r\n            case 'PIMetric':\r\n                return PIMetricComponent;\r\n            case 'RadioButton':\r\n            case 'RadioButtonList':\r\n                return RadioButtonComponent;\r\n            case 'ReadOnly':\r\n            case 'ReadOnlyDate':\r\n            case 'ReadOnlyEnum':\r\n                return ReadOnlyComponent;\r\n            case 'RevisionedObject':\r\n                return RevisionedObjectComponent;\r\n            case 'Scales':\r\n                return ScaleControlComponentBase;\r\n            case 'ScrollableMenu':\r\n                return ScrollableMenuComponent;\r\n            case 'SlideMenu':\r\n            case 'TaskListSlideMenu':\r\n                return SlideMenuComponent;\r\n            case 'StatusMessage':\r\n                return StatusMessageComponent;\r\n            case 'TextBox':\r\n                return TextBoxComponent;\r\n            case 'TextEditor':\r\n                return TextEditorComponent;\r\n            case 'TitleControl':\r\n                return TitleComponent;\r\n            case 'WorkflowNavigator':\r\n                return WorkflowNavigatorComponent;\r\n            case 'HTMLPanel':\r\n                return HTMLPanelComponent;\r\n            default:\r\n                return GenericComponent;\r\n        }\r\n    }\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './BooleanSwitchDesign.html', selector: 'csi-bs' })\r\nexport class BooleanSwitchComponent extends ControlComponentBase { }\r\n","<div [id]='controlManager.getControlProperty(\"id\")' class=\"csi-booleanSwitchDesign {{getLabelClass(2)}}\" [style]='controlManager.getControlStyle(\"margin\", \"height\")'>\n    <span class=\"control-label\">{{controlManager.getControlProperty(\"label\")}}</span>\n    <div class=\"csi-booleanSwitchDesign-button\" [style]='controlManager.getControlStyle(\"width\")'>\n        <div class=\"csi-booleanSwitchDesign-left\">\n            <span>{{controlManager.getControlProperty(\"noLabelText\", \"No\")}}</span>\n        </div>\n        <div class=\"csi-booleanSwitchDesign-right\">\n            <span>{{controlManager.getControlProperty(\"yesLabelText\", \"Yes\")}}</span>\n        </div>\n    </div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './BusinessObjectDesign.html', selector: 'csi-bo' })\r\nexport class BusinessObjectComponent extends ControlComponentBase { }","<div [id]='controlManager.getControlProperty(\"id\")' [ngStyle]='controlManager.getControlStyle()' class=\"csi-crystalReportDesign\">\n    <table class=\"csi-crystalReportDesign-content\">\n        <tr class=\"csi-crystalReportDesign-caption\">\n            <td>\n                <span class=\"csi-crystalReportDesign-caption-label\">{{controlManager.getControlProperty(\"label\")}}</span>\n            </td>\n        </tr>\n        <tr class=\"csi-crystalReportDesign-body\">\n            <td>\n                <span>Intelligence Object</span>\n            </td>\n        </tr>\n    </table>\n</div>\n","import { ControlComponentBase } from \"../controlBase.component\";\r\nimport { Component } from \"@angular/core\";\r\n\r\n@Component({ templateUrl: './ButtonDesign.html', selector: 'csi-bt' })\r\nexport class ButtonComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' [ngStyle]='controlManager.getControlStyle()' class=\"csi-buttonDesign\">\n    {{controlManager.getControlProperty(\"label\")}}\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './CheckBoxDesign.html', selector: 'csi-cb' })\r\nexport class CheckBoxComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' class=\"csi-checkboxDesign {{getLabelClass(2)}}\" [ngStyle]='controlManager.getControlStyle(\"margin\")'>\n    \n    <span class=\"control-label\">\n        {{controlManager?.getControlProperty(\"label\")}}\n    </span>    \n    <div class=\"csi-checkboxDesign-chk\"></div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './ColorPickerDesign.html', selector: 'csi-cp' })\r\nexport class ColorPickerComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' [ngStyle]='controlManager.getControlStyle(\"margin\", \"height\")'\n            [class]='labelClass'>\n    <span class=\"control-label\">\n        {{controlManager.getControlProperty(\"label\")}}\n    </span>\n    <div class=\"csi-textboxDesign\"\n         [attr.readonly]='controlManager.getControlProperty(\"readOnly\", \"false\")'\n         [ngStyle]='controlManager.getControlStyle(\"width\")'></div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './ContainerListDesign.html', selector: 'csi-cl' })\r\nexport class ContainerListComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")'\n     [ngStyle]='controlManager.getControlStyle(\"margin\", \"height\")' [class]=\"labelClass\">\n    <span class=\"control-label\">\n        {{controlManager?.getControlProperty(\"label\")}}\n    </span>   \n    <div>\n        <div class=\"csi-picklistDesign\" [ngStyle]='controlManager.getControlStyle(\"width\")'>\n            <div class=\"csi-picklistDesign-image\"></div>\n        </div>\n    </div>\n</div>","import { ControlComponentBase } from \"../controlBase.component\";\r\nimport { Component } from \"@angular/core\";\r\n\r\n@Component({ templateUrl: './ContainerListGridDesign.html', selector: 'csi-cg' })\r\nexport class ContainerListGridComponent extends ControlComponentBase {}   ","<div [id]='controlManager.getControlProperty(\"id\")'\n     [ngStyle]='controlManager.getControlStyle(\"margin\", \"height\")' [class]=\"labelClass\">\n    <span [attr.req]='controlManager.getControlProperty(\"required\")' class=\"control-label\">\n        {{controlManager?.getControlProperty(\"label\")}}\n    </span> \n    <div>\n        <div class=\"csi-picklistDesign\" [ngStyle]='controlManager.getControlStyle()' \n             [ngStyle]='controlManager.getControlStyle(\"width\")'>\n            <div class=\"csi-picklistDesign-image\"></div>\n        </div>\n    </div>\n</div>","import { ControlComponentBase } from \"../controlBase.component\";\r\nimport { Component } from \"@angular/core\";\r\n\r\n@Component({ templateUrl: './CrystalReportDesign.html', selector: 'csi-cr' })\r\nexport class CrystalReportComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' [ngStyle]='controlManager.getControlStyle()' class=\"csi-crystalReportDesign\">\n    <table class=\"csi-crystalReportDesign-content\">\n        <tr class=\"csi-crystalReportDesign-caption\">\n            <td>\n                <span class=\"csi-crystalReportDesign-caption-label\">{{controlManager?.getControlProperty(\"label\")}}</span>\n                <div class=\"csi-crystalReportDesign-caption-images\">\n                    <div class=\"csi-crystalReportDesign-left\"></div>\n                    <div class=\"csi-crystalReportDesign-right\"></div>\n                </div>\n            </td>\n        </tr>\n        <tr class=\"csi-crystalReportDesign-body\">\n            <td>\n                <span>Report</span>\n            </td>\n        </tr>\n    </table>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './DataCollectionDesign.html', selector: 'csi-dc' })\r\nexport class DataCollectionComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' class=\"csi-dataCollectionDesign\"\n     [ngStyle]='controlManager.getControlStyle()'>\n    <span class=\"csi-dataCollectionDesign-label\">{{controlManager.getControlProperty(\"label\")}}</span>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './DateChooserDesign.html', selector: 'csi-dd' })\r\nexport class DateChooserComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")'\n     [ngStyle]='controlManager.getControlStyle(\"margin\", \"height\")' [class]=\"labelClass\">\n    <span class=\"control-label\">\n        {{controlManager.getControlProperty(\"label\")}}\n    </span>\n    <div [ngStyle]='controlManager.getControlStyle(\"width\")'>\n        <div class=\"csi-dateChooserDesign\"></div>\n        <div class=\"csi-dateChooserDesign-button\"></div>\n    </div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './DropDownListDesign.html', selector: 'csi-dl' })\r\nexport class DropDownListComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")'\n     [ngStyle]='controlManager.getControlStyle(\"margin\", \"height\")' [class]=\"labelClass\">\n    <span class=\"control-label\">\n        {{controlManager.getControlProperty(\"label\")}}\n    </span>\n    <div class=\"csi-picklistDesign-container\">\n        <div class=\"csi-picklistDesign\" [ngStyle]='controlManager.getControlStyle(\"width\")'>\n            <div class=\"csi-picklistDesign-image\"></div>\n        </div>\n    </div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './DurationDesign.html', selector: 'csi-du' })\r\nexport class DurationComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")'\n     [ngStyle]='controlManager.getControlStyle(\"margin\", \"height\")' [class]=\"labelClass\">\n        <span class=\"control-label\">\n        {{controlManager.getControlProperty(\"label\")}}\n    </span>\n    <div class=\"csi-textboxDesign\" [ngStyle]='controlManager.getControlStyle(\"width\")' style=\"width: 120px\" [attr.readonly]='controlManager.getControlProperty(\"readOnly\", \"false\")'></div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './FileInputDesign.html', selector: 'csi-fi' })\r\nexport class FileInputComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")'\n     [ngStyle]='controlManager.getControlStyle(\"margin\", \"height\")' [class]=\"labelClass\">\n    <span class=\"control-label\">\n            {{controlManager.getControlProperty(\"label\")}}</span>\n    <div class=\"csi-textboxDesign\" [ngStyle]='controlManager.getControlStyle(\"width\")' [attr.readonly]='controlManager.getControlProperty(\"readOnly\", \"false\")'></div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './GenericDesign.html', selector: 'csi-gd' })\r\nexport class GenericComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' class=\"csi-genericDesignControl\" \n     [ngStyle]='controlManager.getControlStyle()'>\n    <div>\n        {{controlManager.getControlProperty(\"typeName\")}}\n    </div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './HTMLPanelDesign.html', selector: 'csi-hp' })\r\nexport class HTMLPanelComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' class=\"csi-htmlPanelControl\" \n     [ngStyle]='controlManager.getControlStyle(\"width\", \"height\")'>\n    <div class=\"name\">{{controlManager.getControlProperty(\"name\")}}</div>\n    <div *ngIf=\"controlManager.getControlProperty('TemplateFile'); else htmlText\" class=\"file\">\n       TemplateFile: {{controlManager.getControlProperty('TemplateFile')}}\n    </div>\n    <ng-template #htmlText>\n        <div *ngIf=\"controlManager.getControlProperty('HTMLText')\" class=\"text\">\n                <pre>{{controlManager.getControlProperty('HTMLText')}}</pre>\n        </div>\n    </ng-template>\n    \n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './IframeDesign.html', selector: 'csi-if' })\r\nexport class IframeComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' [ngStyle]='controlManager.getControlStyle(\"margin\")' [class]=\"labelClass\">\n    <span class=\"control-label\">\n        {{controlManager.getControlProperty(\"label\")}}\n    </span>\n    <div class=\"csi-iframeDesign\" [ngStyle]='controlManager.getControlStyle(\"width\", \"height\")'><span>{{controlManager.getControlProperty(\"url\", \"No URL\")}}</span></div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './ImageControlDesign.html', selector: 'csi-ic' })\r\nexport class ImageComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' [ngStyle]='controlManager.getControlStyle(\"margin\", \"height\")' [class]=\"labelClass\">\n    <span class=\"control-label\">\n        {{controlManager?.getControlProperty(\"label\")}}\n    </span>        \n    <div class=\"csi-imageDesign\"></div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './InquiryDesign.html', selector: 'csi-id' })\r\nexport class InquiryComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")'\n     [ngStyle]='controlManager.getControlStyle(\"margin\", \"height\")' [class]=\"labelClass\">\n    <span class=\"control-label\">\n        {{controlManager?.getControlProperty(\"label\")}}\n    </span>    \n    <div class=\"csi-textboxDesign\" [ngStyle]='controlManager.getControlStyle(\"width\")' [attr.readonly]='controlManager.getControlProperty(\"readOnly\", \"false\")'></div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './InstructionTextDesign.html', selector: 'csi-it' })\r\nexport class InstructionTextComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")'\n     [ngStyle]='controlManager.getControlStyle(\"margin\")' [class]=\"labelClass\">\n    <span class=\"control-label\">\n        {{controlManager.getControlProperty(\"label\")}}\n    </span>\n    <div class=\"csi-instructionTextDesign\" [ngStyle]='controlManager.getControlStyle(\"width\", \"height\")'></div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './JQDataGridDesign.html', selector: 'csi-gr' })\r\nexport class JQDataGridComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' class=\"csi-gridDesign\"\n     [ngStyle]='controlManager.getControlStyle()'>\n    <div class=\"csi-gridDesign-caption\">\n        {{controlManager.getControlProperty(\"label\")}}\n    </div>\n    <table class=\"csi-gridDesign-table\">\n        <tr>\n            <th *ngFor=\"let col of controlManager.getControlProperty('settings.columns', [{name: 'Column1'}, {name: 'Column2'}, {name: 'Column3'}]); let i = index\"\n                [ngStyle]=\"{'width.px': col.width ? col.width : 150}\">\n                {{col.name}}\n            </th>\n            <th>&nbsp;</th>\n        </tr>\n\n        <tr *ngFor=\"let row of controlManager.getControlProperty('settings.visibleRows', 5, true); let i = index\" [ngClass]=\"{'csi-gridDesign-alternative': (i % 2 == 1)}\">\n            <td *ngFor=\"let j of controlManager.getControlProperty('settings.columns.length', 3, true)\">&nbsp;</td>\n            <td>&nbsp;</td>\n        </tr>\n    </table>\n    <div class=\"csi-gridDesign-paging\">\n        <div *ngIf=\"controlManager.getControlProperty('settings.navigator', 0) === 0 || controlManager.getControlProperty('settings.navigator', 0) === 1\"  class=\"csi-gridDesign-PagerIcon\"></div>\n        <div *ngIf=\"controlManager.getControlProperty('gridDataMode', 1) === 1\" class=\"csi-gridDesign-AddIcon\"></div>\n        <div *ngIf=\"controlManager.getControlProperty('gridDataMode', 1) === 1\" class=\"csi-gridDesign-EditIcon\"></div>\n        <div *ngIf=\"controlManager.getControlProperty('gridDataMode', 1) === 1\" class=\"csi-gridDesign-DeleteIcon\"></div>\n        <div *ngIf=\"controlManager.getControlProperty('settings.navigator', 0) !== 3\" class=\"csi-gridDesign-RefreshIcon\"></div>\n        <div *ngIf=\"controlManager.getControlProperty('settings.navigator', 0) !== 3\" class=\"csi-gridDesign-ExcelIcon\"></div>\n        <div *ngIf=\"controlManager.getControlProperty('settings.layout.sequenceColumn', null) !== null\" class=\"csi-gridDesign-DownIcon\"></div>\n        <div *ngIf=\"controlManager.getControlProperty('settings.layout.sequenceColumn', null) !== null\" class=\"csi-gridDesign-UpIcon\"></div>\n        <div *ngIf=\"controlManager.getControlProperty('settings.pager.displayTotalRecords', true)\" class=\"csi-gridDesign-ResultsText\">Results 0 - 0 of 0</div>\n    </div>\n</div>\n<!--<pre>{{ controlManager.elementModel.properties | json }}</pre>-->","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './CombinedControlDesign.html', selector: 'csi-tc'})\r\nexport class JQTabContainer extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' [ngStyle]='controlManager.getControlStyle(\"margin\")' \n        [class]=\"controlManager.getControlClass()\" >\n    <csi-design [element]='element' [isParentReference]=\"isReference\"></csi-design>\n</div>\n","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './LabelDesign.html', selector: 'csi-ld' })\r\nexport class LabelComponent extends ControlComponentBase { }","<div [id]='controlManager.getControlProperty(\"id\")'\n    [ngStyle]='controlManager.getControlStyle()' class=\"control-label\" >\n    {{controlManager.getControlProperty(\"label\")}}\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './LinkButtonDesign.html', selector: 'csi-lb' })\r\nexport class LinkButtonComponent extends ControlComponentBase { }","<div [id]='controlManager.getControlProperty(\"id\")' class=\"csi-linkButtonDesign\">\n    {{controlManager.getControlProperty(\"label\")}}\n</div>\n","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './MultiSelectPickListDesign.html', selector: 'csi-ms' })\r\nexport class MultiSelectPickListComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")'\n     [ngStyle]='controlManager.getControlStyle(\"margin\", \"height\")'  [class]=\"labelClass\">\n    <span class=\"control-label\">\n        {{controlManager.getControlProperty(\"label\")}}\n    </span>\n    <div class=\"csi-picklistDesign-container\">\n        <div class=\"csi-picklistDesign\" [ngStyle]='controlManager.getControlStyle(\"width\")'>\n            <div class=\"csi-picklistDesign-image\"></div>\n        </div>\n    </div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './NamedObjectDesign.html', selector: 'csi-no' })\r\nexport class NamedObjectComponent extends ControlComponentBase { }","<div [id]='controlManager.getControlProperty(\"id\")'\n     [ngStyle]='controlManager.getControlStyle(\"margin\", \"height\")' [class]=\"labelClass\">\n    <span class=\"control-label\">\n        {{controlManager.getControlProperty(\"label\")}}\n    </span>\n    <div class=\"csi-picklistDesign-container\">\n        <div class=\"csi-picklistDesign\" [ngStyle]='controlManager.getControlStyle(\"width\")'>\n            <div class=\"csi-picklistDesign-image\"></div>\n        </div>\n    </div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './PageTabDesign.html', selector: 'csi-pt' })\r\nexport class PageTabComponent extends ControlComponentBase { }","<div [id]='controlManager.getControlProperty(\"id\")' class=\"csi-pageTabDesign\"\n        [ngStyle]='controlManager.getControlStyle(\"width\", \"height\")'>\n    <div class=\"line\">\n        <div class=\"page-tab\">Page1</div>\n        <div class=\"page-tab page2\">Page2</div>\n        <div class=\"space\"> </div>\n    </div>\n    <div class=\"csi-contentContainer\"></div>\n</div>\n","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './PIMetricDesign.html', selector: 'csi-pi' })\r\nexport class PIMetricComponent extends ControlComponentBase { }","<div [id]='controlManager.getControlProperty(\"id\")' class=\"csi-piMetricDesign\">\n    {{controlManager.getControlProperty(\"piText\", \"PI Metric\")}}\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './PlmVisWebDesign.html', selector: 'csi-pl' })\r\nexport class PlmVisComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' class=\"csi-genericDesignControl\" \n     [ngStyle]='controlManager.getControlStyle()'>\n    <div>\n        3D Visualization\n    </div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './RadioButtonDesign.html', selector: 'csi-rb' })\r\nexport class RadioButtonComponent extends ControlComponentBase { }","<div [id]='controlManager.getControlProperty(\"id\")' class=\"csi-radioButtonDesign {{getLabelClass(2)}}\">\n    <span class=\"control-label\">\n        {{controlManager.getControlProperty(\"label\")}}\n    </span>    \n    <div class=\"csi-radioButtonDesign-btn\"></div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './ReadOnlyDesign.html', selector: 'csi-ro' })\r\nexport class ReadOnlyComponent extends ControlComponentBase { }","<div [id]='controlManager.getControlProperty(\"id\")' [ngStyle]='controlManager.getControlStyle(\"margin\", \"height\")' \n        [class]=\"labelClass\">\n    <span class=\"control-label\">\n        {{controlManager.getControlProperty(\"label\")}}\n    </span>\n    <div class=\"csi-textboxDesign\" [ngStyle]='controlManager.getControlStyle(\"width\")' readonly=\"readonly\"></div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './RevisionedObjectDesign.html', selector: 'csi-rv' })\r\nexport class RevisionedObjectComponent extends ControlComponentBase { }","<div [id]='controlManager.getControlProperty(\"id\")'\n     [ngStyle]='controlManager.getControlStyle(\"margin\", \"height\")' [class]='labelClass'>\n\n    <span class=\"control-label\">\n        {{controlManager.getControlProperty(\"label\")}}\n    </span>\n    <div class=\"csi-picklistDesign-container\">\n        <div class=\"csi-picklistDesign\" [ngStyle]='controlManager.getControlStyle(\"width\")'>\n            <div class=\"csi-picklistDesign-image\"></div>\n        </div>\n        <div style=\"position: relative\">\n            <div class=\"csi-picklistDesign-rev\"></div>\n            <div class=\"csi-picklistDesign-rev-chk\"></div>\n        </div>\n    </div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './CombinedControlDesign.html', selector: 'csi-rc' })\r\nexport class RibbonContainer extends ControlComponentBase {}","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './ScaleControlDesign.html', selector: 'csi-sc' })\r\nexport class ScaleControlComponentBase extends ControlComponentBase { }","<div [id]='controlManager.getControlProperty(\"id\")'>\n    <table class=\"csi-scaleDesign\">\n        <tr>\n            <td class=\"first\">\n                <div></div>\n            </td>\n            <td class=\"second\">\n                <div></div>\n            </td>\n            <td class=\"third\">\n                <div></div>\n            </td>\n            <td class=\"fourth\">\n                <div></div>\n            </td>\n        </tr>\n    </table>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './ScrollableMenuDesign.html', selector: 'csi-sm' })\r\nexport class ScrollableMenuComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' [class]=\"labelClass\"\n     [ngStyle]='controlManager.getControlStyle(\"margin\")'>\n    <span class=\"control-label\">\n        {{controlManager.getControlProperty(\"label\")}}\n    </span>\n    <div class=\"csi-iframeDesign\" [ngStyle]='controlManager.getControlStyle(\"width\", \"height\")'><span>{{controlManager.getControlProperty(\"url\", \"No URL\")}}</span></div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './CombinedControlDesign.html', selector: 'csi-sd' })\r\nexport class SectionDropDown extends ControlComponentBase {}","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './CombinedControlDesign.html', selector: 'csi-sdm' })\r\nexport class SectionDropDownMobile extends ControlComponentBase {}","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './SlideMenuDesign.html', selector: 'csi-sl' })\r\nexport class SlideMenuComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' [class]=\"labelClass\">\n    <span class=\"control-label\">\n        {{controlManager.getControlProperty(\"label\")}}\n    </span>\n    <div class=\"csi-slideMenuDesign\"></div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './StatusMessageDesign.html', selector: 'csi-sm' })\r\nexport class StatusMessageComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' class=\"csi-statusMessageDesign\">\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './TextBoxDesign.html', selector: 'csi-tb' })\r\nexport class TextBoxComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' [ngStyle]='controlManager.getControlStyle(\"margin\")'\n            [class]=\"labelClass\">\n    <span class=\"control-label\">\n        {{controlManager.getControlProperty(\"label\")}}\n    </span>\n    <div class=\"csi-textboxDesign\"\n         [attr.textMode]='controlManager.getControlProperty(\"textMode\", \"singleLine\")'\n         [ngStyle]='controlManager.getControlStyle(\"width\", \"height\")'\n         [attr.readonly]='controlManager.getControlProperty(\"readOnly\", \"false\")'>\n    </div>\n</div>\n<!--<pre>{{ controlManager.elementModel.properties | json }}</pre>-->","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './TextEditorDesign.html', selector: 'csi-tx' })\r\nexport class TextEditorComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' class=\"csi-textEditorDesign {{labelClass}}\" [ngStyle]='controlManager.getControlStyle()'>\n    <span class=\"control-label\">\n        {{controlManager.getControlProperty(\"label\")}}\n    </span>    \n    <div>\n        <table class=\"csi-textEditorDesign-table\">\n            <tr class=\"top\">\n                <td colspan=\"2\">\n                    <div class=\"topImg\"></div>\n                </td>\n                <td><div class=\"TopBkg\"></div></td>\n            </tr>\n            <tr class=\"mid\">\n                <td colspan=\"3\">\n                    <div></div>\n                </td>\n            </tr>\n            <tr class=\"bottom\">\n                <td>\n                    <div class=\"bottomImg\"></div>\n                </td>\n                <td colspan=\"2\">\n                    <div class=\"bottomBkg\"></div>\n                </td>\n            </tr>\n            <tr class=\"hiddenTr\">\n                <td class=\"first\">\n                    <div></div>\n                </td>\n                <td class=\"second\">\n                    <div></div>\n                </td>\n                <td>\n                    <div></div>\n                </td>\n            </tr>\n        </table>\n    </div>\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './TitleDesign.html', selector: 'csi-tt' })\r\nexport class TitleComponent extends ControlComponentBase {}","<div [id]='controlManager.getControlProperty(\"id\")' class=\"csi-titleDesign\">\n    {{controlManager.getControlProperty(\"label\")}}\n</div>","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './CombinedControlDesign.html', selector: 'csi-tg' })\r\nexport class ToggleContainer extends ControlComponentBase {}","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ template: `<div [style.border]=\"'solid red 1px'\">???? Unknown {{element.name}} ???</div>`, selector: 'csi-un' })\r\nexport class UnknownComponent extends ControlComponentBase {}","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n@Component({ templateUrl: './CombinedControlDesign.html', selector: 'csi-ww' })\r\nexport class WebPartsWrapperControl extends ControlComponentBase {}","import { Component } from \"@angular/core\";\r\nimport { ControlComponentBase } from \"../controlBase.component\";\r\n\r\n\r\n\r\n\r\n@Component({ \r\n    templateUrl: 'WorkflowNavigatorDesign.html',\r\n    selector: 'csi-wn' })\r\n\r\n\r\nexport class WorkflowNavigatorComponent extends ControlComponentBase { }","<div [id]='controlManager.getControlProperty(\"id\")'\n     [ngStyle]='controlManager.getControlStyle(\"margin\", \"height\")' [class]=\"labelClass\">\n    <span class=\"control-label\">\n        {{controlManager.getControlProperty(\"label\")}}\n    </span>    \n    <div class=\"csi-picklistDesign-container\">\n        <div class=\"csi-picklistDesign\" [ngStyle]='controlManager.getControlStyle(\"width\")'>\n            <div class=\"csi-picklistDesign-image\"></div>\n        </div>\n        <div style=\"position: relative\">\n            <div class=\"csi-picklistDesign-rev\"></div>\n            <div class=\"csi-picklistDesign-rev-chk\"></div>\n        </div>\n    </div>\n</div>\n","import { Component, Input, OnChanges, OnDestroy, ChangeDetectionStrategy, ChangeDetectorRef, SimpleChanges} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport _ from 'lodash';\n\nimport { PortalService } from '../../common/services/portal.service';\nimport { LabelService } from '../../common/services/label.service';\nimport {\n    IElement, IUIDesigner, val, LayoutActions, IDesignControl, DesignModes, ICellItemRef, IResultStatus } from '../../common/objects/common';\nimport { LayoutManager } from './objects/layoutManager';\nimport { LayoutCell, ICell } from './objects/layoutCell';\nimport { ElementHistoryData, RecordCommand, HistoryObjectType } from '../../common/objects/historyLog';\nimport { ConfirmDialogComponent } from '../../shared/dialog/confirm.dialog.component';\nimport { Subscription, Observable, of, concat } from 'rxjs';\nimport { map } from \"rxjs/operators\";\nimport { StudioStateService } from '../../common/services/studioStateService';\nimport { MetadataService } from '../../common/services/metadata.service';\nimport { DragInfo } from '../../shared/drag';\nimport { DragService } from '../../shared/drag.service';\nimport { DropDataInfo } from '../../shared/directives/droppable.directive';\n\n@Component({\n  selector: 'csi-design-root',\n  templateUrl: './design-root.component.html',\n  styleUrls: ['./design.component.less','./design-root.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DesignRootComponent implements OnChanges, OnDestroy, IDesignControl{\n    @Input(\"root\") __root : IUIDesigner; \n\n    root: IUIDesigner;\n    element: IUIDesigner;\n\n    DesignModesEnum = DesignModes;\n\n    webPartItems: IElement[];\n    oldMode: any;\n    get layoutManager(): LayoutManager {return this.root.__layoutManager; }\n    set layoutManager(lm: LayoutManager) {this.root.__layoutManager = lm; }\n    elementIconClass: string;\n    isNew: boolean = false;\n    displayCellPosition() : boolean {return this._studioService.displayCellPosition;}\n    xmlText : Observable<string>;\n    get layoutActions() : Observable<LayoutActions[]> {return this._studioService.subjects.layoutMenuUpdate;}\n\n    get headerTitle() {return this.root.properties.title || this.root.properties.name; };\n\n    get mode(): DesignModes { return this.root ? this.root.__designMode : DesignModes.Controls; }\n    set mode(m: DesignModes) { this.root.__designMode = m; }\n\n    get readonly() { return this.root.__workspace !== 0; }\n\n    private refreshRootSubscription: Subscription;\n    \n    private customWorkspaceColor: string;\n\n    private get xmlChanged() {return this.root.__xmlChanged === true;};\n    private set xmlChanged(x: boolean) { this.root.__xmlChanged = x;};\n\n    constructor(\n        private _labelService: LabelService,\n        private _portalService: PortalService,\n        private _studioService: StudioStateService,\n        private _cd: ChangeDetectorRef,\n        private _metadataService: MetadataService,\n        public _dialog: MatDialog,\n        private _drag : DragService\n    ) {\n        this.refreshRootSubscription = this._studioService.subjects.refreshRoot\n            .subscribe(() => {\n                this.designChanged();\n            });\n    }\n\n    getDropZoneOptions(cell: any) : DropDataInfo {\n        return <DropDataInfo>{\n            types: \"webpart-element,webpart-ref\",\n            id: cell.id,\n            disabled: this.readonly,\n            drop: (d: DragInfo) => {\n                let cellId = d.dropZoneElement.parentElement.id;\n                let cell: LayoutCell = this.layoutManager.findLayoutCellById(cellId);         \n                this.addElementToCell(cell, d);\n            }\n        };\n    }\n\n    ngOnChanges(ch : SimpleChanges): void {\n        if( ch.__root){\n            this.customWorkspaceColor = this._studioService.getCustomWorkspaceColor();\n            this._drag.clear([\"control-ref\",\"webpart-element\"], [\"control-toolbox\",\"control-ref\",\"control-field\",\"webpart-element\",\"webpart-ref\"]);\n            this.loadRefWebparts(ch.__root.currentValue);\n        }\n    }\n\n    ngOnDestroy(): void {\n        if (this.refreshRootSubscription)\n            this.refreshRootSubscription.unsubscribe();\n    }\n\n    private loadRefWebparts(croot : IUIDesigner) {\n        let con : Observable<IUIDesigner|IResultStatus>;\n        let count=0; \n\n        if( croot.__designMode != DesignModes.Xml){\n\n            this.getRefWebparts(croot).forEach(w=>{\n                let ps = this._portalService.getWebpartElement(w, \"Webpart\", \"\");\n                if(!con)\n                    con = ps;\n                else\n                    con = concat(con, this._portalService.getWebpartElement(w, \"Webpart\", \"\"));\n                count++;\n            });\n\n        }\n\n        if( con ){\n            con.subscribe(wp => {\n                let webpart = <IUIDesigner>wp;\n                if (webpart.name && webpart.typeName) {\n                    this._studioService.storeRefWebpart(webpart);\n                    this.addWebpartToItems(croot, webpart);\n                }\n                else {\n                    // error of loading webpart\n                    //this._alertservice.error(<IResultStatus>(<any>webpart));\n                }\n\n                count--;\n                if( count == 0 ){\n                    this.root = croot;\n                    this.initDesign();\n                    this.designChanged();\n                }\n            });\n        }\n        else{\n            this.root = croot;\n            this.initDesign();\n            this.designChanged();            \n        }\n    }\n\n    private addWebpartToItems(croot: IUIDesigner,  webpart : IElement) : IElement{\n        // replace it in items\n        let wpr = _.find( croot.items, it=> it.name == webpart.name);\n        if( wpr ){\n            croot.items[wpr.id] = _.cloneDeep(webpart);\n            wpr = croot.items[wpr.id];\n            wpr.isReference = true;\n            wpr.__loaded = true;\n        } \n        return wpr;\n    }\n\n    private getRefWebparts(d:IUIDesigner) : string[]{\n        let wps :string[] = [];\n        if( d.items ){\n            wps = _.filter(d.items, (i)=> i.isReference).map( i=> i.name);\n        }\n        return wps;\n    }\n\n    getItemControl(item:any) : any{\n        const r = item.value as ICellItemRef;\n        const  items = this.root.items;\n\n        const c = items && _.find(items, (it)=> r.name == it.name);\n        if( !c )\n            console.error(\"not found\", r);\n        return c;\n    }\n\n    modeChanged(mode:DesignModes) {               \n        if(this._studioService.elementInDesign && this._studioService.elementInDesign.__layoutManager)\n            this._studioService.elementInDesign.__layoutManager.clearSelection();\n            \n        this._studioService.elementInDesign = undefined;\n\n        if(mode == DesignModes.Design){\n            this.updateLayoutMenu();\n        }\n\n        if(this.mode != DesignModes.Xml){\n            if( this.xmlChanged ) {\n                this.applyXmlChanges().subscribe(isSuccess=>{\n                    this.xmlChanged = !isSuccess;\n                    this.root.__xml = null;\n                });\n                return;\n            }\n            this.root.__xml = null;\n        }        \n\n        this._studioService.activateElement(this.root);\n        this._studioService.refreshRoot(mode);\n    }\n\n    activateElement(selected: IElement, s:string = \"un\"): void {\n        if (selected) \n            if (this.mode != DesignModes.Controls) \n                return;            \n        \n        this._studioService.activateElement(selected);\n        if( selected.type == \"Webpart\" || selected.type == \"Page\"){\n            this.designChanged();\n        }\n    }\n\n    selectCell($event: Event, cell : LayoutCell) {\n        if (this.mode == DesignModes.Design) {\n            this._studioService.selectCell(cell);\n            if( $event )\n                $event.stopPropagation();\n        }            \n    }\n\n    public applyXmlChanges() : Observable<boolean> {\n        let rootElement = this._studioService.getRoot();\n\n        return this._portalService.applyXml(rootElement.name, rootElement.type, rootElement.__xml)\n            .pipe(map( element => {\n                if (element) {\n                    this._studioService.replaceElement(rootElement, element);\n                    element.isDirty = true;\n                    element.isRoot = true;\n                    element.__workspace = 0; // DEV\n                    element.__xml = null;\n                    this._studioService.refreshRoot();\n                    this._studioService.refreshTopMenu();\n                    return true;\n                }\n            },\n            (error : any) => {\n                let errorMessage = this._labelService.getLabel('PS_ERROR_IMPORTING_MESSAGE', \"Error occurred on importing new item\");\n                console.error(error, errorMessage);\n                //this.displayError(errorMessage);\n                return false;\n            }));\n    }\n\n    private updateLayoutMenu (cmds: LayoutActions[] = null){\n        this._studioService.updateLayoutMenu(cmds || this.layoutManager.selection.getEnabledCommands().cmdEnabled);\n    }\n\n    private addElementToCell(cell:LayoutCell,  di:DragInfo): void {\n\n        let dndItem : any = di.dragModel;\n\n        if (!cell)\n            return;\n\n        if (this.mode != DesignModes.Controls) {\n            // Reset active element if not a control mode\n            this.activateElement(null);\n            return;\n        }\n\n        // dropping enabled only in control mode\n        if (!dndItem) {\n            return;\n        }\n\n        if (_.isFunction(dndItem.addDragData)) {\n            dndItem.addDragData();\n            if (!dndItem.type)\n                return;\n        }\n        if (dndItem.id) {\n            // find where the item was\n            let fromElement = this._studioService.findElementOwner(this._studioService.activeRootElement, dndItem);\n            let fromCell = this._studioService.findCellByElement(dndItem);\n            if (this._studioService.moveElement(dndItem, cell)) {\n                this._studioService.getRoot().isDirty = true;\n\n                this.activateElement(dndItem);\n\n                // record into the history\n                let hr = new ElementHistoryData(HistoryObjectType.Control);\n                hr.cellId = cell.id;\n                hr.element = dndItem;\n                hr.fromCellId = fromCell.id;\n                this._studioService.writeHistory(RecordCommand.move, hr);\n\n                // Send refresh request if source is another element\n                if (fromElement != this.root)\n                    this._studioService.refreshRoot();\n            }\n            this.designChanged();\n        }\n        else {\n            this.addWebpartControl(dndItem, cell);\n        }\n        this._studioService.setDirty();\n    }\n\n    sliderValueChanged(newScaleVal:number) {\n        if( this.mode == DesignModes.Xml){\n            this.root.__zoomXml = newScaleVal;\n        }\n\n        if (newScaleVal !== this.root.scaleValue) {\n            this.root.scaleValue = newScaleVal;\n        }\n    }\n\n     addWebpartControl(dndItem: any, cell: LayoutCell) {\n        if (!dndItem.isStatic) {\n            // virtual web part\n            let titleLabel = this._labelService.getLabel('PS_WEBPART_TITLE', 'Add Webpart');\n            let messageLabel = this._labelService.getLabel('PS_WEBPART_ADD', \"Do you want to add the web part as a local copy or a reference to its content?\");\n            let copyLabel = this._labelService.getLabel('PS_COPY', 'Copy ');\n            let referenceLabel = this._labelService.getLabel('PS_ACTION_REFERENCE', 'Reference');\n            let confirmContext = {\n                title: titleLabel,\n                message: messageLabel,\n                actions: [\n                    { action: 'copy', name: copyLabel, isPrimary: false },\n                    { action: 'reference', name: referenceLabel, isPrimary: false }]\n            };\n\n            let dialog = this._dialog.open(ConfirmDialogComponent, { disableClose: true });\n            dialog.componentInstance.initContext(confirmContext);\n            dialog.afterClosed().subscribe(res => {\n                if (res == \"cancel\") {\n                    return;\n                }\n                let isReference = (res == \"reference\");\n                let ws = this._metadataService.getWorkspaceCodeById(this._studioService.getRoot().__workspace);\n                this._portalService.getWebpartElement(dndItem.name, dndItem.type, ws)\n                    .subscribe(wp => {\n                        let webpart = <IUIDesigner>wp;\n                        webpart.properties.name = webpart.name;\n                        webpart.isReference = isReference;\n                        if( !webpart.isReference){\n                            // Remove some properties\n                            delete webpart.properties.componentName;\n                            delete webpart[\"devContentState\"];\n                            delete webpart[\"workspaceIndexes\"];\n                            delete webpart[\"isNew\"];\n                            delete webpart[\"isDirty\"];\n                            delete webpart[\"componentRef\"];\n                            delete webpart[\"isViewable\"];\n                            delete webpart[\"isTestable\"];\n                        }\n                        if (this._studioService.addElement(webpart, cell)) {\n                            let hr = new ElementHistoryData(HistoryObjectType.Webpart);\n                            hr.cellId = cell.id;\n                            hr.element = webpart;\n                            this._studioService.writeHistory(RecordCommand.add, hr);\n                            this._studioService.setDirty();\n                            this._studioService.refreshRoot();\n                        }\n                    });\n            });\n        }\n        else {\n            let shortControlTypeName = _.last(dndItem.fullTypeName.split('.')) as string;\n            let nonVirtWP = <IElement>{\n                name: dndItem.name, type: 'Webpart', isStatic: true,\n                isLocked: false, hasPublishContent: false, isInDeveloping: false, isReference: false, owner: null,\n                properties: {\n                    __type: shortControlTypeName,\n                    name: dndItem.name,\n                    isReference: false,\n                    typeName: dndItem.fullTypeName\n                },\n                items: null,\n                _fullTypeName: dndItem.fullTypeName,\n                typeName: shortControlTypeName\n            };\n            if (this._studioService.addElement(nonVirtWP, cell)) {\n                this._studioService.setDirty();\n                this._studioService.refreshRoot();\n            }\n        }\n    }\n\n    xmlTextChanged(txt:string) {\n        if(this._studioService.getRoot().isDirty === true){\n            this.root.__xml = txt;\n        }\n        else{\n            if(this.root.__xml != txt ){\n                this._studioService.setDirty();\n                this.root.__xml = txt;\n                this.xmlChanged = true;\n            }\n        }\n    }\n\n    isCellSelected(cell: ICell) {\n        if( this.mode == DesignModes.Design)\n            return cell.isSelected === true;\n\n        return false;\n    }\n\n    getProperty(control: IElement, name: string){\n        if( control.properties )\n            return val(control.properties, name);\n        return null;\n    }\n\n    get showEditorArea() : boolean {\n        return this.mode != DesignModes.Xml && \n            this.mode != DesignModes.PersonalizationReport && this.mode != DesignModes.WhereUsed && !!this.layoutManager;\n    }\n\n    private initDesign(): void {\n        if (this.root.type == 'Page')\n            this.elementIconClass = 'fa fa-list-alt';\n        else if (this.root.type == 'Webpart')\n            this.elementIconClass = 'fa fa-puzzle-piece';\n        else\n            this.elementIconClass = 'hidden';\n\n        this.mode = this.root.__designMode;\n        this.isNew = this.root.isNew === true;        \n\n        if( !this.layoutManager )\n            this.layoutManager = new LayoutManager(this.root, this._studioService.getRoot().history);\n\n        this.layoutManager.clearSelection();\n        this._cd.detectChanges();\n    }\n\n    getWsColor(controlElement: IElement, cell: LayoutCell) {\n        if (this.customWorkspaceColor) {\n            if (controlElement.map) {\n                let boxStyle = 'inset 0 0 5px ';\n                _.forEach(controlElement.map, v => {\n                    boxStyle += this.customWorkspaceColor;\n                });\n                return boxStyle;\n            }\n\n            if (cell && cell.isStatic === false) {\n                return 'inset 0 0 5px ' + this.customWorkspaceColor;\n            }\n        }\n        return null;\n    }\n\n    private designChanged(): void {\n        this.layoutManager.refresh();\n\n        if( this.root.__designMode == DesignModes.Xml){\n            this.reloadXml();\n        }\n        \n        if(this.root.__selectedElement)\n            this._studioService.updatePropertyPanel(this.root.__selectedElement);\n\n        this._cd.markForCheck();\n    }\n\n    private reloadXml(){\n        if(this.root.__xml)\n            this.xmlText = of<string>(this.root.__xml);\n        else\n            this.xmlText = this._portalService.elementToXml(this.root, this._metadataService.getWorkspaceCodeById(this.root.__workspace));\n    }\n\n}\n\n","\n<div *ngIf=\"root\">\n    <csi-design-toolbar [designElement]=\"root\" [layoutActions]=\"layoutActions | async\" \n        (onModeChanged)=\"modeChanged($event)\" ></csi-design-toolbar>\n</div>\n\n<div [attr.mode]=\"mode\" class=\"rootDesign csi-layoutManager\">\n    <div *ngIf='root;else loading' class=\"csi-design-element\">\n        <div class=\"csi-titleContainer\">\n            <div class=\"csi-title\" (click)='activateElement(root, \"wp\")'>\n                <span class=\"csi-layoutComponentTitle\">\n                    <i [class]=\"elementIconClass\" aria-hidden=\"true\"></i>{{headerTitle}}\n                </span>\n            </div>\n        </div>        \n\n        <div *ngIf=\"root.type=='Page' && showEditorArea;else showWebPart\" class=\"editor-area csi-control-area in\">\n            <div class=\"layout-grid-container\" [style.zoom]=\"(root.scaleValue / 100)\">\n                <table *ngIf=\"layoutManager.matrix\" class=\"csi-layoutTable\" [attr.active-mode]=\"mode\">\n                    <tr *ngFor='let row of layoutManager.matrix' class=\"cs-editor-layout-row\">\n                        <td *ngFor='let cell of row | hiddenItemFilter: false' (click)='selectCell($event, cell)' class=\"csi-cell\"\n                            [class.selected]=\"isCellSelected(cell)\" cols [id]=\"cell.id\" [rowSpan]='cell.rowSpan' [colSpan]='cell.colSpan'>\n                            <div class=\"cell-item-container webpart-container\" [ngStyle]=\"cell.cellStyle\"\n                                     [csi-droppable]=\"getDropZoneOptions(cell)\">\n                                <ng-container *ngFor=\"let item of cell.items | keyvalue\">\n                                    <div *ngIf=\"getItemControl(item) as ctl\" class=\"csi-embeddedComponent\" [attr.ref-name]=\"ctl.name\"\n                                    [csi-draggable]=\"{disabled: mode!= DesignModesEnum.Controls || readonly, type: 'webpart-element', id:ctl.id, model: ctl, hndClass: 'csi-layoutComponentTitle'}\">\n                                        <!--Webpart-->\n                                        <csi-design [element]=\"ctl\"></csi-design>\n                                    </div>    \n                                </ng-container>\n                            </div>\n                        </td>\n                        <td class=\"csi-hiddencell v\">\n                            <div></div>\n                        </td>\n                    </tr>\n                    <!--add empty row to render table properly-->\n                    <tr *ngIf='layoutManager.matrix.length > 0'>\n                        <td *ngFor='let cell of layoutManager.matrix[0]' class=\"csi-hiddencell h\">\n                            <div></div>\n                        </td>\n                        <td class=\"csi-hiddencell h v\">\n                            <div></div>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n\n        <ng-template #showWebPart>\n            <csi-design [element]='root' [isRootWebpart]=\"true\" *ngIf=\"showEditorArea\"></csi-design>\n        </ng-template>\n\n        <div class=\"csi-editor-xml\" *ngIf=\"mode==DesignModesEnum.Xml\">\n            <xml-textEditor [xml]='xmlText' [zoom]=\"root.__zoomXml\" (onTextChanged)=\"xmlTextChanged($event)\"></xml-textEditor>\n        </div>\n\n        <div *ngIf=\"mode==DesignModesEnum.PersonalizationReport\" class=\"csi-editor-pers-rep\">\n            <csi-pers-report [element]=\"root\"></csi-pers-report>\n        </div>\n\n        <div *ngIf=\"mode==DesignModesEnum.WhereUsed\" class=\"csi-editor-where-used\">\n            <where-used-report [name]=\"root?.name\"></where-used-report>\n        </div>\n\n    </div>\n\n    <ng-template #loading>\n        <div>Loading ....</div>\n    </ng-template>\n</div>\n","import { Component, Input, OnChanges, OnDestroy, ChangeDetectionStrategy, ChangeDetectorRef, SimpleChanges} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport _ from 'lodash';\nimport { Subscription } from 'rxjs';\n\nimport { PortalService } from '../../common/services/portal.service';\nimport { AlertService } from '../../alert/alert.service';\nimport { LabelService } from '../../common/services/label.service';\nimport {\n    IElement, IUIDesigner, IResultStatus, StudioSubjects, IDesignControl, DesignModes, ICellItemRef, uuid } from '../../common/objects/common';\nimport { LayoutManager } from './objects/layoutManager';\nimport { LayoutCell, ICell } from './objects/layoutCell';\nimport { ControlManager } from './control/controlManager';\nimport { ElementHistoryData, RecordCommand, HistoryObjectType } from '../../common/objects/historyLog';\nimport { GridWizardComponent } from './gridWizard/gridWizard.component';\nimport { ConfirmDialogComponent } from '../../shared/dialog/confirm.dialog.component';\nimport { StudioStateService } from '../../common/services/studioStateService';\nimport { MetadataService } from '../../common/services/metadata.service';\nimport { DragInfo } from '../../shared/drag';\nimport { DropDataInfo } from '../../shared/directives/droppable.directive';\n\n@Component({\n    selector: 'csi-design',\n    templateUrl: 'design.component.html',\n    styleUrls: ['design.component.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class DesignComponent implements OnChanges, OnDestroy, IDesignControl {\n    @Input(\"element\") __element: IUIDesigner;\n    @Input() isRootWebpart: boolean = false;       // is root webpart\n    @Input() isParentReference: boolean = false;\n    copyEl:IElement;\n\n    get element(): IUIDesigner { return this.__element; }\n\n    DesignModesEnum = DesignModes;\n\n    collapsible: boolean = false;\n    designElement: IElement;\n   \n    get isCollapsed() {return this.designElement.__collapsed; }\n\n    get isReference() {return this.designElement.isReference; }\n\n    get layoutManager(): LayoutManager {return this.designElement.__layoutManager; }\n    set layoutManager(lm: LayoutManager) {this.designElement.__layoutManager = lm; }\n\n    elementIconClass: string;\n    designClass = \"csi-layoutManager\";\n    isTabbed = false;    \n    controlMgr: ControlManager;\n    nonVirtualWp = false;\n    displayCellPosition() : boolean {return this._studioService.displayCellPosition;}\n\n    get headerTitle() {return this.designElement && this.designElement.properties && (this.designElement.properties.title || this.designElement.properties.name); };\n\n    get root() : IUIDesigner {return this._studioService.getRoot();}\n\n    get mode(): DesignModes { return this.root.__designMode; }\n    get readonly() { return this.root.__workspace !== 0; }\n\n    get cellItemParams() : any{\n        var r = {\n            items: null,\n            type: null,\n            linked:this.isReference\n        }\n        if( this.designElement.type == \"Webpart\"){\n            // look for controls\n            r.type = \"control\";\n            r.items = this.designElement.items;\n        }\n        else if(this.designElement.type == \"Control\"){\n            // look for webparts\n            r.type = \"webpart\";\n            if(this.designElement.isReference )\n                r.items = null;\n            else\n                r.items = this.root.items;\n        }\n        return r;\n    }\n\n    private refreshSubscription: Subscription;\n    private selectSubscription: Subscription;\n    private isAlwaysCollapsed:boolean = false;\n    \n    private get studioSubjects(): StudioSubjects { return this._studioService.subjects; }\n\n     constructor(\n        private _labelService: LabelService,\n        private _portalService: PortalService,\n        private _studioService: StudioStateService,\n        private _cd: ChangeDetectorRef,\n        private _alertservice: AlertService,\n        private _metadataService: MetadataService,\n        public _dialog: MatDialog\n    ) {\n        this.refreshSubscription = this.studioSubjects.refresh.subscribe(\n            (el: any) => {\n                if( el == this.designElement ){ \n                    this.designChanged();\n                }\n        });\n    }\n\n    getDropZoneOptions(cell: any ) : DropDataInfo {\n        let dropTypes:string;\n        if (this.designElement.type == \"Control\")\n            dropTypes = \"webpart-element,webpart-ref\";\n        else if (this.designElement.type == \"Webpart\")\n            dropTypes = \"control-toolbox,control-ref,control-field\";\n        return <DropDataInfo>{\n            disabled: this.readonly,\n            types: dropTypes,\n            id: cell.id,\n            drop: (d: DragInfo) => {                \n                let cellId = d.dropZoneElement.parentElement.id;\n                let cell: LayoutCell = this.layoutManager ? this.layoutManager.findLayoutCellById(cellId) : null;  \n                this.addElementToCell(cell, d);\n            }\n        }\n    }\n\n    ngOnChanges(ch : SimpleChanges): void {\n        if( ch.__element){\n            this.designElement = ch.__element.currentValue;\n            this.initDesignComponent();\n        }\n    }\n\n    ngOnDestroy(): void {\n        if (this.refreshSubscription)\n            this.refreshSubscription.unsubscribe();\n\n        if (this.selectSubscription)\n            this.selectSubscription.unsubscribe();        \n    }\n\n    activateElement(e: Event, selected: IElement): void {\n        if (selected) \n            if (this.mode != DesignModes.Controls) \n                return;                    \n        this._studioService.activateElement(selected);\n        if( e )\n            e.stopPropagation();\n    }\n\n    reloadReference(): void {\n        this.getReferenceWebpartFromServer();\n    }\n\n    toggleCollapse(): void {\n\n        if( this.isAlwaysCollapsed)\n            this.designElement.__collapsed = true;\n        else\n            this.designElement.__collapsed = !this.designElement.__collapsed;\n        this.ping();\n    }\n\n    selectCell($event: Event, cell : LayoutCell) {        \n        if (this.mode == DesignModes.Design) {\n            this._studioService.selectCell(cell);\n            if( $event )\n                $event.stopPropagation();\n        }            \n    }\n\n    private addElementToCell(cell:LayoutCell,  di:DragInfo): void {\n        let dndItem : any = di.dragModel;\n\n        if (!cell)\n            return;\n\n        if (this.mode != DesignModes.Controls) {\n            // Reset active element if not a control mode\n            this.activateElement(null, null);\n            return;\n        }\n\n        // dropping enabled only in control mode\n        if (!dndItem) {\n            return;\n        }\n\n        if (_.isFunction(dndItem.addDragData)) {\n            dndItem.addDragData();\n            if (!dndItem.type)\n                return;\n        }\n\n        // dndItem is IElement that is moved\n        if (dndItem.id) {\n            // find where the item was\n            let fromElement = this._studioService.findElementOwner(this._studioService.activeRootElement, dndItem);\n            let fromCell = this._studioService.findCellByElement(dndItem);\n            if(  di.ctrlPressed ){\n                this.copyEl=_.cloneDeep<IElement>(dndItem);              \n                let copyName= uuid.id(this.copyEl.typeName + \"-\");\n\n                this.copyEl.id=uuid.id();\n                this.copyEl.name=copyName;       \n                if(this.copyEl.properties){\n                    this.copyEl.properties.name=copyName;\n                }               \n            }      \n                if (this._studioService.moveElement(dndItem, cell, fromCell,undefined,this.copyEl)) {\n                    this._studioService.getRoot().isDirty = true;\n                      this.activateElement(null,dndItem);\n     \n                    // record into the history\n                    if(di.ctrlPressed){\n                        this.activateElement(null,this.copyEl);\n                        this.recordElementToHistory(cell.id,this.copyEl,fromCell.id,RecordCommand.add);\n                        this.copyEl=undefined;\n                    }    \n                    else{\n                        this.recordElementToHistory(cell.id,dndItem,fromCell.id,RecordCommand.move);\n                    }     \n                    // Send refresh request if source is another element\n                    if (fromElement != this.designElement)\n                        this._studioService.refreshRoot();                \n                }        \n        }\n        else {\n            // Dragged control or webpart\n            this.addNewControl(dndItem, cell);\n        }\n        this.setDirty();\n        this._studioService.refreshElement(this.designElement);\n    }\n\n   private recordElementToHistory(cellId:string,item:any,fromCellId:string,command:number){\n        let hr = new ElementHistoryData(HistoryObjectType.Control);\n        hr.cellId = cellId;\n        hr.element = item;\n        hr.fromCellId = fromCellId;\n        this._studioService.writeHistory(command, hr);\n    }\n\n    sliderValueChanged($event) {\n        let newScaleVal: number = $event;\n\n        if( this.mode == DesignModes.Xml){\n            this.designElement.__zoomXml = newScaleVal;\n        }\n\n        if (newScaleVal !== (this.designElement as IUIDesigner).scaleValue) {\n            (this.designElement as IUIDesigner).scaleValue = newScaleVal;\n        }\n    }\n\n    private addNewControl(dndItem: any, cell: LayoutCell) {\n        if (dndItem.type == \"Webpart\") {\n            this.addWebpartControl(dndItem, cell);\n        }\n        else if (dndItem.type == \"JQDataGrid\" && dndItem.toolboxImage) {\n            this.addDataGridControl(dndItem, cell);     // added by dragging from a control toolbox\n        }\n        else {\n            let control = ControlManager.createNewControl(dndItem.type, dndItem.typeName);\n            if (_.isFunction(dndItem.controlInit)) {\n                let owner = this._studioService.findCellOwner(cell);\n                dndItem.controlInit(control, owner, this._portalService);\n            }\n            this.addControlToCell(control, cell);\n        }\n    }\n\n    private addWebpartControl(dndItem: any, cell: LayoutCell) {\n        if (!dndItem.isStatic) {\n            // virtual web part\n            let titleLabel = this._labelService.getLabel('PS_WEBPART_TITLE', 'Add Webpart');\n            let messageLabel = this._labelService.getLabel('PS_WEBPART_ADD', \"Do you want to add the web part as a local copy or a reference to its content?\");\n            let copyLabel = this._labelService.getLabel('PS_COPY', 'Copy ');\n            let referenceLabel = this._labelService.getLabel('PS_ACTION_REFERENCE', 'Reference');\n            let confirmContext = {\n                title: titleLabel,\n                message: messageLabel,\n                actions: [\n                    { action: 'copy', name: copyLabel, isPrimary: false },\n                    { action: 'reference', name: referenceLabel, isPrimary: false }]\n            };\n\n            let dialog = this._dialog.open(ConfirmDialogComponent, { disableClose: true });\n\n            dialog.componentInstance.initContext(confirmContext);\n            dialog.afterClosed().subscribe(res => {\n                if (res == \"cancel\") {\n                    return;\n                }\n                let isReference = (res == \"reference\");\n                let ws = this._metadataService.getWorkspaceCodeById(this._studioService.getRoot().__workspace);\n                this._portalService.getWebpartElement(dndItem.name, dndItem.type, ws)\n                    .subscribe(wp => {\n                        let webpart = <IUIDesigner>wp;\n                        webpart.properties.name = webpart.name;\n                        webpart.isReference = isReference;\n                        if(this._studioService.addElement(webpart, cell)) {\n                            this._studioService.refreshElement(this.designElement);\n                        }\n                    });\n            });\n        }\n        else {\n            let shortControlTypeName = _.last(dndItem.fullTypeName.split('.')) as string;\n            let nonVirtWP = <IElement>{\n                name: dndItem.name, type: 'Webpart', isStatic: true,\n                isLocked: false, hasPublishContent: false, isInDeveloping: false, isReference: false, owner: null,\n                properties: {\n                    __type: shortControlTypeName,\n                    name: dndItem.name,\n                    isReference: false,\n                    typeName: dndItem.fullTypeName\n                },\n                items: null,\n                _fullTypeName: dndItem.fullTypeName,\n                typeName: shortControlTypeName\n            };\n            if (this._studioService.addElement(nonVirtWP, cell)) {\n                this.designChanged();\n                this.setDirty();\n            }\n        }\n    }\n\n    private addDataGridControl(dndItem: any, cell: LayoutCell) {\n        let titleLabel = this._labelService.getLabel('PS_GRID_ADD_TITLE', 'Grid Control Creation');\n        let messageLabel = this._labelService.getLabel('PS_GRID_ADD_MSG', 'How do you want to create the DataGrid control?');\n        let wizardLabel = this._labelService.getLabel('PS_GRID_WIZARD', 'Grid Wizard');\n        let defaultLabel = this._labelService.getLabel('PS_GRID_ADD_DEFAULT', 'Create a Default Grid');\n        let newGrid = ControlManager.createNewControl(dndItem.type, dndItem.typeName);\n        let confirmContext = {\n            title: titleLabel,\n            message: messageLabel,\n            actions: [\n                { action: 'wizard', name: wizardLabel, isPrimary: false },\n                { action: 'default', name: defaultLabel, isPrimary: false }]\n        };\n\n        let dialog = this._dialog.open(ConfirmDialogComponent, { disableClose: true });\n\n        dialog.componentInstance.initContext(confirmContext);\n        dialog.afterClosed().subscribe(res => {\n            if (res == \"wizard\") {\n                let dialog = this._dialog.open(GridWizardComponent, { width: '930px', height: '500px', disableClose: true });\n                dialog.componentInstance.initializeNewGrid(newGrid, cell);\n                dialog.afterClosed().subscribe(grid => {\n                    this.addControlToCell(grid, cell);\n                });\n            }\n            else\n                this.addControlToCell(newGrid, cell);\n        });\n    }\n\n    getItemControl(item:any) : any{\n        const r = item.value as ICellItemRef;\n        let items = this.designElement.items;\n        if( this.designElement.type == \"Control\"){\n            if( this.designElement.isReference ){\n                const ownerWp = this._studioService.findElementOwner(this.root, this.designElement);\n                if( ownerWp )\n                    items = ownerWp.items; \n            }\n            else{\n                items = this.root.items;                \n            }\n        }\n\n        const c = items && _.find(items, (it)=> r.name == it.name);\n        if( !c ){\n            // console.error(\"not found\", r);\n        }\n        if( this.designElement.isReference)\n            c.isReference = true;\n        return c;\n    }\n\n    private addControlToCell(control: IElement, cell: LayoutCell): void {\n        if (control) {\n            let isSuccess = this._studioService.addElement(control, cell);\n            if (isSuccess) {\n                let hr = new ElementHistoryData(HistoryObjectType.Control);\n                hr.cellId = cell.id;\n                hr.element = control;\n                this._studioService.writeHistory(RecordCommand.add, hr);\n                this.activateElement(null,control);\n                this._studioService.refreshControl(control);\n            }\n        }\n    }\n\n    isControlSelected(ct: IElement) {\n        let sel = false;\n        if( this._studioService.activeElement && this._studioService.activeElement.id == ct.id )\n            sel = true;\n\n        return sel;\n    }\n\n    isCellSelected(cell: ICell) {\n        if( this.mode == DesignModes.Design)\n            return cell.isSelected === true;\n\n        return false;\n    }\n\n    get showEditorArea() : boolean {\n        return this.mode != DesignModes.Xml && \n            this.mode != DesignModes.PersonalizationReport && \n            this.layoutManager && !this.isCollapsed;\n    }\n\n    private initDesignComponent(): void {\n        let el : IElement = this.designElement;\n        if (el.type == \"Webpart\" && this.isReference) {\n            //reference webpart\n            this.setupReferenceWebpart();\n        }\n        else if(el.type == \"Webpart\" && this._metadataService.nonVirtualWebparts.indexOf(el.name)!=-1){\n            this.designElement = el;\n            this.designElement.isReference = false;\n            this.designElement.layout = null;\n            this.layoutManager = null;\n            this.nonVirtualWp = true;\n            this.isAlwaysCollapsed = true;\n        }\n        else {\n            // embedded webpart or combined control \n            this.setDesignElement(this.designElement);\n        }\n        if (this.isTabbed) {\n            this.controlMgr = new ControlManager(this.designElement);\n            this.setActiveTab(this.designElement['__activeTab'] || (this.controlMgr.tabs.length && this.controlMgr.tabs[0].name));\n        }\n    \n        if (this.designElement && !this.designElement.isReference) {\n            if (this.designElement.type) {\n                if (this.designElement.type == 'Page')\n                    this.elementIconClass = 'fa fa-list-alt';\n                else if (this.designElement.type == 'Webpart')\n                    this.elementIconClass = !this.nonVirtualWp ? 'fa fa-puzzle-piece' : 'fa fa-thumb-tack';\n                else\n                    this.elementIconClass = 'hidden';\n            }\n            if( this.layoutManager )\n                this.layoutManager.reset();\n            this.designChanged();\n        }\n    }\n\n    private setActiveTab(tabname: string): void {\n        if (this.controlMgr.setActiveTab(tabname)) {\n            let tabElement = this.controlMgr.getActiveTabElement();\n            if (tabElement)\n                this.layoutManager = new LayoutManager(tabElement, this._studioService.getRoot().history);\n            this.ping();\n        }\n    }\n\n    private ping(){\n        this._cd.detectChanges();\n    }\n\n    getWsColor(controlElement: IElement, cell: LayoutCell) : string {\n        let cl = \"\";\n        if( controlElement && controlElement.map ){\n            _.forEach(controlElement.map, (wsValue:any, propName:string) => {\n                _.forEach(wsValue, (wsVal, wsCode)=>{\n                    const ws = this._metadataService.workspaces.find(w=> w.Code == wsCode);\n                    if( ws ){\n                        cl += (\" workspace-\" + ws.ID);\n                    }\n                });\n            }); \n        }\n\n        if (this.root.__workspace != 0) {\n            if(controlElement && !controlElement.isStatic){\n            }\n\n            if (cell && cell.isStatic === false) {\n                cl += (\" workspace-\" + this.root.__workspace);\n            }\n        }\n        return cl;\n    }\n\n    private designChanged(): void {\n        if( this.layoutManager )\n            this.layoutManager.refresh();\n\n        if (this.designElement.type == \"Control\") {\n\n            if (this.isTabbed) {\n                let actTabName = this.controlMgr.activeTab ? this.controlMgr.activeTab.name : '';\n                let tabToSelect;\n                if (actTabName) {\n                    tabToSelect = this.controlMgr.tabs.find(t => t.name == actTabName);\n                    if (!tabToSelect && this.controlMgr.tabs.length > 0)\n                        tabToSelect = this.controlMgr.tabs[0];\n                }\n\n                if (tabToSelect)\n                    this.setActiveTab(tabToSelect);\n            }\n        }\n        if(this.root.__selectedElement)\n            this._studioService.updatePropertyPanel(this.root.__selectedElement);\n        this.ping();\n    }\n\n    private setupReferenceWebpart(): void {\n        //check if reference web part already exist in studioState\n        let existingWebpart = this._studioService.getRefWebpartsFromState(this.designElement.name);\n\n        if (existingWebpart){            \n            existingWebpart.isReference = true;\n            this.setDesignElement(existingWebpart, true);\n        }        \n        else\n            this.getReferenceWebpartFromServer();\n    }\n\n    private addWebpartToItems(webpart : IUIDesigner) : IUIDesigner{\n        // replace it in items\n        let wpr = _.find( this.root.items, it=> it.name == webpart.name);\n        if( wpr ){\n            this.root.items[wpr.id] = _.cloneDeep(webpart);\n            wpr = this.root.items[wpr.id];\n            wpr.isReference = true;\n        } \n        return wpr;\n    }\n\n    private getReferenceWebpartFromServer(): void {\n        //get webpart from server\n        this._portalService.getWebpartElement(this.designElement.name, this.designElement.type, this._metadataService.getWorkspaceCodeById(this._studioService.getRoot().__workspace))\n            .subscribe(wp => {\n                let webpart = <IUIDesigner>wp;\n                if (webpart.name && webpart.typeName) {\n                    this._studioService.storeRefWebpart(webpart);\n                    this.addWebpartToItems(webpart);\n                    this.setDesignElement(webpart, true);\n                }\n                else {\n                    // error of loading webpart\n                    this._alertservice.error(<IResultStatus>(<any>webpart));\n                }\n                this.ping();\n            });\n    }\n\n    private setDesignElement(element: IElement, isReference: boolean = false) {\n        this.designElement = element;\n        this.designElement.isReference = isReference;\n        this.layoutManager = this.layoutManager || new LayoutManager(element, this.root.history);\n        this.isTabbed = element.typeName == 'JQTabContainer';\n        this.isAlwaysCollapsed = this.designElement.type == \"Control\" && this.designElement.isReference;\n\n        if( typeof this.designElement.__collapsed == \"undefined\" )\n            this.designElement.__collapsed = this.isAlwaysCollapsed;\n               \n        this.collapsible = !this.isTabbed; // && !this.isReference;\n\n        let actCell = this._studioService.activeElement;\n        if (actCell && actCell.type == 'cell') {\n            let ow = this._studioService.findCellOwner(actCell);\n            if (ow && ow.id == this.designElement.id) {\n                // the cell was selected before refresh. It must be re-selected after layout creation\n                let lc = this.layoutManager.findLayoutCell(actCell);\n                if (lc)\n                    this.selectCell(null, lc);\n            }\n        }\n    }\n    private setDirty() {\n        this._studioService.setDirty();\n    }\n}\n","<div [attr.mode]=\"mode\" class=\"csi-layoutManager\" [class.root-webpart]=\"isRootWebpart\" [class.activeElement]=\"isControlSelected(designElement)\"\n    [class.csi-editor-disabled-area]=\"isReference||nonVirtualWp\"\n    [class.non-virtual]=\"nonVirtualWp\"\n    [class.webpart-hidden]=\"designElement.properties && this.designElement.properties.hidden\">    \n    <div *ngIf='designElement' class=\"csi-design-element\">       \n        <div *ngIf=\"!isRootWebpart\" class=\"csi-titleContainer\" [hidden]='mode==DesignModesEnum.View'>\n\n            <div class=\"csi-title\" (click)='activateElement($event, designElement)'>\n                <div *ngIf='collapsible' class=\"csi-layoutCollapse\">\n                    <span class=\"expander\" (click)='toggleCollapse()'>\n                        <i [class]=\"!isCollapsed && !isParentReference ? 'fa fa-minus' : 'fa fa-plus'\" aria-hidden=\"true\"></i>\n                    </span>\n                </div>\n                <span *ngIf=\"isReference\">\n                    <i class=\"fa fa-link\" aria-hidden=\"true\"></i>\n                </span>\n                <span class=\"csi-layoutComponentTitle\">\n                    <i [class]=\"elementIconClass\" aria-hidden=\"true\"></i>{{headerTitle}}\n                </span>\n            </div>\n        </div>\n\n        <div class=\"editor-area csi-control-area in\" *ngIf='showEditorArea' [id]=\"designElement.id + '_controlArea'\">\n            <div *ngIf=\"isTabbed\" class=\"tab-control\">\n                <ul class=\"nav nav-tabs\">\n                    <li *ngFor='let tab of controlMgr.tabs' role=\"presentation\" [class.active]=\"tab.isActive\" [attr.title]=\"tab.getTitle()\">\n                        <div (click)='setActiveTab(tab)'>\n                            <span>{{tab.getTitle()}}</span>\n                        </div>                        \n                    </li>\n                </ul>\n            </div>\n            <div class=\"layout-grid-container\" [style.zoom]=\"(designElement.scaleValue / 100)\" *ngIf=\"!isParentReference\">\n                <table *ngIf=\"layoutManager?.matrix\" class=\"csi-layoutTable\" [attr.active-mode]=\"mode\">\n                    <tr *ngFor='let row of layoutManager?.matrix' class=\"cs-editor-layout-row\">\n                        <td *ngFor='let cell of row | hiddenItemFilter: false' (click)='selectCell($event, cell)' class=\"csi-cell\" [class.selected]=\"isCellSelected(cell)\" [id]=\"cell.id\"\n                            [colSpan]='cell.colSpan' [rowSpan]='cell.rowSpan' [attr.section-index]=\"cell.sectionRowNumber % 2\" cols>\n                            <div class=\"cell-item-container\" [csi-droppable]=\"getDropZoneOptions(cell)\" [ngStyle]=\"cell.cellStyle\"> \n                                <ng-container *ngFor=\"let item of cell.items | keyvalue\">\n                                    <div *ngIf=\"getItemControl(item) as ctl\" class=\"csi-embeddedComponent {{getWsColor(ctl,cell)}}\" [attr.ref-name]=\"item.value?.name\"\n                                        [class.vertical]=\"designElement.type == 'Control'\" \n                                        [csi-draggable]=\"{disabled: (readonly || isReference || mode!=DesignModesEnum.Controls), type: ctl.type.toLowerCase()+'-ref', id: ctl.id, model: ctl}\">\n                                        <div *ngIf=\"designElement.type=='Webpart';else webpartsForControls\">                                        \n                                            <!--Controls-->\n                                            <div class=\"csi-controlEditor\" [class.activeElement]=\"isControlSelected(ctl)\">\n                                                <csi-control-container [element]=\"ctl\" [isReference]=\"ctl.isReference\" [subjects]=\"studioSubjects\" [showCollapsed]=\"isReference===true\"></csi-control-container>\n                                            </div>\n                                        </div>\n                                        <ng-template #webpartsForControls>                                            \n                                            <!--Webparts-->\n                                            <div *ngIf=\"!designElement.isReference\">\n                                                <csi-design [element]=\"ctl\"></csi-design>\n                                            </div>\n                                        </ng-template>\n                                    </div>\n                                </ng-container>\n                            </div>\n                        </td>\n                        <td class=\"csi-hiddencell v\">\n                            <div></div>\n                        </td>\n                    </tr>\n                    <!--add empty row to render table properly-->\n                    <tr *ngIf='layoutManager?.matrix.length > 0'>\n                        <td *ngFor='let cell of layoutManager?.matrix[0]' class=\"csi-hiddencell h\">\n                            <div></div>\n                        </td>\n                        <td class=\"csi-hiddencell h v\">\n                            <div></div>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<ng-template #notFound>\n    <div>Not found</div>\n</ng-template>\n","import { NgModule, Optional, SkipSelf, }       from '@angular/core';\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { ControlContainerComponent } from './control/controlContainer.component';\nimport { DesignComponent } from './design.component';\nimport { PageflowDesignComponent } from './designPageflow.component';\n\n//app misc\nimport { ComponentItemFilter } from './pipes/componentItemFilter';\nimport { GridWizardComponent } from './gridWizard/gridWizard.component';\nimport { GridWizardFilter } from './gridWizard/gridWizardFilter';\nimport { GridWizardService } from './gridWizard/gridWizard.service';\nimport { HiddenItemFilter } from './pipes/hiddenItemFilter';\nimport { PersonalizationReportComponent } from '../personalizationReport/personalizationReport.component';\nimport { XmlTextEditorComponent } from '../xml/xmlTextEditor.component';\nimport { AceEditorModule} from 'ng2-ace-editor';\nimport { ControlMappingService } from './control/controlMapping.service';\nimport { ControlComponentBase } from './control/controlBase.component';\n// import { COMPONENT_DIRECTIVES as cmp,\n\n// } from './control/control.components';\nimport { BooleanSwitchComponent  } from './control/templates/BooleanSwitch.component';\nimport { BusinessObjectComponent } from './control/templates/businessObject.component';\nimport { ButtonComponent } from './control/templates/button.component';\nimport { JQTabContainer } from './control/templates/jqTabContainer.companent';\nimport { RibbonContainer } from './control/templates/ribbonContainer.companent';\nimport { SectionDropDown } from './control/templates/sectionDropDown.companent';\nimport { SectionDropDownMobile } from './control/templates/sectionDropDownMobile.companent';\nimport { ToggleContainer } from './control/templates/toggleContainer.companent';\nimport { WebPartsWrapperControl } from './control/templates/webPartsWrapperControl.companent';\nimport { WorkflowNavigatorComponent } from './control/templates/workflowNavigator.componen';\nimport { CheckBoxComponent } from './control/templates/checkBox.component';\nimport { ColorPickerComponent } from './control/templates/colorPicker.component';\nimport { ContainerListComponent } from './control/templates/containerList.component';\nimport { ContainerListGridComponent } from './control/templates/containerListGrid.component';\nimport { CrystalReportComponent } from './control/templates/crystalReport.component';\nimport { DataCollectionComponent } from './control/templates/dataCollection.component';\nimport { DateChooserComponent } from './control/templates/dateChooser.component';\nimport { DropDownListComponent } from './control/templates/dropDownList.component';\nimport { DurationComponent } from './control/templates/duration.component';\nimport { FileInputComponent } from './control/templates/fileInput.component';\nimport { GenericComponent } from './control/templates/generic.component';\nimport { HTMLPanelComponent } from './control/templates/htmlPanel.component';\nimport { IframeComponent } from './control/templates/iframe.component';\nimport { ImageComponent } from './control/templates/image.component';\nimport { InquiryComponent } from './control/templates/inquiry.component';\nimport { InstructionTextComponent } from './control/templates/instructionText.component';\nimport { JQDataGridComponent } from './control/templates/jqDataGrid.component';\nimport { LabelComponent } from './control/templates/label.component';\nimport { LinkButtonComponent } from './control/templates/linkButton.component';\nimport { MultiSelectPickListComponent } from './control/templates/multiSelectPickList.component';\nimport { NamedObjectComponent } from './control/templates/namedObject.component';\nimport { PageTabComponent } from './control/templates/pageTab.component';\nimport { PIMetricComponent } from './control/templates/piMetric.componen';\nimport { PlmVisComponent } from './control/templates/plmVis.component';\nimport { RadioButtonComponent } from './control/templates/radioButton.component';\nimport { ReadOnlyComponent } from './control/templates/readOnly.component';\nimport { RevisionedObjectComponent } from './control/templates/revisionedObject.component';\nimport { ScaleControlComponentBase } from './control/templates/scaleControl.component';\nimport { ScrollableMenuComponent } from './control/templates/scrollableMenu.component';\nimport { SlideMenuComponent } from './control/templates/slideMenu.component';\nimport { StatusMessageComponent } from './control/templates/statusMessage.component';\nimport { TextBoxComponent } from './control/templates/textBox.component';\nimport { TextEditorComponent } from './control/templates/textEditor.component';\nimport { TitleComponent } from './control/templates/title.component';\nimport { UnknownComponent } from './control/templates/unknown.component';\n\nimport { DesignToolbarComponent } from './toolbar.component';\nimport { DesignRootComponent } from './design-root.component';\n import { WhereUsedReportComponent } from './whereUsed/whereUsed.component';\n@NgModule({\n    imports: [\n        SharedModule,\n        AceEditorModule,\n    ],\n    declarations: [\n        ComponentItemFilter,\n        ControlContainerComponent,\n        DesignComponent,\n        GridWizardComponent,\n        PageflowDesignComponent,        \n        PersonalizationReportComponent,\n        XmlTextEditorComponent,\n        HiddenItemFilter,\n        GridWizardFilter,\n        ControlComponentBase,\n        DesignToolbarComponent,\n        DesignRootComponent,\n        BusinessObjectComponent,\n        ButtonComponent,\n        JQTabContainer,\n        RibbonContainer,\n        SectionDropDown,\n        SectionDropDownMobile,\n        ToggleContainer,\n        WebPartsWrapperControl,\n        BooleanSwitchComponent,\n        WorkflowNavigatorComponent,\n        CheckBoxComponent, \n        ColorPickerComponent ,\n        ContainerListComponent ,\n        ContainerListGridComponent ,\n        CrystalReportComponent ,\n        DataCollectionComponent ,\n        DateChooserComponent ,\n        DropDownListComponent ,\n        DurationComponent ,\n        FileInputComponent ,\n        GenericComponent ,\n        HTMLPanelComponent ,\n        IframeComponent,\n        ImageComponent ,\n        InquiryComponent ,\n        InstructionTextComponent ,\n        JQDataGridComponent ,\n        LabelComponent ,\n        LinkButtonComponent ,\n        MultiSelectPickListComponent ,\n        NamedObjectComponent ,\n        PageTabComponent ,\n        PIMetricComponent ,\n        PlmVisComponent ,\n        RadioButtonComponent ,\n        ReadOnlyComponent ,\n        RevisionedObjectComponent ,\n        ScaleControlComponentBase ,\n        ScrollableMenuComponent ,\n        SlideMenuComponent ,\n        StatusMessageComponent ,\n        TextBoxComponent ,\n        TextEditorComponent ,\n        TitleComponent ,\n        UnknownComponent ,\n        WhereUsedReportComponent,\n    ],\n    exports: [\n        DesignComponent,\n        DesignRootComponent,\n        PageflowDesignComponent,\n    ],\n    entryComponents: [\n        GridWizardComponent,\n      // COMPONENT_DIRECTIVES   \n    ],\n    providers: [\n        GridWizardService,\n        ControlMappingService\n    ]\n})\nexport class DesignModule {\n    constructor( @Optional() @SkipSelf() parentModule: DesignModule) {\n        if (parentModule) {\n            throw new Error(\n                'DesignModule is already loaded. Import it in the LayoutModule only');\n        }\n    }\n}\n\n\n\n\n\n\n","import { Component, Input, OnInit, OnChanges, OnDestroy, ChangeDetectionStrategy, ElementRef, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs'; \n\nimport { StudioSubjects, IUIDesigner, PropertyUpdatedData, UpdatedInfo, uuid,} from '../../common/objects/common';\nimport {DragInfo } from '../../shared/drag';\nimport _ from 'lodash';\nimport { StudioStateService } from '../../common/services/studioStateService';\n\n@Component({\n    selector: 'csi-designPageflow',\n    templateUrl: 'designPageflow.component.html',\n    styles: [`\n        :host {\n            display: flex;\n            flex-direction: column;\n        }\n        textarea {\n            height: 100%;\n            width: 100%;\n            overflow: auto;\n        }\n    \n        svg {\n            width: 100%;\n            overflow: auto;\n        }\n    \n        .pageflowDesigner.allowDrop {\n            background-color: rgb(222, 239, 220);\n        }\n    \n        .pageflowDesigner > div.csi-selectable-item {\n            display: none;\n        }\n    `],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class PageflowDesignComponent implements OnInit, OnChanges, OnDestroy {\n    @Input(\"element\") __element: any;\n\n    @ViewChild(\"svgbox\", {static: false}) svgElement : ElementRef;\n    @ViewChild(\"gLines\", {static: false}) svgLinesContainer : ElementRef;\n    \n    get element(): IUIPageflowDesigner { return this.__element; }\n    set element(v: IUIPageflowDesigner) { this.__element = v; }\n\n    xmlns: string = \"http://www.w3.org/2000/svg\";\n    \n    constructor(private _studioStateService: StudioStateService, _el: ElementRef) {\n        this.valueUpdatedSubscription = this.studioSubjects.property.subscribe(vc => this.onPropertyChanged(vc));        \n    }\n\n    ngOnInit(): void {\n        // IE drop issue fix.\n        if( this.svgElement && this.svgElement.nativeElement)\n            if (!this.svgElement.nativeElement.parentElement)\n                this.svgElement.nativeElement.parentElement = this.svgElement.nativeElement.parentNode;\n    }\n\n    ngOnChanges(ch): void {\n        this.initDesignComponent(this.element);\n        this.tempLine = new PfPathUI();\n        this.tempLine.x1 = this.tempLine.x2 = this.tempLine.y1 = this.tempLine.y2 = 0;\n        this.tempLine[\"hidden\"] = true;\n    }\n\n    ngOnDestroy(): void {\n        this.valueUpdatedSubscription.unsubscribe();\n    }\n\n    private initDesignComponent(element: IUIPageflowDesigner) {\n        this.pages = [];\n        this.paths = [];\n        element.node = element.properties[\"node\"];\n        if (element) {\n            if (!element.node)\n                element.node = [];\n\n            let startPage = '';\n            _.forEach(element.node, e => {\n                    if (e.nodeType === PfNodeTypeEnum.Start) {\n                        if (e.transition && e.transition.length == 1)\n                            startPage = e.transition[0].targetNode;\n                    }\n                    else if (e.nodeType === PfNodeTypeEnum.Activity) {\n                        let p = new PfPageUI();\n                        p.name = e.key;\n                        var nodeCoord = this.getNodeCordinates(e);\n                        p.x = nodeCoord[0];\n                        p.y = nodeCoord[1];\n                        if (!e.location)\n                            e.location = p.x + \",\" + p.y;\n\n                        p.isStart = p.name === startPage;\n                        this.pages.push(p);\n                        if (e.transition) {\n                            _.forEach(e.transition, (trans) => {\n                                if (trans.targetNode !== this.finalNodeKey) {\n                                    let path = new PfPathUI();\n                                    path.from = e.key;\n                                    path.to = trans.targetNode;\n                                    path.x1 = p.x;\n                                    path.y1 = p.y + this.nodeHeight / 2;\n                                    let toLocation = this.calculatePathCoordinates(trans.targetNode);\n                                    path.x2 = toLocation[0];\n                                    path.y2 = toLocation[1];\n\n                                    this.paths.push(path);\n                                }\n                            });\n                        }\n                    }\n                }\n            );\n        }\n    }\n\n    nodeSelected(e, node: PfPageUI) {\n        if (!node.selected) {\n            this.clearSelection();\n            node.selected = true;\n\n            let selectedNodeObj = _.find(this.element.node, n => n.key === node.name);\n            if (selectedNodeObj) {\n                selectedNodeObj.location = node.x + \",\" + node.y;\n                selectedNodeObj.isStartPage = node.isStart;\n                selectedNodeObj.type = this.pfNodeType;\n                this._studioStateService.selectItem(selectedNodeObj);\n                this.selectedElement = node;\n            }\n        }\n        e.stopPropagation();\n    }\n\n    pathSelected(e, path: PfPathUI) {\n        if (!path.selected) {\n            this.clearSelection();\n            path.selected = true;\n\n            let nodeObj = _.find(this.element.node, (n) => n.key === path.from);\n            if (nodeObj && nodeObj.transition) {\n                let selectedTransObj = _.find(nodeObj.transition, (trans) => trans.targetNode === path.to);\n                if (selectedTransObj) {\n                    selectedTransObj.type = this.pfTransitionType;\n                    this._studioStateService.selectItem(selectedTransObj);\n                    this.selectedElement = path;\n                }\n            }\n        }\n        e.stopPropagation();\n    }\n\n    private getOffset() : any{\n        let r = this.svgElement.nativeElement.getBoundingClientRect();\n        return {top: r.top, left: r.left, ratioX: r.width / 1000, ratioY: r.height / 600}\n    }\n\n    addNewNode(dndItem: any, x: number, y: number): void {        \n\n        if (dndItem && dndItem.name) {\n            if (!_.some(this.pages, ['name', dndItem.name])) // no duplicate node allowed.\n            {\n                let pUI = new PfPageUI();\n                pUI.name = dndItem.name;\n                let off = this.getOffset();\n                pUI.x = (x - off.left) / off.ratioX;\n                pUI.y = (y - off.top) / off.ratioY;\n                pUI.isStart = false;\n\n                var newNodeObj = this.createNodeObj(pUI);\n                this.pages.push(pUI);\n                if (this.pages.length === 1)\n                    this.setStartPage(pUI);\n\n                this.element.node.push(newNodeObj);\n                this.setDirty();\n            }\n        }\n    }\n\n    addNewPath(from: PfPageUI, to: PfPageUI): void {\n        if (from !== to) {\n            if (!_.some(this.paths, (path) => { path.from === from.name && path.to === to.name })) // no duplicate paths allowed.\n            {\n                let path = new PfPathUI();\n                path.from = from.name;\n                path.to = to.name;\n                path.x1 = from.x;\n                path.y1 = from.y + this.nodeHeight / 2;\n                path.x2 = to.x;\n                path.y2 = to.y + this.nodeHeight / 2;\n                this.paths.push(path);\n\n                let nodeObj = _.find(this.element.node, (n) => n.key === from.name);\n                if (nodeObj) {\n                    if (!nodeObj.transition)\n                        nodeObj.transition = [];\n                    nodeObj.transition.push(this.createTransitionObj(path));\n                }\n                this.setDirty();\n            }\n        }\n    }\n\n    svgMouseMove(e): void {\n        if (this.capturedNode) {\n            let dx = e.pageX - this.start.x;\n            let dy = e.pageY - this.start.y;\n            if (this.isHeaderCaptured) {\n                this.moveNode(this.capturedNode, this.capturedNode.x + dx, this.capturedNode.y + dy);\n            }\n            else if (this.isBodyCaptured) {\n                this.tempLine.x2 += dx;\n                this.tempLine.y2 += dy;\n                this.insertPage();\n            }\n\n            this.start = {x:e.pageX, y:e.pageY};\n            e.stopPropagation();\n        }\n    }\n\n    svgMouseUp(e): void {\n        if (this.capturedNode) {\n            this.isBodyCaptured = this.isHeaderCaptured = false;\n            this.tempLine[\"hidden\"] = true;\n            this.skipSvgClick = true;\n\n            if (this.capturedNode.selected) {\n                let selectedNodeObj = _.find(this.element.node, n => n.key === this.capturedNode.name);\n                if (selectedNodeObj) {\n                    selectedNodeObj.location = this.capturedNode.x + \",\" + this.capturedNode.y;    \n                    this._studioStateService.selectItem(selectedNodeObj);\n                }\n            }\n            \n            this.capturedNode = null;\n            e.stopPropagation();\n        }\n        else\n            this.skipSvgClick = false;\n    }\n\n    svgClick(e): void {\n        if (!this.skipSvgClick) {\n            this.clearSelection();\n            this._studioStateService.selectItem(this.element);\n        }\n        else\n            this.skipSvgClick = false;\n    }\n    \n    svgKeyUp(e): void {\n        if ((e.key == \"Delete\" || e.key == \"Del\") && !(e.altKey || e.shiftKey || e.ctrlKey)) {\n            let selectedNode = _.find(this.pages, (p) => p.selected);\n            if (selectedNode)\n                this.deleteNode(selectedNode);\n            else {\n                let selectedPath = _.find(this.paths, (p) => p.selected);\n                if (selectedPath)\n                    this.deletePath(selectedPath);\n            }\n        }\n        e.stopPropagation();\n    }\n\n    nodeHeaderMouseDown(e, node: PfPageUI): void {\n        this.capturedNode = node;\n        this.start = {x:e.pageX, y:e.pageY};\n        this.isHeaderCaptured = true;\n        e.stopPropagation();\n    }\n\n    nodeBodyMouseDown(e, node: PfPageUI): void {\n        this.capturedNode = node;\n        this.start = {x:e.pageX, y:e.pageY};\n        \n        this.tempLine.x1 = node.x;\n        this.tempLine.y1 = node.y + this.nodeHeight / 2;\n\n        let off = this.getOffset();\n        this.tempLine.x2 = (this.start.x - off.left) / off.ratioX;\n        this.tempLine.y2 = (this.start.y - off.top) / off.ratioY;\n        this.tempLine[\"hidden\"] = false;\n        this.isBodyCaptured = true;\n\n        e.stopPropagation();\n    }\n\n    nodeBodyMouseUp(e, node: PfPageUI): void {\n        if (this.isBodyCaptured) {\n            this.addNewPath(this.capturedNode, node);\n        }\n        this.svgMouseUp(e);\n        e.stopPropagation();\n    }\n\n    private onPropertyChanged(vc: UpdatedInfo) {\n        if (this.selectedElement && vc.data) {\n            let data = <PropertyUpdatedData>vc.data;\n            if (data.path) {\n                if (data.path === \"IsStartPage\") {\n                    if (data.val)\n                        this.setStartPage(this.selectedElement);\n                    else\n                        (<PfPageUI>this.selectedElement).isStart = false;\n                }\n                else if (data.path === \"Location\") {\n                    if (data.val) {\n                        let coord = this.getLocationCoordinates(data.val);\n                        if (coord)\n                            this.moveNode(this.selectedElement, coord[0], coord[1]);\n                    }\n                }\n            }\n        }\n    }\n\n    private createNodeObj(node: PfPageUI): PfNode {\n        let p = new PfNode();\n        p.key = node.name;\n        p.transition = [];\n        p.nodeType = PfNodeTypeEnum.Activity;\n        p.isStartPage = false;\n        p.location = node.x + \",\" + node.y;\n        p[\"__type\"] = this.pfNodeType;\n        return p;\n    }\n\n    private createTransitionObj(path: PfPathUI): PfTransition {\n        let trans = new PfTransition();\n        if (path)\n            trans.targetNode = path.to;\n        trans[\"__type\"] = this.pfTransitionType;\n        return trans;\n    }\n\n    private moveNode(node: PfPageUI, x, y) {\n        if (node) {\n            node.x = x;\n            node.y = y;\n            var pageName = node.name;\n            _.forEach(this.paths, (path) => {\n                if (path.from === pageName) {\n                    path.x1 = node.x;\n                    path.y1 = node.y + this.nodeHeight / 2;\n                }\n                else if (path.to === pageName) {\n                    path.x2 = node.x;\n                    path.y2 = node.y + this.nodeHeight / 2;\n                }\n            });\n            this.insertPage();\n            this.setDirty();\n        }\n    }\n\n    private insertPage(){\n        // TODO: remove when IE 11 will not be supported.\n        this.svgElement.nativeElement.insertBefore(this.svgLinesContainer.nativeElement, this.svgLinesContainer.nativeElement);                    \n    }\n\n    private deleteNode(node: PfPageUI): void {\n        _.remove(this.pages, (n) => n === node);\n        _.remove(this.paths, (path) => (path.from === node.name) || (path.to === node.name));\n        _.remove(this.element.node, (n) => n.key === node.name);\n        _.forEach(this.element.node, (n) => {\n            if (n.transition)\n                _.remove(n.transition, (trans) => trans.targetNode === node.name);\n        });\n        if (this.pages.length === 1)\n            this.setStartPage(this.pages[0]);\n\n        this.clearSelection();\n        this._studioStateService.selectItem(this.element);\n        this.setDirty();\n    }\n\n    private deletePath(path: PfPathUI): void {\n        _.remove(this.paths, (p) => p === path);\n        _.forEach(this.element.node, (n) => {\n            if (n.key === path.from && n.transition)\n                _.remove(n.transition, (trans) => trans.targetNode === path.to);\n        });\n        this.clearSelection();\n        this._studioStateService.selectItem(this.element);\n        this.setDirty();\n    }\n\n    private calculatePathCoordinates(key: string): number[] {\n        var coord = [0, 0];\n        let node = _.find(this.element.node, (node) => node.key === key);\n        if (node) {\n            coord = this.getNodeCordinates(node);\n            coord[1] += this.nodeHeight / 2;\n        }\n        return coord;\n    }\n\n    private getLocationCoordinates(locationXY: string): number[] {\n        var coord = [NaN, NaN];\n        if (locationXY) {\n            var xy = locationXY.split(',');\n            if (xy.length === 2) {\n                coord[0] = parseFloat(xy[0]);\n                coord[1] = parseFloat(xy[1]);\n            }\n        }\n        if (coord[0] !== NaN && coord[1] !== NaN)\n            return coord;\n\n        return null;\n    }\n\n    private getNodeCordinates(node: PfNode) {\n        var coord = [0, 0];\n        if (node.location)\n            coord = this.getLocationCoordinates(node.location);\n        else {\n            let nodeLayout = _.find(this.element.nodeLayout, (layout) => layout.key === node.key);\n            if (nodeLayout)\n                coord = [nodeLayout.x, nodeLayout.y];\n        }\n        return coord;\n    }\n\n    private setStartPage(node: PfPageUI) {\n        if (!node.isStart) {\n            _.forEach(this.pages, p => { p.isStart = false; });\n            node.isStart = true;\n\n            let startNodeObj = this.getStartNodeObj();\n            if (!startNodeObj.transition || !startNodeObj.transition.length) {\n                startNodeObj.transition = [];\n                startNodeObj.transition.push(this.createTransitionObj(null));\n            }\n            startNodeObj.transition[0].targetNode = node.name;\n        }\n    }\n\n    private clearSelection(): void {\n        _.forEach(this.pages, p => { p.selected = false; });\n        _.forEach(this.paths, p => { p.selected = false; });\n        this.selectedElement = null;\n    }\n\n    private getStartNodeObj(): PfNode {\n        return _.find(this.element.node, (n) => n.nodeType === PfNodeTypeEnum.Start);\n    }\n\n    private setDirty() {\n        if (!this.element.isDirty) {\n            this.element.isDirty = true;\n            this.studioSubjects.menu.next();    // just refresh the action menu\n        }\n    }\n\n    onDrop(d: DragInfo, targetModel:any){\n        this.addNewNode(d.dragModel, d.x, d.y);\n    }\n\n    getDropOptions(){\n        return {\n            id: uuid.id(),\n            disabled: false,\n            types: \"page-ref\", \n            drop:  (d,tm)=> this.onDrop(d,tm),\n            over:  (d : DragInfo,m) => {}, \n            model: null\n        };\n    }\n\n    \n    private get studioSubjects(): StudioSubjects { return this._studioStateService.subjects; }\n    private valueUpdatedSubscription: Subscription;\n    pages: PfPageUI[];\n    paths: PfPathUI[];\n    private start: { x: number; y: number};\n    private isHeaderCaptured: boolean;\n    private isBodyCaptured: boolean;\n    tempLine: PfPathUI;\n    private skipSvgClick: boolean;\n    private capturedNode: PfPageUI;\n    private selectedElement: any;\n    private nodeHeight = 100;\n    private finalNodeKey = \"--final--\";\n    private pfNodeType = \"PageFlowNode\";\n    private pfTransitionType = \"PageTransition\";\n}\n\nenum PfNodeTypeEnum {\n    Activity = 0,\n    Start = 1,\n    Finish = 2\n}\n\nclass PfTransition {\n    targetNode: string;\n    ruleCondition: any;\n    name: string;\n    type: string;\n}\n\nclass PfNode {\n    key: string;\n    nodeType: PfNodeTypeEnum; \n    transition: PfTransition[];\n    location: string;\n    isStartPage: boolean;\n    type: string;\n}\n\nclass PfNodeLayout {\n    key: string;\n    x: number;\n    y: number;\n}\n\nclass PfPageUI {\n    width: number;\n    x: number;\n    y: number;\n    isStart: boolean;\n    selected: boolean;\n    name: string;\n}\n\nclass PfPathUI {\n    from: string;\n    to: string;\n    name: string;\n    x1: number;\n    y1: number;\n    x2: number;\n    y2: number;\n    selected: boolean;\n}\n\ninterface IUIPageflowDesigner extends IUIDesigner {\n    node: PfNode[];\n    nodeLayout: PfNodeLayout[];\n}\n","<div class=\"pageflowDesigner\" [attr.tabindex]=\"0\" (keyup)=\"svgKeyUp($event)\" [csi-droppable]=\"getDropOptions()\">\r\n    <svg #svgbox [attr.xmlns]=\"xmlns\" (mousemove)=\"svgMouseMove($event)\" (mouseup)=\"svgMouseUp($event)\" (click)=\"svgClick($event)\" viewBox=\"0 0 1000 600\">\r\n        <defs>\r\n            <marker id=\"triangle\" viewBox=\"0 0 10 10\" refX=\"20\" refY=\"5\" markerWidth=\"12\" markerHeight=\"12\" orient=\"auto\" markerUnits=\"userSpaceOnUse\">\r\n                <path d=\"M 0 0 L 10 5 L 0 10 z\"/>\r\n            </marker>\r\n            <marker id=\"triangle-tempLine\" viewBox=\"0 0 10 10\" refX=\"10\" refY=\"5\" markerWidth=\"12\" markerHeight=\"12\" orient=\"auto\" markerUnits=\"userSpaceOnUse\">\r\n                <path d=\"M 0 0 L 10 5 L 0 10 z\" />\r\n            </marker>\r\n            <marker id=\"triangle-selected\" viewBox=\"0 0 10 10\" refX=\"20\" refY=\"5\" markerWidth=\"12\" markerHeight=\"12\" orient=\"auto\" markerUnits=\"userSpaceOnUse\">\r\n                <path d=\"M 0 0 L 10 5 L 0 10 z\" class=\"selected\" />\r\n            </marker>\r\n            <marker id=\"circle\" refX=\"3\" refY=\"3\" markerWidth=\"9\" markerHeight=\"9\" orient=\"auto\">\r\n                <circle cx=\"3\" cy=\"3\" r=\"3\" />\r\n            </marker>\r\n        </defs>\r\n        <g class=\"lines\" #gLines>\r\n            <line *ngIf=\"!tempLine['hidden']\" class=\"tempLine\" [attr.x1]=\"tempLine.x1\" [attr.y1]=\"tempLine.y1\" [attr.x2]=\"tempLine.x2\" [attr.y2]=\"tempLine.y2\"></line>\r\n            <line *ngFor=\"let line of paths\" class=\"line\" (click)=\"pathSelected($event, line)\" [attr.selected]=\"line.selected\" [attr.x1]=\"line.x1\" [attr.y1]=\"line.y1\" [attr.x2]=\"line.x2\" [attr.y2]=\"line.y2\" [attr.from]=\"line.from\" />\r\n        </g>\r\n        <g class=\"nodes\">\r\n            <g *ngFor=\"let node of pages\" class=\"node\" (click)=\"nodeSelected($event, node)\" [attr.transform]=\"'translate(' + node.x + ',' + node.y +')'\">\r\n                <g class=\"node-top\" (mousedown)=\"nodeHeaderMouseDown($event, node)\">\r\n                    <rect x=\"0\" y=\"0\" width=\"200\" height=\"30\" [attr.isStart]=\"node.isStart\" [attr.selected]=\"node.selected\"></rect>\r\n                    <text class=\"title\" x=\"5\" y=\"5\" dy=\"1em\">{{node.name}}</text>\r\n                </g>\r\n                <rect class=\"node-bottom\" x=\"0\" y=\"25\" width=\"200\" height=\"70\" (mousedown)=\"nodeBodyMouseDown($event, node)\" (mouseup)=\"nodeBodyMouseUp($event, node)\"></rect>\r\n            </g>\r\n        </g>\r\n    </svg>    \r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, FormArray } from '@angular/forms';\n\nimport { Observable } from 'rxjs';\nimport { IElement, IWizardState } from '../../../common/objects/common';\nimport { GridColumnDefinition, IMetadataEnumValue, GridDataModes } from '../../../common/objects/viewModel';\n\nimport { LabelService } from '../../../common/services/label.service';\nimport { MetadataService } from '../../../common/services/metadata.service';\nimport { PortalService } from '../../../common/services/portal.service';\n\nimport { GridDataSource } from './gridWizard';\nimport { ConfirmDialogComponent } from '../../../shared/dialog/confirm.dialog.component';\nimport { FieldExpressionDialogComponent } from '../../../panel/properties/valueEditors/fieldExpressionDialog';\nimport { LabelSearchComponent } from '../../../panel/properties/valueEditors/labelSearch';\n\nimport * as _ from 'lodash';\nimport { StudioStateService } from '../../../common/services/studioStateService';\n\n@Component({\n    selector: 'csi-grid-wizard',\n    styleUrls : ['gridWizard.component.less'],\n    templateUrl: 'gridWizard.component.html'\n})\nexport class GridWizardComponent implements OnInit {\n    public state: IWizardState;\n    public cell: any;\n    public gridForm: FormGroup;\n    public gridDataMode: string;\n    public gridSourceType: string;\n    public errorMessage: string = \"\";\n    \n    searchText: string;\n    private enums: { [t: string]: IMetadataEnumValue[] } = {};\n    private get settings() { return this.state.element.properties.settings; }\n\n    constructor(\n        private fb: FormBuilder,\n        private _dialog: MatDialog,\n        private _dialogRef: MatDialogRef<GridWizardComponent>,\n        private _labelService: LabelService,\n        private _metadataService: MetadataService,\n        private _portalService: PortalService,\n        private _studioStateService: StudioStateService\n    ) { }\n\n    ngOnInit(): void {\n        this.gridDataMode = 'ItemList';\n        this.gridForm = this.fb.group({\n            gridDataMode: this.gridDataMode,\n            editingMode: 'Disabled',\n            fieldExpressions: null,\n            requestFieldExpressions: null,\n            actionButtons: this.fb.group({\n                enableAdd: this.fb.control({ value: false, disabled: true }),\n                enableEdit: this.fb.control({ value: false, disabled: true }),\n                enableDelete: this.fb.control({ value: false, disabled: true }),\n                enableRefresh: true,\n                enableExportData: true,\n                visibleAdd: this.fb.control({ value: false, disabled: true }),\n                visibleEdit: this.fb.control({ value: false, disabled: true }),\n                visibleDelete: this.fb.control({ value: false, disabled: true }),\n                visibleRefresh: true,\n                visibleExportData: true,\n            }),\n            query: this.fb.group({\n                type: 0,\n                searchText: '',\n                queryText: '',\n                definedQuery: '',\n            }),\n            queryList: [],\n            parameters: this.fb.array([]),\n            columns: this.fb.array([]),\n            mappings: this.fb.array([]),\n            name: this.state.element.name,\n            checkAllColumn: false,\n            selectedColumnType: 'JQFieldReadonly',\n            titleText: '',\n            titleLabel: '',\n            rowId: \"auto\",\n            selectionMode: 'singleRowSelect',\n            submitDataMode: \"Disabled\"           \n        });\n        //Column\n        const checkAllColumn = this.gridForm.get('checkAllColumn');\n        checkAllColumn.valueChanges.subscribe(value => {\n            let cols = this.gridForm.get('columns').value;            \n            cols.forEach(col => col.selected = value);\n            \n            this.gridForm.get('columns').setValue(cols);\n            this.gridForm.updateValueAndValidity();\n        });    \n\n        // Search Text\n        let queryGroup = this.gridForm.get('query');\n        queryGroup.get('searchText').valueChanges.subscribe(x => { \n            this.searchText = x;\n            this.clearQueryParameters();\n        });     \n    }\n\n    initializeNewGrid(grid: IElement, cell: any) {\n        this.state = new GridDataSource(grid);\n        this.cell = cell;\n    }\n\n    backStep() {\n        this.state = this.state.back(this.gridForm);\n    }\n    \n    nextStep() {\n        let valid = this.validate();\n        if (valid) {\n            this.state = this.state.next(this.gridForm);\n            this.initializeNextForm();\n        }\n    }\n\n    save() {\n        let gridName = this.gridForm.get('name').value;\n        if (gridName.length > 0) {\n            let isNameUnique = this._studioStateService.isControlNameUnique(this.cell, gridName);\n            if (!isNameUnique) {\n                let titleLabel = this._labelService.getLabel('PS_DUPLICATION_ERROR', 'Duplication Error');\n                let messageLabel = this._labelService.getLabelwithArguments('PS_CONTROL_EXISITS_WARNING', 'The control with name {0} already exists.  The grid control cannot be created.', [gridName]);\n                let okLabel = this._labelService.getLabel('PS_OK', 'Ok');\n                let confirmContext = {\n                    title: titleLabel,\n                    message: messageLabel,\n                    actions: [{ action: 'ok', name: okLabel, isPrimary: true }]\n                };\n\n                this.displayWarning(confirmContext);\n                return;\n            }\n        }\n\n        let grid = this.state.save(this.gridForm);\n        // add and fix properties\n        let s = grid.properties.settings;\n        grid.properties.gridDataMode = GridDataModes[<string>this.gridDataMode];\n        delete s.gridDataMode;\n        if (s.editorSettings)\n            s.editorSettings.editingMode = this.getEnumValue('JQEditingModes', s.editorSettings.editingMode);\n        if (s.selectionModeField) {\n            s.selectionMode = s.selectionModeField;\n            delete s.selectionModeField;\n        }\n\n        if (s.isRequiredOnSubmitField) {\n            s.isRequiredOnSubmit = s.isRequiredOnSubmitField;\n            delete s.isRequiredOnSubmitField;\n        }\n        if (s.allowDataNavigationField) {\n            s.allowDataNavigation = s.allowDataNavigationField;\n            delete s.allowDataNavigationField;\n        }\n\n        if (s.navigatorActions && !_.isEmpty(s.navigatorActions)) {\n            s.navigatorActions.forEach(n => {\n                n.__type = 'JQNavigatorAction';\n                n.Action = this.getEnumValue('JQGridNavActionType', n.Action);\n            });\n        }\n\n        this._dialogRef.close(grid);\n    }\n    cancel() {\n\n        //alert user of losing data\n        this._dialogRef.close();\n    }\n\n    private validate(): boolean {\n        let valid = true;\n        let validStatus = this.state.validate(this.gridForm);\n        if (validStatus) {\n            let titleLabel, messageLabel;\n            let okLabel = this._labelService.getLabel('PS_OK', 'Ok');\n            let cancelLabel = this._labelService.getLabel('PS_CANCEL', 'Cancel');\n            titleLabel = this._labelService.getLabel('PS_DATA_WARNING', \"Data Warning\");\n            switch (validStatus) {\n                case \"INCOMPLETEQUERYNAME\":\n                    messageLabel = this._labelService.getLabel('PS_QUERY_NAME_NOT_SPECIFIED', \"Query name is not specified.  Do you want to proceed to the next step?\");\n                    break;\n                case 'INCOMPLETEQUERYTEXT':\n                    messageLabel = this._labelService.getLabel('PS_QUERY_TEXT_NOT_SPECIFIED', \"Query text is not specified.  Do you want to proceed to the next step?\");\n                    break;\n                case 'QUERYTEXTEMPTY':\n                    messageLabel = this._labelService.getLabel('PS_QUERY_TEXT_NOT_SPECIFIED', \"Query text is Empty.  Define columns manually.\"); //Need to remove cancel action\n                    break;\n                case 'INCOMPLETEFIELDEXPRESSION':\n                    messageLabel = this._labelService.getLabel('PS_FIELD_EXPRESSION_NOT_SPECIFIED', \"Neither Field Expressons nor Request Field Expressions are specified.  Do you want to proceed to the next step?\");\n                    break;\n            }\n            let warningContext = {\n                title: titleLabel,\n                message: messageLabel,\n                actions: [\n                    { action: 'ok', name: okLabel, isPrimary: true },\n                    { action: 'cancel', name: cancelLabel, isPrimary: false }]\n            };\n\n            this.displayWarning(warningContext).subscribe(result => {\n                if (result == 'ok') {\n                    this.state = this.state.next(this.gridForm);\n                    this.initializeNextForm();\n                }\n            });\n            valid = false;\n        }\n        return valid;\n    }\n\n    private displayWarning(context: any): Observable<any> {\n        let dialog = this._dialog.open(ConfirmDialogComponent, { disableClose: true });\n        dialog.componentInstance.initContext(context);\n        return dialog.afterClosed();\n    }\n\n    private initializeNextForm(): void {\n        let state = this.state.constructor.name;\n        if (state == \"GridQuery\" && this.gridDataMode == \"PredefinedQuery\")\n            this.onQueryTypeChange();\n        if (state == \"GridColumnSetup\")\n            this.initColumnForm(this.gridDataMode);\n        if (state == \"GridRow\")\n            this.initRowForm(this.gridDataMode);\n        if (state == \"GridActionButton\")\n            this.initActionButtonForm(this.gridDataMode);\n    }\n    \n    //Grid Mode\n    gridModes: any =[\n        { value: 'ItemList', text: 'Item List', iconUrl:'Content/images/portalStudioIcons/gw_item_list.png', description: this._labelService.getLabel('PS_GRID_DATASOURCE_ITEMLIST', 'Supports any typed array as the data source. Can be bound to field expressions and employs regular value loading from the Camstar server. Item List grids can also work in an unbound mode, such as without field expressions. The ItemType must be defined and data loading and submitting should be implemented in the code when in an unbound mode. Paging within the Camstar server is not allowed.')},\n        { value: 'SubentityList', text: 'SubEntity List', iconUrl:'Content/images/portalStudioIcons/gw_sub_list.png', description: this._labelService.getLabel('PS_GRID_DATASOURCE_ITEMLIST', 'Inherits data from the Item List. Supports a particular bound mode for the item type derived from the SubEntity class.')},\n        { value: 'SelectionValues', text: 'Selection Values', iconUrl:'Content/images/portalStudioIcons/gw_selection_val.png', description: this._labelService.getLabel('PS_GRID_DATASOURCE_ITEMLIST', 'Works in a bound mode and loads data from the selection values request. Data built from selected rows can be submitted.')},\n        { value: 'PredefinedQuery', text: 'Predefined Query', iconUrl:'Content/images/portalStudioIcons/gw_predefined_query.png', description: this._labelService.getLabel('PS_GRID_DATASOURCE_ITEMLIST', 'References a System or User query. Predefined Query grids allow data submission to a field using field expressions.')},\n        { value: 'AdHocQuery', text: 'AdHoc Query', iconUrl:'Content/images/portalStudioIcons/gw_adhoc_query.png', description: this._labelService.getLabel('PS_GRID_DATASOURCE_ITEMLIST', 'Stores the custom query directly on the virtual page. AdHoc Query grids allow data submission to a field using field expressions.')}\n    ];\n    selectGridMode(mode: string): void {\n        this.gridDataMode = mode;\n        this.gridForm.get(\"gridDataMode\").setValue(mode);\n    }\n\n    //Edit Mode\n    editModes: any = [\n        { value: 'Disabled', text: 'Disabled', iconUrl: 'Content/images/portalStudioIcons/gw_disabled.png', description: this._labelService.getLabel('PS_GRID_EDITMODE_DISABLED_DESCRIPTION', 'Editing is not allowed.')},\n        { value: 'Inline', text: 'Inline', iconUrl: 'Content/images/portalStudioIcons/gw_inline.png', description: this._labelService.getLabel('PS_GRID_EDITMODE_INLINE_DESCRIPTION','Editing occurs directly in the row.')},\n        { value: 'FormControls', text: 'FormControls', iconUrl: 'Content/images/portalStudioIcons/gw_form_controls.png', description: this._labelService.getLabel('PS_GRID_EDITMODE_FORMCONTROLS_DESCRIPTION','The columns are bound to the editing controls.')},\n        { value: 'Popup', text: 'Popup', iconUrl: 'Content/images/portalStudioIcons/gw_popup.png', description: this._labelService.getLabel('PS_GRID_EDITMODE_POPUP_DESCRIPTION','Editing occurs in an external pop-up form.')},\n        { value: 'LitePopup', text: 'LitePopup', iconUrl: 'Content/images/portalStudioIcons/gw_lite_popup.png', description: this._labelService.getLabel('PS_GRID_EDITMODE_LITEPOPUP_DESCRIPTION','Editing occurs in a web part on the current page.')}\n    ];\n    selectGridSourceType(type: string): void {\n        this.gridSourceType = type;\n        this.gridForm.get(\"editingMode\").setValue(type);\n    }    \n\n    //Field Expression\n    openFieldExpressionDialog(formControlName: string): void {\n        //open dialog\n        let formControl = this.gridForm.get(formControlName);\n\n        let newdialog = this._dialog.open(FieldExpressionDialogComponent, { width: '450px', disableClose: true });\n        newdialog.componentInstance.initContext(formControl.value);\n        newdialog.afterClosed().subscribe(result => {\n            this.gridForm.get(formControlName).setValue(result);\n            this.gridForm.updateValueAndValidity();\n        });\n    }\n\n    //Action Button\n    initActionButtonForm(dataMode: string): void {\n        if (dataMode == 'ItemList' || dataMode == 'SubentityList') {\n            let editMode = this.gridForm.get('editingMode').value;\n            if (editMode != \"Disabled\") {\n                this.gridForm.get('actionButtons.enableAdd').enable();\n                this.gridForm.get('actionButtons.enableEdit').enable();\n                this.gridForm.get('actionButtons.enableDelete').enable();\n                this.gridForm.get('actionButtons.visibleAdd').enable();\n                this.gridForm.get('actionButtons.visibleEdit').enable();\n                this.gridForm.get('actionButtons.visibleDelete').enable();\n            }\n        }\n    }\n\n    //Query\n    get parameters(): FormArray {\n        return <FormArray>this.gridForm.get('parameters');\n    }\n\n    onQueryTypeChange(): void {\n        let qtype = this.gridForm.get('query.type').value;\n        this._portalService.getQueryData(qtype == 0 ? 'QueryList_System' : 'QueryList_User')\n            .subscribe(result => {                \n                this.gridForm.get('queryList').setValue(result);\n                this.clearQueryParameters();\n                this.gridForm.updateValueAndValidity();\n            });\n    }\n\n    onQuerySelect(query: any): void {\n        let queryList = this.gridForm.get('queryList').value;\n        queryList.forEach(qry => qry.selected = (query.Text == qry.Text));\n\n        this.state.back(this.gridForm);\n        this.gridForm.get('query.definedQuery').setValue(query.Text);\n        if (query.ParamCount > 0) {\n            let type = this.gridForm.get('query.type').value;\n            this._portalService.getQueryParameters(type, query.Text).subscribe(result => {\n                let parameters = <FormArray>this.gridForm.get('parameters');\n                result.forEach(param => {\n                    parameters.push(this.fb.group({\n                        name: param.Text,\n                        type: param.Description,\n                        value: ''\n                    }));\n                });\n                this.gridForm.updateValueAndValidity();\n            });\n        }\n        else {\n            //no parameter records to show\n        }\n    }\n\n    private clearQueryParameters(): void {\n        const parameters = <FormArray>this.gridForm.controls['parameters'];        \n        for (let i = parameters.length-1; i >= 0; i--) {\n            parameters.removeAt(i)\n        }\n    }\n\n    //Columns\n    public columnTypes: string[] =\n    [\"JQDropDownList\", \"JQDateChooser\", \"JQNamedObject\", \"JQNamedSubentity\", \"JQTextBox\", \"JQRevisionedObject\", \"JQFieldCheckBox\", \"JQFieldReadonly\"];\n    get columns(): FormArray {\n        return <FormArray>this.gridForm.get('columns');\n    }\n\n    initColumnForm(dataMode: string): void {\n        switch (dataMode) {\n            case 'ItemList':\n            case 'SubentityList':\n                this.loadColumnsFromFieldExpression();\n                break;\n            case 'SelectionValues':\n                this.loadColumnsFromSelectionValues();\n                break;\n            case 'AdHocQuery':\n            case 'PredefinedQuery':\n                this.loadColumnsFromQuery(dataMode);\n                break;\n        }\n    }\n    toggleColumnSelection(cb: any): void {\n        let columns = this.gridForm.get('columns').value;\n        columns.forEach(col => col.selected = cb.checked);\n        this.gridForm.updateValueAndValidity();\n    }\n\n    loadColumnsFromFieldExpression(): void {\n\n        let fieldExpression = this.settings.requestFieldExpressions || this.settings.fieldExpressions;\n\n        this._portalService.resolveGridColumns(this.addService(fieldExpression), false).subscribe(columns => {\n            if (_.isArray(columns))\n                this.loadColumns(columns, fieldExpression);\n            else {\n                // display error\n            }\n        });\n    }\n\n    loadColumnsFromSelectionValues(): void {\n        let fieldExpression = this.settings.selectionValuesExpressions || this.settings.fieldExpressions;\n\n        this._portalService.resolveGridColumns(this.addService(fieldExpression), true).subscribe(columns => {\n            if (_.isArray(columns))\n                this.loadColumns(columns, fieldExpression);\n            else {\n                // display error\n            }\n        });\n    }\n\n    loadColumnsFromQuery(dataMode: string): void {\n        let fieldExpression = this.state.element.properties.settings.selectionValuesExpressions;\n        let qtype = this.gridForm.get('query.type').value;\n        let parameters = this.gridForm.get('parameters').value;\n        let queryOptions = {\n            QueryType: qtype,\n            StartRow: 1,\n            RowSetSize: 1\n        };\n\n        let queryParameters = [];\n        parameters.forEach(param => queryParameters.push({ Name: param.name, Value: param.value }));\n\n        if (dataMode == \"AdHocQuery\") {\n            let queryText = this.gridForm.get('query.queryText').value;\n            if (queryText.indexOf('?') > 0) {\n                parameters.forEach(param => queryText.replace('?', param.value));\n            }\n            this._portalService.getAdHocQueryColumns(queryText, queryOptions).subscribe((columns : GridColumnDefinition[]) => {\n                this.loadColumns(columns, fieldExpression);\n            });\n        }\n        else {\n            let queryText = this.gridForm.get('query.definedQuery').value;\n            this._portalService.getQueryColumns(queryText, queryOptions, queryParameters).subscribe((columns:GridColumnDefinition[]) => {\n                this.loadColumns(columns, fieldExpression);\n            });\n        }\n    }\n\n    loadColumns(cols: GridColumnDefinition[], fieldExpression: string): void {\n        if (cols) {\n            let columns = <FormArray>this.gridForm.get('columns');\n            _.forEach(cols, c => columns.push(this.fb.group({\n                columnTypeIndex: '',\n                columnType: c.__type,\n                id: c.name,\n                editable: c.editable,\n                required: c.required,\n                width: c.width,\n                selected: false,\n                hidden: false,\n                labelName: c.labelName\n            })));\n            this.gridForm.updateValueAndValidity();\n        }\n    }\n\n    private addService(f: string): string {\n        if (f && f.startsWith('.')) {\n            let serviceType = this._studioStateService.getPrimaryService();\n            if (serviceType)\n                return serviceType + f;\n        }\n        return f;\n    }\n\n    onCreateColumn(): void {\n        let columns = <FormArray>this.gridForm.get('columns');\n        let columnType = this.gridForm.get('selectedColumnType').value;\n        columns.push(this.fb.group({\n            columnTypeIndex: '',\n            columnType: columnType,\n            id: 'Column',\n            editable: false,\n            required: false,\n            width: 200,\n            selected: false,\n            hidden: false,\n            labelName: ''\n        }));\n        columns.updateValueAndValidity();\n    }\n\n\n    onMoveColumn(id: string, direction: string): void {\n        let columns = <FormArray>this.gridForm.get('columns');\n        let columnsObj = columns.getRawValue();\n        let column, index;\n\n        for (let i = 0; i < columns.length && !index; i++) {\n            if (columnsObj[i].id == id) {\n                column = columns.controls[i];\n                index = i;\n            }\n        }\n        if (direction == \"up\") {\n            if (index == 0)\n                return;\n            let oldControl = columns.at(index-1);\n            columns.setControl(index-1,column);\n            columns.setControl(index,oldControl);\n            \n        }\n        if (direction == \"down\") {\n            if (index == columns.length)\n                return;\n            let oldControl = columns.at(index+1);\n            columns.setControl(index+1,column);\n            columns.setControl(index,oldControl);\n        }\n    }\n\n\n    //Row Setup\n    public displaySubmitDataMode;\n    public gridSelectionModes: any[] = [\n        { text: \"MultiRowSelect\", value: \"multiRowSelect\" },\n        { text: \"CheckBox\", value: \"checkBox\" },\n        { text: \"SingleRowSelect\", value: \"singleRowSelect\" },\n        { text: \"SingleRowSelectWithPostback\", value: \"singleRowSelectWithPostback\" },\n        { text: \"Disable\", value: \"disable\" }];\n    public rowColumns: any[];\n    public submitFields: any[];\n\n    get mappings(): FormArray {\n        return <FormArray>this.gridForm.get('mappings');\n    }\n\n    initRowForm(dataMode: string): void {\n        this.rowColumns = [{ text: \"--AUTO--\", value: \"auto\" }];\n        this.submitFields = [{ text: \"\", value: \"\" }];\n        let columns = this.gridForm.get('columns').value;\n        let mappings = <FormArray>this.gridForm.get('mappings');\n        columns.forEach(col => {\n            if (col.selected) {\n                this.rowColumns.push({ text: col.id, value: col.id });\n                mappings.push(this.fb.group({ columnName: col.id, submitField: '' }));\n            }\n        });\n        this.displaySubmitDataMode = (dataMode == \"SelectionValues\")\n    }\n\n    onChangeSubmitMode(): void {\n        //load submitFields\n        let fieldExpression = this.state.element.properties.settings.fieldExpressions;\n        if (fieldExpression) {\n            this._portalService.resolveGridColumns(fieldExpression, false).subscribe(columns => {\n                if (_.isArray(columns)) {\n                    _.forEach(columns, col => {\n                        let text = col.labelName;\n                        let colExp = col.name.substring(1, col.name.length).split(',');\n                        this.submitFields.push({ text: text, value: colExp[3] });\n                    });\n                }\n            });\n        }\n    }\n\n    openLabelSearch(): void {\n        let label = this.gridForm.get('titleLabel');\n        let context = {\n            value: label.value\n        }\n        let newDialog = this._dialog.open(LabelSearchComponent, { disableClose: true });\n        newDialog.componentInstance.initContext(context);\n        newDialog.afterClosed().subscribe(result => {\n            if (result)\n                label.value.setValue(result);\n        });\n    }\n\n    private getEnumValue(typeName, stringVal: string): number {\n        if (stringVal) {\n            if (!this.enums[typeName]) {\n                this.enums[typeName] = this._metadataService.getMetadataType(typeName).enumValues;\n            }\n            let nvPairs = this.enums[typeName];\n            stringVal = stringVal.toLowerCase();\n            let v = _.find(nvPairs, (e) => e.name.toLowerCase() == stringVal);\n            if (v)\n                return v.value;\n        }\n\n        return undefined;\n    }\n\n}","<div id=\"grid-wizard\" class=\"csi-modal\">\r\n    <header class=\"header\">\r\n        <span class=\"sub-title\">{{'Grid Wizard' | label: 'PS_GRID_WIZARD'}}</span>\r\n        <span class=\"close-icon\" (click)=\"cancel()\">\r\n            <i class=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n        </span>\r\n    </header>\r\n    <main>\r\n        <form novalidate (ngSubmit)=\"save()\" [formGroup]=\"gridForm\">\r\n            <section class=\"gw-dataMode\" *ngIf=\"state.constructor.name == 'GridDataSource'\">\r\n                <div class=\"description\">\r\n                    {{'Welcome to the Grid Wizard, with the help of this wizard you can create grids very quickly and easily. Select Data Grid\r\n                    Source Type and click \"Next\"' | label: 'PS_GRID_WIZARD_WELCOME'}}\r\n                </div>\r\n                <div class=\"source-type-list\">\r\n                    <span class=\"source-type\" *ngFor=\"let gmode of gridModes\" [ngClass]=\"{'active':gridDataMode == gmode.value}\" (click)=\"selectGridMode(gmode.value)\">\r\n                        <img [src]=\"gmode.iconUrl\" [alt]=\"gmode.text\">\r\n                        <span>{{gmode.description}}</span>\r\n                    </span>\r\n                </div>\r\n            </section>\r\n            <section class=\"gw-editMode\" *ngIf=\"state.constructor.name == 'GridEditMode'\">\r\n                <div class=\"description\">\r\n                    {{'Select Grid Editing Mode.' | label: 'PS_GRID_EDITMODE_HEADER'}}\r\n                </div>\r\n                <div class=\"source-type-list\">\r\n                    <span class=\"source-type\" *ngFor=\"let emode of editModes\" [ngClass]=\"{'active':gridSourceType == emode.value}\" (click)=\"selectGridSourceType(emode.value)\">\r\n                        <img [src]=\"emode.iconUrl\" [alt]=\"emode.text\">\r\n                        <span>{{emode.description}}</span>\r\n                    </span>\r\n                </div>\r\n            </section>\r\n            <section *ngIf=\"state.constructor.name == 'GridFieldExpression'\" class=\"gw-field-expression\">\r\n                <div class=\"description\">\r\n                    {{'This page allows you to Setup Field Expression and Request Field Expression.' | label: 'PS_GRID_FIELDEXPRESSION_TITLE'}}\r\n                </div>\r\n                <div class=\"main\">\r\n                    <div class=\"summary\">\r\n                        <span class=\"sub-title\">Field Expression Setup</span>\r\n                        <br/> Click on the \"...\" button to select from the field expression explorer.\r\n                    </div>\r\n                    <div class=\"input-row\">\r\n                        <span for=\"fieldExpressionId\">{{'Field Expressions' | label: 'PS_FIELD_EXPRESSIONS'}}</span>\r\n                        <div>\r\n                            <input id=\"fieldExpressionId\" class=\"input\" type=\"text\" placeholder=\"Field Expressions\" formControlName=\"fieldExpressions\"\r\n                            />\r\n                            <span class=\"elipsis-btn\" (click)=\"openFieldExpressionDialog('fieldExpressions')\">...</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"input-row\" *ngIf=\"gridDataMode != 'AdHocQuery' && gridDataMode != 'PredefinedQuery'\">\r\n                        <span for=\"requestFieldExpressionId\">{{'Request Field Expressions' | label: 'PS_GRID_REQUEST_FIELD_EXPRESSIONS'}}</span>\r\n                        <div>\r\n                            <input id=\"requestFieldExpressionId\" class=\"input\" type=\"text\" placeholder=\"Request Field Expressions\" formControlName=\"requestFieldExpressions\"\r\n                            />\r\n                            <span class=\"elipsis-btn\" (click)=\"openFieldExpressionDialog('requestFieldExpressions')\">...</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section *ngIf=\"state.constructor.name == 'GridActionButton'\" class=\"gw-action-button\">\r\n                <div class=\"description\">\r\n                    {{'This page allows you to Define Grid Actions and other attributes' | label: 'PS_GRID_ACTION_BUTTONS_TITLE'}}:\r\n                </div>\r\n                <div class=\"main\" formGroupName=\"actionButtons\">\r\n                    <div class=\"summary\">\r\n                        <span class=\"sub-title\">Define Grid Actions and other attributes</span>\r\n                        <br/> Check the following options to enable and display actions in the navigation bar.\r\n                    </div>\r\n                    <span class=\"sub-title\">Define Actions</span>\r\n                    <div class=\"action-button-header\">\r\n                        <label class=\"ab-button-col\">{{'Button Name' | label: 'PS_BUTTON_NAME'}}</label>\r\n                        <div class=\"ab-visible-col\">{{'Visible' | label: 'PS_VISIBLE'}}</div>\r\n                        <div class=\"ab-enabled-col\">{{'Enabled' | label: 'PS_ENABLED'}}</div>\r\n                    </div>\r\n                    <div class=\"action-button-row\">\r\n                        <label class=\"ab-button-col\">{{'Add' | label: 'PS_ADD'}}</label>\r\n                        <div class=\"ab-visible-col\">\r\n                            <input type=\"checkbox\" formControlName=\"visibleAdd\" />\r\n                        </div>\r\n                        <div class=\"ab-enabled-col\">\r\n                            <input type=\"checkbox\" formControlName=\"enableAdd\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"action-button-row\">\r\n                        <label class=\"ab-button-col\">{{'Edit' | label: 'PS_EDIT'}}</label>\r\n                        <div class=\"ab-visible-col\">\r\n                            <input type=\"checkbox\" formControlName=\"visibleEdit\" />\r\n                        </div>\r\n                        <div class=\"ab-enabled-col\">\r\n                            <input type=\"checkbox\" formControlName=\"enableEdit\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"action-button-row\">\r\n                        <label class=\"ab-button-col\">{{'Delete' | label: 'PS_DELETE'}}</label>\r\n                        <div class=\"ab-visible-col\">\r\n                            <input type=\"checkbox\" formControlName=\"visibleDelete\" />\r\n                        </div>\r\n                        <div class=\"ab-enabled-col\">\r\n                            <input type=\"checkbox\" formControlName=\"enableDelete\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"action-button-row\">\r\n                        <label class=\"ab-button-col\">{{'Refresh' | label: 'PS_REFRESH'}}</label>\r\n                        <div class=\"ab-visible-col\">\r\n                            <input type=\"checkbox\" formControlName=\"visibleRefresh\" />\r\n                        </div>\r\n                        <div class=\"ab-enabled-col\">\r\n                            <input type=\"checkbox\" formControlName=\"enableRefresh\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"action-button-row\">\r\n                        <label class=\"ab-button-col\">{{'Export Data' | label: 'PS_EXPORT_DATA'}}</label>\r\n                        <div class=\"ab-visible-col\">\r\n                            <input type=\"checkbox\" formControlName=\"visibleExportData\" />\r\n                        </div>\r\n                        <div class=\"ab-enabled-col\">\r\n                            <input type=\"checkbox\" formControlName=\"enableExportData\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section *ngIf=\"state.constructor.name == 'GridQuery'\" class=\"gw-query\">\r\n                <div class=\"description\">\r\n                    {{'This page allows you to define the Query' | label: 'PS_GRIDWIZARD_QUERY_TITLE'}}:\r\n                </div>\r\n                <div class=\"main\">\r\n                    <div class=\"summary\">\r\n                        <span class=\"sub-title\">Define Query</span>\r\n                    </div>\r\n                    <section class=\"query\" formGroupName=\"query\">\r\n                        <div *ngIf=\"gridDataMode == 'PredefinedQuery'\" class=\"predefined-query\">\r\n                            <div class=\"query-type\">\r\n                                <select formControlName=\"type\" (change)=\"onQueryTypeChange()\">\r\n                                    <option value=\"0\">{{'System' | label: 'PS_SYSTEM'}}</option>\r\n                                    <option value=\"1\">{{'User' | label: 'PS_USER'}}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"query-header\">\r\n                                <input type=\"text\" placeholder=\"Search\" formControlName=\"searchText\" />\r\n                            </div>\r\n                            <div class=\"query-list list-group\">\r\n                                <a class=\"query-list-item list-group-item\" *ngFor=\"let query of (gridForm.get('queryList').value | gridWizardFilter:searchText)\" (click)=\"onQuerySelect(query)\"\r\n                                    [ngClass]=\"{'active':query.selected}\">{{query.Text}}</a>\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf=\"gridDataMode == 'AdHocQuery'\" class=\"adhoc-query\">\r\n                            <textarea cols=\"40\" rows=\"10\" class=\"form-control\" formControlName=\"queryText\"></textarea>\r\n                        </div>\r\n                    </section>\r\n                    \r\n                    <section class=\"parameter\" *ngIf=\"gridForm.get('parameters')\">\r\n                        <div class=\"parameter-header\">\r\n                            <div class=\"param-name-col\">{{'Name' | label: 'PS_NAME'}}</div>\r\n                            <div class=\"param-type-col\">{{'Type' | label: 'PS_TYPE'}}</div>\r\n                            <div class=\"param-value-col\">{{'Value' | label: 'PS_VALUE'}}</div>\r\n                        </div>\r\n                        <div class=\"parameter-list\">\r\n                            <div formArrayName=\"parameters\" *ngFor=\"let param of parameters.controls; let i=index;\" class=\"parameter-list-item\">\r\n                                <div [formGroupName]=\"i\" class=\"flex-row\">\r\n                                    <div class=\"param-name-col\">\r\n                                        <div>{{gridForm.get('parameters').controls[i].value.name}}</div>\r\n                                    </div>\r\n                                    <div class=\"param-type-col\">\r\n                                        <div>{{gridForm.get('parameters').controls[i].value.type}}</div>\r\n                                    </div>\r\n                                    <div class=\"param-value-col\">\r\n                                        <input type=\"number\" placeholder=\"Value\" formControlName=\"value\">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n               </div>\r\n            </section>\r\n            <section *ngIf=\"state.constructor.name == 'GridColumnSetup'\" class=\"gw-columns\">\r\n                <div class=\"description\">\r\n                    {{'This page allows you to select Column Name and other attributes' | label: 'PS_GRIDWIZARD_COLUMN_TITLE'}}:\r\n                </div>\r\n                <div class=\"main\">\r\n                    <div class=\"summary\">\r\n                        <span class=\"sub-title\">Define Column Name and other attributes</span>\r\n                        <br/> Define columns name, type and other properties.\r\n                    </div>\r\n                    <section class=\"col-header\">\r\n                        <span class=\"cl-select-col\">\r\n                            <input type=\"checkbox\" formControlName=\"checkAllColumn\">\r\n                        </span>\r\n                        <span class=\"cl-type-col\">{{'Column Type' | label: 'PS_COLUMN_TYPE'}}</span>\r\n                        <span class=\"cl-id-col\">{{'Display Column Name' | label: 'PS_COLUMN_NAME'}}</span>                        \r\n                        <span class=\"cl-width-col\">{{'Width' | label: 'PS_WIDTH'}}</span>\r\n                        <span class=\"cl-hidden-col\">{{'Hidden' | label: 'PS_HIDDEN'}}</span>\r\n                        <span class=\"cl-editable-col\" *ngIf=\"gridDataMode == 'ItemList' || gridDataMode == 'SubentityList'\">{{'Editable' | label: 'PS_EDITABLE'}}</span>\r\n                        <span class=\"cl-required-col\" *ngIf=\"gridDataMode == 'ItemList' || gridDataMode == 'SubentityList'\">{{'Required' | label: 'PS_REQUIRED'}}</span>\r\n                        <span class=\"cl-action-col\"></span>\r\n                    </section>\r\n                    <section class=\"column-list\">\r\n                        <span formArrayName=\"columns\" *ngFor=\"let column of columns.controls; let i=index;\" class=\"column\">\r\n                            <div [formGroupName]=\"i\" class=\"flex-row\">\r\n                                <span class=\"cl-select-col\">\r\n                                    <input type=\"checkbox\" formControlName=\"selected\">\r\n                                </span>\r\n                                <span class=\"cl-type-col\">\r\n                                    <select formControlName=\"columnType\">\r\n                                        <option value=\"\"></option>\r\n                                        <option *ngFor=\"let type of columnTypes\" [value]=\"type\">{{type}}</option>\r\n                                    </select>\r\n                                </span>\r\n                                <span class=\"cl-id-col\">\r\n                                    <input type=\"text\" placeholder=\"Name\" formControlName=\"id\">\r\n                                </span>\r\n                                <span class=\"cl-width-col\">\r\n                                    <input type=\"number\" placeholder=\"Value\" formControlName=\"width\">\r\n                                </span>\r\n                                <span class=\"cl-hidden-col\">\r\n                                    <input type=\"checkbox\" formControlName=\"hidden\">\r\n                                </span>\r\n                                <span class=\"cl-editable-col\" *ngIf=\"gridDataMode == 'ItemList' || gridDataMode == 'SubentityList'\">\r\n                                    <input type=\"checkbox\" formControlName=\"editable\">\r\n                                </span>\r\n                                <span class=\"cl-required-col\" *ngIf=\"gridDataMode == 'ItemList' || gridDataMode == 'SubentityList'\">\r\n                                    <input type=\"checkbox\" formControlName=\"required\">\r\n                                </span>\r\n                                <span class=\"cl-action-col\">\r\n                                    <button type=\"button\" (click)=\"onMoveColumn(column.get('id').value, 'up')\">{{'Up' | label: 'PS_UP'}}</button>\r\n                                    <button type=\"button\" (click)=\"onMoveColumn(column.get('id').value, 'down')\">{{'Down' | label: 'PS_DOWN'}}</button>\r\n                                </span>\r\n                            </div>\r\n                        </span>\r\n                    </section>\r\n                    <section class=\"col-action\">\r\n                        <select formControlName=\"selectedColumnType\">\r\n                            <option *ngFor=\"let type of columnTypes\" [value]=\"type\">{{type}}</option>\r\n                        </select>\r\n                        <button type=\"button\" (click)=\"onCreateColumn()\">{{'Create' | label: 'PS_CREATE'}}</button>\r\n                    </section>\r\n                </div>\r\n            </section>\r\n            <section *ngIf=\"state.constructor.name == 'GridRow'\" class=\"gw-row\">\r\n                <div class=\"description\">\r\n                    {{'This page allows you to Define Row Key Identification' | label: 'PS_GRIDWIZARD_ROW_TITLE'}}:\r\n                </div>\r\n                <div class=\"main\">\r\n                    <div class=\"summary\">\r\n                        <span class=\"sub-title\">Define Row Key Identification</span>\r\n                        <br/> Define row identification, selection mode and data mode.\r\n                    </div>\r\n                    <div class=\"input-row\">\r\n                        <span for=\"rowId\">{{'Column that will be used as a Row Identification' | label: 'PS_ROW_ID'}}</span>\r\n                        <span>\r\n                            <select formControlName=\"rowId\">\r\n                                <option *ngFor=\"let col of rowColumns\" [value]=\"col.value\">{{col.text}}</option>\r\n                            </select>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"input-row\">\r\n                        <span for=\"rowSeletionModeId\">{{'Row Selection Mode' | label: 'PS_ROW_SELECTION_MODE'}}</span>\r\n                        <span>\r\n                            <select formControlName=\"selectionMode\">\r\n                                <option *ngFor=\"let mode of gridSelectionModes\" [value]=\"mode.value\">{{mode.text}}</option>\r\n                            </select>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"input-row\" *ngIf=\"displaySubmitDataMode\">\r\n                        <span for=\"submitDataModeId\">{{'Submit Data Mode' | label: 'PS_SUBMIT_DATA_MODE'}}</span>\r\n                        <span>\r\n                            <select formControlName=\"submitDataMode\" (change)=\"onChangeSubmitMode()\">\r\n                                <option value=\"Disabled\">{{'Disabled' | label: 'PS_DISABLED'}}</option>\r\n                                <option value=\"SelectedRows\">{{'Select Rows' | label: 'PS_SELECT_ROWS'}}</option>\r\n                                <option value=\"AllRows\">{{'All Rows' | label: 'PS_ALL_ROWS'}}</option>\r\n                            </select>\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"mappings\" *ngIf=\"gridForm.get('submitDataMode').value != 'Disabled'\">\r\n                        <div class=\"mappings-title\">\r\n                            {{'Submitted Column Data Mappings' | label: 'PS_SUBMITTED_COLUMN_MAPPINGS'}}\r\n                        </div>\r\n                        <div class=\"mappings-header row\">\r\n                            <div class=\"col-md-3\">{{'Column' | label: 'PS_COLUMN'}}</div>\r\n                            <div class=\"col-md-3\">{{'Submitted Field' | label: 'PS_SUBMITTED_FIELD'}}</div>\r\n                        </div>\r\n                        <div class=\"mapping-list\">\r\n                            <div formArrayName=\"mappings\" *ngFor=\"let map of mappings.controls; let i=index;\">\r\n                                <div [formGroupName]=\"i\" class=\"row\">\r\n                                    <div class=\"col-md-3\">\r\n                                        <span>{{gridForm.get('mappings').controls[i].value.columnName}}</span>\r\n                                    </div>\r\n                                    <div class=\"col-md-3\">\r\n                                        <select class=\"form-control\" formControlName=\"submitField\">\r\n                                            <option *ngFor=\"let field of submitFields\" [value]=\"field.value\">{{field.text}}</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section *ngIf=\"state.constructor.name == 'GridName'\" class=\"gw-name\">\r\n                <div class=\"description\">\r\n                    {{'This page allows you to Define Grid Name and Title' | label: 'PS_GRIDWIZARD_NAME_TITLE'}}:\r\n                </div>\r\n                <div class=\"main\">\r\n                    <div class=\"summary\">\r\n                        <span class=\"sub-title\">Define Grid Name and Title</span>\r\n                        <br/> Define the name and title of the control.\r\n                    </div>\r\n                    <div class=\"input-row\">\r\n                        <span for=\"nameId\">{{'Control ID' | label: 'PS_CONTROL_ID'}}</span>\r\n                        <div>\r\n                            <input id=\"nameId\" class=\"input\" type=\"text\" placeholder=\"Name\" formControlName=\"name\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"input-row\">\r\n                        <span for=\"titleTextId\">{{'Title Text' | label: 'PS_TITLE_TEXT'}}</span>\r\n                        <div>\r\n                            <input id=\"titleTextId\" class=\"input\" type=\"text\" placeholder=\"Title Text\" formControlName=\"titleText\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"input-row\">\r\n                        <span for=\"titleLabelNameId\">{{'Title Label Name' | label: 'PS_TITLE_LABEL_NAME'}}</span>\r\n                        <div>\r\n                            <input id=\"titleLabelNameId\" class=\"input-btn\" type=\"text\" placeholder=\"Title Label Name\" formControlName=\"titleLabel\" />\r\n                            <span class=\"elipsis-btn\" (click)=\"openLabelSearch()\">...</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </form>\r\n    </main>\r\n    <footer>\r\n        <div class=\"btns\">\r\n            <span class=\"default-btn\" (click)=\"cancel()\">{{'Cancel' | label: 'PS_CANCEL'}}</span>\r\n            <span class=\"default-btn\" (click)=\"backStep()\" *ngIf=\"state.constructor.name != 'GridDataSource'\">{{'Back' | label: 'PS_BACK'}}</span>\r\n            <span class=\"primary-btn\" (click)=\"nextStep()\" *ngIf=\"state.constructor.name != 'GridName'\">{{'Next' | label: 'PS_NEXT'}}</span>\r\n            <span class=\"default-btn\" (click)=\"save()\" *ngIf=\"state.constructor.name == 'GridName'\">{{'Finish' | label: 'PS_FINISH'}}</span>\r\n        </div>\r\n    </footer>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { } from './gridWizard';\r\n\r\n\r\n@Injectable()\r\nexport class GridWizardService {\r\n\r\n    constructor() { }\r\n\r\n    //\r\n    // Moved to the portal.service\r\n    //\r\n}\r\n\r\n","import { IWizardState } from '../../../common/objects/common';\r\nimport { FormArray } from '@angular/forms';\r\nimport { GridDataModes } from '../../../common/objects/viewModel';\r\n\r\nexport class GridDataSource implements IWizardState {\r\n    public element: any;\r\n    public gridDataMode: string;\r\n\r\n    constructor(element: any) {\r\n        this.element = element;\r\n    }\r\n    next(form: any): IWizardState {\r\n        this.save(form);\r\n        this.gridDataMode = GridDataModes[this.element.properties.settings.gridDataMode];\r\n        if (this.gridDataMode == \"SelectionValues\")\r\n            return new GridFieldExpression(this.element);\r\n        if (this.gridDataMode == \"PredefinedQuery\" || this.gridDataMode == \"AdHocQuery\")\r\n            return new GridQuery(this.element);\r\n        return new GridEditMode(this.element);\r\n    }\r\n    back(form: any): IWizardState {\r\n        return null;\r\n    }\r\n\r\n    save(form: any): any {\r\n        //create properties & settings node\r\n        let dataMode = form.get('gridDataMode').value;\r\n\r\n        let settings;\r\n        switch (dataMode) {\r\n            case \"ItemList\":\r\n                settings = {\r\n                    __type: 'GridDataSettingsItemList',\r\n                    gridDataMode: GridDataModes.ItemList,\r\n                    selectionModeField: SelectionMode.SingleRowSelect,\r\n                    allowDataNavigationField: true,\r\n                    isRequiredOnSubmitField: true\r\n                };\r\n                break;\r\n\r\n            case \"SubentityList\":\r\n                settings = {\r\n                    __type: 'GridDataSettingsSubentityList',\r\n                    gridDataMode: GridDataModes.SubEntityList,\r\n                    selectionModeField: SelectionMode.SingleRowSelect,\r\n                    allowDataNavigationField: true,\r\n                    isRequiredOnSubmitField: true\r\n                };\r\n                break;\r\n            case \"SelectionValues\":\r\n                settings = {\r\n                    __type: 'GridDataSettingsSelVal',\r\n                    gridDataMode: GridDataModes.SelectionValues,\r\n                    selectionModeField: SelectionMode.SingleRowSelect,\r\n                };\r\n                break;\r\n            case \"PredefinedQuery\":\r\n                settings = {\r\n                    __type: 'GridDataSettingsPredefinedQuery',\r\n                    gridDataMode: GridDataModes.PredefinedQuery,\r\n                    selectionModeField: SelectionMode.SingleRowSelect,\r\n                };\r\n                break;\r\n            case \"AdHocQuery\":\r\n                settings = {\r\n                    __type: 'GridDataSettingsAdHocQuery',\r\n                    gridDataMode: GridDataModes.AdHocQuery,\r\n                    selectionModeField: SelectionMode.SingleRowSelect,\r\n                };\r\n                break;\r\n            case \"Generic\":\r\n                settings = {\r\n                    __type: 'GridDataSettingsGeneric',\r\n                    gridDataMode: GridDataModes.Generic,\r\n                    selectionModeField: SelectionMode.SingleRowSelect,\r\n                };\r\n                break;\r\n            case \"DataTable\":\r\n                settings = {\r\n                    __type: 'GridDataSettingsDataTable',\r\n                    gridDataMode: GridDataModes.DataTable,\r\n                    selectionModeField: SelectionMode.SingleRowSelect,\r\n                };\r\n                break;\r\n        }\r\n\r\n        this.element.properties = { settings: settings };\r\n        return this.element;\r\n    }\r\n    validate(form: any): string {\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\nexport class GridEditMode implements IWizardState {\r\n    public element: any;\r\n\r\n    constructor(element: any) {\r\n        this.element = element;\r\n    }\r\n    next(form: any): IWizardState {\r\n        this.save(form);\r\n        return new GridFieldExpression(this.element);\r\n    }\r\n    back(form: any): IWizardState {\r\n        return new GridDataSource(this.element);\r\n    }\r\n    save(form: any): any {\r\n        let editingMode = form.get('editingMode').value;\r\n        let allowDataNavigation = editingMode == 'Disabled';\r\n\r\n        this.element.properties.settings.editorSettings = {\r\n            __type: 'JQGridEditorSettings',\r\n            editingMode: editingMode\r\n        };\r\n        this.element.properties.settings.allowDataNavigation = allowDataNavigation;\r\n        return this.element;\r\n    }\r\n    validate(form: any): string {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport class GridFieldExpression implements IWizardState {\r\n    public element: any;\r\n    public gridDataMode: string;\r\n\r\n    constructor(element: any) {\r\n        this.element = element;\r\n        this.gridDataMode = GridDataModes[this.element.properties.settings.gridDataMode];\r\n    }\r\n\r\n    next(form: any): IWizardState {\r\n        this.save(form);\r\n        return new GridActionButton(this.element);\r\n    }\r\n    back(form: any): IWizardState {\r\n        if (this.gridDataMode == \"SelectionValues\")\r\n            return new GridDataSource(this.element);\r\n        if (this.gridDataMode == \"PredefinedQuery\" || this.gridDataMode == \"AdHocQuery\") {\r\n            return new GridQuery(this.element);\r\n        }\r\n        return new GridEditMode(this.element);\r\n    }\r\n    save(form: any): any {\r\n        this.element.properties.settings.fieldExpressions = form.get('fieldExpressions').value;\r\n        if (this.gridDataMode === \"ItemList\")\r\n            this.element.properties.settings.requestFieldExpressions = form.get('requestFieldExpressions').value;\r\n        if (this.gridDataMode === \"SelectionValues\")\r\n            this.element.properties.settings.selectionValuesExpressions = form.get('requestFieldExpressions').value;\r\n        return this.element;\r\n    }\r\n    validate(form: any): string {\r\n        let fieldExpression = form.get('fieldExpressions').value;\r\n        let requestFieldExpression = form.get('requestFieldExpressions').value;\r\n        if (this.gridDataMode === \"SelectionValues\" && fieldExpression === null && requestFieldExpression == null)\r\n            return 'INCOMPLETEFIELDEXPRESSION';\r\n        return null;\r\n    }\r\n}\r\n\r\nexport class GridActionButton implements IWizardState {\r\n    public element: any;\r\n    public gridDataMode: string;\r\n\r\n    constructor(element: any) {\r\n        this.element = element;\r\n        this.gridDataMode = GridDataModes[this.element.properties.settings.gridDataMode];\r\n\r\n    }\r\n    next(form: any): IWizardState {\r\n        this.save(form);\r\n        let fieldExpression = this.element.properties.settings.fieldExpressions;\r\n        if (this.gridDataMode == \"PredefinedQuery\" ||\r\n            this.gridDataMode == \"AdHocQuery\" ||\r\n            (fieldExpression && fieldExpression.length > 0))\r\n            return new GridColumnSetup(this.element);\r\n        return new GridName(this.element);\r\n    }\r\n    back(form: any): IWizardState {\r\n        this.clear(form);\r\n        return new GridFieldExpression(this.element);\r\n    }\r\n    save(form: any): any {\r\n        //form.get('requestFieldExpressions').value;\r\n        this.element.properties.settings.navigatorActions = [\r\n            { Action: 'Add', Enable: form.get('actionButtons.enableAdd').value, Visible: form.get('actionButtons.visibleAdd').value },\r\n            { Action: 'Edit', Enable: form.get('actionButtons.enableEdit').value, Visible: form.get('actionButtons.visibleEdit').value },\r\n            { Action: 'Delete', Enable: form.get('actionButtons.enableDelete').value, Visible: form.get('actionButtons.visibleDelete').value },\r\n            { Action: 'Refresh', Enable: form.get('actionButtons.enableRefresh').value, Visible: form.get('actionButtons.visibleRefresh').value },\r\n            { Action: 'ExportData', Enable: form.get('actionButtons.enableExportData').value, Visible: form.get('actionButtons.visibleExportData').value },\r\n        ]\r\n        return this.element;\r\n    }\r\n    validate(form: any): string {\r\n        let queryText = form.get('query.queryText').value;\r\n        if (this.gridDataMode == \"AdHocQuery\" && !queryText)\r\n            return 'QUERYTEXTEMPTY';\r\n        return null;\r\n    }\r\n    private clear(form: any): void {\r\n        form.get('actionButtons.enableAdd').setValue(false);\r\n        form.get('actionButtons.enableEdit').setValue(false);\r\n        form.get('actionButtons.enableDelete').setValue(false);\r\n        form.get('actionButtons.visibleAdd').setValue(false);\r\n        form.get('actionButtons.visibleEdit').setValue(false);\r\n        form.get('actionButtons.visibleDelete').setValue(false);\r\n\r\n        form.get('actionButtons.enableAdd').disable();\r\n        form.get('actionButtons.enableEdit').disable();\r\n        form.get('actionButtons.enableDelete').disable();\r\n        form.get('actionButtons.visibleAdd').disable();\r\n        form.get('actionButtons.visibleEdit').disable();\r\n        form.get('actionButtons.visibleDelete').disable();\r\n    }\r\n}\r\n\r\nexport class GridColumnSetup implements IWizardState {\r\n    public element: any;\r\n    constructor(element: any) {\r\n        this.element = element;\r\n    }\r\n    next(form: any): IWizardState {\r\n        this.save(form);\r\n        return new GridRow(this.element);\r\n    }\r\n    back(form: any): IWizardState {\r\n        this.clear(form);\r\n        return new GridActionButton(this.element);\r\n    }\r\n    save(form: any): any {\r\n        let columns = form.get('columns').value;\r\n        let selectedColumns = [];\r\n\r\n        columns.forEach(col => {\r\n            if (col.selected)\r\n                selectedColumns.push({\r\n                    __type: col.columnType,\r\n                    editable: col.editable,\r\n                    hidden: col.hidden,\r\n                    name: col.id,\r\n                    labelName: col.labelName,\r\n                    width: col.width\r\n                });\r\n        })\r\n        this.element.properties.settings.columns = selectedColumns;\r\n        return this.element;\r\n    }\r\n    clear(form: any): void {\r\n        let columns = <FormArray>form.get('columns');\r\n        columns.controls.splice(0, columns.controls.length);\r\n    }\r\n    validate(form: any): string {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport class GridRow implements IWizardState {\r\n    public element: any;\r\n    constructor(element: any) {\r\n        this.element = element;\r\n    }\r\n    next(form: any): IWizardState {\r\n        this.save(form);\r\n        return new GridName(this.element);\r\n    }\r\n    back(form: any): IWizardState {\r\n        return new GridColumnSetup(this.element);\r\n    }\r\n    save(form: any): any {\r\n        let rowId = form.get('rowId').value;\r\n        if (rowId != \"auto\") {\r\n            let columns = this.element.properties.settings.columns;\r\n            columns.forEach(col => col.isRowID = (col.ID == rowId));\r\n        }\r\n\r\n        this.element.properties.settings.selectionMode = form.get('selectionMode').value;\r\n\r\n        let submitMode = form.get('submitDataMode').value;\r\n\r\n        if (submitMode != \"Disabled\") {\r\n            let mappings = form.get('mappings').value;\r\n            let submitMappings = [];\r\n\r\n            mappings.forEach(map => {\r\n                submitMappings.push({ columnName: map.ColumnName, objectPropertyName: map.submitField });\r\n            });\r\n\r\n            this.element.properties.settings.submitModeSpecified = true;\r\n            this.element.properties.settings.submitColumnMappings = submitMappings;\r\n        }\r\n\r\n        return this.element;\r\n    }\r\n    validate(form: any): string {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport class GridQuery implements IWizardState {\r\n    public element: any;\r\n    public gridDataMode: string;\r\n\r\n    constructor(element: any) {\r\n        this.element = element;\r\n        this.gridDataMode = GridDataModes[this.element.properties.settings.gridDataMode];\r\n    }\r\n    next(form: any): IWizardState {\r\n        this.validate(form);\r\n        this.save(form);\r\n        return new GridFieldExpression(this.element);\r\n    }\r\n    back(form: any): IWizardState {\r\n        this.clear(form);\r\n        return new GridDataSource(this.element);\r\n    }\r\n    save(form: any): any {\r\n        if (this.gridDataMode == \"PredefinedQuery\") {\r\n            this.element.properties.settings.queryType = form.get('query.type').value;\r\n            this.element.properties.settings.query = form.get('query.definedQuery').value;            \r\n        }            \r\n        if (this.gridDataMode == \"AdHocQuery\")\r\n            this.element.properties.settings.queryText = form.get('query.queryText').value;\r\n\r\n        let parameters = form.get('parameters').value;\r\n        if (parameters) {\r\n            this.element.properties.settings.QueryParameters = [];\r\n            parameters.forEach(param => {\r\n                this.element.properties.settings.QueryParameters.push({\r\n                    ConnectionType: param.type,\r\n                    Name: param.name,\r\n                    Key: param.value\r\n                });\r\n            });\r\n        }\r\n\r\n        return this.element;\r\n    }\r\n    private clear(form: any): void {\r\n        if (this.gridDataMode == \"PredefinedQuery\" || this.gridDataMode == \"AdHocQuery\") {\r\n            let parameters = <FormArray>form.get('parameters');\r\n            parameters.controls.splice(0, parameters.controls.length);\r\n        }\r\n    }\r\n    validate(form: any): string {\r\n        let definedQuery = form.get('query.definedQuery').value;\r\n        if (this.gridDataMode == \"PredefinedQuery\" && !definedQuery)\r\n            return 'INCOMPLETEQUERYNAME';\r\n        let queryText = form.get('query.queryText').value;\r\n        if (this.gridDataMode == \"AdHocQuery\" && !queryText)\r\n            return 'INCOMPLETEQUERYTEXT';\r\n        return null;\r\n    }\r\n}\r\n\r\nexport class GridName implements IWizardState {\r\n    public element: any;\r\n    public gridDataMode: string;\r\n\r\n    constructor(element: any) {\r\n        this.element = element;\r\n        this.gridDataMode = GridDataModes[this.element.properties.settings.gridDataMode];\r\n    }\r\n    next(form: any): IWizardState {\r\n        this.save(form);\r\n        return null;\r\n    }\r\n    back(form: any): IWizardState {\r\n        if (this.gridDataMode == \"PredefinedQuery\" || this.gridDataMode == \"AdHocQuery\")\r\n            return new GridRow(this.element);\r\n        return new GridActionButton(this.element);\r\n    }\r\n    save(form: any): any {\r\n        let name = form.get('name').value;\r\n        this.element.name = name;\r\n        this.element.properties.name = name;\r\n        this.element.properties.labelName = form.get('titleLabel').value;\r\n        this.element.properties.labelText = form.get('titleText').value;\r\n        return this.element;\r\n    }\r\n    validate(form: any): string {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport class GridColumn {\r\n    name: string;\r\n    labelName: string;\r\n    typeName: string;\r\n    width: number;\r\n    editable: boolean;\r\n    required: boolean;\r\n    requiredSpecified: boolean;\r\n}\r\n\r\nconst enum SelectionMode {\r\n    MultiRowSelect,\r\n    CheckBox,\r\n    SingleRowSelect,\r\n    SingleRowSelectWithPostback,\r\n    Disable\r\n}","import { Pipe, PipeTransform, Injectable } from \"@angular/core\";\r\n\r\n@Pipe({\r\n    name: 'gridWizardFilter'\r\n})\r\n@Injectable()\r\n\r\nexport class GridWizardFilter implements PipeTransform {\r\n    transform(items: any[], searchText:string) {\r\n        if (items && items.length && searchText && searchText.length){\r\n            return items.filter(x => x.Text.toLowerCase().indexOf(searchText.toLowerCase()) > -1);       \r\n        }\r\n        return items;\r\n    }\r\n}","export * from './design.module';","import _ from 'lodash';\nimport { LayoutCell } from \"./layoutCell\";\nimport { LayoutActions } from '../../../common/objects/common';\n\nexport class CellSelection{\n    public first: LayoutCell;\n    public last: LayoutCell;\n    public area: LayoutCell[] = [];\n\n    public get isSelected() {return this.area.length > 0;}\n    public get start() : LayoutCell {return this.isSelected ? this.area[0]/*top left cell*/ : this.first};\n    public get end() : LayoutCell {return this.isSelected ? this.area[this.area.length-1]/*bottom right cell*/ : this.last};\n\n    constructor(){\n    }\n\n    public clear(tbl? : any[][]) : boolean {\n        let needRefresh = this.area.length > 0;\n        this.first = null;\n        this.last = null;\n        this.area = [];\n\n        if(tbl){\n            tbl.forEach(cells=> cells.forEach(c=> c.isSelected = false));\n        }\n        return needRefresh;\n    }\n\n    public select(cell: LayoutCell, matrix: LayoutCell[][]){\n        if( this.first && this.last)\n            this.clear();\n\n        if(!this.first)\n            this.first = cell;\n        \n        else\n            if( this.first == cell)\n                this.clear();\n            else\n                this.last = cell;\n\n        this.selectArea(matrix);        \n    }\n\n    private isInsideSelection(row: number, col: number){\n        return row >= this.start.row && row <= this.end.lastRow && \n               col >= this.start.col && col <= this.end.lastCol;\n    }\n\n    public merge(tbl? : any[][]){\n        if( this.area.length > 1){\n            let mergedCellItems = _.map(this.start.cell.items, it=> it);\n\n            if( tbl ){\n                tbl.forEach( cells=> {\n                    cells.filter(c1=> this.isInsideSelection(c1.row, c1.col) && c1 != this.start.cell)\n                        .forEach(c=> {\n                            c.isHidden = true;\n                            if( !_.isEmpty(c.items) ){\n                                _.values(c.items).forEach( v=> {\n                                    v._fromCell = [c.row,c.col];    // save original cell for restoring on split\n                                    mergedCellItems.push(v);\n                                });\n                                c.items = {};\n                            }\n                        });\n                });\n            }\n\n            this.start.colSpan = this.end.lastCol - this.start.col + 1; \n            this.start.rowSpan = this.end.lastRow - this.start.row + 1; \n\n            this.start.cell.items = {};\n            mergedCellItems.forEach(v=> this.start.cell.items[v.id]=v ) ;\n            return true;\n        }\n        return false;\n    }\n\n    public split(tbl: any[][]){\n        if( tbl ){\n            tbl.forEach( cells=> {\n                cells.filter(c1=> this.isInsideSelection(c1.row, c1.col) && c1 != this.start.cell)\n                    .forEach(c=> {\n                        c.isHidden = false;\n                        c.colSpan = c.rowSpan = 1;\n                        // restore items ??? \n                    });\n            });            \n        }\n        this.start.colSpan = this.start.rowSpan = 1;\n        return true;\n    }\n\n    public getEnabledCommands() : CellSelectionState{\n        let selectedNumber = this.area.length;\n        let res :LayoutActions[] = [];\n        res.push(LayoutActions.toggleCellPos);\n        if( selectedNumber > 0){\n            \n            if(this.start.colSpan > 1 || this.start.rowSpan>1){\n                res.push(LayoutActions.split);\n            }\n            else if(this.start != this.end){\n                res.push(LayoutActions.merge);\n            }\n            res.push(LayoutActions.removeColumn);\n            res.push(LayoutActions.removeRow);\n\n            res.push(LayoutActions.insertRowBefore);\n            res.push(LayoutActions.insertRowAfter);\n\n            res.push(LayoutActions.insertColumnBefore);\n            res.push(LayoutActions.insertColumnAfter);\n\n            res.push(LayoutActions.reset);\n        }\n        return new CellSelectionState(res);\n    }\n\n    private selectArea(matrix: LayoutCell[][]){\n        let start = this.first;\n        let end = this.last || start;\n        let flatMatrix = _.flatten(matrix);\n\n        if(start && end ){\n            let rows = _.sortBy([start.row, end.lastRow]);\n            let cols = _.sortBy([start.col, end.lastCol]);\n            this.area = flatMatrix.filter(c=> c.row >= rows[0] && c.row <= rows[1] && c.col >= cols[0] && c.col <= cols[1] );\n        }\n        else\n            this.area = [];\n\n        // Hignlight selected cells\n        flatMatrix.forEach(c=> c.isSelected = this.area.indexOf(c)!=-1);\n    }\n}\n\nexport class CellSelectionState{\n    constructor(public cmdEnabled : LayoutActions[]){}\n}\n","import { uuid, val } from \"../../../common/objects/common\";\n\nexport interface ICellItem {\n    _ref: boolean;\n    type: string;\n    name: string;\n    id: string;\n    isStatic?: boolean;\n    typeName?: string;\n}\n\nexport interface ICell {\n        id: string;\n        name: string;\n        type: string;\n        properties: any;\n\n        col: number;\n        colSpan: number;\n        row: number;\n        rowSpan: number;\n\n        isHidden?: boolean;\n        isEmpty?: boolean;\n        isSelected?: boolean;\n        items: { [index: string]: ICellItem };\n        itemLength?: number;\n        cell?: ICell;\n        sectionRowNumber? : number;\n}\n\nexport class LayoutCell implements ICell\n{ \n    public cell: ICell;\n\n    get id(): string {return this.cell.id;}\n    set id(id: string) {this.cell.id = id;}\n\n    get name(): string { return this.cell.name; }\n    set name(name: string) { this.cell.name = name; }\n\n    get col(): number { return this.cell.col; }\n    set col(col: number) { this.cell.col = col; }\n\n    get colSpan(): number { return this.cell.colSpan;}\n    set colSpan(colSpan: number) {this.cell.colSpan = colSpan;}\n\n    get lastCol() : number {return this.cell.col + this.cell.colSpan-1;}\n    \n    get row(): number {return this.cell.row;}\n    set row(row: number) {this.cell.row = row;}\n\n    get rowSpan(): number {return this.cell.rowSpan;}\n    set rowSpan(rowSpan: number) {this.cell.rowSpan = rowSpan;}\n\n    get sectionRowNumber(): number {return this.cell.sectionRowNumber;}\n    set sectionRowNumber(v: number) {this.cell.sectionRowNumber = v;}\n\n    get lastRow() : number {return this.cell.row + this.cell.rowSpan-1;}\n\n    get isHidden(): boolean {return this.cell.isHidden;}\n    set isHidden(isHidden: boolean) {this.cell.isHidden = isHidden;}\n\n    get isEmpty(): boolean {return this.cell.isEmpty;}\n    set isEmpty(isEmpty: boolean) {this.cell.isEmpty = isEmpty;}\n\n    get isSelected(): boolean {return this.cell.isSelected;}    \n    set isSelected(isSelected: boolean) {this.cell.isSelected = isSelected;}\n    \n    get items(): { [index: string]: ICellItem } {return this.cell.items;}\n    set items(items: { [index: string]: ICellItem }) {this.cell.items = items;}\n\n    get itemLength(): number {return Object.keys(this.cell.items).length;}\n\n    get properties() : any { return this.cell.properties; }\n    get style() : any { return this.cell.properties.style; }\n\n    get cellStyle() { return this.getCellStyle(); }\n\n    get orientation(): string {\n\n        let i = 0;\n        if(this.style && this.style.Orientation)\n            i = this.style.Orientation;\n        return ['native','vertical','horizontal'][i];\n    }\n\n    get horizontalAlignment(): string {\n        if(this.style && this.style.HorizontalAlignment && this.style.HorizontalAlignment!=0){\n            return ['left','right','mddle'][this.style.HorizontalAlignment-1];\n        }\n        return null;\n    }\n    \n    get verticalAlignment(): string {\n        let va = (this.style && this.style.VerticalAlignment) || 0;\n        if(va!=0){\n            return ['top','bottom','mddle'][va-1];\n        }\n        return null;\n    }\n\n    private getCellStyle() : any{\n        let st = {};\n        const column = 1;\n        const row = 2;\n        if(this.style &&  typeof val(this.style, \"orientation\") != \"undefined\" ){\n            if( val(this.style, \"orientation\") == column)\n                st[\"flex-direction\"] = \"column\";\n            else if( val(this.style, \"orientation\") == row)\n                st[\"flex-direction\"] = \"row\";\n        }\n\n        // Vertical alignment\n\n        if(this.style &&  typeof val(this.style, \"verticalAlignment\") != \"undefined\" ){\n           \n            if( val(this.style, \"orientation\") ==  column){\n                if( val(this.style, \"verticalAlignment\") == 1)  // top\n                    st[\"justify-content\"] = \"flex-start\";\n                else if( val(this.style, \"verticalAlignment\") == 2) // bottom\n                    st[\"justify-content\"] = \"flex-end\";\n                else if( val(this.style, \"verticalAlignment\") == 3) // middle\n                    st[\"justify-content\"] = \"center\";\n            }\n            if( val(this.style, \"orientation\") ==  row){\n                if( val(this.style, \"verticalAlignment\") == 1)  // top\n                    st[\"align-items\"] = \"flex-start\";\n                else if( val(this.style, \"verticalAlignment\") == 2) // bottom\n                    st[\"align-items\"] = \"flex-end\";\n                else if( val(this.style, \"verticalAlignment\") == 3) // middle\n                    st[\"align-items\"] = \"center\";\n            }\n        }\n\n        if(this.style &&  typeof val(this.style, \"HorizontalAlignment\") != \"undefined\" ){\n            if( val(this.style, \"orientation\") ==  column){\n                if( val(this.style, \"horizontalAlignmen\") == 1)  // left\n                    st[\"align-items\"] = \"flex-start\";\n                else if( val(this.style, \"HorizontalAlignment\") == 2) // right\n                    st[\"align-items\"] = \"flex-end\";\n                else if( val(this.style, \"HorizontalAlignment\") == 3) // center\n                    st[\"align-items\"] = \"center\";\n            }\n            if( val(this.style, \"orientation\") ==  row){\n                if( val(this.style, \"horizontalAlignmen\") == 1)  // left\n                    st[\"justify-content\"] = \"flex-start\";\n                else if( val(this.style, \"HorizontalAlignment\") == 2) // right\n                    st[\"justify-content\"] = \"flex-end\";\n                else if( val(this.style, \"HorizontalAlignment\") == 3) // center\n                    st[\"justify-content\"] = \"center\";\n            } \n        }\n\n        return st;\n    }\n\n    get isStatic(): boolean { return this.cell.properties.isStatic; }\n\n    get staticName() { return this.cell.properties.staticName as string; }\n    set staticName(s: string) { this.cell.properties.staticName = s; }\n\n    get position() {return `[${this.row}${this.rowSpan>1?('-' + this.lastRow):''},${this.col}${this.colSpan>1?( '-' +this.lastCol):''}]`;}\n    \n    type: string;\n    __type = \"GridLayoutCell\";\n\n    constructor(rowPos: number, colPos: number, cell?: any){\n        if (cell) {\n            this.cell = cell;\n        }\n        else {\n            var newCell: ICell = <ICell>{\n                name: 'cell_' + rowPos + '_' + colPos,\n                col: colPos,\n                row: rowPos,\n                rowSpan: 1,\n                colSpan: 1,\n                isEmpty: true,\n                isHidden: false,\n                items: {},\n                id: uuid.id('cell'),\n                type: \"cell\",\n                typeName: \"GridLayoutCell\",\n                properties: { \n                    __type: \"GridLayoutCell\", \n                    style: { \"__type\": \"Style\" }, \n                    isStatic: false\n                }\n            };\n            this.cell = newCell;\n        }\n    }\n}\n\n","import { IElement, LayoutActions, LayoutBuilder, DesignModes } from '../../../common/objects/common';\nimport { ICell, LayoutCell, ICellItem } from './layoutCell';\nimport { HistoryLog, LayoutHistoryData, RecordCommand } from '../../../common/objects/historyLog';\nimport _ from 'lodash';\nimport { CellSelection } from './cellSelection';\n\nexport class LayoutManager {\n\n    public layoutMode: DesignModes;\n    public selection : CellSelection;\n\n    get layoutModel(): any {\n        if (!this.elementModel.layout) { // referenced webparts for now.\n            this.createEmptyLayout(0,0);\n        }\n        return this.elementModel.layout;\n    }\n    set layoutModel(model: any) { this.elementModel.layout = model; }\n\n    get tblRows() : any[][] { return  (this.layoutModel && this.layoutModel.tableCells as any[][]) || []; }\n    set tblRows(tbl : any[][]) { this.layoutModel.tableCells = tbl; }\n    \n    get rowLength(): number { return this.layoutModel.rowNumber; }\n    set rowLength(rows: number) { this.layoutModel.rowNumber = rows; }\n\n    get colLength(): number { return this.layoutModel.columnNumber; }\n    set colLength(cols: number) { this.layoutModel.columnNumber = cols; }\n\n    get isStatic(): boolean { return this.layoutModel.isStatic === true; }\n\n    get isActive(): boolean { return this.selection.isSelected; }\n\n    get allCells() : LayoutCell[]{ return _.flatten(this.matrix); }\n\n    private _oldTblRows : any[][];\n\n    constructor(private elementModel: IElement/* Page | WebPart */, private _historyLog: HistoryLog) {\n        this.fillLayoutMatrix();\n        this.selection = new CellSelection();\n    }\n\n    public refresh(): void {\n        this.fillLayoutMatrix();\n    }\n\n    public reset() : void {\n        this._oldTblRows = [];\n        this.clearSelection();\n    }\n\n    public renameLayoutRefs(oldname: string, newname: string) {\n        this.allCells.forEach(c=> {            \n            if( c.items ){\n                let r = _.find(c.items,  (ci:any) => ci.name == oldname );\n                if( r ){\n                    r.name = newname;\n                    // stop processing\n                    return false;\n                }\n            }\n        });\n    }\n\n    private createEmptyLayout(rows: number, cols: number) {\n        this.layoutModel = {};\n        this.rowLength = rows;\n        this.colLength = cols;\n        this.layoutModel.tableCells = [];\n        this.layoutModel.__type = 'GridLayout';\n        this.layoutModel.isStatic = false;\n    }\n\n    // tableCells -> matrix.\n    private fillLayoutMatrix() {\n\n        \n        if(this._historyLog){\n            if( _.isEqual(this._oldTblRows, this.tblRows) && this._historyLog.undoCount == 0 && this._historyLog.redoCount == 0){\n                // no changes -- layout is not rebuilt\n                return;\n            }\n         }    \n\n        let grps : any[];\n        let currentIndex = 0;\n        if(this.elementModel.properties && this.elementModel.properties.collapsibleGroups ){            \n            grps = [];\n            this.elementModel.properties.collapsibleGroups.forEach((g:any)=>{\n                for(let i=0; i<g.rows; i++){\n                    grps.push(currentIndex);\n                }\n                currentIndex++;\n            });\n        }\n\n        if (this.tblRows && this.tblRows.length > 0) {\n            this.matrix =\n                _.map( this.tblRows, (tableCells, i) => {\n                    return _.map( tableCells, (tc, j) => {\n                        let lc = new LayoutCell(tc.col, tc.row, tc);\n                        if(grps && grps.length)\n                            lc.sectionRowNumber = grps[i];\n                        return lc;\n                    });\n                });\n        }\n        else {\n            // if there is no layout (UserFieldsWebPart case) - add one cell.\n            this.rowLength = this.colLength = 1;\n            this.layoutModel.isStatic = false;\n            this.matrix = Array<LayoutCell[]>([new LayoutCell(0,0)]);\n        }\n        this._oldTblRows = _.cloneDeep(this.tblRows);        \n    }\n\n    public selectCell(cell: LayoutCell) : boolean{\n        let selected = false;\n        this.selection.select(cell, this.matrix);\n        selected = true;\n        return selected;\n    }\n\n    public removeCellItem(cell:ICell, element:IElement): boolean {\n        let removed = false;\n\n        if (element) {\n\n            // remove reference\n            let itemKey = _.findKey(cell.items, (item : ICellItem, key) => item.name == element.name);\n            if (itemKey) {\n\n                // add removed items to the removed list\n                if (cell.items[itemKey].isStatic){                    \n                    cell.items[itemKey].typeName = element._fullTypeName;\n                    this.layoutModel.removedItems = this.layoutModel.removedItems || [];\n                    this.layoutModel.removedItems.push(cell.items[itemKey]);\n                }\n                delete cell.items[itemKey];\n                removed = true;\n\n                // reorder item refs\n                let ind = 0;\n                let newItems : {[index:string] : ICellItem} = {};\n                _.map( cell.items, (ci:ICellItem) => {newItems[ind.toString()] = ci; ind++;} );\n                cell.items = newItems;\n            }\n        }\n        return removed;\n    }\n\n\n    private removeMatrixColumn(tbl: any[][], index : number, key = 'col'){\n        const spanKey = key + 'Span';\n        tbl.forEach( (cells) => {\n            let indexToRemove = index;\n            let spannedCell = cells.find(cr=> cr[spanKey] > 1 && indexToRemove >= cr[key] && indexToRemove < (cr[key] + cr[spanKey]));\n            if( spannedCell ){\n                spannedCell[spanKey]--;\n                if( spannedCell[key] == indexToRemove)\n                indexToRemove++;\n            }\n            let removedCell = cells.splice(indexToRemove, 1)[0];\n            this.layoutModel.removedCells = this.layoutModel.removedCells || [];\n            // remove items if there is any\n            _.forEach(removedCell.items, it=> this.removeCellItem(removedCell, it));\n\n            this.layoutModel.removedCells.push(removedCell);\n            _.range( indexToRemove, cells.length ).forEach(i=> cells[i][key]-- );\n        });\n    }\n\n    // handle remove column command.\n    private removeColumn(): void {\n\n        if (this.colLength < 2) {\n            // do not allow to remove --- keep visible at least 1 column\n            return;\n        }        \n        this.removeMatrixColumn(this.tblRows, this.selection.start.col);\n        this.colLength--;\n        this.clearSelection();\n    }\n\n    // transpose matrix\n    private transpose(t: any[][] ) : any[][]{\n        return t[0].map((col, i) => t.map((row) => row[i]));\n    }\n\n    // handle remove row command.\n    private removeRow(): void {\n\n        if (this.rowLength < 2) {\n            // do not allow to remove the last row\n            return;\n        }\n\n        // transpose matrix\n        let transposedTbl = this.transpose(this.tblRows);\n        this.removeMatrixColumn(transposedTbl, this.selection.start.row, 'row');\n\n        // transpose back\n        this.tblRows = this.transpose(transposedTbl);\n        this.rowLength--;\n        this.clearSelection();\n    }\n\n    // handle split command.\n    private splitSelectedCells(): void {\n        this.selection.split(this.tblRows);\n        this.clearSelection();\n    }\n\n    // handle Merge command.\n    private mergeSelectedCells(): void {\n        this.selection.merge(this.tblRows);\n        this.clearSelection();\n    }\n\n    public clearSelection(): void {\n        this.selection.clear(this.tblRows);\n        this.fillLayoutMatrix();\n    }\n\n    private insertRow(rowIndex: number): void {\n        let transposed = this.transpose(this.tblRows);\n        this.insertColumnMatrix(transposed, rowIndex, 'row');\n        this.tblRows = this.transpose(transposed);\n        this.rowLength++;\n        this.clearSelection();\n    }\n\n    private insertColumnMatrix(tbl:any[][], indexToInsert : number, key = 'col'){\n        const spanKey = key+ 'Span';\n        tbl.forEach( (cells, rIndex) => {\n            let colIndex = indexToInsert;\n            let cellHidden = false;\n            let spannedCell = cells.find(cx=> cx[spanKey] > 1 && colIndex > cx[key] && colIndex < (cx[key] + cx[spanKey]));\n            if( spannedCell ){\n                spannedCell[spanKey] ++;\n                cellHidden = true;\n            }\n            let nc = key == 'col' ? \n                        LayoutBuilder.newCell(rIndex, colIndex, cellHidden) : \n                        LayoutBuilder.newCell(colIndex, rIndex, cellHidden);\n            if( colIndex == this[key+'Length']  )\n                cells.push(nc);\n            else{\n                cells.splice( colIndex, 0, nc);\n                _.range( colIndex+1, cells.length ).forEach(i=> cells[i][key]++ );\n            }            \n        });        \n    }\n\n    private insertColumn(colInsertAtPosition: number): void {\n        this.insertColumnMatrix(this.tblRows, colInsertAtPosition);\n        this.colLength++;\n        this.clearSelection();\n    }\n\n    public resetSelected(): void {\n        this.clearSelection();\n    }\n\n    public executeCommand(cmd: LayoutActions) {\n\n        let oldLayout = this.cloneLayout();\n\n        switch (cmd) {\n            case LayoutActions.merge:\n                this.mergeSelectedCells(); break;\n            case LayoutActions.split:\n                this.splitSelectedCells(); break;\n            case LayoutActions.insertRowBefore:\n                if (this.selection.isSelected)\n                    this.insertRow(this.selection.start.row);\n                break;\n            case LayoutActions.insertRowAfter:\n                if (this.selection.isSelected)\n                    this.insertRow(this.selection.start.row+this.selection.start.rowSpan);\n                break;\n            case LayoutActions.insertColumnBefore:\n                if (this.selection.isSelected)\n                    this.insertColumn(this.selection.start.col);\n                break;\n            case LayoutActions.insertColumnAfter:\n                if (this.selection.isSelected)\n                    this.insertColumn(this.selection.start.col+this.selection.start.colSpan);\n                break;\n            case LayoutActions.removeRow:\n                this.removeRow(); break;\n            case LayoutActions.removeColumn:\n                this.removeColumn(); break;\n            case LayoutActions.reset:\n                break;\n            case LayoutActions.toggleCellPos:\n                break;\n        }\n\n        if (cmd != LayoutActions.reset && cmd != LayoutActions.toggleCellPos) {\n            // record into the history\n            let newLayout = this.cloneLayout();\n            this._historyLog.recordHistoryItem(RecordCommand.layoutChange, new LayoutHistoryData(cmd, oldLayout, newLayout, this.elementModel));\n        }\n        this.resetSelected();\n    }\n\n    private cloneLayout(): any {\n        return this.layoutModel.tableCells.map(\n            row => row.map(cell => {\n                let c: LayoutCell = _.clone(cell);\n                c.isSelected = false;\n                let clonedItems = {};\n                _.forEach(cell.items, it => clonedItems[it.id] = _.clone(it));\n                c.items = clonedItems;\n                return c;\n            })\n        );\n    }\n\n    public getCommands(){\n        return this.selection.getEnabledCommands().cmdEnabled;\n    }\n\n    public findLayoutCell(c: ICell) : LayoutCell {\n        return _.flatten(this.matrix).find(cell=> cell.name == c.name);\n    }\n\n    public findLayoutCellById(id:string) : LayoutCell {\n        return _.flatten(this.matrix).find(cell=> cell.id == id);\n    }\n\n    // ViewModel of layout\n    private matrix: LayoutCell[][];\n}\n","import { LayoutActions } from \"../../../common/objects/common\";\r\n\r\nexport class LayoutMenuItem {\r\n    public caption : string;\r\n    public label : string;\r\n    public enabled: boolean;\r\n\r\n    constructor(public action: LayoutActions, enabled: boolean = false){\r\n        let cp = LayoutMenuItem._captions_and_labels.find(a=> a[0] == action );\r\n        this.caption = cp[1];\r\n        this.label = cp[2];\r\n        this.enabled = enabled;\r\n    }\r\n\r\n    private static _captions_and_labels : [LayoutActions,string,string][] = [\r\n        [LayoutActions.merge, \"Merge\", \"PS_ACTION_MERGE\"],\r\n        [LayoutActions.split, \"Split\", \"PS_ACTION_SPLIT\"],\r\n        [LayoutActions.removeRow, \"Remove Row\", \"PS_ACTION_REMOVE_ROW\"],\r\n        [LayoutActions.removeColumn, \"Remove Column\", \"PS_ACTION_REMOVE_COLUMN\"],\r\n        [LayoutActions.insertRowBefore, \"Insert Row Before\", \"PS_ACTION_INSERT_ROW_BEFORE\"],\r\n        [LayoutActions.insertColumnBefore, \"Insert Column Before\", \"PS_ACTION_INSERT_COLUMN_BEFORE\"],\r\n        [LayoutActions.insertRowAfter, \"Insert Row After\", \"PS_ACTION_INSERT_ROW_AFTER\"],\r\n        [LayoutActions.insertColumnAfter, \"Insert Column After\",\"PS_ACTION_INSERT_COLUMN_AFTER\"],\r\n        [LayoutActions.none, \"\",\"\"],\r\n        [LayoutActions.reset, \"Reset\",\"PS_ACTION_RESET_SELECTION\"],\r\n        [LayoutActions.toggleCellPos, \"Toggle Cell Position\",\"PS_ACTION_TOGGLE_CELLPOS\"]\r\n    ];\r\n}\r\n","import {Injectable, Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'componentItemFilter'\r\n})\r\n@Injectable()\r\nexport class ComponentItemFilter implements PipeTransform {\r\n    transform(compItems: any[], item: any, type: string): any[] {        \r\n        if(item == undefined)\r\n            return;    \r\n                                \r\n        let items = [];\r\n        for(let key in compItems) {\r\n            let value = compItems[key];\r\n            if(value.name == item.name && value.type == type)\r\n                items.push(compItems[key]);\r\n        }       \r\n                     \r\n        return items;\r\n    }\r\n}\r\n\r\n","import {Injectable, Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({\r\n    name: 'hiddenItemFilter'\r\n})\r\n@Injectable()\r\nexport class HiddenItemFilter implements PipeTransform {\r\n    transform(items: any[], hidden: boolean): any[] {\r\n        if (hidden != undefined)\r\n            return items.filter(item => item.isHidden == hidden);       \r\n                                     \r\n    }\r\n}\r\n\r\n","import { Component, Input, Output, EventEmitter, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { IUIDesigner, LayoutActions, DesignModes} from '../../common/objects/common';\r\nimport { LayoutMenuItem } from './objects/layoutMenuItem';\r\nimport { StudioStateService } from '../../common/services/studioStateService';\r\n\r\n@Component({\r\n    selector: 'csi-design-toolbar',\r\n    templateUrl: 'toolbar.component.html',\r\n    styleUrls:[`toolbar.component.less`]\r\n})\r\nexport class DesignToolbarComponent implements OnInit, OnChanges {\r\n    @Input() designElement: IUIDesigner;\r\n    @Input() layoutActions : LayoutActions[];\r\n    @Output() onModeChanged = new EventEmitter<DesignModes>(); \r\n\r\n    DesignModesEnum = DesignModes;\r\n    DesignModesValues = \r\n        Object.keys(DesignModes).filter(k=> k.length==1).map(k1=>{return {k: k1, v:DesignModes[k1].match(/[A-Z][a-z]+|[0-9]+/g).join(\" \")}; });\r\n\r\n    //mode = this.DesignModesEnum.Design // must be check / [class.designMode]=\"mode==DesignModesEnum.Design\">\r\n    get layoutMenu() : LayoutMenuItem[] {return this.designElement.__layoutMenu;}\r\n    set layoutMenu(lm : LayoutMenuItem[]) { this.designElement.__layoutMenu = lm;}\r\n\r\n    activeMode : DesignModes;\r\n\r\n    constructor(private _studioService: StudioStateService){\r\n    }\r\n\r\n    ngOnInit(){\r\n        // Init menu\r\n        this.layoutMenu = this._layoutMenuItems.map( a=> new LayoutMenuItem(a));\r\n    }\r\n\r\n    ngOnChanges(ch:SimpleChanges){\r\n        if( ch.layoutActions){\r\n           let acts =  ch.layoutActions.currentValue as LayoutActions[];\r\n           if( acts ){\r\n                if( !this.layoutMenu )\r\n                    this.layoutMenu = this._layoutMenuItems.map( a=> new LayoutMenuItem(a));\r\n                this.layoutMenu.forEach(m=>{\r\n                    m.enabled = acts.indexOf(m.action) != -1;\r\n                });\r\n            }\r\n        }\r\n        if( ch.designElement ){\r\n            this.activeMode = ch.designElement.currentValue.__designMode;\r\n        }\r\n    }\r\n\r\n    sliderValueChanged($event, el: IUIDesigner) {\r\n        let newScaleVal: number = $event;\r\n        if (newScaleVal !== el.scaleValue) {\r\n            el.scaleValue = newScaleVal;\r\n        }\r\n    }\r\n\r\n    modeChanged(v:DesignModes){\r\n        this.designElement.__designMode = this.activeMode;\r\n        this.onModeChanged.emit(this.activeMode);\r\n    }\r\n\r\n    isLayoutCmdEnabled(m:LayoutMenuItem) : boolean{\r\n        return this.layoutActions && this.layoutActions.indexOf(m.action)!=-1;\r\n    }\r\n\r\n    executeCommand(ev: Event, m : LayoutMenuItem){        \r\n        this._studioService.layoutCommand(m.action);\r\n    }\r\n\r\n    private _layoutMenuItems = [\r\n        LayoutActions.merge, \r\n        LayoutActions.split, \r\n        LayoutActions.none, \r\n        LayoutActions.removeRow, \r\n        LayoutActions.removeColumn, \r\n        LayoutActions.insertRowBefore, \r\n        LayoutActions.insertColumnBefore, \r\n        LayoutActions.insertRowAfter, \r\n        LayoutActions.insertColumnAfter, \r\n        LayoutActions.none,\r\n        LayoutActions.reset,\r\n        LayoutActions.toggleCellPos\r\n    ];\r\n}\r\n","<div class=\"csi-design-toolbar\">\r\n    <div class=\"csi-zoom-control\">\r\n        <span>{{ 'Zoom' | label: 'PS_SLIDER_ZOOM' }}           \r\n                <input type=\"range\" min=\"20\" max=\"200\" [(ngModel)]=\"designElement.scaleValue\" (ngModelChange)=\"sliderValueChanged($event, designElement)\" />    \r\n                <input type=\"text\" [(ngModel)]=\"designElement.scaleValue\" />          \r\n        </span>\r\n    </div>\r\n    <div class=\"csi-toolbox\">\r\n        <div class=\"csi-design-mode-selector\" [class.designMode]=\"DesignModesEnum.Design\">\r\n            <select [(ngModel)]=\"activeMode\" (change)=\"modeChanged(activeMode)\">\r\n                <option *ngFor=\"let m of DesignModesValues\" value=\"{{m.k}}\" [hidden]=\"m.k=='6' && designElement.type!='Webpart'\" >{{m.v}}</option>\r\n            </select>\r\n        </div>\r\n\r\n        <div *ngIf=\"activeMode==DesignModesEnum.Design\" class=\"csi-cell-action\">\r\n            <div class=\"btn-group\" keyboardNav=\"true\">\r\n                <button id=\"actionsDropdown\" type=\"button\" class=\"btn-primary\" [matMenuTriggerFor]=\"actionsMenu\">\r\n                    <span>{{'Actions' | label: 'PS_ACTIONS'}}</span>\r\n                </button>\r\n                <mat-menu #actionsMenu=\"matMenu\" class=\"csi-context-menu\" [overlapTrigger]=\"false\">                    \r\n                    <div *ngFor=\"let m of layoutMenu\">\r\n                        <button mat-menu-item *ngIf=\"m.action!=0\" [disabled]=\"!isLayoutCmdEnabled(m)\" (click)=\"executeCommand($event, m)\">{{m.caption | label: m.label}}</button>\r\n                        <div *ngIf=\"m.action==0\" class=\"divider dropdown-divider\"></div>\r\n                    </div>\r\n                </mat-menu>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, Input, OnChanges, OnInit, SimpleChanges} from \"@angular/core\";\r\nimport { PortalService } from \"../../../common/services/portal.service\";\r\nimport { WhereUsedItem } from \"../../../common/objects/viewModel\";\r\nimport { Subject} from \"rxjs\";\r\nimport { WCFService } from '../../../common/services/wcf.service';\r\nimport { UIComponentRef }  from '../../../common/objects/common';\r\nimport { LabelService } from \"../../../common/services/label.service\";\r\nimport { LocalService } from \"../../../common/services/local.service\";\r\n\r\n\r\n@Component({\r\n    selector: 'where-used-report',\r\n    templateUrl: 'whereUsed.component.html',\r\n    host: {\r\n        'style': 'flex-grow: 2; display: flex; flex-direction: column;'\r\n    },\r\n})\r\n\r\nexport class WhereUsedReportComponent implements OnChanges,OnInit{\r\n\r\n    @Input() name: any;\r\n\r\n    pageList =  new Subject<WhereUsedItem[]>();\r\n    webPartList= new Subject<WhereUsedItem[]>();\r\n    loading:boolean=true;\r\n    refFound:boolean=true;\r\n    allPages : string[] = [];\r\n    workspaceLbl:string;\r\n    nameLbl:string;\r\n\r\n    private tempPages : WhereUsedItem[] = [];\r\n    private allWebParts : string[] = [];\r\n    private tempWebParts : WhereUsedItem[] = [];\r\n  \r\n\r\n    constructor(private _portalService: PortalService, \r\n                private _wcfService: WCFService,\r\n                private _labelService:LabelService,\r\n                private _localService: LocalService){\r\n                   \r\n    }\r\n\r\n    private checkPage(){\r\n        if( this.allPages.length == 0 && this.allWebParts.length==0){\r\n            this.pageList.next(this.tempPages.reverse());\r\n            let nameItem = this.name;\r\n            this._localService.addPageList(nameItem, this.tempPages);\r\n            this.loading=false;\r\n            if(this.tempPages.length==0 && this.tempWebParts.length==0){\r\n                this.refFound=false; \r\n            }\r\n            else{\r\n                this.refFound=true; \r\n            }\r\n\r\n            return;\r\n        }\r\n        let page = this.allPages.pop();\r\n        this._portalService.isUsed(page, \"page\", this.name).subscribe( wsList => {\r\n            if( wsList !== \"-\"){                     \r\n                this.tempPages.push(<WhereUsedItem>{name: page, workSpace : wsList });      \r\n            }\r\n            setTimeout(() => {\r\n                this.checkPage();\r\n            }, 0);\r\n        });\r\n    }\r\n\r\n    private checkWebParts(){\r\n        if( this.allWebParts.length == 0 && this.allPages.length == 0){\r\n            this.webPartList.next(this.tempWebParts.reverse());\r\n            let nameItem = this.name;\r\n            this._localService.addWebPartList(nameItem, this.tempWebParts);\r\n            this.loading=false;\r\n            if(this.tempPages.length==0 && this.tempWebParts.length==0){\r\n                this.refFound=false; \r\n            }\r\n            else{\r\n                this.refFound=true; \r\n            }\r\n\r\n                     return;\r\n        }\r\n        let webParts = this.allWebParts.pop();\r\n        this._portalService.isUsed(webParts,\"Webpart\",this.name).subscribe( wsList => {\r\n            if( wsList !== \"-\"){              \r\n               this.tempWebParts.push(<WhereUsedItem>{name: webParts, workSpace : wsList });\r\n            }\r\n            setTimeout(() => {\r\n                this.checkWebParts();\r\n           }, 0);\r\n        });\r\n \r\n    }\r\n\r\n    private loadLabels() {\r\n        this.workspaceLbl = this._labelService.getLabel('PS_WORKSPACELBL', 'Workspace');\r\n        this.nameLbl = this._labelService.getLabel('PS_NAMELBL', 'Name');\r\n    }\r\n\r\n    private async load() {\r\n        this.loadLabels();\r\n        this.loading=true;\r\n        this._wcfService.getElementRefs(\"UIVirtualPageMaint\", \"Page\", true).subscribe( (pages: UIComponentRef[]) => {\r\n            this.allPages = pages.map( p=> p.name);\r\n            this.checkPage();  \r\n                \r\n        });\r\n\r\n        this._wcfService.getElementRefs(\"WebPartMaint\",\"Webpart\", true).subscribe( (webParts: UIComponentRef[]) => {\r\n            this.allWebParts = webParts.map( p=> p.name);\r\n            this.checkWebParts();\r\n         });\r\n    }\r\n\r\n    private checkLocalStorage(ch):void{\r\n        let pageList = this._localService.getPageList();\r\n        let webPartList = this._localService.getWebPartList();\r\n       \r\n        if(pageList || webPartList){\r\n            let pages = pageList.filter(el => el.wepPartName == ch.name.currentValue);\r\n            let webParts = webPartList.filter(el => el.wepPartName == ch.name.currentValue);\r\n            if(!pages[0] && !webParts[0]){\r\n                 this.load();\r\n            }\r\n\r\n            if(pages[0]){\r\n                if(pages[0].wepPartName == ch.name.currentValue){\r\n                    setTimeout(() =>  this.pageList.next(pages[0].items), 0)\r\n                    this.loading=false;\r\n                    if(pages[0].items.length==0 && webParts[0].items.length==0)\r\n                    this.refFound=false;\r\n                    else{\r\n                        this.refFound=true;\r\n                    }\r\n                }\r\n            }\r\n          \r\n            if(webParts[0]){\r\n                if(webParts[0].wepPartName == ch.name.currentValue){\r\n                    setTimeout(() =>   this.webPartList.next(webParts[0].items), 0)\r\n                    this.loading = false;\r\n                    if(pages[0].items.length==0 && webParts[0].items.length==0)\r\n                    this.refFound=false;\r\n                    else{\r\n                        this.refFound=true;\r\n                    }\r\n                }\r\n            }\r\n        }else{\r\n            this.load();\r\n        }\r\n\r\n    }\r\n\r\n    ngOnInit(){\r\n\r\n    }\r\n\r\n    ngOnChanges(ch : SimpleChanges): void {\r\n        this.loading = false;\r\n        this.loadLabels();\r\n        this.checkLocalStorage(ch);\r\n    }\r\n   \r\n}","<div class=\"csi-where-used-report\">\r\n    <div class=\"sectionHeading\">WebPart:&nbsp;{{name}}</div> \r\n    <div class=\"csi-where-used-bar\"><mat-progress-bar mode=\"indeterminate\" *ngIf=\"loading\"></mat-progress-bar></div>  \r\n<br/>\r\n <ng-template #referenceSection><div class=\"sectionHeading\">No references found</div></ng-template>\r\n <ng-container *ngIf=\"refFound else referenceSection\">\r\n    <div class=\"csi-where-used-report-section\">    \r\n        <span class=\"sectionHeading\">Found in Virtual Page(s)</span>    \r\n            <table class=\"csi-where-used-report-table\">\r\n                <tr>\r\n                    <td>{{nameLbl}}</td>\r\n                    <td>{{workspaceLbl}}</td>\r\n                </tr>\r\n                <tr *ngFor=\"let p of pageList|async\">\r\n                    <td>{{p.name}}</td>\r\n                    <td>{{p.workSpace}}</td>\r\n                </tr>\r\n            </table>          \r\n    </div>\r\n    <br /> \r\n    <div class=\"csi-where-used-report-section\">    \r\n        <span class=\"sectionHeading\">Found in Web Part(s)</span>\r\n            <table class=\"csi-where-used-report-table\">\r\n                <tr>\r\n                    <td>{{nameLbl}}</td>\r\n                    <td>{{workspaceLbl}}</td>\r\n                </tr>\r\n                <tr *ngFor=\"let wpl of webPartList|async\">\r\n                    <td>{{wpl.name}}</td>\r\n                    <td>{{wpl.workSpace}}</td>\r\n                </tr>\r\n            </table>          \r\n    </div> \r\n</ng-container>\r\n</div>    \r\n\r\n\r\n","export * from './layout.module';","import { Component, EventEmitter, Input, OnInit, Output, ChangeDetectionStrategy, ElementRef } from '@angular/core';\n\nimport { IElement, IUIDesigner, StudioSubjects, ILabel } from '../common/objects/common';\nimport { fromEvent } from 'rxjs';\n\nimport { AlertService } from '../alert/alert.service';\nimport { StudioStateService } from '../common/services/studioStateService';\n\n@Component({\n    selector: 'csi-layout',\n    templateUrl: 'layout.component.html',\n    styleUrls:['layout.component.less'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LayoutComponent implements OnInit {\n    @Input('rootElement') __rootElement: any;\n    @Input() subjects: StudioSubjects;\n    @Input() showTraceViewer: boolean;\n\n    @Output() onLoadElement = new EventEmitter<IElement>();\n\n    inArea = false;\n\n    get rootElement(): IUIDesigner { return this.__rootElement; }\n\n    constructor(\n        private _element: ElementRef,\n        private _studioStateService: StudioStateService,\n        private _alertService: AlertService) {\n    }\n\n    ngOnInit(): void {\n        fromEvent<KeyboardEvent>(document, 'keyup')\n            .subscribe(ke => {\n                if((ke.key == \"Delete\" || ke.key == \"Del\") && !(ke.altKey || ke.shiftKey || ke.ctrlKey) ){                    \n                    if( this.inArea && this.rootElement && this.rootElement.type !== \"StartPage\" )\n                        this.deleteElement();\n                    else{\n                        let act = this._studioStateService.activeElement;\n                        if(act && act['__type'] === \"UIComponentRef\" ){\n                            this.subjects.deleteElement.next(act);\n                        }\n                    }\n                }\n            });\n\n        fromEvent<MouseEvent>(this._element.nativeElement, 'mouseenter').subscribe(m => this.inArea = true);\n        fromEvent<MouseEvent>(this._element.nativeElement, 'mouseleave').subscribe(m => this.inArea = false);\n    }\n\n    loadElement(element: IElement): void {\n        this.onLoadElement.emit(element);\n    }\n\n    deleteElement(): void {\n        let { name: activeName, type: activeType } = this._studioStateService.getRoot().__selectedElement;\n        // Webpart fix\n        if( activeType == \"Webpart\")\n            activeType = \"Web Part\";\n\n        let lblMessage = <ILabel>{\n            Name: 'PS_WARNING_DELETE_ELEMENT_MESSAGE',\n            DefaultValue: 'You are about to permanently delete the selected {0} {1}.Please make sure that other components have no dependencies on it.Do you want to continue?',\n            arguments: [activeName, activeType.toLowerCase()]\n        };\n        let titleLabel = <ILabel>{\n            Name: 'PS_WARNING_DELETE_ELEMENT_TITLE',\n            DefaultValue: 'Delete {1}',\n            arguments: [activeName, activeType]\n        };\n\n        this._alertService.confirmModal(lblMessage, titleLabel)\n            .subscribe(ok => { if (ok) this.removeElementFinally(); });\n    }\n\n    private removeElementFinally() {\n        this._studioStateService.removeElementFromCell();\n    }\n\n}\n","<div class=\"csi-editor-area\" *ngIf='rootElement'>\r\n\r\n    <csi-start-page *ngIf='rootElement.type === \"StartPage\"' (onLoadElement)=\"loadElement($event)\"></csi-start-page>\r\n\r\n    <div *ngIf='rootElement.type === \"Page\" || rootElement.type === \"Webpart\"' class=\"csi-editor-content\">\r\n        <csi-design-root [root]=\"rootElement\"></csi-design-root>\r\n    </div>\r\n\r\n    <div *ngIf='rootElement.type === \"Pageflow\"'  class=\"csi-editor-content\">\r\n        <csi-designPageflow class=\"csi-pageflowDesigner\" [element]='rootElement'></csi-designPageflow>\r\n    </div>\r\n\r\n    <div *ngIf='rootElement.type !== \"StartPage\" && rootElement.type !== \"Page\" && rootElement.type !== \"Webpart\" && rootElement.type !== \"Pageflow\"' class=\"csi-modeling-object\">\r\n        <csi-panel [component]=\"'csi-property-list'\" [dataSource]=\"'object'\" [subjects]=\"subjects\"></csi-panel>\r\n    </div>\r\n</div>\r\n\r\n<csi-panel-splitter direction=\"h\" [panel]=\"traceLogPanel\" *ngIf=\"!!rootElement && showTraceViewer\"></csi-panel-splitter>\r\n\r\n<div class=\"tracelog-area\" [class.hidden]=\"!showTraceViewer\" [class.full]=\"showTraceViewer && !rootElement\" #traceLogPanel>\r\n    <csi-trace-log [activePage]=\"rootElement?.name\"></csi-trace-log>\r\n</div>\r\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\n\n//module\nimport { PanelModule } from '../panel';\nimport { DesignModule } from './design';\nimport { SharedModule } from '../shared';\nimport { TraceLogModule } from './traceLog';\n\n//app components\nimport { LayoutTabsComponent } from './tabs.component';\nimport { LayoutComponent } from './layout.component';\nimport { StartPageComponent } from './startPage.component';\n\n\n@NgModule({\n    imports: [\n        DesignModule,\n        PanelModule,\n        SharedModule,      \n        TraceLogModule,\n    ],\n    declarations: [\n        LayoutComponent,\n        LayoutTabsComponent,\n        StartPageComponent,\n    ],\n    exports: [\n        LayoutComponent,\n        LayoutTabsComponent\n    ],\n})\nexport class LayoutModule {\n    constructor( @Optional() @SkipSelf() parentModule: LayoutModule) {\n        if (parentModule) {\n            throw new Error(\n                'LayoutModule is already loaded. Import it in the StudioModule only');\n        }\n    }\n}\n\n","import { Component, OnInit, OnChanges, Input } from '@angular/core';\nimport { IPersSection, IPersDataContract, IControl, IPersWebPart, IPersVirtualPageInfoSection, IPersControls, IElement, IUIComponentRef, PersSectionType } from '../../common/objects/common';\nimport { PanelUpdatedData } from '../../panel/panel';\nimport { PortalService } from '../../common/services/portal.service';\nimport { LabelService } from '../../common/services/label.service';\nimport { PersonalizationTypes } from '../../common/services/metadata.service';\nimport { StudioStateService } from '../../common/services/studioStateService';\n\nimport * as _ from 'lodash';\n\n@Component({\n    selector: 'csi-pers-report',\n    host: {\n        'style': 'flex-grow: 2; display: flex; flex-direction: column;'\n    },\n    templateUrl: 'personalizationReport.component.html'\n})\n\nexport class PersonalizationReportComponent implements OnInit, OnChanges {\n    @Input(\"element\") __element: any;\n    get element(): IElement { return this.__element; }\n    set element(v: IElement) { this.__element = v; }\n\n    constructor(private _studioStateService: StudioStateService, private _labelService: LabelService, private _portalService: PortalService) {\n    }\n\n    private metadata: PersonalizationTypes;\n    private controls: IControl[];\n    //private errorMessage: any;\n    sections: IPersSection[] = [];\n    webpartSections: IPersWebPart[] = [];\n\n    // Component Labels\n    private vpSectionLbl: string;\n    private descrLbl: string;\n    private titleLbl: string;\n    private behaviorLbl: string;\n    private primarySvcLbl: string;\n    private lastModLbl: string;\n    private lastModByLbl: string;\n    private codeBehindLbl: string;\n    private createdByLbl: string;\n    private typeNameLbl: string;\n    private workspaceLbl: string;\n    private dataContractsLbl: string;\n    private nameLbl: string;\n    private connTypeLbl: string;\n    private keyLbl: string;\n    private propLbl: string;\n    private openWebPartLbl: string;\n    private controlNameLbl: string;\n    private controlLbl: string;\n\n    ngOnInit(): void {        \n        this.load();\n    }\n\n    ngOnChanges(ch): void {\n        this.load();\n    }\n\n    private parseDateString(dateStr: string): string {\n        let formattedStr: string = '';\n        if (!isNaN(Date.parse(dateStr))) {\n            let hour: number = Number(dateStr.split('T')[1].split(':')[0]);\n            let min: number = Number(dateStr.split('T')[1].split(':')[1]);\n            let ampm: string = hour >= 12 ? 'PM' : 'AM';\n            let year: number = Number(dateStr.split('-')[0]);\n            let month: number = Number(dateStr.split('-')[1]);\n            let day: number = Number(dateStr.split('-')[2].substr(0, dateStr.split('-')[2].indexOf('T')));\n            let d = new Date(year, month, day, hour, min);\n            hour = d.getHours() <= 12 ? d.getHours() : d.getHours() - 12;\n            let minStr: string = min >= 10 ? min.toString() : '0' + min.toString()\n            formattedStr = month.toString() + '/' + day.toString() + '/' + year.toString() + ' ' + hour + ':' + minStr + ' ' + ampm;\n        }\n        return formattedStr;\n    }\n\n    private parsePropertyName(propName: string): string {\n        let newName: string = '';\n        for (var i = 0; i < propName.length; i++) {\n            let cur = propName.charAt(i);\n            if (i === 0) {\n                newName += cur.toUpperCase();\n            }\n            else {\n                if (cur === propName.charAt(i).toUpperCase()) {\n                    newName += ' ' + cur;\n                }\n                else {\n                    newName += cur;\n                }\n            }\n        }\n        return newName;\n    }\n\n    private loadLabels() {\n        this.vpSectionLbl = this._labelService.getLabel('PS_VPSECTIONNAMELBL', 'Virtual Page Basic Information');\n        this.descrLbl = this._labelService.getLabel('PS_DESCRIPTIONLBL', 'Description');\n        this.titleLbl = this._labelService.getLabel('PS_TITLELBL', 'Title');\n        this.behaviorLbl = this._labelService.getLabel('PS_BEHAVIORLBL', 'Behavior');\n        this.primarySvcLbl = this._labelService.getLabel('PS_PRIMARYSVCLBL', 'Primary Service Type');\n        this.lastModLbl = this._labelService.getLabel('PS_LASTMODIFIEDLBL', 'Last Modified');\n        this.lastModByLbl = this._labelService.getLabel('PS_LASTMODIFIEDBYLBL', 'Last Modified By');\n        this.codeBehindLbl = this._labelService.getLabel('PS_CODEBEHINDLBL', 'Code Behind');\n        this.createdByLbl = this._labelService.getLabel('PS_CREATEDBYLBL', 'Create By');\n        this.typeNameLbl = this._labelService.getLabel('PS_TYPENAMELBL', 'Type Name');\n        this.workspaceLbl = this._labelService.getLabel('PS_WORKSPACELBL', 'Workspace');\n        this.dataContractsLbl = this._labelService.getLabel('PS_DATACONTRACTSLBL', 'Data Contracts');\n        this.nameLbl = this._labelService.getLabel('PS_NAMELBL', 'Name');\n        this.connTypeLbl = this._labelService.getLabel('PS_CONNECTIONTYPELBL', 'Connection Type');\n        this.keyLbl = this._labelService.getLabel('PS_KEYLBL', 'Key');\n        this.propLbl = this._labelService.getLabel('PS_PROPERTYLBL', 'Property');\n        this.openWebPartLbl = this._labelService.getLabel('PS_OPENWEBPARTLBL', 'Open Web Part');\n        this.controlNameLbl = this._labelService.getLabel('PS_CONTROLNAMELBL', 'Control Name');\n        this.controlLbl = this._labelService.getLabel('PS_LAYOUT_CONTROLS', 'Controls');\n    }\n\n    private async load() {\n        let md = await this._portalService.getMetadata().toPromise();\n        if (md) {\n            this.metadata = md;\n        }\n        let ctrls = await this._portalService.getControls().toPromise();\n        if (ctrls) {\n            this.controls = ctrls;\n        }\n\n        this.loadLabels();\n        let sections: IPersSection[] = [];\n        let webpartSections: IPersWebPart[] = [];\n        this._portalService.getElement(this.element.name, this.element.type).subscribe(resp => {\n            if (resp.type === 'Page') {\n                let behaviorType: string = '';\n                if (this.metadata) {\n                    let behaviorTypeMD = this.metadata['pagebehaviortype'];\n                    if (behaviorTypeMD) {\n                        let enumVals = behaviorTypeMD.enumValues;\n                        if (enumVals) {\n                            behaviorType = enumVals[resp.properties['behavior']].name;\n                        }\n                    }\n                }\n                let vpInfoSection: IPersVirtualPageInfoSection = {\n                    Name: this.vpSectionLbl,\n                    Description: resp.properties['description'],\n                    DescriptionLbl: this.descrLbl,\n                    PageName: resp.name,\n                    Title: resp.properties['title'],\n                    TitleLbl: this.titleLbl,\n                    Behavior: behaviorType,\n                    BehaviorLbl: this.behaviorLbl,\n                    PrimaryServiceType: resp.properties['primaryServiceType'],\n                    PrimaryServiceTypeLbl: this.primarySvcLbl,\n                    LastModified: this.parseDateString(resp.properties['lastModified']),\n                    LastModifiedLbl: this.lastModLbl,\n                    LastModifiedBy: resp.properties['lastModifiedBy'],\n                    LastModifiedByLbl: this.lastModByLbl,\n                    CodeBehind: resp.properties['codeBehind'],\n                    CodeBehindLbl: this.codeBehindLbl,\n                    CreatedBy: resp.properties['createdBy'],\n                    CreatedByLbl: this.createdByLbl,\n                    IsOpen: true,\n                    Type: PersSectionType[PersSectionType.VirtualPageInfoSection],\n                    TypeName: resp.properties.typeName,\n                    TypeNameLbl: this.typeNameLbl,\n                    Workspace: resp.properties.workspaceCode,\n                    WorkspaceLbl: this.workspaceLbl\n                };               \n\n                if (resp.properties && resp.properties.workspaceCode) {\n                    vpInfoSection.Workspace = resp.properties.workspaceCode\n                }\n\n                vpInfoSection.DataContracts = this.getDataContractsForSection(resp);\n                sections.push(vpInfoSection);\n            }\n            else if (resp.type == 'Webpart') {\n                let wpsection = this.parseWebpartItem(resp);\n                if (wpsection) {\n                    webpartSections.push(wpsection);                    \n                }\n            }\n\n            if (resp.items) {\n                _.forEach(resp.items, i => {\n                    if (i.type === 'Webpart') {\n                        let wpsection: IPersWebPart = this.parseWebpartItem(i);\n                        if (wpsection) {\n                            wpsection.WorkspaceContent.push(wpsection);\n                            webpartSections.push(wpsection);                            \n                        }\n                    }\n                });\n            }\n            this.sections = sections;\n            this.webpartSections = webpartSections;\n            this._studioStateService.activateElement(this.element);\n        });\n    }\n\n    private parseWebpartItem(wp: any): IPersWebPart {\n        let wpsection: IPersWebPart = {\n            IsOpen: true,\n            Name: wp.name,\n            TypeName: wp._fullTypeName,\n            TypeNameLbl: this.typeNameLbl,\n            Controls: [],\n            DataContracts: [],\n            WebPartName: wp.name,\n            NameLbl: this.nameLbl,\n            Title: wp.properties ? wp.properties.title : '',\n            TitleLbl: this.titleLbl,\n            WorkspaceContent: [],\n            Workspace: '',\n            WorkspaceLbl: this.workspaceLbl,\n            IsReference: wp.isReference,\n            Type: PersSectionType[PersSectionType.WebPart],\n            OpenWebPartLbl: this.openWebPartLbl,\n            ControlLbl: this.controlLbl\n        };\n          \n        wpsection.DataContracts = this.getDataContractsForSection(wp);\n                \n        if (wp.items) {\n            let controls: any[] = [];\n            _.forEach(wp.items, i => {\n                if (i.type == 'Control') {\n                    let cntrl = this.parseControlItem(i);\n                    controls.push(cntrl);\n                    wpsection.Controls = controls;\n                }\n                else if (i.type == 'Webpart') {\n                    this.parseWebpartItem(i);\n                }\n            });            \n        }\n        return wpsection;\n    }\n\n    private parseControlItem(c: IElement): IPersControls {\n        let cntrl: IPersControls = {\n            Name: c.name,\n            NameLbl: this.controlNameLbl,\n            IsOpen: true,\n            ControlProperties: [],\n            Workspace: '',\n            Type: PersSectionType[PersSectionType.Control]\n        };\n\n        let cntrlProps = this.parseProperties(c.properties, c.typeName);\n        cntrl.ControlProperties = cntrlProps;\n\n        return cntrl;\n    }\n\n    private parseProperties(props: any, propType: string): any[] {\n        let ary: any[] = [];        \n\n        for (var p in props) {\n            if (p !== 'name') {\n                let prop: any = {\n                    Name: '',\n                    Value: ''\n                };\n                // Enums\n                if (this.metadata) {\n                    let md = this.metadata[p.toLowerCase() + 'type'] ? this.metadata[p.toLocaleLowerCase() + 'type'] : this.metadata[p.toLowerCase() + 's'];\n                    if (md && md.enumValues) {\n                        prop.Name = this.parsePropertyName(p);\n                        prop.Value = md.enumValues[props[p]].name;\n                    }\n                    else {                        \n                        let pType = this.metadata[propType.toLowerCase()];\n                        if (pType) {\n                            // Get control property to check if enum\n                            let cntrlProps = pType.properties;\n                            if (cntrlProps && cntrlProps.length) {\n                                let cp = cntrlProps.find(x => {\n                                    return x.name.toLowerCase() == p.toLowerCase();\n                                });\n                                if (cp) {\n                                    // Check if control property is an enum\n                                    let mdType = this.metadata[cp.originalTypeName.toLowerCase()];\n                                    if (mdType && mdType.enumValues) {\n                                        prop.Name = this.parsePropertyName(p);\n                                        // Set property value to enum name\n                                        prop.Value = mdType.enumValues[props[p]].name;\n                                    }\n                                    else {\n                                        let valObj = props[p];\n                                        if (!(valObj instanceof (Object))) {\n                                            prop.Name = this.parsePropertyName(p);\n                                            if (prop)\n                                                prop.Value = valObj;\n                                        }\n                                        else {\n                                            let valCntrl = this.controls.find(x => {\n                                                return x.type == valObj.type;\n                                            });\n                                            if (valCntrl) {\n                                                prop.Name = this.parsePropertyName(p);\n                                                prop.Value = valCntrl.typeName;\n                                            }\n                                        }\n                                    }\n                                }                                \n                            }                            \n                        }\n                        else {\n                            let cntrlMD = this.controls.find(x => {\n                                return x.name.toLowerCase() == propType.toLowerCase();\n                            });\n                            if (cntrlMD) {\n                                prop.Name = cntrlMD.name;\n                                prop.Value = cntrlMD.typeName;\n                            }\n                            else {\n                                prop.Name = this.parsePropertyName(p);\n                                prop.Value = '';\n                            }\n                        }\n                    }\n                    if (prop.Value) {\n                        ary.push(prop);\n                    }\n                }\n            }\n        }\n        return ary;\n    }\n\n    private getDataContractsForSection(element: any): IPersDataContract[] {         \n        let ary:IPersDataContract[] = [];\n        let dcSection: IPersDataContract = {\n            Name: this.dataContractsLbl,\n            IsOpen: true,\n            HeaderRows: [\n                this.nameLbl, this.connTypeLbl, this.keyLbl, this.propLbl\n            ],\n            Type: PersSectionType[PersSectionType.DataContract],\n            SortAsc: true,           \n            DataMembers: [],\n            DataMembersLbl: this.dataContractsLbl\n        };        \n        if (element.properties && element.properties.dataContract && element.properties.dataContract.dataMembers) {               \n            dcSection.DataMembers = _.map(element.properties.dataContract.dataMembers, x => {               \n                return {\n                    Name: x[\"property\"],\n                    ConnectionType: x[\"name\"],\n                    Key: x[\"__type\"],\n                    Property: x[\"key\"]\n                };             \n            });\n            ary.push(dcSection);\n        }        \n        return ary;\n    }\n\n    openReferencedWebPart(refWebPart: IPersWebPart) {       \n        let cmd = new PanelUpdatedData();               \n        cmd.open = true;\n        let elementRef: IUIComponentRef = <IUIComponentRef> {\n            name: refWebPart.Name,\n            type: 'Webpart',\n            isStatic: !refWebPart.IsReference,\n            isLocked: false,\n            isReference: refWebPart.IsReference,\n            isInDeveloping: false,\n            hasPublishContent: false,\n            owner: ''\n        };\n        cmd.elementRef = elementRef;\n        this._studioStateService.subjects.panel.next(cmd);                    \n    }\n\n    toggleVisibility(s: IPersSection) {            \n        s.IsOpen = !s.IsOpen;      \n    }   \n}","<div class=\"csi-pers-report\">\r\n    <div *ngFor=\"let s of sections\" class=\"csi-pers-report-section\">\r\n        <div class=\"sectionHeading collapsible\" (click)=\"toggleVisibility(s)\">{{ s.Name }}</div>\r\n        <div *ngIf=\"s.Type=='VirtualPageInfoSection'\" [hidden]=\"!s.IsOpen\">         \r\n            <table class=\"csi-pers-report-table\">\r\n                <tr>\r\n                    <th colspan=\"2\">\r\n                        <span>\r\n                            {{s.PageName}}\r\n                        </span>\r\n                    </th>\r\n                </tr>\r\n                <tr *ngIf=\"s.Description\">\r\n                    <td>{{s.DescriptionLbl}}</td>\r\n                    <td>\r\n                        {{s.Description}}\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"s.CodeBehind\">\r\n                    <td>{{s.CodeBehindLbl}}</td>\r\n                    <td>\r\n                        {{s.CodeBehind}}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{{s.WorkspaceLbl}}</td>\r\n                    <td>\r\n                        {{s.Workspace}}\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"s.CreatedBy\">\r\n                    <td>{{s.CreatedByLbl}}</td>\r\n                    <td>\r\n                        {{s.CreatedBy}}\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"s.LastModifiedBy\">\r\n                    <td>{{s.LastModifiedByLbl}}</td>\r\n                    <td>\r\n                        {{s.LastModifiedBy}}\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"s.LastModified\">\r\n                    <td>{{s.LastModifiedLbl}}</td>\r\n                    <td>\r\n                        {{s.LastModified}}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{{s.BehaviorLbl}}</td>\r\n                    <td>\r\n                        {{s.Behavior}}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{{s.TypeNameLbl}}</td>\r\n                    <td>\r\n                        {{s.TypeName}}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{{s.PrimaryServiceTypeLbl}}</td>\r\n                    <td>\r\n                        {{s.PrimaryServiceType}}\r\n                    </td>\r\n                </tr>\r\n            </table>          \r\n            <div *ngIf=\"s.DataContracts && s.DataContracts.length\">                \r\n                <div class=\"sectionHeading collapsible\" (click)=\"toggleVisibility(s.DataContracts[0])\">{{ s.DataContracts[0].Name }}</div>\r\n                <table class=\"csi-pers-report-table\" [hidden]=\"!s.DataContracts[0].IsOpen\">\r\n                    <tr>\r\n                        <th colspan=\"4\">{{s.DataMembersLbl}}</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td *ngFor=\"let hr of s.DataContracts[0].HeaderRows\">\r\n                            {{hr}}\r\n                        </td>\r\n                    </tr>\r\n                    <tr *ngFor=\"let dc of s.DataContracts[0].DataMembers\">\r\n                        <td>\r\n                            {{dc.ConnectionType}}\r\n                        </td>\r\n                        <td>\r\n                            {{dc.Key}}\r\n                        </td>\r\n                        <td>\r\n                            {{dc.Property}}\r\n                        </td>\r\n                        <td>\r\n                            {{dc.Name}}\r\n                        </td>                        \r\n                    </tr>\r\n                </table>                       \r\n            </div>\r\n        </div>        \r\n    </div>\r\n    <br /> \r\n    <div *ngFor=\"let wp of webpartSections\" class=\"csi-pers-report-section\">\r\n        <div class=\"sectionHeading collapsible\" (click)=\"toggleVisibility(wp)\">{{wp.Name}}</div>\r\n        <div [hidden]=\"!wp.IsOpen\">\r\n            <span [class]=\"!wp.IsReference ? 'sectionHide' : 'btn btn-link'\" (click)=\"openReferencedWebPart(wp)\">{{wp.OpenWebPartLbl}}</span>\r\n            <table *ngFor=\"let wpwc of wp.WorkspaceContent\" class=\"csi-pers-report-table\">\r\n                <tr>\r\n                    <td>\r\n                        {{wpwc.NameLbl}}\r\n                    </td>\r\n                    <td>\r\n                        {{wpwc.WebPartName}}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td>\r\n                        {{wpwc.TitleLbl}}\r\n                    </td>\r\n                    <td>\r\n                        {{wpwc.Title}}\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"wpwc.TypeName\">\r\n                    <td>{{wpwc.TypeNameLbl}}</td>\r\n                    <td>\r\n                        {{wpwc.TypeName}}\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"wpwc.CreatedBy\">\r\n                    <td>{{wpwc.CreatedByLbl}}</td>\r\n                    <td>\r\n                        {{wpwc.CreatedBy}}\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"wpwc.LastModifiedBy\">\r\n                    <td>{{wpwc.LastModifiedByLbl}}</td>\r\n                    <td>\r\n                        {{wpwc.LastModifiedBy}}\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"wpwc.LastModified\">\r\n                    <td>{{wpwc.LastModifiedByLbl}}</td>\r\n                    <td>\r\n                        {{wpwc.LastModified}}\r\n                    </td>\r\n                </tr>\r\n                <tr *ngIf=\"wpwc.PrimaryServiceType\">\r\n                    <td>{{wpwc.PrimaryServiceTypeLbl}}</td>\r\n                    <td>\r\n                        {{wpwc.PrimaryServiceType}}\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n            <br/>\r\n            <div *ngIf=\"wp.DataContracts && wp.DataContracts.length\">\r\n                <table class=\"csi-pers-report-table\" *ngFor=\"let wpdc of wp.DataContracts\">\r\n                    <tr>\r\n                        <th colspan=\"5\">{{wpdc.DataMembersLbl}}</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td *ngFor=\"let hr of wpdc.HeaderRows\">\r\n                            {{hr}}\r\n                        </td>\r\n                    </tr>\r\n                    <tr *ngFor=\"let dc of wpdc.DataMembers\">\r\n                        <td>\r\n                            {{dc.ConnectionType}}\r\n                        </td>\r\n                        <td>\r\n                            {{dc.Key}}\r\n                        </td>\r\n                        <td>\r\n                            {{dc.Property}}\r\n                        </td>\r\n                        <td>\r\n                            {{dc.Name}}\r\n                        </td>\r\n                        <td>\r\n                            {{dc.AllowEmptyValue}}\r\n                        </td>\r\n                    </tr>\r\n                </table>                \r\n            </div>           \r\n            <br />            \r\n            <span [class]=\"!wp.Controls.length ? 'sectionHide' : 'sectionHeading'\">{{ wp.ControlLbl }}</span>                                \r\n            <div *ngFor=\"let wpwcCntrl of wp.Controls\">\r\n                <table class=\"csi-pers-report-table\">\r\n                    <tr>\r\n                        <td>{{wpwcCntrl.NameLbl}}</td>\r\n                        <td>{{wpwcCntrl.Name}}</td>\r\n                    </tr>                    \r\n                    <tr *ngFor=\"let cntrlProp of wpwcCntrl.ControlProperties\">\r\n                        <td>{{cntrlProp.Name}}</td>\r\n                        <td>{{cntrlProp.Value}}</td>\r\n                    </tr>                                                                                                                                                \r\n                </table>\r\n                <br/>                \r\n            </div>\r\n            <br />\r\n        </div>\r\n    </div>\r\n</div>\r\n","import {\n    Component,\n    EventEmitter,\n    OnInit,\n    Output\n} from '@angular/core';\n\nimport { IElementRef, ExecuteCommand } from '../common/objects/common'\nimport { LocalService } from '../common/services/local.service';\nimport { StudioStateService } from '../common/services/studioStateService';\n\n@Component({\n    selector: 'csi-start-page',\n    templateUrl: 'startPage.component.html',\n    styleUrls: ['startPage.component.less']\n})\n\nexport class StartPageComponent implements OnInit {\n    @Output() onLoadElement = new EventEmitter<IElementRef>();\n\n    elementHistory: IElementRef[];\n\n    constructor(private _localService: LocalService, private _studioState: StudioStateService) {\n    }\n\n    ngOnInit(): void {\n        this.elementHistory = this._localService.getElementHistory();\n    }\n\n    loadElement(element: IElementRef): void {\n        this.onLoadElement.emit(element);\n    }\n\n    cmdExecute(command: string) {\n        this._studioState.subjects.execute.next(new ExecuteCommand(command, null, null));\n    }\n\n    whatsNewLink() {\n        window.alert('whatsNewLink : To be done!');\n    }\n\n    helpLink() {\n        let host = window.location.origin;\n        let path = window.location.pathname.split('/');\n        let url = host+'/'+path[1]+'/OnlineHelpOutput/PortalStudio2_Help/PortalStudio2_Help.htm';\n        window.open(url,\"\",\"resizable=yes\");\n    }\n    cdnLink() {\n        window.alert('cdnLink: To be done!');\n    }\n}","<section class=\"csi-start-page-actions\">\n    <div>\n        <div class=\"header-text\">{{ 'Create New' | label: 'PS_CREATE_NEW' }}</div><br />\n        <ul>\n            <li><a (click)='cmdExecute(\"newPage\")'>{{'New Page' | label: 'PS_NEW_PAGE'}}...</a></li>\n            <li><a (click)='cmdExecute(\"newWebpart\")'>{{'New Web Part' | label: 'PS_NEW_WEBPART'}}...</a></li>\n            <li><a (click)='cmdExecute(\"newPageflow\")'>{{'New Pageflow' | label: 'PS_NEW_PAGEFLOW'}}...</a></li>\n            <li><a (click)='cmdExecute(\"newMenu\")'>{{'New Menu Definition' | label: 'PS_NEW_MENU'}}...</a></li>\n            <li><a (click)='cmdExecute(\"newAction\")'>{{'New Page Action' | label: 'PS_NEW_PAGE_ACTION'}}...</a></li>\n            <li><a (click)='cmdExecute(\"newActionRule\")'>{{'New Page Action Rule' | label: 'PS_NEW_PAGE_ACTION_RULE'}}...</a></li>\n        </ul>\n    </div>\n    <div class=\"csi-recent\">\n        <div class=\"header-text\">{{'Recent' | label: 'PS_RECENT'}}</div><br />\n        <div *ngFor=\"let element of elementHistory\">\n            <a *ngIf='element.type!=\"StartPage\"' (click)=\"loadElement(element)\">{{element.name}}</a>\n        </div>\n    </div>\n</section>\n<section class=\"csi-start-page-links\">\n    <div class=\"csi-whats-new\">\n        <div class=\"csi-whats-new-img\"></div>\n        <div class=\"csi-whats-new-content\">\n            <div class=\"header-text\">{{\"What's New\" | label: 'PS_WHAT_NEW'}}</div>\n            <ul>\n                <li><a (click)=\"whatsNewLink();\">{{\"What's new in Portal Studio\" | label: 'PS_WHAT_NEW_PS'}}</a></li>\n            </ul>\n        </div>\n    </div>\n    <div class=\"csi-getting-started\">\n        <div class=\"csi-getting-started-img\"></div>\n        <div class=\"csi-getting-started-content\">\n            <div class=\"header-text\">{{'Getting Started' | label: 'PS_GET_START' }}</div>\n            <ul>\n                <li><a class=\"csi-learning-resources-link\"(click)=\"helpLink();\">{{'Getting Started with Portal Studio' | label: 'PS_GET_START_PS'}}</a></li>\n                <li><a (click)=\"cdnLink();\">{{'Camstar Developer Network' | label: 'PS_CDN'}}</a></li>\n            </ul>\n        </div>\n    </div>\n\n    <div class=\"csi-learning-resources\">\n        <div class=\"csi-learning-resources-img\"></div>\n        <div class=\"csi-learning-resources-content\">\n            <div class=\"header-text\">{{'Learning Resources (Product Video)' | label: 'PS_LEARNING_RESOURCES'}}</div>\n            <ul>\n                <li><a (click)=\"helpLink();\">{{'How can I start new page?' | label: 'PS_LEARNING_RESOURCES'}}</a></li>\n                <li><a (click)=\"cdnLink();\">{{'Where can I find sample templates?' | label: 'PS_LEARNING_RESOURCES'}}</a></li>\n                <li><a (click)=\"cdnLink();\">{{'How can I drag conrols on page?' | label: 'PS_LEARNING_RESOURCES'}}</a></li>\n                <li><a (click)=\"cdnLink();\">{{'How can I configure my settings?' | label: 'PS_LEARNING_RESOURCES'}}</a></li>\n                <li><a (click)=\"cdnLink();\">{{'How can I report my Bugs?' | label: 'PS_LEARNING_RESOURCES'}}</a></li>\n            </ul>\n        </div>\n    </div>\n</section>","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { IElement, IUIDesigner, ExecuteCommand } from '../common/objects/common';\nimport { ConfirmDialogComponent } from '../shared/dialog/confirm.dialog.component';\nimport { LabelService } from '../common/services/label.service';\nimport { StudioStateService } from '../common/services/studioStateService';\n\n@Component({\n    selector: 'csi-layout-tabs',\n    templateUrl: 'tabs.component.html',\n    styles:[`\n\n    :host() {\n        min-height: 30px;\n        background-color: #dcdcdc;\n        overflow-y: hidden;\n        overflow-x: auto;\n        display: flex;\n        flex: 0 0 auto;\n    }\n\n\n    .csi-editor-tab {\n        display: flex;        \n        padding: 3px 10px;\n        justify-content: center;\n        background-color: #dcdcdc;\n        border-right: 1px solid white;\n        cursor: pointer;\n        white-space: nowrap;\n    }\n\n    .csi-editor-tab:hover{\n        background-color: #AFD7E1;\n    }\n    .csi-editor-tab:active{\n        font-weight: bold;\n        background-color: #CDE6EB;\n    }\n\n    .dirty-flag{\n        padding-left: 3px;\n    }\n\n    .csi-editor-tab.active {\n        font-weight: bold;\n        background-color: #F0F0F0;\n    }\n\n    `]\n})\n\nexport class LayoutTabsComponent {\n    @Input(\"elements\") __elements: any;\n    @Input(\"activeElement\") __activeElement: any;\n\n    @Output() closeElement: EventEmitter<IElement> = new EventEmitter<IElement>();\n    @Output() closeAndSaveElement: EventEmitter<IElement> = new EventEmitter<IElement>();\n\n    get elements(): IUIDesigner[] { return this.__elements; }\n    set elements(v: IUIDesigner[]) { this.__elements = v; }\n\n    get activeElement(): IUIDesigner { return this.__activeElement; }\n    set activeElement(v: IUIDesigner) { this.__activeElement = v; }\n\n    constructor(\n        private _dialog: MatDialog,\n        private _studioState : StudioStateService,\n        private _labelService: LabelService) { }\n\n    activateSelectElement(element: IElement): void {\n        this._studioState.subjects.execute.next(new ExecuteCommand(\"switchTab\", element, null));\n    }\n\n    closeSelectElement(element: IUIDesigner): void {\n        if (element.isDirty) {\n\n            let yesLabel = this._labelService.getLabel('PS_ACTION_YES', 'Yes');\n            let noLabel = this._labelService.getLabel('PS_ACTION_NO', 'No');\n            let cancelLabel = this._labelService.getLabel('PS_ACTION_CANCEL', 'Cancel');\n            let titleLabel = this._labelService.getLabel('PS_CLOSE', 'Close');\n            let messageLabel = this._labelService.getLabel('PS_SAVE_PENDING', 'Would you like to save pending changes?');\n            let confirmContext = {\n                title: titleLabel,\n                message: messageLabel,\n                actions: [\n                    { action: 'yes', name: yesLabel, isPrimary: true },\n                    { action: 'no', name: noLabel, isPrimary: false },\n                    { action: 'cancel', name: cancelLabel, isPrimary: false }]\n            };\n\n            let dialog = this._dialog.open(ConfirmDialogComponent, { disableClose: true });\n\n            dialog.componentInstance.initContext(confirmContext);\n            dialog.afterClosed().subscribe(res => {\n                //TODO: Check to make sure logic isn't working properly\n                // dialog.onDestroy.subscribe(() => {\n                //     if (isSaved === true)\n                //         this.closeAndSaveElement.emit(element);\n                //     else if (isSaved === false)\n                //         this.closeElement.emit(element);\n                //     else {\n                //         // if cancel = just the dialog is closed\n                //     }\n                // });\n\n                // dialog.result.then(res => {\n                //     if (res === \"yes\") {\n                //         isSaved = true;\n                //     } else if (res === \"no\") {\n                //         isSaved = false;\n                //     }\n                // });\n                if (res === \"yes\") {\n                    this.closeAndSaveElement.emit(element);\n                } else if (res === \"no\") {\n                    this.closeElement.emit(element);\n                }\n            });\n        }\n        else\n            this.closeElement.emit(element);\n    }\n\n    toggleBg(ev: MouseEvent, on: boolean){\n        let t = ev.target as HTMLSpanElement;\n        if(!t.classList.contains(\"csi-editor-tab\"))\n            t = t.parentElement;\n        t.classList.toggle(\"csi-mousedown\", on);\n    }\n}","\r\n\t<div class=\"csi-editor-tab\">\r\n\t\t<i class=\"fa fa-angle-double-down\" [matMenuTriggerFor]=\"addNew\"></i>\r\n\t</div>\r\n\t<mat-menu #addNew=\"matMenu\" class=\"csi-context-menu\" [overlapTrigger]=\"false\">\r\n\t\t<button mat-menu-item *ngFor='let element of elements' (click)='activateSelectElement(element)'>\t\r\n            <span *ngIf=\"element.name == __activeElement.name\" class=\"fa fa-check\"></span>\r\n\t\t\t<span>{{element.name}}</span>\r\n\t\t</button>\r\n\t</mat-menu>\r\n\t<div class=\"csi-editor-tab\" *ngFor='let element of elements' [class.active]=\"element.name === activeElement?.name\" \r\n\t\t\t[csi-closable]=\"element\" (onClose)=\"closeSelectElement($event)\">\r\n\t\t<div (click)='activateSelectElement(element)'>{{element.name}}</div>\r\n\t\t<div class=\"dirty-flag\" *ngIf=\"element.isDirty\">*</div>\r\n\t</div>\r\n","import { Component, Input, OnChanges, Output, EventEmitter, ElementRef, AfterViewChecked } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { AlertService } from '../../alert/alert.service';\nimport { ILabel } from '../../common/objects/common';\n\n@Component({\n    selector: 'csi-hierarchy',\n    templateUrl: 'hierarchy.component.html',\n    styles:[`\n        :host{\n            display: flex;\n            flex-direction: column;\n            flex: 1 1;\n        }\n\n        .csi-hierarchy {\n            height: 100%;\n            overflow: auto;\n            border: solid 1px black;\n        }\n        .csi-hierarchy .list {\n            display: flex;\n            flex-direction: column;\n        }\n        .csi-hierarchy .list .item {\n            white-space: nowrap;\n        }\n\n        .csi-hierarchy .list .item i[hidden] {\n            display: none;\n        }\n  \n        .csi-hierarchy .list .item .name {\n            padding: 1px;\n            cursor: pointer;\n        }\n\n        .csi-hierarchy .list .item .name.selected {\n            background-color: aquamarine;\n        }\n  \n        .csi-hierarchy .list .item .name:hover {\n            background-color: cornflowerblue;\n        }\n    `]\n})\n\nexport class HierarchyComponent implements OnChanges, AfterViewChecked {\n\n    @Input() data: any;\n    @Input() childrenField: string;\n    @Input() search: Subject<string>;\n\n    @Output() onSelect = new EventEmitter<any>();\n    @Output() getNodeName = new EventEmitter<any>();\n\n    list: listItem[];\n    selectedItem: listItem;\n    divList: HTMLElement;\n\n    constructor(private _el: ElementRef, private _alertService: AlertService) {\n        this.list = [];\n    }   \n\n    ngOnChanges(ch) {\n        if (ch.data && ch.data.currentValue) {\n            this.build(ch.data.currentValue, 0);\n        }\n\n        if (ch.search && ch.search.currentValue) {\n            this.search = ch.search.currentValue;\n            this.search.subscribe(s => this.doSearch(s));\n        }\n    }\n\n    ngAfterViewChecked() {\n        this.divList = this._el.nativeElement.getElementsByClassName('list')[0];\n    }\n\n    doSearch(searchString: string) {\n        let si: listItem = null;\n        if (searchString) {\n            // searching starts from selectedItem if set\n            let startIndex = this.selectedItem ? this.list.indexOf(this.selectedItem) : -1;\n            si = this.list.find((l, i: number) => (i > startIndex) && (l.name.toLowerCase().indexOf(<string>(searchString)) != -1));\n            // If next item isn't found keen previous item\n            if(!si && this.selectedItem){\n                this._alertService.confirmModal(<ILabel>{Name: \"PS_NO_MORE_MATCHES\", DefaultValue: \"No more matches can be found. Click OK to start from the beginning\"})\n                    .subscribe(ok=> {\n                        if( ok ){\n                            this.selectedItem = null;\n                            this.search.next(searchString);\n                        }\n                    });\n            }\n        }\n\n        this.selectedItem = si;\n        this.onSelect.emit(this.selectedItem ? this.selectedItem.node : null);\n        if (this.selectedItem)\n            this.divList.children[this.list.indexOf(this.selectedItem)].scrollIntoView();\n\n    }\n\n    expand(l: listItem) {\n        l.expanded = !l.expanded;\n\n        let i = this.list.indexOf(l);\n        // hide children\n        for (i++; i < this.list.length; i++) {\n            if (this.list[i].level > l.level)\n                this.list[i].hidden = !l.expanded;\n            else\n                break;\n        }\n    }\n\n    selectItem(l: listItem) {\n        this.selectedItem = l;\n        this.onSelect.emit(l.node);\n    }\n\n    private build(node, level: number) {\n        let nx = { node: node, name: '' };\n        this.getNodeName.emit(nx);\n        let it = <listItem>{ expanded: true, level: level, name: nx.name, childrenNumber: 0, hidden: false, node: node };\n        this.list.push(it);\n\n        let children = <any[]>node[this.childrenField];\n        if (children && children.length) {\n            it.childrenNumber = children.length;\n            children.forEach(c => {\n                this.build(c, level+1);\n            });\n        }\n    }\n}\n\n\nclass listItem {\n    level: number;\n    name: string;\n    expanded: boolean = true;\n    childrenNumber: number = 0;\n    hidden: boolean = false;\n    node: any;\n}\n\n","<div class=\"csi-hierarchy\">\r\n    <div class=\"list\">\r\n        <span class=\"item\" *ngFor=\"let l of list\" [style.paddingLeft]=\"(l.level*20)+'px'\" [hidden]=\"l.hidden\">\r\n            <i [hidden]=\"l.childrenNumber==0\" [class]=\"l.expanded ?'fa fa-caret-down':'fa fa-caret-right'\" aria-hidden=\"true\" (click)=\"expand(l)\"></i>\r\n            <span class=\"name\" [class.selected]=\"l==selectedItem\" (click)=\"selectItem(l)\">{{l.name}}</span>\r\n        </span>\r\n    </div>\r\n</div>\r\n","export * from './traceLog.module';","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport * as _ from 'lodash';\r\nimport { textLine } from './traceLog';\r\n\r\n\r\n@Component({\r\n    selector: 'csi-raw-text',\r\n    template: `\r\n        <div class=\"csi-raw-text lines\" *ngIf=\"viewOnly && !isPlainText\">\r\n            <div *ngFor=\"let l of lines\">{{l}}</div>\r\n        </div>\r\n        <div class=\"csi-raw-text editable\" *ngIf=\"!viewOnly\">\r\n            <textarea #editableText [attr.spellcheck]=\"false\" (change)=\"txtChange(editableText.value)\">{{text}}</textarea>\r\n        </div>\r\n        <div class=\"csi-raw-text\" *ngIf=\"viewOnly && isPlainText\">\r\n            {{text}}\r\n        </div>\r\n    `\r\n})\r\n\r\nexport class RawTextComponent {\r\n    @Input() text: string | string[] | textLine[];\r\n    @Input() viewOnly: boolean = true;\r\n\r\n    @Output() textChange = new EventEmitter<string>();\r\n\r\n    get isPlainText(): boolean {\r\n        return this.text && typeof this.text == 'string';\r\n    }\r\n\r\n    get lines(): string[] {\r\n        let res: string[] = [];\r\n\r\n        if (!this.isPlainText) {\r\n            let arTxt = <any[]>this.text;\r\n            if (arTxt.length > 0) {\r\n                if (typeof arTxt[0] == \"string\") {\r\n                    res = <string[]>arTxt;\r\n                }\r\n                else {\r\n                    res = (<textLine[]>arTxt).map(a => _.repeat('  ', a.level) + a.text);\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    txtChange(t: string) {\r\n        this.textChange.emit(t);\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { DebugResponse, textLine } from './traceLog';\nimport { WCFService } from '../../common/services/wcf.service';\nimport * as _ from 'lodash';\n\n@Component({\n    selector: 'csi-resubmit',\n    template: `\n    <div class=\"csi-modal\">\n        <header>\n            <span class=\"title\">{{'Resubmit' | label: 'PS_SRV_TRACE_RESUBMIT'}}</span>\n            <span class=\"close-icon\" (click)=\"close('cancel')\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></span>\n        </header>\n        <main>        \n            <div class=\"csi-resubmit\">\n                <span class=\"title\">{{'Request' | label: 'PS_SRV_TRACE_RESUBMIT_REQUEST'}}</span>                \n                <csi-raw-text [text]=\"requestTxt\" [viewOnly]=\"false\" (textChange)=\"reqChanged($event)\"></csi-raw-text>\n\n                <span class=\"title\">{{'Response' | label: 'PS_SRV_TRACE_RESUBMIT_RESPONSE'}}</span>                \n                <csi-raw-text [text]=\"responseLines\" [viewOnly]=\"true\"></csi-raw-text>\n                \n                <div class=\"result\" [class.error]=\"submitSuccess===false\" [class.success]=\"submitSuccess===true\">{{submitMessage}}</div>\n            </div>\n        </main>\n        <footer>           \n            <div class=\"btns\">\n                <div class=\"commit\"><span>{{'Commit' | label: 'PS_SRV_TRACE_RESUBMIT_COMMIT'}}</span><input type=\"checkbox\" [(ngModel)]=\"isCommit\"></div>\n                <span class=\"default-btn\" (click)=\"submit()\">{{'Submit' | label: 'PS_SRV_TRACE_SUBMIT'}}</span>\n                <span class=\"primary-btn\" (click)=\"close('cancel')\">{{'Close' | label: 'PS_CLOSE'}}</span>\n            </div>\n        </footer>\n    </div>        \n    `\n})\n\nexport class ResubmitRequestComponent {\n\n    public set debugResponse(d: DebugResponse) {\n        this.responseLines = [];\n        let doc = new DOMParser().parseFromString(d.Response, \"text/xml\");\n        this.makeLinesFromXml(doc.documentElement);\n\n        this.requestTxt = d.Request;\n    }\n    isCommit: boolean = true;\n\n    responseLines: textLine[] = [];\n    requestTxt: string;\n\n    submitSuccess: boolean;\n    submitMessage: string;\n\n    constructor(private _wcf: WCFService, private _dialogRef: MatDialogRef<ResubmitRequestComponent>) {\n    }\n\n    close(action: string): void {       \n        this._dialogRef.close();\n    }\n\n    submit() {\n        let debRequest = {\n            IncludeRRXML: true,\n            IncludeTimestamps: true,\n            TraceToResponseXML: true,\n            DisableCommit: !this.isCommit\n        };\n        this._wcf.directAccessSubmit(this.requestTxt, debRequest).subscribe(r => {\n\n            this.responseLines = [];\n            let doc = new DOMParser().parseFromString(r.response, \"text/xml\");\n            this.makeLinesFromXml(doc.documentElement);\n\n            if (r.result.IsSuccess === undefined) {\n                this.submitSuccess = false;\n                this.submitMessage = r.result.ExceptionData ? r.result.ExceptionData.Description : 'Some error occurs';\n            }\n            else {\n                this.submitSuccess = r.result.IsSuccess;\n                this.submitMessage = r.result.Message || 'Success!';\n            }\n        });\n    }\n\n    reqChanged(s: string) {\n        this.requestTxt = s;\n    }\n\n\n    makeLinesFromXml(t: Node, level: number = 0) {\n        let s = '<' + t.nodeName;\n\n        _.forEach((<any>t).attributes, a => s += (` ${a.nodeName}='${a.nodeValue}'`));\n\n        let v: string = '';\n        let hasValue = false;\n        let hasChildren = false;\n        let childNodes: Node[];\n\n        if (t.nodeType == 1) {\n            childNodes = _.filter(t.childNodes, c => c.nodeType == 1);\n            if (childNodes.length>0) {\n                hasChildren = true;\n            }\n        }\n\n        if (!hasChildren) {\n            _.forEach(t.childNodes, c => v += ((c.nodeType == 3 || c.nodeType == 4) ? c.textContent : ''));\n            hasValue = v.trim().length > 0;\n        }\n\n        if (hasValue) {\n            s += '>';\n            // if multiline add \\n otherwise the value will be in the same line with open tag\n            if (v.indexOf('\\n') == -1) {\n                s += (v + '</' + t.nodeName + '>');\n                hasValue = false;\n            }\n        }\n        else {\n            if (!hasChildren)\n                s += '/>';\n            else\n                s += '>';\n        }\n\n        // open <tag>\n        this.responseLines.push(<textLine>{ level: level, text: s });\n        if (hasValue) {\n            v.split('\\n').forEach(v => this.responseLines.push(<textLine>{ level: 0, text: v }));\n        }\n\n        if (hasChildren) {\n            // add child nodes\n            _.forEach(childNodes, c => this.makeLinesFromXml(c, level + 1));\n        }\n\n        if (hasValue || hasChildren) {\n            // closed <tag>\n            this.responseLines.push(<textLine>{ level: level, text: '</' + t.nodeName + '>' });\n        }\n    }\n\n}\n\n","import { Component } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { TraceItem, TraceItemAttribute, TraceItemParameter, ServerTraceItem } from './traceLog';\nimport { TraceRawViewComponent } from './traceRawView.component';\nimport { ResubmitRequestComponent } from './resubmitRequest.component';\nimport { Subject } from 'rxjs';\nimport * as _ from 'lodash';\n\n@Component({\n    selector: 'csi-service-trace-view',\n    templateUrl: 'serviceTraceView.component.html',\n    styleUrls: ['serviceTraceView.component.less']\n})\n\nexport class ServiceTraceViewComponent {\n\n    public trace: TraceItem;\n\n    strace: ServerTraceItem;\n    searchSubj = new Subject<string>();\n\n    get dialogRef(): MatDialogRef<ServiceTraceViewComponent> {\n        return this._dialogRef;            \n    }\n\n    get elapsed(): string {\n        if (this.strace && this.strace.Ended && this.strace.Started) {\n            let endTime = this.getTime(this.strace.Ended);\n            let startTime = this.getTime(this.strace.Started);\n\n            let el = (endTime - startTime) / 1000.0;\n            return el.toString();\n        }\n        else\n            return '';\n    }\n\n    get memUsage(): string {\n        if (this.strace && this.strace.EndedMemoryUsage !== undefined && this.strace.StartedMemoryUsage !== undefined) {\n            let m = (this.strace.EndedMemoryUsage - this.strace.StartedMemoryUsage) / 1000.0;\n            return m.toString();\n        }\n        else\n            return '';\n    }\n\n    private getTime(ds: string): number{\n        return parseInt(ds.substr(6));\n    }\n\n    constructor(\n        private _dialogRef: MatDialogRef<ServiceTraceViewComponent>,\n        private _dialog: MatDialog\n        ) {\n\n        this.strace = new ServerTraceItem();\n    }    \n\n    selectNode(st: ServerTraceItem) {\n        this.strace = st || new ServerTraceItem();\n    }\n\n    close() {\n        this._dialogRef.close();\n    }\n\n    doSearch(s: string) {\n        this.searchSubj.next(s);\n    }\n\n    makeNodeName(p) {\n        let node: ServerTraceItem = p.node;\n        let name = node.Name;\n        let getParam = (np: string) => node.Parameters.find(p => p.Name == np) || new TraceItemParameter();\n        let getAttr = (na: string) => (node.Attributes.find(a => a.Name == na) || new TraceItemAttribute()).Value;\n\n        switch (name){\n            case '__cdoPerform':\n                name = \"Perform \" + getAttr(\"__cdoName\") + \".\" + getAttr(\"__method\");\n                break;\n            case 'if':\n                name += (' ' + getParam('Condition').Expression);\n                break;\n            case \"Initialize\":\n                name = \"Init \" + getAttr(\"__cdoName\") + \".\" + getAttr(\"__fieldName\");\n                break;\n            case 'OnGetValue':\n                name = 'Get ' + getAttr('__cdoName') + '.' + getAttr('__fieldName');\n                break;\n        }\n\n        let firstParameter = node.Parameters.find(p => !!p.Value);\n        if (firstParameter) {\n            name += ('[' + firstParameter.Value + ']');\n        }\n\n        p.name = name;\n    }\n\n    rawViewOpen() {\n        let dialog = this._dialog.open(TraceRawViewComponent, { disableClose: true });\n        dialog.componentInstance.traceItem = this.trace.DebugResponse.Trace;\n        dialog.afterClosed().subscribe(res => {\n        });\n    }\n\n    resubmitOpen() {\n        let dialog = this._dialog.open(ResubmitRequestComponent, { disableClose: true });\n        dialog.componentInstance.debugResponse = _.cloneDeep(this.trace.DebugResponse);\n        dialog.afterClosed().subscribe(res => {\n        });\n    }\n\n}\n","<div class=\"csi-modal\" csi-dialog-decor [dialog]=\"dialogRef\" [dialogHeight]=\"500\" [dialogWidth]=\"600\">\r\n    <header>\r\n        <span class=\"title\">{{'Server Trace' | label: 'PS_SERVER_TRACE_TITLE'}}</span>\r\n        <span class=\"close-icon\" (click)=\"close()\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></span>\r\n    </header>\r\n    <main class=\"csi-server-trace-view\">\r\n        <div class=\"main-panel\">\r\n            <div class=\"source\">\r\n                <csi-hierarchy [data]=\"trace.DebugResponse.Trace\" (getNodeName)=\"makeNodeName($event)\" [childrenField]=\"'Children'\" [search]=\"searchSubj\" (onSelect)=\"selectNode($event)\"></csi-hierarchy>\r\n            </div>\r\n            <div class=\"details\">\r\n                <div class=\"search\">\r\n                    <input #searchString type=search>\r\n                    <button (click)=\"doSearch(searchString.value)\">Search</button>\r\n                </div>\r\n\r\n                <span>{{'Value' | label: 'PS_VALUE'}}</span>\r\n                <div class=\"value\">{{strace.Value}}</div>\r\n\r\n                <span>{{'Attributes' | label: 'PS_ATTRIBUTES'}}</span>\r\n                <div class=\"attributes grid\">\r\n                    <div class=\"header\">\r\n                        <span class=\"name\">{{'Name' | label: 'PS_NAME'}}</span>\r\n                        <span>{{'Value' | label: 'PS_VALUE'}}</span>\r\n                    </div>\r\n                    <div class=\"data\">\r\n                        <div *ngFor=\"let a of strace.Attributes\">\r\n                            <span class=\"name\">{{a.Name}}</span>\r\n                            <span>{{a.Value}}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"stat\">\r\n                    <span *ngIf=\"elapsed\">{{'Elapsed' | label: 'PS_SERVER_TRACE_ELAPSED'}}: {{elapsed}}</span>\r\n                    <span *ngIf=\"memUsage\">{{'Memory Usage' | label: 'PS_SERVER_TRACE_MEMUSAGE'}}: {{memUsage}}</span>\r\n                </div>\r\n                <span>{{'Parameters' | label: 'PS_PARAMETERS'}}</span>\r\n                <div class=\"parameters grid\">\r\n                    <div class=\"header\">\r\n                        <span class=\"name\">{{'Name' | label: 'PS_NAME'}}</span>\r\n                        <span>{{'Expression' | label: 'PS_SERVER_TRACE_EXPRESSION'}}</span>\r\n                        <span>{{'Value' | label: 'PS_VALUE'}}</span>\r\n                    </div>\r\n                    <div class=\"data\">\r\n                        <div *ngFor=\"let p of strace.Parameters\">\r\n                            <span class=\"name\">{{p.Name}}</span>\r\n                            <span [title]=\"p.Expression\">{{p.Expression}}</span>\r\n                            <span [title]=\"p.Value\">{{p.Value}}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </main>\r\n\r\n    <footer>\r\n        <div class=\"btns\">\r\n            <span class=\"default-btn\" (click)=\"rawViewOpen()\">{{'Raw View' | label: 'PS_SERVER_TRACE_RAWVIEW'}}</span>\r\n            <span class=\"default-btn\" (click)=\"resubmitOpen()\">{{'Resubmit' | label: 'PS_SERVER_TRACE_RESUBMIT'}}</span>\r\n            <span class=\"primary-btn\" (click)=\"close()\">{{'Cancel' | label: 'PS_CANCEL'}}</span>\r\n        </div>\r\n    </footer>\r\n</div>\r\n","import { Component, Input, AfterViewInit, ElementRef } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\nimport { TraceItem, TraceItemAttribute, DebugResponse } from './traceLog';\r\nimport { ServiceTraceViewComponent } from './serviceTraceView.component';\r\nimport { AlertService } from '../../alert/alert.service';\r\nimport { ILabel } from '../../common/objects/common';\r\n\r\n@Component({\r\n    selector: 'csi-trace-item',\r\n    template: `\r\n    <div class=\"trace-item\">\r\n        <div class=\"expand-mark\" (click)=\"closed=!closed\" *ngIf=\"!isService\">\r\n            <i *ngIf=\"trace.Children.length>0\" [class]=\"closed ? 'fa fa-caret-right': 'fa fa-caret-down'\" aria-hidden=\"true\"></i>\r\n        </div>\r\n        <div class=\"content\">\r\n            <div class=\"head\">\r\n                <div class=\"caption\">\r\n                    <div class=\"name\">{{trace.Name}}</div>\r\n                    <div class=\"total-elapsed\">{{trace.PageElapsedTime || 'Elapsed ' + pageElapsed}}\r\n                        <button *ngIf=\"isService\" (click)=\"traceButtonClick()\">{{'Service Trace' | label: 'PS_SERVICE_TRACE'}}</button>\r\n                        <button *ngIf=\"trace.PageElapsedTime\" (click)=\"download()\">{{ 'Save' | label: 'PS_SAVE' }}</button>\r\n                        <a class=\"download-btn\" *ngIf=\"trace.PageElapsedTime\" [attr.download]=\"'trace.log'\"></a>\r\n                    </div>\r\n                </div>\r\n                <div class=\"parameters\" *ngIf=\"trace?.Parameters?.length>0\">\r\n                    <div *ngFor=\"let p of trace.Parameters\">\r\n                        {{p.Name}} : {{p.Value}}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"children\" *ngIf=\"!closed\">\r\n                <csi-trace-item [trace]=\"tc\" [isService]=\"isService\" *ngFor=\"let tc of trace?.Children\"></csi-trace-item>\r\n            </div>\r\n        </div>\r\n    </div>`,\r\n    styles:[`\r\n    .trace-item {\r\n        display: flex;\r\n        white-space: nowrap;\r\n    }\r\n    .trace-item .expand-mark {\r\n        padding: 5px;\r\n        width: 15px;\r\n    }\r\n    .trace-item .content {\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n    .trace-item .head {\r\n        display: flex;\r\n        padding: 1px;\r\n    }\r\n    .trace-item .head .caption {\r\n        align-self: center;\r\n    }\r\n\r\n    .trace-item .head .caption .name {\r\n        padding-right: 3px;\r\n        font-weight: bold;\r\n    }\r\n    .total-elapsed {\r\n        color: blueviolet;\r\n    }\r\n    .total-elapsed button {\r\n        color: black;\r\n    }\r\n    .parameters {\r\n        display: flex;\r\n        flex-direction: column;\r\n        border: solid 1px black;\r\n    }\r\n`]\r\n\r\n})\r\n\r\nexport class TraceItemComponent implements AfterViewInit {\r\n\r\n    @Input() trace: TraceItem;\r\n    @Input() isService: boolean;\r\n\r\n    closed: boolean = true;\r\n    get pageElapsed(): string { return this.trace.Elapsed.substr(2, this.trace.Elapsed.length - 3); } \r\n    private downloadLinkBtn: HTMLAnchorElement;\r\n\r\n\r\n    constructor(private _dialog: MatDialog, private _alertService: AlertService, private _element: ElementRef) {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.downloadLinkBtn = this._element.nativeElement.querySelector('.download-btn');\r\n    }\r\n\r\n    traceButtonClick() {\r\n        let dialog = this._dialog.open(ServiceTraceViewComponent, { disableClose: true });\r\n        dialog.componentInstance.trace = this.trace;\r\n        dialog.afterClosed().subscribe(res => {\r\n        });\r\n    }\r\n\r\n\r\n    download() {\r\n        this._alertService.confirmModal(\r\n                <ILabel>{ Name: \"PS_SAVETRACELOG\", DefaultValue: \"Do you want to save Trace.log?\" },\r\n                <ILabel>{ Name: \"PS_FILEDOWNLOAD\", DefaultValue: \"File Download\" }).subscribe(ok => {\r\n                    if (ok) {\r\n                        let text = this.buildTraceToDownload(this.trace);\r\n                        let blob = new Blob([text], { type: 'text/plain' });\r\n                        this.downloadLinkBtn.href = URL.createObjectURL(blob)\r\n                        this.downloadLinkBtn.click();\r\n                    }\r\n        });\r\n    }\r\n\r\n    private buildTraceToDownload(t: TraceItem): string {\r\n        let s = t.Name;\r\n        if (t.Parameters && t.Parameters.length) {\r\n            let parameters = this.buildParameters(t.Parameters);\r\n            s += ('[\\n' + parameters + ']\\n');\r\n        }\r\n        if( t.Children && t.Children.length) {\r\n            s += '{\\n';\r\n            t.Children.forEach(c => s += this.buildTraceToDownload(c));\r\n            s += '}\\n';\r\n        }\r\n        if (t.DebugResponse) {\r\n            s += ('{\\n' + this.buildServiceTraceToDownload(t.DebugResponse) + '}\\n');\r\n        }\r\n        return s;\r\n    }\r\n\r\n    private buildServiceTraceToDownload(dr: DebugResponse): string {\r\n        let t = dr.Trace;\r\n        let s = t.Name;\r\n        if (t.Parameters && t.Parameters.length) {\r\n            let parameters = this.buildParameters(t.Parameters);\r\n            s += ('[\\n' + parameters + ']\\n');\r\n        }\r\n\r\n        s += `[\\n${dr.Request}\\]\\n{${dr.Response}\\n}\\n`;\r\n\r\n        return s;\r\n    }\r\n\r\n    private buildParameters(prms: TraceItemAttribute[]): string {\r\n        let r = '';\r\n        prms.forEach(p => r += (`${p.Name} : ${p.Value}\\n`));\r\n        return r;\r\n    }\r\n}\r\n","import { Component, Input, OnChanges, ChangeDetectorRef, ElementRef} from '@angular/core';\n\nimport { PortalService } from '../../common/services/portal.service';\nimport { WCFService } from '../../common/services/wcf.service';\nimport { TraceItem, TraceLog } from './traceLog';\n\n@Component({\n    selector: 'csi-trace-log',\n    styles: [`\n        :host{\n            display: flex;\n            flex-direction: column;\n            height: 100%;\n            flex: 1 1 auto;                    \n        }\n\n        .csi-trace-log{\n            display: flex;\n            flex-direction: column;\n            flex: 1 1 auto;                    \n        }\n\n        .header {\n            background-color: lightgray;\n            font-weight: bold;\n            padding: 2px 5px;\n            flex: 0 0 auto;\n            display: inline-flex;\n            width: 100%;\n        }\n\n        .header .refresh-btn {\n            padding-left: 20px;\n            padding-right: 20px;\n            color: brown;\n        }\n        .header .refresh-btn i {\n            cursor: pointer;\n        }\n        \n        .header .page-selector {\n            flex-basis: 20%;\n        }\n\n        .header .page-selector select {\n            width: 100%;\n        }\n\n        .log-content {\n            display: flex;\n            overflow: hidden;\n            flex: 1 1;\n        }\n\n        .log-content .transactions {\n            flex: 1 1;\n            overflow: auto;\n        }\n\n        .transactions-container{\n            height: 100%;\n            width: 100%;\n        }\n\n        .server-traces {\n            width: 30%;\n            overflow: auto;\n        }\n\n        .splitter {\n            width: 2px;\n            background-color: #dddddd;\n        }\n    `],\n    templateUrl: 'traceLog.component.html'\n})\nexport class TraceLogComponent implements OnChanges {\n    @Input() activePage: string;\n\n    logItems: TraceItem[] = [];\n    serverItems: TraceItem[] = [];\n    pages: string[] = [];\n    currentPage: string = '';\n\n    constructor(\n        private _portalService: PortalService,\n        private _wcf: WCFService,\n        private _ch: ChangeDetectorRef,\n        _element: ElementRef) {\n\n        this._wcf.getSelectionValues(\"UIVirtualPageMaint\", \"ObjectListInquiry\", true).subscribe(p => {\n            if (p.Rows) {\n                this.pages = p.Rows.map(r => r.Values[0]).concat('').sort();\n                this._ch.markForCheck();\n            }\n        });\n\n        this.reload();\n    }\n\n    ngOnChanges(ch) {\n        if (ch.activePage) {\n            let pn = ch.activePage.currentValue;\n            if (this.pages.find(p => p == pn)) {\n                this.currentPage = pn;\n                this._ch.markForCheck();\n            }\n        }\n    }\n\n    reload() {\n        this._portalService.getTraceLog(this.currentPage).subscribe(t => {\n            this.logItems = (<TraceLog>t).items;\n            this.serverItems = this.getServerTraces().reverse();\n            this._ch.markForCheck();\n        });\n\n    }\n\n    private getServerTraces(items: TraceItem[] = null): TraceItem[] {\n\n        let servs: any[] = [];\n        if (items == null) {\n            items = this.logItems;\n        }\n\n        items.forEach(i => {\n            if (i.DebugResponse)\n                servs.push(i);\n            else\n                servs = this.getServerTraces(i.Children).concat(servs);\n        });\n\n        return servs;\n    }\n}\n","<div class=\"csi-trace-log\">\r\n    <div class=\"header\">\r\n        <span>{{'Trace Viewer' | label:'PS_TRACEVIEWER' }}</span>\r\n        <div class=\"refresh-btn\" (click)=\"reload()\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></div>\r\n        <div class=\"page-selector\">\r\n            <select [(ngModel)]=\"currentPage\" (change)=\"reload()\">\r\n                <option *ngFor=\"let p of pages\" [value]=\"p\">{{p}}</option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n    <div class=\"log-content\">\r\n        <div class=\"transactions\">\r\n            <div class=\"transactions-container\">\r\n                <csi-trace-item [trace]=\"t\" [isService]=\"false\" *ngFor=\"let t of logItems\"></csi-trace-item>\r\n            </div>\r\n        </div>\r\n        <csi-panel-splitter direction=\"v\" [panel]=\"serverTracesPanel\"></csi-panel-splitter>\r\n        <div class=\"server-traces\" #serverTracesPanel>\r\n            <csi-trace-item [trace]=\"s\"  [isService]=\"true\" *ngFor=\"let s of serverItems\"></csi-trace-item>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { NgModule, Optional, SkipSelf }       from '@angular/core';\r\n\r\nimport { PanelModule } from '../../panel/panel.module';\r\nimport { SharedModule } from '../../shared/shared.module';\r\n\r\nimport { HierarchyComponent } from './hierarchy.component';\r\nimport { RawTextComponent } from './rawText.component';\r\nimport { ResubmitRequestComponent } from './resubmitRequest.component';\r\nimport { ServiceTraceViewComponent } from './serviceTraceView.component';\r\nimport { TraceLogComponent } from './traceLog.component';\r\nimport { TraceItemComponent } from './traceItem.component';\r\nimport { TraceRawViewComponent } from './traceRawView.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        PanelModule,\r\n        SharedModule,\r\n    ],\r\n    declarations: [\r\n        HierarchyComponent,\r\n        RawTextComponent,\r\n        ResubmitRequestComponent,\r\n        ServiceTraceViewComponent,\r\n        TraceLogComponent,\r\n        TraceItemComponent,        \r\n        TraceRawViewComponent,        \r\n    ],\r\n    exports: [\r\n        HierarchyComponent,\r\n        RawTextComponent,\r\n        ResubmitRequestComponent,        \r\n        ServiceTraceViewComponent, \r\n        TraceLogComponent,\r\n        TraceRawViewComponent, \r\n    ],\r\n    entryComponents: [\r\n        RawTextComponent,\r\n        ResubmitRequestComponent,        \r\n        ServiceTraceViewComponent,         \r\n        TraceRawViewComponent, \r\n    ]\r\n})\r\nexport class TraceLogModule {\r\n    constructor( @Optional() @SkipSelf() parentModule: TraceLogModule) {\r\n        if (parentModule) {\r\n            throw new Error(\r\n                'TraceLogModule is already loaded. Import it in the LayoutModule only');\r\n        }\r\n    }\r\n}\r\n\r\n","export class TraceLog {\r\n    public items: TraceItem[] = [];\r\n}\r\n\r\nexport class TraceItem {\r\n    logItem: any;\r\n    public DebugResponse: DebugResponse;\r\n\r\n    public Parent: TraceItem;\r\n    public Counter: number;\r\n\r\n    public Elapsed: string; // timeSpan\r\n    public Name: string;\r\n    public Parameters: TraceItemAttribute[];\r\n    public Children: TraceItem[];\r\n    public Fault: boolean;\r\n    public PageElapsedTime: string;\r\n}\r\n\r\nexport class ServerTraceItem {\r\n    public Name: string;\r\n    public Value: string;\r\n    public Attributes: TraceItemAttribute[];\r\n    public Parameters: TraceItemParameter[] \r\n    public Children: ServerTraceItem[];\r\n\r\n    public Started: string;\r\n    public Ended: string;\r\n    public StartedMemoryUsage: number;\r\n    public EndedMemoryUsage: number;\r\n}\r\n\r\nexport class DebugResponse {\r\n    public Trace: ServerTraceItem;\r\n    public Fault: boolean;\r\n    public Request: string;\r\n    public Response: string;\r\n}\r\n\r\nexport class DebugRequest {\r\n    public DisableCommit: boolean;\r\n    public TraceToResponseXML: string;\r\n    public IncludeTimestamps: boolean;\r\n    public IncludeRRXML: boolean;\r\n}\r\n\r\nexport class TraceItemParameter {\r\n    public Name: string = '';\r\n    public Expression: string = '';\r\n    public Value: string = '';\r\n}\r\nexport class TraceItemAttribute {\r\n    public Name: string = '';\r\n    public Value: string = '';\r\n}\r\n\r\nexport class textLine {\r\n    level: number;\r\n    text: string;\r\n}","import { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ServerTraceItem, textLine } from './traceLog';\r\n\r\n@Component({\r\n    selector: 'csi-trace-raw-view',\r\n    template: `\r\n    <div class=\"csi-modal\">\r\n        <header>\r\n            <span class=\"title\">{{'Raw View' | label: 'PS_SERVER_TRACE_RAWVIEW'}}</span>\r\n            <span class=\"close-icon\" (click)=\"close('cancel')\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></span>\r\n        </header>\r\n        <main>        \r\n            <csi-raw-text [text]=\"txtLines\"></csi-raw-text>\r\n        </main>\r\n        <footer>\r\n            <div class=\"btns\">\r\n                <span class=\"default-btn\" (click)=\"close('ok')\">{{'OK' | label: 'PS_OK'}}</span>\r\n                <span class=\"primary-btn\" (click)=\"close('cancel')\">{{'Cancel' | label: 'PS_CANCEL'}}</span>\r\n            </div>\r\n        </footer>\r\n    </div>        \r\n    `\r\n})\r\n\r\nexport class TraceRawViewComponent {\r\n\r\n    public set traceItem(tr: ServerTraceItem) { this.getRawText(tr); }\r\n\r\n    txtLines: textLine[];\r\n\r\n    constructor(private _dialogRef: MatDialogRef<TraceRawViewComponent>) {\r\n        this.txtLines = [];\r\n    }\r\n\r\n    close(action: string): void {       \r\n        this._dialogRef.close();\r\n    }\r\n\r\n    getRawText(t: ServerTraceItem, level: number = 0) {\r\n\r\n        let s = '<' + t.Name;\r\n        t.Attributes.forEach(a => s += (` ${a.Name}='${a.Value}'`));\r\n\r\n        let hasValue = (t.Value !== undefined && t.Value !== null);\r\n\r\n        let hasChidren = (t.Children && t.Children.length > 0);\r\n\r\n        if (hasValue) {\r\n            s += '>';\r\n            // if multiline add \\n otherwise the value will be in the same line with open tag\r\n            if (t.Value.indexOf('\\n') == -1) {\r\n                s += (t.Value + '</' + t.Name + '>');\r\n                hasValue = false;\r\n            }\r\n        }\r\n        else {\r\n            if (!hasChidren)\r\n                s += '/>';\r\n            else\r\n                s += '>';\r\n        }\r\n\r\n        // open <tag>\r\n        this.txtLines.push(<textLine>{ level: level, text: s });\r\n        if (hasValue) {\r\n            t.Value.split('\\n').forEach(v => this.txtLines.push(<textLine>{ level: 0, text: v }));\r\n        }\r\n\r\n        if (hasChidren) {\r\n            // add child nodes\r\n            t.Children.forEach(c => this.getRawText(c, level + 1));\r\n        }\r\n\r\n        if (hasValue || hasChidren) {\r\n            // closed <tag>\r\n            this.txtLines.push(<textLine>{ level: level, text: '</' + t.Name + '>' });\r\n        }\r\n\r\n        return s;\r\n    }\r\n}\r\n\r\n","import { Component, Input, Output, EventEmitter, ViewChild, OnChanges, SimpleChanges} from '@angular/core';\nimport 'brace/index';\nimport 'brace/theme/eclipse';\nimport 'brace/snippets/text';\nimport 'brace/mode/xml';\nimport 'brace/snippets/xml';\nimport 'brace/ext/language_tools.js';\nimport 'brace/ext/searchbox';\nimport { StudioStateService } from '../../common/services/studioStateService';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'xml-textEditor',\n    host: { 'class': 'flex-column-grow' },\n    template: `\n        <div class=\"xml-editor\">\n            <ace-editor #editor [text]=\"xmlText | async\" [mode]=\"'xml'\" style=\"height:100%\" (textChanged)=\"onValueChanged($event)\"\n                [durationBeforeCallback]=\"2000\"\n                [theme]=\"'eclipse'\" \n                [options]=\"aceOptions\" ></ace-editor>\n        </div>\n        `,\n    styles:[`\n            .xml-editor{\n                height: 100%;\n                width: 100%;\n                padding-top: 1px;\n            }\n    `]\n})\n\nexport class XmlTextEditorComponent implements OnChanges {\n    @Input(\"xml\") xmlText: Observable<string>;\n    @Input() zoom: number;\n    @Output() onTextChanged: EventEmitter<string> = new EventEmitter<string>();\n    @ViewChild('editor', {static: true}) editor : any;\n\n    constructor(\n        private _studioService : StudioStateService\n        ) {}\n\n    public aceOptions: any = {\n        enableBasicAutocompletion: true,\n        enableSnippets: true,\n        enableLiveAutocompletion: true\n      };    \n\n    ngOnChanges(ch : SimpleChanges){\n        if( ch.zoom && ch.zoom.currentValue){         \n            let fs = Math.round((12 * ch.zoom.currentValue) / 100.0);\n            this.editor.getEditor().setFontSize(fs);\n        }\n    }\n\n    onValueChanged(xml : string): void {\n        this.onTextChanged.emit(xml);\n    }\n\n    getActiveLine(xml: string): number {\n        if (xml && this._studioService.activeElement) {\n            let activeElementName = this._studioService.activeElement.name;\n            if (activeElementName) {\n                return xml.indexOf(\"Name=\\\"\" + activeElementName + \"\\\"\");\n            }\n        }\n    }\n}","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { LocalService } from '../common/services/local.service';\nimport { LabelService } from '../common/services/label.service';\nimport { HistoryLog } from '../common/objects/historyLog';\nimport { ActionManager } from './actionManager';\nimport { PortalService } from '../common/services/portal.service';\nimport { StudioStateService } from '../common/services/studioStateService';\nimport { MetadataService } from '../common/services/metadata.service';\nimport { PortalSettingsService } from '../common/services/portalSettings.service';\n\n@Component({\n    selector: 'csi-action-menu',\n    templateUrl: 'action-menu.component.html'\n})\n\nexport class ActionMenuComponent {\n    \n    get history(): HistoryLog {\n        if (this._studioStateService.activeRootElement)\n            return this._studioStateService.activeRootElement['history'];\n        return undefined;\n    }\n    \n    private _actionManager: ActionManager;\n    get actionManager(): ActionManager { return this._actionManager; }\n    constructor(\n        private _dialog: MatDialog,\n        private _labelService: LabelService,\n        private _localService: LocalService,\n        private _studioStateService: StudioStateService,\n        private _metadataService : MetadataService,\n        private _portalService: PortalService,\n        private _portalSettingsService: PortalSettingsService    \n        ) {\n\n        this._studioStateService.subjects.menu.subscribe(m=>{\n            this._actionManager.updateMenu(m);\n        });\n\n        this._actionManager = new ActionManager(this._dialog, this._labelService, \n            this._localService, this._studioStateService, this._portalService, this._metadataService, this._portalSettingsService);\n    }  \n}\n","<section class=\"csi-action-bar\">\r\n\t<div class=\"csi-action-area\">\r\n\t\t<div class=\"button-group\">\r\n\t\t\t<div class=\"btn-group\">\r\n\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn dropdown-toggle new\" [attr.title]=\"'New' | label: 'PS_NEW'\" [matMenuTriggerFor]=\"addNew\">{{'New' | label: 'PS_NEW'}} <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i></button>\r\n\t\t\t\t<mat-menu #addNew=\"matMenu\" class=\"csi-context-menu\" [overlapTrigger]=\"false\">\r\n\t\t\t\t\t<button mat-menu-item (click)='actionManager.execute(\"newPage\")'>\r\n\t\t\t\t\t\t<img class=\"csi-add-icon\" src=\"Content/images/portalStudioIcons/new_24.png\" />\r\n\t\t\t\t\t\t<span>{{'Page' | label: 'PS_PAGE'}}</span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button mat-menu-item (click)='actionManager.execute(\"newWebpart\")'>\r\n\t\t\t\t\t\t<img class=\"csi-add-icon\" src=\"Content/images/portalStudioIcons/new_24.png\" />\r\n\t\t\t\t\t\t<span>{{'Web Part' | label: 'PS_WEBPART'}}</span></button>\r\n\t\t\t\t\t<button mat-menu-item (click)='actionManager.execute(\"newPageflow\")'>\r\n\t\t\t\t\t\t<img class=\"csi-add-icon\" src=\"Content/images/portalStudioIcons/new_24.png\" />\r\n\t\t\t\t\t\t<span>{{'Pageflow' | label: 'PS_PAGEFLOW'}}</span></button>\r\n\t\t\t\t\t<button mat-menu-item (click)='actionManager.execute(\"newMenu\")'>\r\n\t\t\t\t\t\t<img class=\"csi-add-icon\" src=\"Content/images/portalStudioIcons/new_24.png\" />\r\n\t\t\t\t\t\t<span>{{'Menu Definition' | label: 'PS_MENU_DEFINITION'}}</span></button>\r\n\t\t\t\t\t<button mat-menu-item (click)='actionManager.execute(\"newTab\")'>\r\n\t\t\t\t\t\t<img class=\"csi-add-icon\" src=\"Content/images/portalStudioIcons/new_24.png\" />\r\n\t\t\t\t\t\t<span>{{'Tab' | label: 'PS_TAB'}}</span></button>\r\n\t\t\t\t\t<button mat-menu-item (click)='actionManager.execute(\"newAction\")'>\r\n\t\t\t\t\t\t<img class=\"csi-add-icon\" src=\"Content/images/portalStudioIcons/new_24.png\" />\r\n\t\t\t\t\t\t<span>{{'Page Action' | label: 'PS_PAGE_ACTION'}}</span></button>\r\n\t\t\t\t\t<button mat-menu-item (click)='actionManager.execute(\"newActionCategory\")'>\r\n\t\t\t\t\t\t<img class=\"csi-add-icon\" src=\"Content/images/portalStudioIcons/new_24.png\" />\r\n\t\t\t\t\t\t<span>{{'Page Action Category' | label: 'PS_PAGE_ACTION_CATEGORY'}}</span></button>\r\n\t\t\t\t\t<button mat-menu-item (click)='actionManager.execute(\"newActionRule\")'>\r\n\t\t\t\t\t\t<img class=\"csi-add-icon\" src=\"Content/images/portalStudioIcons/new_24.png\" />\r\n\t\t\t\t\t\t<span>{{'Page Action Rule' | label: 'PS_PAGE_ACTION_RULE'}}</span></button>\r\n\t\t\t\t\t<button mat-menu-item (click)='actionManager.execute(\"newPageMap\")'>\r\n\t\t\t\t\t\t<img class=\"csi-add-icon\" src=\"Content/images/portalStudioIcons/new_24.png\" />\r\n\t\t\t\t\t\t<span>{{'Map Item' | label: 'PS_MAP_ITEM'}}</span></button>\r\n\t\t\t\t\t<button mat-menu-item (click)='actionManager.execute(\"newTargetMatrix\")'>\r\n\t\t\t\t\t\t<img class=\"csi-add-icon\" src=\"Content/images/portalStudioIcons/new_24.png\" />\r\n\t\t\t\t\t\t<span>{{'Target Matrix Item' | label: 'PS_TARGET_MATRIX_ITEM'}}</span></button>\r\n\t\t\t\t</mat-menu>\r\n\t\t\t</div>\r\n\t\t\t<button type=\"button\" class=\"btn csi-action-btn save\" (click)='actionManager.execute(\"save\")' [disabled]='!actionManager.canExecute(\"save\")' [attr.title]=\"'Save' | label: 'PS_SAVE'\">{{'Save' | label: 'PS_SAVE'}}</button>\r\n\t\t\t<button type=\"button\" class=\"btn csi-action-btn saveAll\" (click)='actionManager.execute(\"saveAll\")' [disabled]='!actionManager.canExecute(\"saveAll\")' [attr.title]=\"'Save All' | label: 'PS_SAVE_ALL'\">{{'Save All' | label: 'PS_SAVE_ALL'}}</button>\r\n\r\n\t\t</div>\r\n\t\t<div class=\"button-group\">\r\n\t\t\t<div class=\"btn-group\" role=\"group\">\r\n\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn undo\" (click)='actionManager.undoRedo(\"undo\",$event.shiftKey)' [disabled]='!actionManager.canExecute(\"undo\")' [attr.title]=\"'Undo' | label: 'PS_UNDO'\">{{'Undo' | label: 'PS_UNDO'}} {{history?.undoCount}}</button>\r\n\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn redo\" (click)='actionManager.undoRedo(\"redo\",$event.shiftKey)' [disabled]='!actionManager.canExecute(\"redo\")'[attr.title]=\"'Redo' | label: 'PS_REDO'\">{{'Redo' | label: 'PS_REDO'}} {{history?.redoCount}}</button>\r\n\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn copy\" (click)='actionManager.copy()' [disabled]='!actionManager.canExecute(\"copy\")' [attr.title]=\"'Copy' | label: 'PS_COPY'\">{{'Copy' | label: 'PS_COPY'}}</button>\r\n\t\t\t\t<button class=\"btn csi-action-btn delete\" (click)='actionManager.execute(\"delete\")' [disabled]='!actionManager.canExecute(\"delete\")' [attr.title]=\"'Delete' | label: 'PS_DELETE'\">{{'Delete' | label: 'PS_DELETE'}}</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"button-group\">\r\n\t\t\t<div class=\"btn-group\" role=\"group\">\r\n\t\t\t\t<fieldset class=\"btn csi-action-btn import\" [disabled]='!actionManager.canExecute(\"import\")'>\r\n\t\t\t\t\t<input title=\"{{'Import' | label: 'PS_IMPORT'}}\" [disabled]='!actionManager.canExecute(\"import\")' type=\"file\" (change)=\"actionManager.importComponent($event)\" value=\"\" accept=\"text/xml\" title=\"\" />{{'Import' | label: 'PS_IMPORT'}}\r\n\t\t\t\t</fieldset>\r\n\t\t\t\t<div class=\"btn-group\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn dropdown-toggle export\" id=\"btnExportActionDropdown\" [matMenuTriggerFor]=\"exportMenu\" [attr.title]=\"'Export' | label: 'PS_EXPORT'\"\r\n\t\t\t\t\t[disabled]='!actionManager.canExecute(\"export\")'>{{'Export' | label: 'PS_EXPORT'}} <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i></button>\r\n\t\t\t\t\t<mat-menu #exportMenu=\"matMenu\" class=\"csi-context-menu\" [overlapTrigger]=\"false\">\r\n\t\t\t\t\t\t<button mat-menu-item (click)='actionManager.execute(\"export\")'>{{'Selected Workspace' | label: 'PS_EXPORTSEL'}}</button>\r\n\t\t\t\t\t\t<button mat-menu-item (click)='actionManager.execute(\"exportAll\")'>{{'All Workspaces' | label: 'PS_EXPORTALL'}}</button>\r\n\t\t\t\t\t</mat-menu>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"btn-group btn-group-vertical\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn-vertical batchImport\" (click)='actionManager.execute(\"batchImport\")'\r\n\t\t\t\t\t[disabled]='!actionManager.canExecute(\"batchImport\")' [attr.title]=\"'Batch Import' | label: 'PS_BATCH_IMPORT'\">{{'Batch Import' | label: 'PS_BATCH_IMPORT'}}</button>\r\n\t\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn-vertical batchExport\" (click)='actionManager.execute(\"batchExport\")'\r\n\t\t\t\t\t[disabled]='!actionManager.canExecute(\"batchExport\")' [attr.title]=\"'Batch Export' | label: 'PS_BATCH_EXPORT'\">{{'Batch Export' | label: 'PS_BATCH_EXPORT'}}</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"button-group\">\r\n\t\t\t<div class=\"btn-group btn-group-vertical\" role=\"group\">\r\n\t\t\t\t<div class=\"btn-group\">\r\n\t\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn revertTo\" [disabled]='!actionManager.canExecute(\"revert\")'\r\n                         [matMenuTriggerFor]=\"revertMenu\" [attr.title]=\"'Revert To' | label: 'PS_REVERT_TO'\">{{'Revert To' | label: 'PS_REVERT_TO'}} <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i> </button>\r\n\t\t\t\t\t<mat-menu #revertMenu=\"matMenu\" class=\"csi-context-menu\" [overlapTrigger]=\"false\">\r\n\t\t\t\t\t\t<button mat-menu-item [hidden]=\"!actionManager.canExecute('revert_published')\" (click)='actionManager.execute(\"revert\", null, \"published\")'>{{'Published Content' | label: 'PS_REVERT_PUBLISHED'}}</button>\r\n\t\t\t\t\t\t<button mat-menu-item [hidden]=\"!actionManager.canExecute('revert_system')\" (click)='actionManager.execute(\"revert\", null, \"system\")'>{{'System Content' | label: 'PS_REVERT_SYSTEM'}}</button>\r\n\t\t\t\t\t</mat-menu>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"button-group\">\r\n\t\t\t<div class=\"btn-group\" role=\"group\">\r\n\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn preview\" (click)='actionManager.preview()' [disabled]='!actionManager.canExecute(\"preview\")' [attr.title]=\"'Preview' | label: 'PS_PREVIEW'\">{{'Preview' | label: 'PS_PREVIEW'}}</button>\r\n\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn run\" (click)='actionManager.run()' [disabled]='!actionManager.canExecute(\"run\")' [attr.title]=\"'Run' | label: 'PS_RUN'\">{{'Run' | label: 'PS_RUN'}}</button>\r\n\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn publish\" (click)='actionManager.publish()' [disabled]='!actionManager.canExecute(\"publish\")' [attr.title]=\"'Publish' | label: 'PS_PUBLISH'\">{{'Publish' | label: 'PS_PUBLISH'}}</button>\r\n\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn generate\" (click)='actionManager.generate()' [disabled]='!actionManager.canExecute(\"generate\")' [attr.title]=\"'Generate' | label: 'PS_GENERATE'\">{{'Generate' | label: 'PS_GENERATE'}}</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"button-group\">\r\n\t\t\t<div class=\"btn-group btn-group-vertical\" role=\"group\">\r\n\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn-vertical extractWP\" (click)='actionManager.execute(\"extract\")' [disabled]='!actionManager.canExecute(\"extract\")' [attr.title]=\"'Extract Web Part' | label: 'PS_EXTRACT_WEBPART'\">{{'Extract Web Part' | label: 'PS_EXTRACT_WEBPART'}}</button>\r\n\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn-vertical reloadWP\" (click)='actionManager.execute(\"reloadWebPart\")' [disabled]='!actionManager.canExecute(\"reloadWebPart\")' [attr.title]=\"'Reload Web Part' | label: 'PS_RELOAD_WEBPART'\">{{'Reload Web Part' | label: 'PS_RELOAD_WEBPART'}}</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"button-group\">\r\n\t\t\t<div class=\"btn-group btn-group-vertical\" role=\"group\">\r\n\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn-vertical showHide\" (click)=\"actionManager.togglePanel('catalog')\" [class.active]=\"actionManager.getDisplayState('catalog')\" [attr.title]=\"'Catalog' | label: 'PS_SH_CATALOG1'\">{{'Catalog' | label: 'PS_SH_CATALOG1'}}</button>\r\n\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn-vertical showHide\" (click)=\"actionManager.togglePanel('toolbox')\" [class.active]=\"actionManager.getDisplayState('toolbox')\" [attr.title]=\"'Toolbox' | label: 'PS_SH_TOOLBOX1'\">{{'Toolbox' | label: 'PS_SH_TOOLBOX1'}}</button>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"btn-group btn-group-vertical\" role=\"group\">\r\n\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn-vertical showHide\" (click)=\"actionManager.togglePanel('property')\" [class.active]=\"actionManager.getDisplayState('property')\" [attr.title]=\"'Properties' | label: 'PS_SH_PROPERTIES1'\">{{'Properties' | label: 'PS_SH_PROPERTIES1'}}</button>\r\n\t\t\t\t<button type=\"button\" class=\"btn csi-action-btn-vertical showHide\" (click)=\"actionManager.togglePanel('traceViewer')\" [class.active]=\"actionManager.getDisplayState('traceViewer')\" [attr.title]=\"'Trace Viewer' | label: 'PS_SH_TRACE_VIEWER1'\">{{'Trace Viewer' | label: 'PS_SH_TRACE_VIEWER1'}}</button>\r\n\t        </div>\r\n\t    </div>\r\n\t    <div class=\"button-group\">\r\n\t        <div class=\"btn-group btn-group-vertical\" role=\"group\">\r\n\t            <button type=\"button\" class=\"btn csi-action-btn-vertical resetSettings\" (click)=\"actionManager.resetPanels()\" [attr.title]=\"'Reset Settings' | label: 'PS_RESET_SETTINGS'\">{{'Reset Settings' | label: 'PS_RESET_SETTINGS'}}</button>\r\n\t            <button class=\"btn csi-action-btn-vertical\" style=\"visibility: hidden\">&nbsp;</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n    <!-- Show the undo log -->\r\n    <div class=\"csi-undo-redo-log\" [hidden]=\"!actionManager.displayHistoryLog\">\r\n        <div *ngFor=\"let l of history?.display(actionManager.displayHistoryLog)\">{{l}}</div>\r\n    </div>\r\n\r\n</section>\r\n\r\n","import { MatDialog } from '@angular/material/dialog';\n\nimport { environment } from '../../environments/environment';\nimport { IUIDesigner, IElement, TopMenuState, ExecuteCommand } from '../common/objects/common';\nimport { HistoryLog } from '../common/objects/historyLog';\nimport { OMType} from '../common/objects/viewModel';\nimport { LabelService } from '../common/services/label.service';\nimport { LocalService } from '../common/services/local.service';\nimport { PortalService } from '../common/services/portal.service';\n\nimport { InputDialogComponent, InputDialogContext } from '../shared/dialog/input.dialog.component';\n\nimport * as _ from 'lodash';\nimport { StudioStateService } from '../common/services/studioStateService';\nimport { MetadataService } from '../common/services/metadata.service';\nimport { PortalSettingsService, SettingSection } from '../common/services/portalSettings.service';\n\nexport class ActionManager  {\n    private _cmd: TopMenuState;\n\n    get rootElement(): IUIDesigner { return <IUIDesigner>this._studioStateService.activeRootElement; }\n    get history(): HistoryLog {\n        if (this._studioStateService.activeRootElement)\n            return this.rootElement['history'];\n        return undefined;\n    }\n\n    _settings: any;\n    constructor(\n        private _dialog: MatDialog,\n        private _labelService: LabelService,\n        private _localService: LocalService,\n        private _studioStateService: StudioStateService,\n        private _portalService: PortalService,\n        private _metadataService : MetadataService,\n        private _portalSettingsService: PortalSettingsService\n        )\n        {\n        this._cmd = new TopMenuState();\n        this.portalSettings();\n    }\n\n    portalSettings() {\n        let sections = this._portalSettingsService.getSections();\n        sections.subscribe(sects => {\n            let templateSection = { name: \"studiosettings\" };\n            this._settings = this._portalSettingsService.getSectionData(<SettingSection>templateSection);\n        });\n    }\n\n    updateMenu(cmd: TopMenuState): void {\n        this._cmd = cmd;\n    }\n\n    //actions\n    execute(command: string, element?: IElement, data?: any) {\n        this._studioStateService.subjects.execute.next(new ExecuteCommand(command, element, data)); \n    }\n\n    copy() {\n        let okLabel = this._labelService.getLabel('PS_ACTION_OK', 'Ok');\n        let cancelLabel = this._labelService.getLabel('PS_ACTION_CANCEL', 'Cancel');\n        let copyTitleLabel = this._labelService.getLabelwithArguments('PS_COPY', 'Copy {0}', [this.rootElement.type]);\n        let copyInputLabel = this._labelService.getLabelwithArguments('PS_COPY_OF', 'Copy of {0}', [this.rootElement.name]);\n        let inputContext: InputDialogContext = {\n            title: copyTitleLabel,\n            message: '',\n            actions: [\n                { action: 'ok', name: okLabel, isPrimary: true },\n                { action: 'cancel', name: cancelLabel, isPrimary: false }],\n            inputs: [{ name: 'txt', type: 'text', text: '', value: copyInputLabel }]\n        };\n\n        let dialog = this._dialog.open(InputDialogComponent, { disableClose: true });\n\n        dialog.componentInstance.initContext(inputContext);\n        dialog.afterClosed().subscribe(res => {\n            let elementInput = res[0];\n            if (elementInput) {\n                let newName = elementInput.value;\n                this._portalService.copyElement(this.rootElement, newName, this._metadataService.getWorkspaceCodeById(this.rootElement.__workspace))\n                    .subscribe(element => {\n                        if (element) {                            \n                            if (element.type && ['page', 'webpart', 'pageflow'].indexOf(element.type.toLowerCase()) >= 0) {\n                                this._studioStateService.addOpenedElement(element);\n                                this._localService.addToElementHistory(element);\n                                this._studioStateService.addOrUpdateComponentRef((<IUIDesigner>element).componentRef);\n                            }\n                            this.execute('copy', element, {\"name\": newName, \"message\": element['Message']});\n                        }\n                    });\n            }\n        });\n    }\n\n    generate() {\n        this.execute(\"generate\", this._cmd.element, this._cmd.data);\n    }\n\n    publish() {\n        let DEBUG_MODE = false;\n        let titleLabel = this._labelService.getLabel('PS_WARNING_PUBLISH_TITLE', 'Publishing');\n        let messageLabel = this._labelService.getLabel('PS_WARNING_PUBLISH_MESSAGE', 'Publishing will replace the current available component with the new one.  Do you want to continue?');\n        let okLabel = this._labelService.getLabel('PS_ACTION_OK', 'Ok');\n        let cancelLabel = this._labelService.getLabel('PS_ACTION_CANCEL', 'Cancel');\n        let removeAllText = this._labelService.getLabel('PS_WARNING_PUBLISH_INPUT_TEXT', 'Remove All personalization associated with this component.');\n        let replaceSystemText = this._labelService.getLabel('PS_WARNING_PUBLISH_REPLACE_TEXT', \"Replace the currently availiable component's System content with the new one.\");\n\n        let inp = [{\n            name: 'cb1',\n            type: 'checkbox',\n            text: removeAllText,\n            value: false\n        }];\n        if (DEBUG_MODE) {\n            inp.push({\n                name: 'cb2',\n                type: 'checkbox',\n                text: replaceSystemText,\n                value: false\n            });\n        }\n\n        let inputContext: any = {\n            title: titleLabel,\n            message: messageLabel,\n            actions: [\n                { action: 'ok', name: okLabel, isPrimary: true },\n                { action: 'cancel', name: cancelLabel, isPrimary: false }],\n            inputs: inp\n        };\n\n        let dialog = this._dialog.open(InputDialogComponent, { disableClose: true });\n\n        dialog.componentInstance.initContext(<InputDialogContext>inputContext);\n        dialog.afterClosed().subscribe(res => {\n            if (res === \"cancel\") {\n            }\n            else {\n                this.rootElement['__publishFlags'] = _.map(res, p => <boolean>p['value']);\n                this.execute('publish');\n            }\n        });\n    }\n\n    preview(): void {\n        let activeComponent = this.rootElement;\n        if (!activeComponent.isDirty && activeComponent.name) {\n            let url = `${environment.portalUrl}/${activeComponent.name}.aspx?Test=true&CallStackKey=Preview`;\n            let win = window.open(url, '_blank');\n            win.focus();\n        }\n    }\n\n    run(): void {\n        let activeComponent = this.rootElement;\n        if (!activeComponent.isDirty && activeComponent.name) {\n            let url = \"\";\n            if (activeComponent.type === \"Pageflow\")\n                url = `${environment.portalUrl}/Main.aspx?redirectToPageflow=${activeComponent.name}`;\n            else\n                url = `${environment.portalUrl}/Main.aspx?redirectToPage=${activeComponent.name}`;\n            let win = window.open(url, '_blank');\n            win.focus();\n        }\n    }\n    importComponent(event): void {\n        let files = event.srcElement.files;\n        if (files.length) {\n            let xmlFile = files[0];\n            if (xmlFile.type == \"text/xml\") {\n                let reader = new FileReader();\n                reader.onloadend = (e: ProgressEvent) => {\n                    let xmlContent = (<FileReader>e.target).result;\n                    let activeComponent = this.rootElement;\n                    if (activeComponent != null) {\n                        var dataToImport = {\n                            rootElement: this.rootElement,\n                            content: xmlContent\n                        }\n                        this.execute('import', null, dataToImport);\n                    }\n                    return true;\n                }\n                reader.readAsArrayBuffer(xmlFile);\n                event.srcElement.value = \"\";\n            }\n        }\n    }\n   \n    //History\n    displayHistoryLog: string;\n    undoRedo(cmd: string, shiftKey: boolean): void {\n        if (shiftKey) {\n            this.displayHistoryLog = this.displayHistoryLog ? '' : cmd;\n        }\n        else {\n            this.displayHistoryLog = '';\n            this.execute(cmd);\n        }\n    }\n\n    togglePanel(panelName: string): void {\n        this.execute(\"togglePanel\", null, panelName);\n    }\n\n    resetPanels(): void {\n        this.execute(\"resetPanels\", null);\n    }\n\n    canExecute(command: string): boolean { \n        let canExecute = null;\n        switch (command.toLowerCase()) {\n            case \"batchimport\":\n            case \"batchexport\":\n                canExecute = true;\n                break;\n            case \"copy\":\n                canExecute = !this.isStartOrNotAvailable() && !this.isNew();\n                break;\n            case \"delete\":\n                canExecute = !this.isStartOrNotAvailable() && !this.isNew() && !this.isStatic();\n                break;\n            case \"export\":\n                canExecute = !this.isStartOrNotAvailable() && (this.isPage() || this.isWebPart() || this.isPageflow());\n                break;\n            case \"extract\":\n                canExecute = !this.isStartOrNotAvailable() && this.isPage() && (this._studioStateService.activeElement && this._studioStateService.activeElement.type == \"Webpart\" && this._studioStateService.activeElement.isReference == false);\n                break;\n            case \"generate\":\n                canExecute = this._cmd && this._cmd.generate && this._cmd.data && this._cmd.data.ItemType == OMType.Service;\n                break;\n            case \"import\":\n                canExecute = !this.isStartOrNotAvailable() && (this.isPage() || this.isWebPart() || this.isPageflow());\n                break;\n            case \"preview\":\n                canExecute = !this.isStartOrNotAvailable() && !this.isDirty() && this.rootElement.isViewable; \n                break;\n            case \"publish\":\n                canExecute = !this.isStartOrNotAvailable() && (this.isPage() || this.isWebPart()) && !this.isDirty() && !this.isNew() && this.isInDeveloping() && this.isInDeveloping();\n                break;\n            case \"redo\":\n                canExecute = this.history && this.history.redoCount;\n                break;\n            case \"revert\":\n                canExecute = this.isRevertable(\"published\") || this.isRevertable(\"system\");\n                break;\n            case \"revert_published\":\n                canExecute = this.isRevertable(\"published\");\n                break;\n            case \"revert_system\":\n                canExecute = this.isRevertable(\"system\");\n                break;\n            case \"run\":\n                canExecute = !this.isStartOrNotAvailable() && !this.isDirty() && this.rootElement.isTestable;\n                break;\n            case \"save\":\n                canExecute = !this.isStartOrNotAvailable() && (this.isDirty() || this.isAvailableSave());\n                break;\n            case \"saveall\":\n                canExecute = !this.isStartOrNotAvailable() && (this.isAnyElementDirty() || this.isAvailableSave());\n                break;\n            case \"undo\":\n                canExecute = this.history && this.history.undoCount;\n                break;\n            case \"reloadwebpart\":\n                canExecute = !this.isStartOrNotAvailable() && this._studioStateService.activeElement && this._studioStateService.activeElement.type == 'Webpart' && !this._studioStateService.activeElement.isReference && this._studioStateService.activeRootElement.type == 'Page';\n                break;\n        }\n        return canExecute;\n    }\n\n    getDisplayState(name: string): boolean {\n        let state: boolean = null;\n        switch (name.toLowerCase()) {\n            case \"catalog\":\n                state = this._localService.isDisplayCatalog();\n                break;\n            case \"toolbox\":\n                state = this._localService.isDisplayToolbox();\n                break;\n            case \"property\":\n                state = this._localService.isDisplayProperty();\n                break;\n            case \"traceviewer\":\n                state = this._localService.isDisplayTraceViewer();\n                break;\n            default:\n                break;\n        }\n        return state;\n    }\n\n    //state helpers\n     isAvailableSave():boolean{\n        if(this._settings){\n            if(this._settings.hasOwnProperty(\"AlwaysEnableSave\")){\n                return this._settings[\"AlwaysEnableSave\"];\n            }else return false;\n        }\n        else return false\n    }\n    private isStartOrNotAvailable(): boolean {\n        return !this.rootElement || this.rootElement.type == 'StartPage';\n    }\n    private isPage(): boolean {\n        return !this.isStartOrNotAvailable() && this.rootElement.type == \"Page\";\n    }\n    private isWebPart(): boolean {\n        return !this.isStartOrNotAvailable() && this.rootElement.type == \"Webpart\";\n    }\n    private isPageflow(): boolean {\n        return !this.isStartOrNotAvailable() && this.rootElement.type == \"Pageflow\";\n    }\n    private isAnyElementDirty(): boolean {\n        return _.some(this._studioStateService.openedElements, ['isDirty', true]);\n    }\n    private isDirty(): boolean {\n        return this.rootElement.isDirty;\n    }\n    private isNew(): boolean {\n        return this.rootElement.isNew;\n    }\n    private isInDeveloping(): boolean {\n        return this.rootElement.workspaceIndexes && this.rootElement.workspaceIndexes.indexOf(0) != -1;\n    }\n    \n    public isCustomWorkspace(): boolean {\n        return typeof this.rootElement.__workspace != \"undefined\" && this.rootElement.__workspace > 1;\n    }\n    private isStatic(): boolean {\n        return this.rootElement['isStatic'] === true;\n    }\n    private isPublished(): boolean {\n        return this.rootElement.workspaceIndexes && this.rootElement.workspaceIndexes.filter(w => w > 1).length > 0;\n    }\n    private isSystem(): boolean {\n        return this.rootElement.workspaceIndexes && this.rootElement.workspaceIndexes.filter(w => w == 1).length > 0;\n    }\n    private isRevertable(t: string ) : boolean{\n        let r = !this.isStartOrNotAvailable() && (this.isPage() || this.isWebPart()) && !this.isNew();\n        if( t == \"system\")\n            return r && this.isSystem() && (this.isPublished() || this.isInDeveloping());\n        else if( t == \"published\")\n            return r && this.isPublished() && this.isInDeveloping();\n        return false;\n    }\n}","export * from './menu.module';\r\n","import { NgModule, Optional, SkipSelf }       from '@angular/core';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n//app components\r\nimport { ActionMenuComponent } from './action-menu.component';\r\nimport { TitleMenuComponent } from './title-menu.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule\r\n    ],\r\n    declarations: [\r\n        ActionMenuComponent,\r\n        TitleMenuComponent,\r\n    ],\r\n    exports: [\r\n        ActionMenuComponent,\r\n        TitleMenuComponent,\r\n    ],\r\n})\r\nexport class MenuModule {\r\n    constructor( @Optional() @SkipSelf() parentModule: MenuModule) {\r\n        if (parentModule) {\r\n            throw new Error(\r\n                'MenuModule is already loaded. Import it in the StudioModule only');\r\n        }\r\n    }\r\n}\r\n","import { Component, Input, OnChanges,  } from '@angular/core'; //ChangeDetectorRef,NgZone, \nimport { MatDialog } from '@angular/material/dialog';\nimport { environment } from '../../environments/environment';\nimport { PortalService } from '../common/services/portal.service';\nimport { PortalSettingsService } from '../common/services/portalSettings.service';\nimport { MetadataService } from '../common/services/metadata.service';\nimport { ModalContainerComponent } from '../panel/properties/valueEditors/modalContainer';\nimport { ExecuteCommand } from '../common/objects/common';\nimport { WorkspaceItem } from '../common/objects/viewModel';\n\nimport { LabelService } from '../common/services/label.service';\nimport { ConfirmDialogComponent } from '../shared/dialog/confirm.dialog.component';\nimport { StudioStateService } from '../common/services/studioStateService';\n\n@Component({\n    selector: 'csi-title-menu',\n    templateUrl: 'title-menu.component.html',\n    styleUrls: [\"title-menu.component.less\"]\n})\n\nexport class TitleMenuComponent implements OnChanges {\n    title: string = \"Opcenter Execution Core\";\n    subtitle: string = \" - Portal Studio 2.0\";\n    wsColor: string;\n\n    @Input(\"activeElement\") __activeElement: any;\n    get workspaces(): WorkspaceItem[] { \n        return this._metadataService.workspaces;\n    }\n    get state() : StudioStateService {return  this._studioStateService; }\n\n    _root:any;\n    _activeWS:number;\n    _minWS: number;\n    _wsWithContent:any;\n    _activeWsWithContent:boolean;\n    _countWsWithContent: number;\n\n    constructor(\n        private _dialog: MatDialog,\n        private _labelService: LabelService,\n        private _metadataService: MetadataService,\n        private _portalService: PortalService,\n        private _studioStateService : StudioStateService,\n        private _portalSettingsService: PortalSettingsService) {\n        this.addWorkspaceStyles();\n    }\n\n    ngOnChanges(){\n        this._root = this._studioStateService.getRoot();\n        this._activeWS = this._metadataService.workspaces.reduce((prev, current) => (prev.ID > current.ID) ? prev : current).ID;\n        if(this._root.workspaceIndexes){\n            this._wsWithContent = this._root.workspaceIndexes.filter(el => el < this._activeWS && el !== 0);\n            this._minWS =  this._wsWithContent.length > 0 ? Math.min.apply(Math, this._wsWithContent) : 100000;\n            this._activeWsWithContent = this._root.workspaceIndexes.includes(this._activeWS);\n            this._countWsWithContent = this._wsWithContent.length;\n        }\n    }\n\n    isDisabled(selectedWS){\n        if((selectedWS < this._activeWS && selectedWS >= this._minWS ) ||  \n            (this._activeWS == selectedWS && this._activeWsWithContent) ||\n            (this._activeWS == selectedWS && this._countWsWithContent) ||\n            selectedWS == 0){\n            return false;\n        }else return true;\n    }\n\n    private addWorkspaceStyles(){\n        let style = document.createElement(\"style\");\n        style.appendChild(document.createTextNode(\"\"));\n        document.head.appendChild(style);\n        let sheet = style.sheet as CSSStyleSheet;\n        let index = -1;\n        this._metadataService.workspaces.forEach(w=>{\n            // rule for design\n            sheet.insertRule(\"div.workspace-\"+ w.ID + \" { box-shadow : inset 0 0 5px \"+ w.Color +\"; }\" , ++index);\n\n            // rule for option\n            sheet.insertRule(\"option.workspace-\"+ w.ID + \" { background-color: \"+ w.Color +\"; }\", ++index);\n        });\n    }\n\n    logout(): void {\n        this._portalService.logout()\n            .subscribe(result => {\n                if (result)\n                    location.href = environment.portalUrl;\n            });\n    }\n\n    backToPortal(): void {\n        if(environment.portalMode == \"Classic\") \n            location.href = environment.portalUrl + \"/Main.aspx\";\n        else \n            location.href = environment.portalUrl + \"/default.htm#/screen/apollo\";\n    }\n\n    portalSettings() {\n        let context: any = {\n            metadataService: this._metadataService,\n            hideTypeName: true,\n            disableAdding: true\n        };\n\n        let dial = this._dialog.open(ModalContainerComponent, { disableClose: true });\n        dial.componentInstance.initContext(context);\n        dial.afterClosed().subscribe(result => {\n            if (result)\n                // Save settings\n                this._portalSettingsService.save().subscribe(r => { });\n        });        \n    }\n   \n    changeWorkspace(wsID: number|string) {\n        if( typeof wsID == \"string\")\n            wsID = parseInt(wsID);\n\n        if (this._studioStateService.activeRootElement.isDirty) {\n\n            let yesLabel = this._labelService.getLabel('PS_ACTION_YES', 'Yes');\n            let noLabel = this._labelService.getLabel('PS_ACTION_NO', 'No');\n            let cancelLabel = this._labelService.getLabel('PS_ACTION_CANCEL', 'Cancel');\n            let titleLabel = this._labelService.getLabel('PS_CLOSE', 'Close');\n            let messageLabel = this._labelService.getLabel('PS_SAVE_PENDING', 'Would you like to save pending changes?');\n            let confirmContext = {\n                title: titleLabel,\n                message: messageLabel,\n                actions: [\n                    { action: 'yes', name: yesLabel, isPrimary: true },\n                    { action: 'no', name: noLabel, isPrimary: false },\n                    { action: 'cancel', name: cancelLabel, isPrimary: false }]\n            };\n\n            let dialog = this._dialog.open(ConfirmDialogComponent, { disableClose: true });\n\n            dialog.componentInstance.initContext(confirmContext);\n            dialog.afterClosed().subscribe(res => {\n                if (res === \"yes\") {\n                    // Save element \n                    this._studioStateService.subjects.execute.next(new ExecuteCommand(\"save\",null, null));\n                    this._studioStateService.subjects.execute.next(new ExecuteCommand(\"switchWorkspace\", null, wsID));\n                } \n                else if (res === \"no\") {\n                    // Do not save element \n                    this._studioStateService.subjects.execute.next(new ExecuteCommand(\"switchWorkspace\", null, wsID ));\n                }\n            });\n        }\n        else {\n            // Do not save element \n            this._studioStateService.subjects.execute.next(new ExecuteCommand(\"switchWorkspace\", null, wsID ));\n        }\n\n    }\n}\n","<div class=\"csi-title-bar\">\n    <div class=\"csi-left-side-title\">\n        <span class=\"csi-title\">{{title}}</span><span class=\"csi-subtitle\">{{subtitle}}</span>        \n    </div>\n    <div class=\"csi-right-side-controls\">\n        <div class=\"csi-title-action-area\">\n            <select #selectws title=\"{{'View Contents' | label: 'PS_VIEW_WS_CONTENTS' }}\"  [value]=\"state.activeWorkspace\" (change)=\"changeWorkspace(selectws.value)\" [style.box-shadow]=\"wsColor\" [hidden]=\"state.activeWorkspace==-1\">\n                <option *ngFor=\"let ws of workspaces\" [value]=\"ws.ID\" [disabled] = \"isDisabled(ws.ID)\" class=\"workspace-{{ws.ID}}\">{{ws.Name}} ({{ws.Code}})</option>\n            </select>\n            <span class=\"action\" (click)='portalSettings()' title=\"{{'Portal Settings' | label: 'PS_SETTINGS' }}\"><i class=\"fa fa-cog\"></i>{{'Portal Settings' | label: 'PS_SETTINGS' }}</span>\n            <span class=\"action\" (click)='backToPortal()' title=\"{{'Go to Portal Main Page' | label: 'PS_GO_TO_PORTAL' }}\"><i class=\"fa fa-retweet\"></i>{{'Back to Portal' | label: 'PS_BACK_TO_PORTAL' }}</span>\n            <span class=\"action\" (click)='logout()' title=\"{{'Logout' | label: 'PS_LOGOUT'}}\"><i class=\"fa fa-sign-out\"></i>{{'Logout' | label: 'PS_LOGOUT' }}</span>\n            <span class=\"siemens-logo\">&nbsp;</span>\n        </div>\n    </div>\n</div>","export * from './panel.module';","import { Component, OnInit, Input, Output, ViewChild, ViewContainerRef, EventEmitter, ComponentFactoryResolver, Type } from '@angular/core';\nimport { StudioSubjects, UpdatedInfo } from '../common/objects/common';\nimport { PanelSettings, PanelAction, PanelUpdatedData, IContentPanel, ReadOnlyLevel } from './panel';\nimport { DragService } from '../shared/drag.service';\nimport { PropertyListComponent } from './properties/propertyList';\nimport { ElementPanelComponent } from './panels/elementPanel.component';\nimport { ControlPanelComponent } from './panels/controlPanel.component';\nimport { PortalObjectPanelComponent } from './panels/portalObjectPanel.component';\nimport { FieldDirectoryComponent } from './panels/fieldDirectory.component';\n\n@Component({\n    selector: 'csi-panel',\n    styleUrls: ['./panel.component.less'],\n    templateUrl: './panel.component.html'\n})\nexport class PanelComponent implements OnInit {\n    @Input() component: string;\n    @Input() dataSource: string;\n    @Input() subjects: StudioSubjects;\n    @Input() readOnly: ReadOnlyLevel;\n    @Input() parameters: any;\n\n    @Output() exec: EventEmitter<UpdatedInfo> = new EventEmitter<UpdatedInfo>();\n\n    @ViewChild('panelHolder', { read: ViewContainerRef, static: true }) panelHolder: ViewContainerRef;\n\n    settings: PanelSettings;\n    get typing() : boolean {return this._dragService.startInputName;}\n\n    constructor(\n        private _compFactoryResolver : ComponentFactoryResolver,\n        private _dragService: DragService) {\n    }\n\n    ngOnInit() {\n\n        this.settings = new PanelSettings(this.component);\n        this.settings.dataSource = this.dataSource;\n        this.settings.readOnly = this.readOnly;\n        this.settings.parameters = this.parameters;\n        this.subjects.refreshElementPanel.subscribe((t: string) => {\n            if (t === this.dataSource)       \n            this.refreshPanel();\n       });\n\n        const comp = this.resolveComponent(this.component);\n        if( comp ){\n            this.loadComponent(comp);\n        }\n        else{\n            console.error(\"The component \" + this.component + \" was not resolved\");\n        }\n    }\n\n    private loadComponent(comp: Type<IContentPanel>){\n        const componentFactory = this._compFactoryResolver.resolveComponentFactory(comp);\n        const viewContainerRef = this.panelHolder;\n        viewContainerRef.clear();\n\n        const componentRef = viewContainerRef.createComponent(componentFactory);\n        const panelInstance = componentRef.instance as any;\n        panelInstance.init(this.settings, this.subjects);\n        if (panelInstance.destroy)\n            componentRef.onDestroy(() => panelInstance.destroy(this.subjects));\n        let upd = new PanelUpdatedData();\n        upd.contentCreated = panelInstance;\n        this.subjects.panel.next(upd);\n    }\n\n    private resolveComponent(selector: string) : Type<IContentPanel>{\n        const comps = {\n            \"csi-property-list\" : PropertyListComponent,\n            \"csi-element-panel\" : ElementPanelComponent,\n            \"csi-control-panel\" : ControlPanelComponent,\n            \"csi-portal-object-panel\" : PortalObjectPanelComponent,\n            \"csi-field-directory\" : FieldDirectoryComponent\n        };\n        return comps[selector];\n    }\n\n    refreshPanel() {\n        this.settings.refreshContent.next();\n    }\n\n    searchChanged(txt: string) {\n        this.settings.searchInput.next(txt);\n    }\n\n    actionClick(act: PanelAction) {\n        let upd = new PanelUpdatedData();\n        upd.createNew = act.name.toLowerCase() == \"new\";\n        upd.action = act;\n        this.subjects.panel.next(upd);\n        if(!upd.createNew)\n            this.settings.viewMode = act.modeClass;\n    }\n\n    changeName(ev: Event, inpControl: any) {\n        if(ev.type == \"focusout\"){\n            if(this.settings.nameInput.val !== inpControl.value ){\n                this.settings.nameInput.val = inpControl.value;\n                this.settings.nameInput.onValChange.next(inpControl.value);\n            }\n            this._dragService.startInputName = false;\n        }\n    }\n\n    startInput(){\n        this._dragService.startInputName = true;\n    }\n}\n","<div class=\"csi-panel\" [hidden]=\"!settings.visible\">\n    <div class=\"action-bar\" [hidden]=\"settings.collapsed\" *ngIf=\"settings.actions.length > 0\">\n        <div *ngFor=\"let act of settings?.actions\" class=\"action-button\" [class.selected]=\"act.modeClass == settings.viewMode && act.name != 'New'\">\n            <span title=\"{{act.name}}\" (click)=\"actionClick(act)\"><i class=\"fa {{act.imgClass}} fa-lg\"></i></span>\n        </div>\n    </div>\n\n    <div class=\"name-input-area\" *ngIf=\"!settings.nameInput.hidden\">\n        <label>{{settings.nameInput.label | panelName}}</label>\n        <div class=\"input-value\" [class.typing]=\"typing\">\n            <input class=\"csi-name-input\" type=\"text\" [value]=\"settings.nameInput.val\" #nameInp\n                (focus)=\"startInput()\" (focusout)=\"changeName($event, nameInp)\"\n                (keyup)=\"changeName($event, nameInp)\" (paste)=\"changeName($event, nameInp)\" (cut)=\"changeName($event, nameInp)\" (input)=\"changeName($event, nameInp)\"\n                placeholder=\"Name\" [readonly]=\"settings.nameInput.readonly\" />\n        </div>\n    </div>\n\n    <div class=\"csi-typeahead-area\" *ngIf=\"settings.showSearch && !settings.collapsed\">\n        <input type=\"text\" #search [ngModel]='settings.searchText' placeholder=\"Search\" (input)=\"searchChanged(search.value)\" />\n        <span class=\"refresh-btn\" *ngIf=\"settings.showRefresh\">\n            <i class=\"fa fa-refresh\" aria-hidden=\"true\" (click)='refreshPanel();'></i>\n        </span>\n    </div>\n\n    <ng-template #panelHolder ></ng-template>\n\n</div>\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { PanelComponent } from './panel.component';\nimport { PanelSplitterComponent } from './panelSplitter.component';\n//panels\nimport { ControlPanelComponent } from './panels/controlPanel.component';\nimport { DockAreaComponent } from './panels/dockArea.component';\nimport { ElementPanelComponent } from './panels/elementPanel.component';\nimport { FieldDirectoryComponent } from './panels/fieldDirectory.component';\nimport { PortalObjectPanelComponent } from './panels/portalObjectPanel.component';\n//pipes\nimport { ElementFilter } from './pipe/element.filter';\nimport { FieldDirectorySearchFilter } from './pipe/fieldDirectory.filter';\n//properties\nimport { PropertyListComponent } from './properties/propertyList';\nimport { PropertyFilter } from './properties/property.filter';\nimport { NameValueComponent } from './properties/nameValue';\n//valueEditors\nimport { FieldExpressionComponent } from './properties/valueEditors/fieldExpression';\nimport { FieldExpressionDialogComponent } from './properties/valueEditors/fieldExpressionDialog';\nimport { LabelSearchComponent } from './properties/valueEditors/labelSearch';\nimport { MarginsComponent } from './properties/valueEditors/margins';\nimport { ModalContainerComponent } from './properties/valueEditors/modalContainer';\nimport { ModalCollectionComponent } from './properties/valueEditors/modalCollection';\nimport { ModalObjectComponent } from './properties/valueEditors/modalObject';\nimport { PageActionRuleBuilderComponent } from './properties/valueEditors/pageActionRuleBuilder.component';\nimport { PortalSettingsComponent } from './properties/valueEditors/portalSettings';\nimport { SwitchBoxEditorComponent } from './properties/valueEditors/switchBox';\nimport { SelectorEditorComponent } from './properties/valueEditors/selector';\nimport { TextEditorComponent } from './properties/valueEditors/textBox';\nimport { QueryBuilderComponent } from './properties/valueEditors/queryBuilder.component';\nimport { TargetMatrixRowsComponent } from './properties/valueEditors/targetMatrixRows.component';\nimport { WebiReportsComponent } from './properties/valueEditors/webiReports.component';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nexport const COMPONENTS = [\n    PanelComponent,\n    PanelSplitterComponent,\n    //panels\n    ControlPanelComponent,\n    DockAreaComponent,\n    ElementPanelComponent,\n    FieldDirectoryComponent,\n    PortalObjectPanelComponent,\n    //pipe\n    ElementFilter,\n    FieldDirectorySearchFilter,\n    //properties\n    PropertyListComponent,\n    PropertyFilter,\n    NameValueComponent,\n    //valueEditors\n    FieldExpressionComponent,\n    FieldExpressionDialogComponent,\n    LabelSearchComponent,\n    MarginsComponent,\n    ModalContainerComponent,\n    ModalCollectionComponent,\n    ModalObjectComponent,\n    PageActionRuleBuilderComponent,\n    PortalSettingsComponent,\n    SelectorEditorComponent,\n    SwitchBoxEditorComponent,\n    TextEditorComponent,\n    QueryBuilderComponent,\n    TargetMatrixRowsComponent,\n    WebiReportsComponent\n]\n\n@NgModule({\n    imports: [\n        SharedModule,\n        MatMenuModule,\n        MatCheckboxModule\n    ],\n    declarations: COMPONENTS,\n    exports: [        \n        DockAreaComponent,\n        FieldExpressionComponent,\n        PanelComponent,\n        PanelSplitterComponent,\n        PropertyListComponent\n    ],\n    entryComponents: [\n        FieldExpressionDialogComponent,\n        LabelSearchComponent,\n        ModalContainerComponent,\n        ModalCollectionComponent,\n        ModalObjectComponent,\n        PropertyListComponent,\n        ElementPanelComponent,\n        ControlPanelComponent,\n        PortalObjectPanelComponent,\n        FieldDirectoryComponent\n    ]\n})\n\nexport class PanelModule {\n    constructor( @Optional() @SkipSelf() parentModule: PanelModule) {\n        if (parentModule) {\n            throw new Error(\n                'PanelModule is already loaded. Import it in the AppModule only');\n        }\n    }\n}\n\n","import { Subject } from 'rxjs';\nimport { IUpdatedData, UpdateDataTypes, IUIComponentRef, StudioSubjects } from '../common/objects/common';\n\n\n//interfaces\nexport interface IContentPanel{\n    init(settings: PanelSettings, subjects?: StudioSubjects): void;\n    destroy?(subjects?: StudioSubjects): void;\n}\n\nexport interface IPanelNameInput {\n    label: string;\n    val: string;\n    readonly: boolean;\n    onValChange?: Subject<string>;\n    hidden: boolean;\n}\n\n//classes\nexport class PanelAction {\n    name: string;\n    imgClass: string;\n    svc: string;\n    component: string;\n    modeClass: string;\n}\n\nexport class PanelSettings {\n    name: string;\n    iconSrc: string;\n    description: string;\n    collapsed: boolean;\n    showActions: boolean;\n    showSearch: boolean;\n    showNewAction: boolean;\n    showName: boolean;    \n    hideBorder: boolean;\n    showRefresh: boolean;\n    nameInput: IPanelNameInput;\n    content: string;\n    actions: PanelAction[];\n    dataSource: string;\n    readOnly: ReadOnlyLevel;\n    viewMode: string;\n    visible: boolean;    \n    parameters: any;\n    searchText: string;\n\n    searchInput: Subject<string>;\n    actionClick: Subject<string>;\n    refreshContent: Subject<string>;\n\n    constructor(name: string,\n                iconSrc: string = \"\",\n                collapsed: boolean = false,\n                showActions: boolean = true,\n                showSearch: boolean = true,\n                showNewAction: boolean = true) {\n\n        this.name = name;\n        this.iconSrc = iconSrc;\n        this.collapsed = collapsed;            \n        this.showActions = showActions;        \n        this.showSearch = showSearch;\n        this.showNewAction = showNewAction;\n        this.showRefresh = true;\n        this.showName = false;\n        this.visible = true;\n\n        this.searchInput = new Subject<string>();\n        this.actionClick = new Subject<string>();\n        this.refreshContent = new Subject<string>();\n\n        this.nameInput = <IPanelNameInput>{\n            hidden: true,\n            onValChange : new Subject<string>()\n        };\n\n        this.actions = [];\n    }\n}\nexport class PanelUpdatedData implements IUpdatedData {\n    __dataType: UpdateDataTypes = UpdateDataTypes.panel;\n\n    constructor() {\n    }\n\n    elementRef: IUIComponentRef;\n    elementRefs: IUIComponentRef[];\n    open: boolean;\n    selectCmd: boolean;\n    createNew: boolean;\n    changeMode: boolean;\n    dataRequest: any;\n    action: PanelAction;\n    contentCreated: IContentPanel;\n}\n\n//enums\nexport enum ReadOnlyLevel { value, full };","import { Component, Input, AfterViewInit, ElementRef, OnDestroy, Renderer2 } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { DragInfo, dragModes } from '../shared/drag';\nimport { DragService } from '../shared/drag.service';\nimport { uuid } from '../common/objects/common';\nimport { DragDataInfo } from '../shared/directives/draggable.directive';\n\n@Component({\n    selector: 'csi-panel-splitter',\n    styleUrls: [`panelSplitter.component.less`],\n    template: `\n    <div *ngIf=\"!disabled\" class=\"csi-panel-splitter\" \n        [csi-draggable]=\"dragInfo\"\n        [class.vertical]=\"isVertical\" [class.horizontal]=\"!isVertical\"></div>`\n})\n\nexport class PanelSplitterComponent implements AfterViewInit, OnDestroy {\n    @Input() direction: string = 'h';\n    @Input() panel: HTMLElement;\n    @Input() disabled: boolean = false;\n    @Input() panelBefore: boolean = false;\n\n    id: string = uuid.id();\n    get dragInfo() : DragDataInfo {return <DragDataInfo>{\n        type: 'panel-splitter', \n        id: this.id, \n        model: null,\n        dragAction : (d)=> {\n            this.onDragging(d);\n        }\n    }};\n\n    private draggingClass = \"do-dragging\";\n    private get isVertical(): boolean { return this.direction == 'v'; }\n    private started = false;\n\n    private get sizeStyle(): string { return this.isVertical ? 'width' : 'height'; }\n\n    private splitterBar: HTMLDivElement;\n\n    private resizeEnsure: Subject<number>;\n\n    constructor(private _el: ElementRef, private _drag: DragService, private _render: Renderer2) {\n    }\n\n    ngAfterViewInit() {\n\n        if (!this.disabled) {\n\n            this.splitterBar = <HTMLDivElement>(<HTMLDivElement>this._el.nativeElement).firstElementChild;\n\n\n            this.resizeEnsure = new Subject<number>();\n            this.resizeEnsure.subscribe(r => {\n                // reached min/max limit  -- set size to the limit                \n                this._render.setStyle(this.panel, this.sizeStyle, r + \"px\");\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        if (!this.disabled)\n            this._drag.remove(dragModes.resizePanel, this.splitterBar.id);\n    }\n\n    private dragStart(d: DragInfo) {\n\n        this.started = true;\n        this._render.addClass(this._el.nativeElement, this.draggingClass);\n    }\n\n    private dragEnd(ev: DragInfo) {\n        this._render.removeClass(this._el.nativeElement, this.draggingClass);\n        this.started = false;\n    }\n\n    private onDragging(d: DragInfo) {\n        if (d.endOfDrag) {\n            this.dragEnd(d);\n            return;\n        }\n\n        if (!this.started) {\n            this.dragStart(d);\n        }\n\n        if (this.started) {\n            this.doResize(this.isVertical ? -d.diffx : -d.diffy);\n        }\n    }\n\n    private doResize(diffSize: number) {\n        let initSize = this.panel.getBoundingClientRect()[this.sizeStyle];\n        let size = this.panelBefore ? initSize - diffSize : initSize + diffSize;\n\n        this._render.setStyle(this.panel, \"flex\", \"0 0 auto\");\n        this._render.setStyle(this.panel, this.sizeStyle, size + \"px\");\n\n        //check whether the size is changed        \n        let rect = this.panel.getBoundingClientRect();\n\n        if (rect[this.sizeStyle] != size) {\n            // revert \n            this.resizeEnsure.next(rect[this.sizeStyle]);\n        }\n    }\n}\n\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { IControl, IElement, LayoutBuilder } from '../../common/objects/common';\nimport { PanelAction, IContentPanel, PanelSettings } from '../panel';\nimport { LabelService } from '../../common/services/label.service';\nimport { PortalService } from '../../common/services/portal.service';\n\nimport _ from 'lodash';\nimport { StudioStateService } from '../../common/services/studioStateService';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: 'csi-control-panel',\n    styleUrls: [\"controlPanel.component.less\"],\n    templateUrl: \"controlPanel.component.html\"\n})\n\nexport class ControlPanelComponent implements IContentPanel, OnInit, OnDestroy {\n\n    settings: PanelSettings;\n\n    controls: IControl[] = [];\n\n    errorMessage: any;\n    nameFilter: string;\n    designerDropList : string[];\n    private dropAreasSubs : Subscription;\n\n    constructor(private _portalService: PortalService, private _labelService: LabelService, private _studioService: StudioStateService) {\n        this.dropAreasSubs = this._studioService.subjects.dropAreas.subscribe(d=> {\n            this.designerDropList = d.filter(dp=> dp.startsWith(\"drop_ctl_\"));\n        });\n    }\n\n    ngOnDestroy(){\n        if( this.dropAreasSubs)\n            this.dropAreasSubs.unsubscribe();\n    }\n\n    get viewMode(): string {\n        return this.settings.viewMode || 'list';\n    }\n\n    init(s: PanelSettings) {\n        let listModeLabel = this._labelService.getLabel('PS_LIST_MODE', 'List mode');\n        let tileModeLabel = this._labelService.getLabel('PS_TILE_MODE', 'Tiles mode');\n        let detailModeLabel = this._labelService.getLabel('PS_DETAIL_MODE', 'Details mode');\n\n        s.actions = [\n            <PanelAction>{ name: listModeLabel, imgClass: 'fa-list', modeClass: 'list' },\n            <PanelAction>{ name: tileModeLabel, imgClass: 'fa-th', modeClass: 'tiles' },\n            <PanelAction>{ name: detailModeLabel, imgClass: 'fa-list-ul', modeClass: 'detail' }\n        ];\n        s.showSearch = true;\n        s.iconSrc = \"fa-tasks\";\n        s.showRefresh = false;\n        this.settings = s;\n\n        return this.settings;\n    }\n\n    ngOnInit() {\n        this._portalService.getControls()\n            .subscribe(\n            controls => {\n                this.controls = _.filter(controls, c => c.type != 'TabContainer');\n\n                // add initializer for container-type controls\n                this.controls.forEach(tc => {\n                    if (_.includes(['ToggleContainer', 'SectionDropDown','SectionDropDownMobile', 'RibbonContainer', 'WebPartsWrapperControl'], tc.type))\n                        (<any>tc).controlInit = (ctl: IElement, owner: IElement, portal: PortalService) => this.buildDefaultLayout(ctl);\n                    else if (tc.type == 'JQTabContainer')\n                        (<any>tc).controlInit = (ctl: IElement, owner: IElement, portal: PortalService) => this.buildDefaultTabs(ctl);\n                    else if (tc.type == 'ContainerListGrid')\n                        (<any>tc).controlInit = (ctl: IElement, owner: IElement, portal: PortalService) => this.buildDefaultContainerListGrid(ctl);\n                });\n\n                this.settings.searchInput.subscribe(searchtext => this.nameFilter = searchtext);\n            },\n            error => this.errorMessage = <any>error);\n    }\n\n\n\n    private buildDefaultLayout(ctl: IElement) {\n        ctl.layout = LayoutBuilder.getLayout(2, 1);\n        ctl.properties.section = {\n            __type: 'SectionDefinition',\n            layout: null\n        };\n    }\n\n    private buildDefaultTabs(ctl: IElement) {\n        ctl.layout = LayoutBuilder.getLayout(2, 2);\n        ctl.properties.tabDefinitions = [{ name: 'TabDefinition0', __type: 'TabDefinition' }];\n    }\n\n    private buildDefaultContainerListGrid(ctl: IElement) {\n\n        let defColumns = [\n            { __type: 'JQFieldReadonly', name: \"Container\", width: 70, labelName: \"SelVal_Container\", editable: false, isRowID: true },\n            { __type: 'JQFieldReadonly', name: \"Qty\", width: 78, labelName: \"Container_Qty\", editable: false },\n            { __type: 'JQFieldReadonly', name: \"UOM\", width: 85, labelName: \"SelVal_UOM\", editable: false },\n            { __type: 'JQFieldReadonly', name: \"Operation\", width: 120, labelName: \"SelVal_Operation\", editable: false },\n            { __type: 'JQFieldReadonly', name: \"Product\", width: 120, labelName: \"SelVal_Product\", editable: false },\n            { __type: 'JQFieldReadonly', name: \"ProductDescription\", width: 170, labelName: \"SelVal_ProductDescription\", editable: false },\n            { __type: 'JQFieldReadonly', name: \"MfgOrder\", width: 120, labelName: \"SelVal_ManufacturingOrder\", editable: false }\n        ];\n\n        ctl.properties = ctl.properties || {};\n        ctl.properties.settings = {\n            __type: 'GridDataSettingsSelVal',\n            columns: defColumns,\n            selectionMode: 3 /*JQGridSelectionMode.SingleRowSelectWithPostback*/,\n            automation: {\n                __type: 'GridAutomation',\n                shrinkColumnWidthToFit: true\n            },\n            pagesRequested: 0,\n            rowsPerPage: 10,\n            fieldExpressions: \".Container\",\n            requestFieldExpression: \".Container\",\n            pager: { __type: 'JQGridPagerSettings', position: 1 /*HorizontalAlignment.Left*/, mode: 2 /* Auto*/ },\n            navigator: 1 /* JQGridNavigatorMode.PagerOnly*/\n        };\n    }\n}\n","<div class=\"csi-control-list-area {{viewMode}}\">\r\n    <div class=\"control-container\" *ngIf=\"viewMode == 'list'\">\r\n        <div *ngFor=\"let control of (controls|elementFilter:nameFilter)\" [title]=\"control.description\" class=\"csi-selectable-item\" \r\n            [csi-draggable]=\"{type: 'control-toolbox', id: control.name, model: control, disabled: (control.type == 'ProcessModelGraphControl')}\" >\r\n            <div class=\"control-list-item\"><img [src]=\"control.toolboxImage\" /><span>{{control.name}}</span></div>\r\n        </div>\r\n    </div>\r\n    <div class=\"control-container\" *ngIf=\"viewMode == 'tiles'\">\r\n        <ul>\r\n        <li class=\"control-tile\" *ngFor='let control of (controls | elementFilter:nameFilter)' [title]=\"control.description\">\r\n            <div [csi-draggable]=\"{type: 'control-toolbox', id: control.name, model: control, disabled: (control.type == 'ProcessModelGraphControl')}\">\r\n                <img [src]=\"control.toolboxImage.replace('.png', '_32x32.png')\" />\r\n                <div class=\"tile-text\" >{{control.name}}</div>\r\n            </div>\r\n        </li>\r\n        </ul>\r\n    </div>\r\n\r\n    <div class=\"control-container\" *ngIf=\"viewMode == 'detail'\">\r\n        <div class=\"col-captions\">\r\n            <div class=\"col-img\"> </div>\r\n            <div class=\"col-name\">{{'Name' | label: 'PS_NAMELBL'}}</div>\r\n            <div class=\"col-description\">{{'Description' | label: 'PS_DESCRIPTIONLBL'}}</div>\r\n        </div>\r\n        <div class=\"detail-items\">\r\n            <div *ngFor=\"let control of (controls|elementFilter:nameFilter)\" [title]=\"control.description\" class=\"csi-selectable-item control-detail-item\" \r\n                    [csi-draggable]=\"{type: 'control-toolbox', id: control.name, model: control, disabled: (control.type == 'ProcessModelGraphControl')}\">\r\n                <div class=\"col-img\"><img [src]=\"control.toolboxImage\" /></div>\r\n                <div class=\"col-name\">{{control.name}}</div>\r\n                <div class=\"col-description\">{{control.description}}</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { DockPanel, DockTab, ContentSection, UpdatedInfo, StudioSubjects } from '../../common/objects/common';\nimport { PanelSettings } from '../panel';\n\n@Component({\n    selector: 'csi-dock-area',\n    templateUrl: './dockArea.component.html',\n    styles: [`\n        :host{\n            display: flex;\n            flex-direction: column;\n            flex: 1 1;\n        }\n        \n        .dock {\n            display: flex;\n            flex-direction: column;\n            flex: 1 1;\n\n            border: solid 1px grey;\n            border-top-width: 0px;\n        }\n        .dock-panel {\n            display: flex;\n            flex-direction: column;\n            flex: 1 1;\n        }\n        .dock-panel.hidden{\n            display: none;\n        }\n        .dock-panel .header {\n            background-color: lightgray;\n            font-weight: bold;\n            padding: 5px;\n            min-height: 28px;\n        }\n\n        .dock-panel .header .content {\n            flex-grow: 1;\n        }\n\n        .dock-panel .footer {\n            min-height: 24px;\n            padding: 2px;\n        }\n\n        .dock-panel .footer ul > li > a {\n            padding: 2px;\n            cursor: pointer;\n        }\n    `]\n})\n\nexport class DockAreaComponent implements OnInit {\n    @Input() dockPanels: DockPanel[];\n    @Input() subjects: StudioSubjects;\n    @Output() panelCommand: EventEmitter<UpdatedInfo> = new EventEmitter<UpdatedInfo>();\n\n    defaultPanel = new PanelSettings(\"Properties\", \"fa-wrench\", false);\n    ngOnInit() {\n        this.defaultPanel.showRefresh = true;\n\n        this.dockPanels.forEach(d => {\n            if (d.tabs && d.tabs.length > 0 && !d.activeTab) {\n                d.activeTab = d.tabs[0];\n                if (d.activeTab.sections && d.activeTab.sections.length > 0 && !d.activeTab.expandedSection) {\n                    d.activeTab.expandedSection = d.activeTab.sections[0];\n                }\n            }\n        });\n    }\n\n    expand(tab: DockTab, section: ContentSection) {\n        tab.expandedSection = section;\n    }\n\n    selectTab(p: DockPanel, t: DockTab) {\n        p.activeTab = t;\n        if (p.activeTab.sections && p.activeTab.sections.length && !p.activeTab.expandedSection) {\n            p.activeTab.expandedSection = p.activeTab.sections[0];\n        }\n    }\n\n    panelExec(upd: UpdatedInfo) {\n        this.panelCommand.emit(upd);\n    }\n}","<div class=\"dock\">\r\n    <ng-template ngFor let-p [ngForOf]=\"dockPanels\">\r\n        <csi-panel-splitter [direction]=\"p.splitter\" [panel]=\"docPanel\" *ngIf=\"p.splitter && p.splitter!='n'\"></csi-panel-splitter>\r\n        <div class=\"dock-panel\" [class.hidden]=\"!p.visible\" #docPanel>\r\n            <div class=\"header\">{{p.label}}</div>\r\n            <div class=\"csi-content-panel\">                \r\n                <div *ngFor=\"let s of p.activeTab.sections\" [class.active]=\"p.activeTab.expandedSection==s\" class=\"section\">\r\n                    <div class=\"title\" (click)=\"expand(p.activeTab, s)\">\r\n                        <span class=\"toggle-icon\" (click)=\"expand(p.activeTab, s)\">\r\n                            <i class=\"fa {{ p.activeTab.expandedSection==s ? 'fa-chevron-down':'fa-chevron-right'}}\"></i>\r\n                        </span>\r\n                        <span>{{s.name}}</span>\r\n                    </div>                 \r\n\r\n                    <div *ngIf=\"p.activeTab.expandedSection==s\" class=\"section-content\">\r\n                        <csi-panel [component]=\"s.component\" [dataSource]=\"s.dataSource\" (exec)=\"panelExec($event)\" [subjects]=\"subjects\" [parameters]=\"{sidePanel:true}\"></csi-panel>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"footer\" *ngIf=\"p.tabs.length > 1\">\r\n                <ul class=\"nav nav-tabs\">\r\n                    <li *ngFor=\"let t of p.tabs\" [attr.role]=\"'presentation'\" [class.active]=\"p.activeTab==t\">\r\n                        <a (click)=\"selectTab(p, t)\">{{t.name}}</a>\r\n                    </li>   \r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n    </div>","import { Component } from '@angular/core';\nimport { IUIComponentRef, StudioSubjects, GroupDef, ContextMenuItem, ContextMenuItemTypes } from '../../common/objects/common';\nimport { PanelUpdatedData, PanelAction, IContentPanel, PanelSettings } from '../panel';\nimport { WCFService } from '../../common/services/wcf.service';\nimport { LabelService } from '../../common/services/label.service';\nimport { Observable, Subscription, Subject, of } from 'rxjs';\nimport { map} from \"rxjs/operators\";\n\nimport { PortalService } from '../../common/services/portal.service';\nimport { StudioStateService } from '../../common/services/studioStateService';\nimport { PageGroupingService } from '../../common/services/pageGrouping.service';\nimport { AlertService } from '../../alert/alert.service';\n\n@Component({\n    selector: 'csi-element-panel',\n    styleUrls: [`./elementPanel.component.less`],\n    templateUrl: './elementPanel.component.html'\n})\n\nexport class ElementPanelComponent implements IContentPanel {\n\n    public panelSettings: PanelSettings;\n\n    icon: string;\n    nameFilter: string;\n    draggable = false;\n    zone: string;\n\n    elementGroups: Observable<GroupDef[]>;\n    items: Observable<IUIComponentRef[]>;\n    get isItemSelectable() { return this.checkedSubj !== undefined; }\n    AllCheckedElements: { n: string, t: string }[] = [];\n    selectedItem: {name: string, type: string};\n    designerDropList: string[];\n    contextMenuItems: ContextMenuItem[] = [];\n    contextMenuEnabled: boolean;\n\n    private subjects: StudioSubjects;\n    private refreshSubs: Subscription;\n    private searchInputSubs: Subscription;\n    private dropAreaSubs: Subscription;\n    private dataSourceName: string;\n    private svc: string;\n    private oldViewMode: string;\n    private readonly dataSources = {\n        'Page': { svc: 'UIVirtualPageMaint', draggable: true, icon: 'fa-list-alt', zone: 'Pages', defaultView: 'tree' },\n        'Webpart': { svc: 'WebPartMaint', icon: 'fa-list-alt', draggable: true, zone: 'Webparts', defaultView: 'tree' },\n        'Pageflow': { svc: 'UIPageFlowMaint', icon: \"fa-cog\", defaultView: 'list' }\n    };\n    private expandedGroup: string[] = [];\n    private isNewAction: boolean = true;\n    private checkedSubj: Subject<{ n: string, t: string }[]>;\n\n    constructor(\n        private _alertService:AlertService,\n        private _wcf: WCFService,\n        private _portalService: PortalService,\n        private _studioState: StudioStateService,\n        private _labelService: LabelService,\n        private _pageGroupingService: PageGroupingService) {\n    }\n\n    public get viewMode(): string {\n        return this.panelSettings.viewMode;\n    }\n\n    // IContentPanel\n    init(s: PanelSettings, rootSubjects: StudioSubjects) {\n        this._studioState.checkedElements = [];\n        this.subjects = rootSubjects;\n        this.dataSourceName = s.dataSource;\n        if (s.parameters) {\n            if (s.parameters.checkedSubj !== undefined)\n                this.checkedSubj = s.parameters.checkedSubj;\n\n            if (s.parameters.newAction !== undefined)\n                this.isNewAction = s.parameters.newAction;\n        }\n\n        let ds = this.dataSources[this.dataSourceName];\n        if (ds) {\n            this.svc = ds.svc;\n            this.icon = ds.icon;\n            if (ds.draggable === true) {\n                this.draggable = true;\n                this.zone = ds.zone;\n            }\n            s.viewMode = ds.defaultView;\n        }\n        else {\n            console.error('data source ' + s.dataSource + ' is not found');\n        }\n\n        s.actions = this.initActions();\n        s.showSearch = true;\n        s.iconSrc = this.icon;\n\n        this.refreshSubs = s.refreshContent.subscribe(p => this.load());\n        s.refreshContent.next();\n\n        this.oldViewMode = s.viewMode;\n        this.panelSettings = s;\n\n        this.searchInputSubs = this.panelSettings.searchInput.subscribe(searchtext => {\n            if (!this.nameFilter && searchtext) {\n                // save old view mode \n                this.oldViewMode = this.panelSettings.viewMode;\n                // toggle to LIST mode\n                this.panelSettings.viewMode = 'list';\n            }\n            else if (this.nameFilter && !searchtext) {\n                // empty search text - toggle to old mode\n                this.panelSettings.viewMode = this.oldViewMode;\n                this.oldViewMode = '';\n            }\n            // \n            this.nameFilter = searchtext;\n        });\n\n        this.dropAreaSubs = this.subjects.dropAreas.subscribe((d:string[])=>{\n            this.designerDropList = d.filter(dp=> dp.startsWith(\"drop_wp_\"));\n        });\n\n        this.contextMenuEnabled = this.svc == \"UIVirtualPageMaint\" && !this.isItemSelectable;\n        return this.panelSettings;\n    }\n\n    // IContentPanel\n    destroy(subjects?: StudioSubjects): void {\n        this.refreshSubs.unsubscribe();\n        this.searchInputSubs.unsubscribe();\n        this.dropAreaSubs.unsubscribe();\n    }\n\n    private load(force = true) {\n        this.items = this._wcf.getElementRefs(this.svc, this.dataSourceName, force);\n\n        if (this.dataSourceName == \"Page\") {\n            this.elementGroups = this._pageGroupingService.getPageGroups(this.items);\n        }\n        else if (this.dataSourceName == \"Webpart\") {\n            let grps = this._pageGroupingService.getWebPartGroups();\n            let webPartControls = this._portalService.getWebPartsList();\n            grps.forEach((gw, i) => {\n                if (gw.groupKey == \"general\")\n                    gw.items = webPartControls.pipe(map(wa => wa.filter(w => w.name != \"CrystalWebPart\")));\n                else if (gw.groupKey == \"intelligence\")\n                    gw.items = webPartControls.pipe(map(wa => wa.filter(w => w.name == \"CrystalWebPart\")));\n                else\n                    gw.items = this.items;\n            });\n\n            this.elementGroups = of(grps);\n        }\n    }\n\n    private initActions(): PanelAction[] {\n        let listModeLabel = this._labelService.getLabel('PS_LIST_MODE', 'List mode');\n        let tileModeLabel = this._labelService.getLabel('PS_TILE_MODE', 'Tiles mode');\n        let detailModeLabel = this._labelService.getLabel('PS_DETAIL_MODE', 'Details mode');\n        let newLabel = this._labelService.getLabel('PS_NEW', 'New');\n        let treeModeLabel = this._labelService.getLabel('PS_TREE_MODE', 'Tree mode');\n\n        let res = this.isNewAction ? [<PanelAction>{ name: newLabel, imgClass: 'fa-plus-circle', svc: this.svc }] : [];\n\n        if (this.dataSourceName == \"Page\" || this.dataSourceName == \"Webpart\") {\n            res.push(\n                <PanelAction>{ name: treeModeLabel, imgClass: 'fa-outdent fa-lg', modeClass: 'tree' },\n                <PanelAction>{ name: listModeLabel, imgClass: 'fa-list', modeClass: 'list' }\n            );\n        }\n        else {\n            res.push(\n                <PanelAction>{ name: listModeLabel, imgClass: 'fa-list', modeClass: 'list' },\n                <PanelAction>{ name: tileModeLabel, imgClass: 'fa-th', modeClass: 'tiles' },\n                <PanelAction>{ name: detailModeLabel, imgClass: 'fa-list-ul', modeClass: 'detail' }\n            );\n        }\n        return res;\n    }\n\n    select(el: IUIComponentRef) {\n        // Disable select/open for non virtual elements (like custom web parts)\n        if(!this.isItemSelectable){\n            if (!el.isStatic) {\n                let cmd = new PanelUpdatedData();\n                cmd.elementRef = el;\n                cmd.open = true;\n                this.subjects.panel.next(cmd);\n            }\n        }\n    }\n\n    toggleGroup(g: GroupDef) {\n        g.isOpen = !g.isOpen;\n\n        if (g.isOpen)\n            this.expandedGroup.push(g.groupKey);\n        else\n            this.expandedGroup.splice(this.expandedGroup.indexOf(g.groupKey), 1);\n    }\n\n    checkElement(el: IUIComponentRef): void {\n        if (this.isItemSelectable) {\n            if(!el.isStatic){\n                this._studioState.checkElement(el, this.checkedSubj);\n            }\n        }\n        else{\n            // Select item\n            this.selectedItem = {name: el.name, type: el.type};\n            this._studioState.updatePropertyPanel(el);\n        }\n    }\n\n    isChecked(name: string, type: string): boolean {\n        return this._studioState.isChecked(name, type);\n    }\n\n    isSelected(el: IUIComponentRef) {\n \n       return this.selectedItem && (el.name == this.selectedItem.name && el.type == this.selectedItem.type);\n    }\n\n    checkAll(ev, doCheck: boolean) {\n        this._studioState.checkAll(this.AllCheckedElements, this.items, doCheck, this.checkedSubj);\n        (ev as Event).preventDefault();\n    }\n\n    buildMenu(dataType: string, data: string) {\n       this.contextMenuItems = this._pageGroupingService.getContextMenuItems(dataType, data);\n    }\n\n    contextMenuSelect(item: ContextMenuItem) {\n        switch (item.key) {\n            case \"remove\":\n                if(item.nameItem==\"All\"||item.nameItem==\"Undefined\"){\n                    this._alertService.error(\"Unable to remove system folder\");\n                    return;\n                }\n                this._pageGroupingService.removeGroup(item.nameItem);\n                break;\n            case \"restore\":\n                this._pageGroupingService.restoreSettings();\n                break;\n        }\n    }\n    \n\n    contextMenuToggle(item: ContextMenuItem){\n        if (item.type != ContextMenuItemTypes.selected) {\n            this._pageGroupingService.toggle(item);\n        } \n        else {    \n            this.contextMenuSelect(item)\n        }\n        this.panelSettings.refreshContent.next();\n    }\n}","<div class=\"csi-element-group\" [class.largerFont]=\"isItemSelectable\">\n    <div *ngIf=\"viewMode=='tree'; else listBlock\" [class]=\"viewMode\">\n        <div *ngFor=\"let g of elementGroups | async\" class=\"item\" [attr.expanded]=\"g.isOpen\" >\n            <div class=\"group-name\" (click)=\"toggleGroup(g)\" \n                    [context-popup-menu]=\"{disabled: !contextMenuEnabled, dataType: 'group', data: g.groupName, trigger: contextMenuTrigger, buildMenu: buildMenu, execContext:this }\">\n                <i [class]=\"g.isOpen?'arrow fa fa-caret-down':'arrow fa fa-caret-right'\" aria-hidden=\"true\"></i>\n                <i [class]=\"'icon fa '+ g.icon + (g.isOpen?'-open':'')\" aria-hidden=\"true\"></i>                            \n                <div class=\"caption-text\">{{g.groupName}}</div>\n                <div class=\"caption-count\" *ngIf=\"g.count\"> ({{g.count|async}})</div>\n            </div>\n            <div *ngIf=\"g.isOpen\" class=\"group-panel\">    \n                <div class=\"csi-selectable-item\" [title]=\"el.name\" *ngFor='let el of g.items | async' (dblclick)=\"select(el)\" (click)=\"checkElement(el)\"\n                        [csi-draggable]=\"{type: (el.type).toLowerCase() + '-ref', id: el.name, model: el}\" \n                        [context-popup-menu]=\"{disabled: !contextMenuEnabled, dataType: 'page', data: el.name, trigger: contextMenuTrigger, buildMenu: buildMenu, execContext:this }\"\n                        [class.selected-item]=\"isSelected(el)\">\n                    <div class=\"csi-noselect\">\n                        <input type=\"checkbox\" class=\"check-box\" *ngIf=\"isItemSelectable && !el.isStatic\" [checked]=\"isChecked(el.name,el.type)\">\n                        <span>\n                            <i class=\"fa {{icon}}\" [class.static]=\"el.isStatic\"></i>\n                            <i class=\"in-development fa fa-pencil\" *ngIf=\"el.isInDeveloping\"></i>\n                        {{el.name}}\n                        </span>\n                    </div>\n                </div>   \n            </div>\n        </div>  \n    </div>  \n    <div class=\"checkButtons\" *ngIf=\"isItemSelectable\">\n        <button (click)=\"checkAll($event, true)\">Check All</button>\n        <button (click)=\"checkAll($event, false)\">Uncheck All</button>\n    </div>\n</div>\n\n<ng-template #listBlock>\n    <div *ngIf=\"viewMode=='list'|| viewMode=='detail'\" [class]=\"viewMode\" >\n        <div class=\"csi-selectable-item\" [title]=\"el.name\" *ngFor='let el of items | async | elementFilter:nameFilter' (dblclick)=\"select(el)\" (click)=\"checkElement(el)\"\n                [class.selected-item]=\"isSelected(el)\"    \n                [context-popup-menu]=\"{disabled: !contextMenuEnabled, dataType: 'page', data: el.name, trigger: contextMenuTrigger, buildMenu: buildMenu, execContext:this }\"\n                [csi-draggable]=\"{type:  (el.type).toLowerCase() + '-ref', id: el.name, model: el}\" >\n            <div class=\"csi-noselect\">\n                <input type=\"checkbox\" *ngIf=\"isItemSelectable\" class=\"check-box\" [checked]=\"isChecked(el.name,el.type)\" [name]=\"'chk'+el.name\">\n                <span>\n                    <i class=\"fa {{icon}}\" [class.static]=\"el.isStatic\"></i>\n                    <i class=\"in-development fa fa-pencil\" *ngIf=\"el.isInDeveloping\"></i>\n                    {{el.name}}\n                </span>\n                <span [title]=\"el.description\" *ngIf=\"viewMode=='detail'\">{{ el.description }}</span>\n            </div>\n        </div>   \n    </div>   \n\n    <div *ngIf=\"viewMode=='tiles'\" [class]=\"viewMode\">\n        <ul>\n            <li class=\"tile\" [title]=\"el.name\" *ngFor='let el of items | async | elementFilter:nameFilter' (dblclick)=\"select(el)\" \n                [class.selected-item]=\"isSelected(el)\"  (click)=\"checkElement(el)\">\n                <div class=\"icon-area\">\n                    <input type=\"checkbox\" *ngIf=\"isItemSelectable\" class=\"check-box\" [checked]=\"isChecked(el.name,el.type)\">\n                    <i class=\"fa fa-2x {{icon}}\"></i>\n                </div>\n                <div class=\"tile-text\">{{el.name}}</div>\n            </li>\n        </ul>\n    </div>      \n</ng-template>\n\n<div #contextMenuTrigger=\"matMenuTrigger\" [matMenuTriggerFor]=\"itemContextMenu\">\n    <mat-menu #itemContextMenu=\"matMenu\">\n        <ng-template matMenuContent>\n            <div class=\"menu-{{cm.type}} line-pos-{{cm.linePos}}\" *ngFor=\"let cm of contextMenuItems\">\r\n                <mat-checkbox [key]=\"cm.key\" [context-add-group]=\"cm.nameItem\" [checked]=\"cm.checked\" (change)=\"contextMenuToggle(cm)\">{{cm.text}}</mat-checkbox>\r\n            </div>\n        </ng-template>\n    </mat-menu>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { PortalService } from '../../common/services/portal.service';\nimport { FieldDirectoryBase, OMTypeDescriptor } from '../../common/objects/fieldDirectoryBase';\nimport { IControl, StudioSubjects } from '../../common/objects/common';\nimport { PanelSettings, IContentPanel } from '../panel';\nimport { StudioStateService } from '../../common/services/studioStateService';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: 'csi-field-directory',\n    styleUrls: ['./fieldDirectory.component.less'],\n    templateUrl: 'fieldDirectory.component.html'\n})\n\nexport class FieldDirectoryComponent extends FieldDirectoryBase implements IContentPanel, OnInit, OnDestroy{\n\n    settings: PanelSettings;\n    controls: IControl[] = [];\n    errorMessage: any;\n    designerDropList : string[];\n    private dropAreasSubs : Subscription;\n\n    constructor(portal: PortalService, private _studioService: StudioStateService ) {\n        super(portal, _studioService);\n        this.dropAreasSubs = this._studioService.subjects.dropAreas.subscribe(d=> {\n            this.designerDropList = d.filter(dp=> dp.startsWith(\"drop_ctl_\"));\n        });\n    }\n\n    ngOnInit() {\n        this.loadServices();\n    }\n\n    ngOnDestroy(){\n        if( this.dropAreasSubs)\n            this.dropAreasSubs.unsubscribe();\n    }\n\n\n    init(s: PanelSettings, subjects: StudioSubjects) {\n        s.actions = [];\n        s.showSearch = false;\n        s.showActions = false;\n        s.iconSrc = \"fa-tasks\";\n        this.settings = s;\n        this.subjects = subjects;\n        return this.settings;\n    }\n\n    dragStart(dragData: OMTypeDescriptor) {\n\n        dragData.addDragData();\n        // find the control with same type. Can be used as dragging helper\n        //let ctl = _.find(this.controls, c => c.type === dragData.type);\n    }\n}\n\n","<div class=\"title\" (click)=\"togglePanels(false)\">\n    <i class=\"fa\" [ngClass]=\"!parametricPanel?'fa-caret-down':'fa-caret-right'\" aria-hidden=\"true\"></i>\n    <span class=services>Services</span>\n</div>\n<div class=\"csi-typeahead-area\" *ngIf=\"!parametricPanel\">\n    <input type=\"text\" [(ngModel)]=\"search\" placeholder=\"Search\">\n    <span class=\"relative-mode\" [class.relative]=\"relativeMode\" (click)=\"relativeMode=!relativeMode\">R</span>\n    <span class=\"refresh-btn\">\n        <i class=\"fa fa-refresh\" aria-hidden=\"true\" (click)='loadServices(true);'></i>\n    </span>\n</div>\n<div class=\"service-list\" *ngIf=\"!parametricPanel\">\n    <div *ngFor=\"let item of (list | fieldDirectorySearchFilter : search); index as i\" class=item-row [style.paddingLeft]=\"item._padding\"\n        [class.hidden]=\"item._hidden\" [class.drag]=\"item._draggable\" [attr.path]=\"i\">\n        <span class=expander [class.hidden]=\"!item.IsExpand\" (click)=\"toggle(item)\">\n            <i class=\"fa\" [ngClass]=\"item._expanded?'fa-caret-down':'fa-caret-right'\" aria-hidden=\"true\"></i>\n        </span>\n        <div (click)=\"select(item)\" [class.selected]=\"item._selected\" class=text [ngClass]=\"item._imageClass\" [attr.title]=\"item.Metadata.Description\"\n        [csi-draggable]=\"{disabled: !item._draggable,type: 'control-field', id: item.Name, model: item}\">{{item.Name}}</div>\n    </div>\n</div>\n\n<div class=\"title\" (click)=\"togglePanels(true)\">\n    <i class=\"fa\" [ngClass]=\"parametricPanel?'fa-caret-down':'fa-caret-right'\" aria-hidden=\"true\"></i>\n    <span class=parametric>Parametric Data</span>\n</div>\n<div class=\"csi-typeahead-area\" *ngIf=\"parametricPanel\">\n    <input type=\"text\" [value]=\"pdsearch\" placeholder=\"Search\">\n    <span class=\"relative-mode\" [class.relative]=\"relativeMode\" (click)=\"relativeMode=!relativeMode\">R</span>\n    <span class=\"refresh-btn\">\n        <i class=\"fa fa-refresh\" aria-hidden=\"true\" (click)='loadParamtericData(true);'></i>\n    </span>    \n</div>\n<div class=\"parametric-data-list\" *ngIf=\"parametricPanel\">\n    <div *ngFor=\"let item of (pdlist | fieldDirectorySearchFilter : pdsearch)\" class=item-row [style.paddingLeft]=\"item._padding\"\n        [class.hidden]=\"item._hidden\">\n        <span class=expander [class.hidden]=\"!item.IsExpand\" (click)=\"toggle(item)\">\n            <i class=\"fa\" [ngClass]=\"item._expanded?'fa-caret-down':'fa-caret-right'\" aria-hidden=\"true\"></i>\n        </span>\n        <div class=text [ngClass]=\"item._imageClass\" [attr.title]=\"item.Metadata.Description\" [csi-draggable]=\"{disabled: !item._draggable,type: 'control-field', id: item.Name, model: item}\">{{item.Name}}</div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { IUIComponentRef, StudioSubjects, IResultStatus } from '../../common/objects/common';\nimport { PanelAction, IContentPanel, PanelSettings, PanelUpdatedData } from '../panel';\nimport { WCFService } from '../../common/services/wcf.service';\nimport { PortalService } from '../../common/services/portal.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'csi-portal-object-panel',\n    styleUrls: ['./portalObjectPanel.component.less'],\n    template: `\n    <div class=\"csi-object-panel {{ viewMode }}\">\n        <div *ngIf=\"viewMode == 'list'\">\n            <div class=\"csi-selectable-item\" [title]=\"el.name\" *ngFor=\"let el of (elements|elementFilter:nameFilter)\" \n                    (dblclick)=\"selectOpen(el)\" (click)=\"select(el)\" [class.selected-item]=\"isSelected(el)\">\n                <div class=\"csi-noselect\">\n                    <span><i class=\"fa {{icon}}\"></i>{{el.name}}</span>                \n                </div>\n            </div>\n        </div>\n        <div class=\"portalObj-container\" *ngIf=\"viewMode == 'tiles'\">\n            <ul>\n                <li class=\"portalObj-tile\" *ngFor='let el of (elements | elementFilter:nameFilter)' \n                    (dblclick)=\"selectOpen(el)\" (click)=\"select(el)\" [attr.title]=\"el.name\" [class.selected-item]=\"isSelected(el)\">\n                    <i class=\"fa fa-2x {{icon}}\"></i>\n                    <div class=\"tile-text\" >{{el.name}}</div>                    \n                </li>\n            </ul>\n        </div>\n        \n        <div class=\"portalObj-container\" *ngIf=\"viewMode == 'detail'\">\n            <div class=\"col-captions\">\n                <div class=\"col-img\"> </div>\n                <div class=\"col-name\">{{'Name' | label: 'PS_NAMELBL'}}</div>\n                <div class=\"col-description\">{{'Description' | label: 'PS_DESCRIPTIONLBL'}}</div>\n            </div>\n            <div class=\"detail-items\">\n                <div *ngFor=\"let el of (elements|elementFilter:nameFilter)\" [title]=\"el.name\" class=\"csi-selectable-item portalObj-detail-item\" \n                        (dblclick)=\"selectOpen(el)\" (click)=\"select(el)\" [class.selected-item]=\"isSelected(el)\">\n                    <div class=\"col-img\"><i class=\"fa {{icon}}\"></i></div>\n                    <div class=\"col-name\">{{el.name}}</div>\n                    <div class=\"col-description\">{{el.description}}</div>\n                </div>\n            </div>\n        </div>\n    </div>`\n})\n\nexport class PortalObjectPanelComponent implements IContentPanel, OnInit {\n\n    settings: PanelSettings;\n\n    elements: IUIComponentRef[] = [];\n\n    errorMessage: any;\n    nameFilter: string;\n    selectedItem: {name: string, type: string};\n\n    dataSources = {\n        'menu': { svc: 'PortalMenuDefinitionMaint', icon: 'fa-list-alt' },\n        'tab': { svc: 'PortalTabMaint', icon: 'fa-folder-o' },\n        'action': { svc: 'ActionMaint', icon: \"fa-cog\" },\n        'actionCategory': { svc: 'ActionCategoryMaint', icon: \"fa-share-alt\" },\n        'actionRule': { svc: 'ActionRuleMaint', icon: \"fa-exchange\" },\n        'pageMap': { svc: '*pageMap', icon: \"fa-exchange\" },\n        'targetMatrix': { svc: '*targetMatrix', icon: \"fa-exchange\" }\n    };\n\n    icon: string;\n    svc: string;\n    private subjects: StudioSubjects;\n\n    constructor(private _wcfService: WCFService, private _portalService: PortalService) {\n    }\n\n    get viewMode(): string {\n        return this.settings.viewMode || \"list\";\n    }\n\n    init(s: PanelSettings, rootSubjects: StudioSubjects) {\n        this.subjects = rootSubjects;\n        let ds = this.dataSources[s.dataSource];\n        if (ds) {\n            this.svc = ds.svc;\n            this.icon = ds.icon;\n        }\n        else {\n            console.error('data source ' + s.dataSource + ' is not found');\n        }\n\n        s.actions = [\n            <PanelAction>{ name: 'New', imgClass: 'fa-plus-circle', svc: this.svc },\n            <PanelAction>{ name: 'List mode', imgClass: 'fa-list', modeClass: 'list' },\n            <PanelAction>{ name: 'Tiles mode', imgClass: 'fa-th', modeClass: 'tiles' },\n            <PanelAction>{ name: 'Details mode', imgClass: 'fa-list-ul', modeClass: 'detail' }\n        ];\n        s.showSearch = true;\n        s.iconSrc = this.icon;\n        s.refreshContent.subscribe(p => this.load(true));\n        this.settings = s;\n\n        return this.settings;\n    }\n\n    ngOnInit() {\n        this.load();\n    }\n    \n    load(forceReload: boolean = false): void {\n        let observable: Observable<IUIComponentRef[] | IResultStatus>;\n        if (this.svc[0] != '*') {\n            observable = this._wcfService.getElementRefs(this.svc, this.settings.dataSource, forceReload);\n        }\n        else if (this.settings.dataSource == \"pageMap\")\n            observable = this._portalService.getPageMaps();\n        else if (this.settings.dataSource == \"targetMatrix\")\n            observable = this._portalService.getTargetMatrices();\n\n        if (observable)\n            observable.subscribe(\n                (elements : IUIComponentRef[]) => {\n                    this.elements = elements;\n                    this.settings.searchInput.subscribe(searchtext => this.nameFilter = searchtext);\n                },\n                error => this.errorMessage = <any>error);\n    }\n\n    selectOpen(el: IUIComponentRef) {\n        let cmd = new PanelUpdatedData();\n        cmd.elementRef = el;\n        cmd.open = true;\n        cmd.action = new PanelAction();\n        cmd.action.svc = this.svc;\n        this.subjects.panel.next(cmd);\n    }\n\n    isSelected(el: IUIComponentRef){\n        return this.selectedItem && (el.name == this.selectedItem.name && el.type == this.selectedItem.type);\n    }\n\n    select(el: IUIComponentRef){\n        //this.selectedItem = {name : el.name, type: el.type};\n        //this.subjects.propertyPanel.next(el);\n    }\n}\n","import {Injectable, Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'elementFilter'\n})\n@Injectable()\nexport class ElementFilter implements PipeTransform {\n    transform(elements: any[], filter: string): any[] {\n        if (!elements || (elements && elements.length==0))\n            return elements;       \n                             \n        if (filter !== undefined){\n            const re = filter.toLowerCase();\n            return elements.filter( it => it.name && it.name.toLowerCase().indexOf(re)!=-1);\n        }\n        return elements;\n    }\n}","import {Injectable, Pipe, PipeTransform} from '@angular/core';\r\nimport { OMTypeDescriptor } from '../../common/objects/fieldDirectoryBase';\r\n\r\n@Pipe({\r\n    name: 'fieldDirectorySearchFilter',\r\n    pure: false\r\n})\r\n\r\n@Injectable()\r\nexport class FieldDirectorySearchFilter implements PipeTransform {\r\n\r\n    constructor() {\r\n    }\r\n\r\n    transform(inp: OMTypeDescriptor[], search: string): OMTypeDescriptor[] {\r\n\r\n        let res: OMTypeDescriptor[] = [];\r\n        let includedNested: boolean = false;\r\n        search = search.toLowerCase();\r\n\r\n        if (search) {\r\n\r\n            inp.forEach(it => {\r\n                if (it._nesting == 0 && it.Name.toLowerCase().indexOf(search) != -1) {\r\n                    // service included \r\n                    res.push(it);\r\n\r\n                    // include all nested items\r\n                    includedNested = true;\r\n                }\r\n                else {\r\n                    if (includedNested) {\r\n                        if (it._nesting > 0) {\r\n                            res.push(it);\r\n                        }\r\n                        else {\r\n                            includedNested = false;\r\n                        }\r\n                    }\r\n                } \r\n            });\r\n        }\r\n        else {\r\n            res = inp;\r\n        }\r\n        return res;\r\n    }\r\n}\r\n","import { Component, Input, OnInit, OnChanges, Type, Output, EventEmitter } from '@angular/core';\n\nimport { ValueUpdatedData, PropertyRef } from '../../common/objects/common';\nimport { MetadataService } from '../../common/services/metadata.service';\nimport { IPropertyMetadata } from '../../common/objects/viewModel';\nimport { RecordCommand, PropertyHistoryData } from '../../common/objects/historyLog';\n\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { ModalContainerComponent } from './valueEditors/modalContainer';\nimport { ModalCollectionComponent } from './valueEditors/modalCollection';\nimport { ModalObjectComponent } from './valueEditors/modalObject';\nimport { ModalPropertiesContext } from './properties';\nimport { LabelSearchComponent } from './valueEditors/labelSearch';\nimport { EditConditionComponent } from './propertyConditions/editCondition';\nimport { PropertyConditionsComponent } from './propertyConditions/propertyCondition';\nimport { InitiatorComponent } from './propertyConditions/initiator';\nimport { Subject } from 'rxjs';\nimport {debounceTime} from \"rxjs/operators\";\nimport _ from 'lodash';\nimport { StudioStateService } from '../../common/services/studioStateService';\n\n@Component({\n    selector: 'csi-name-value',\n    styles:[`\n        .csi-name-value {\n            display: flex;\n            margin-left: 4px;\n            margin-right: 4px;\n        }\n        .csi-name-value.disabled{\n            color: #808080e8;\n            pointer-events:none;\n        }\n        .csi-name-value.wide .csi-property-label {             \n            text-overflow: clip;\n            flex-basis: 10%;\n        }\n\n        .csi-name-value.wide .csi-value-editor {\n            flex-basis: 90%;\n        }\n\n        .csi-property-hasValue {\n            flex: 0 0 16px;\n            max-width: 16px;\n            min-width: 16px;\n            color: #AFD7E1;\n            margin-top: 4px;\n        }\n        .csi-label-editor{\n            flex: 1 1;\n            display: flex;\n        }\n\n        .csi-property-label {\n            flex-basis: 50%;\n            max-width: 300px;\n            text-overflow: ellipsis;\n            overflow-x: hidden;\n            padding: 4px;\n            user-select: none;\n            -ms-user-select: none;\n        }\n\n        .csi-property-label.favorite {\n            color: #1676a0;\n        }\n\n        .csi-value-editor {\n            flex-basis: 50%;\n            color: #000000;\n            margin-left: 4px;\n            padding-right: 5px;\n            user-select: text;\n        }\n\n        .csi-value-editor[readonly] {\n            color: #5A5A5A;\n            user-select: text;\n        }       \n\n        .popup {\n            text-align: right;    \n        }\n\n        .property-modal-btn {\n            width: 25px;\n            display: inline-block;\n            cursor: pointer;\n            border: 1px solid #dcdcdc;\n            padding: 1px 1px 1px 2px;\n            vertical-align: middle;\n            text-align: center;\n        }        \n\n        /* Row mode */\n        .row-mode .csi-label-editor{\n            flex-direction: column;\n        }\n\n        .row-mode .csi-property-hasValue{\n            display:none;\n        }\n            \n        .row-mode .csi-property-label{\n            flex-basis: auto;\n            max-width: none;\n        }            \n        \n        .row-mode .csi-property-label[title=\"Initiators\"]{\n            color: transparent;\n        }\n\n        .row-mode .csi-value-editor{\n            flex-basis: auto;\n            margin-left: 0;\n        }\n            \n        .row-mode .csi-name-value{\n            flex-direction: column;\n        }\n\n        .row-mode .property-modal-btn-initiators  {\n            display: inline-block;\n            cursor: pointer;\n            vertical-align: middle;\n            width: 100px;\n            background-color: gray;\n            border: solid black 1px;\n            border-radius: 2px;\n            color: white;\n            padding: 1px 10px 1px 10px;\n            white-space:nowrap;\n        }        \n        .hidden {\n            display: none;\n        }\n    }\n    `],\n    templateUrl: 'nameValue.html'\n})\n\nexport class NameValueComponent implements OnInit, OnChanges {\n    @Input(\"property\") __property: any; \n    @Input() instance: any;\n    @Input() valueUpdated: Subject<ValueUpdatedData>;\n    @Input() rowMode: boolean = false;\n\n    @Output() displayDescription: EventEmitter<PropertyRef> = new EventEmitter<PropertyRef>(true); // async\n    @Output() setFavorite = new EventEmitter<IPropertyMetadata>(true);\n\n    constructor(private _metadataService: MetadataService, private _dialog: MatDialog, private _studioStateService : StudioStateService) { }\n\n    get property(): IPropertyMetadata { return this.__property; }\n\n    resizeClass: string;\n    get editorName(): string { \n        if( this.property && this.property.editor && this.property.editor.directive !== this._oldDirective)\n            this.fixEditor();\n        return this._editorName;\n    }\n\n    get hasValue(): boolean {return !this.isEmpty(this.property.value)};\n    get label() : string {return this.property.displayedName || this.property.name};\n    get disabled(){\n        return this.property.readOnly && this.property.name === \"Display\";\n    };\n\n    propCondInitiators = false;\n    counter: number = 0;\n\n    valueChanged = new Subject<ValueUpdatedData>();\n    openWizard = new Subject<any>();\n    inputResized = new Subject<boolean>();\n\n    modalButtonCaption: string = \" . . . \";\n    modalButtonClass: string = \"property-modal-btn\";\n\n    private _editorName: string;\n    private _oldDirective : string;\n\n    ngOnInit() {\n        this.fixEditor();\n\n        this.valueChanged.pipe(debounceTime(500)).subscribe(v => {\n            let oldHistoryValue: any;\n            if (this.instance.properties || this.instance.__unbound) {\n                oldHistoryValue = {};\n                oldHistoryValue[this.property.name] = _.cloneDeep(this.property.value);\n            }\n            if (oldHistoryValue) {\n                let newValue = {};\n                newValue[this.property.name] = _.cloneDeep(v.val);\n                this.recordPropertyHistory(this.instance, this.property.name, oldHistoryValue, newValue);\n            }\n            this.valueUpdated.next(v);\n        });\n\n        this.inputResized.subscribe(expanded => this.resizeClass = expanded ? 'wide' : '');\n\n        this.openWizard.subscribe(w => this.openModal());\n    }\n\n    ngOnChanges(ch) {\n        if (_.isArray(this.property.value))\n            this.counter = this.property.value.length;\n        else\n            this.counter = 0;\n\n        this.fixEditor();\n    }\n\n    onSelectProperty() {\n        let propertyDescr: PropertyRef = {\n            name: this.property.name,\n            displayedName: this.property.displayedName            \n        };\n    \n        this.displayDescription.emit(propertyDescr);\n    }\n\n    private fixEditor() {\n\n        if (!this.property.editor) {\n            let type = this.property.originalTypeName ? this.property.originalTypeName.toLowerCase() : null;\n            if (type) {\n                if (type == 'boolean')\n                    this.property.editor = { directive: 'switchBox' };\n                else if (type == 'string')\n                    this.property.editor = { directive: 'text' };\n                else if (type.indexOf('[]') != -1)\n                    this.property.editor = { directive: 'collection' };\n                else\n                    this.property.editor = { directive: 'object' };\n            }\n            else\n                this.property.editor = { directive: 'unknown' };\n        }\n\n        if (this.property.editor.directive == \"enum\" && !this.property.editor.provider) {\n            this.property.editor.provider = \"enum\";\n        }\n\n        if (this.property.editor && this.property.editor.directive) {\n            this._editorName = this.property.editor.directive;\n            if (this._editorName == \"boolean\")\n                this._editorName = 'switchBox';\n            else if (this._editorName == \"object\" ||\n                this._editorName == \"collection\")\n                this._editorName = \"modal\";\n            else if (this._editorName == \"enum\")\n                this._editorName = \"selector\";\n        }\n\n        this._oldDirective = this.property.editor.directive;\n        \n        if(this.rowMode && this.property.editor && this.property.editor.provider == 'propertyConditionInitiators'){\n            this.modalButtonCaption = `${this.label}[${this.counter}] . . . `;\n            this.modalButtonClass = \"property-modal-btn-initiators\";\n        }\n        else{\n            this.modalButtonCaption = \" . . . \";\n            this.modalButtonClass = \"property-modal-btn\";\n        }\n\n    }\n\n    openModal() {\n        let context: ModalPropertiesContext = {\n            property: this.property,\n            metadataService: this._metadataService,\n            value: _.cloneDeep(this.property.value),\n            instance: this.instance,\n            instanceType: this.instance.typeName || this.instance.__type\n        };\n\n        let comp: Type<any>;\n        let dialogOptions: MatDialogConfig = { disableClose: true };\n        switch (this.property.editor.directive) {\n            case \"collection\":\n                if (this.rowMode && this.property.editor.provider === 'propertyConditionInitiators') {\n                    comp = InitiatorComponent;\n                    dialogOptions = { disableClose: true, height: '600px', width: '800px' }\n                }\n                else {\n                    comp = ModalCollectionComponent;\n                }\n                break;\n            case \"object\":\n                comp = ModalObjectComponent;\n                break;\n            case \"modal\":\n            case \"text\":\n                if(this.property.editor.provider == \"targetMatrixRows\" )\n                    dialogOptions = { disableClose: true, height: '550px', width: '700px' };\n                comp = ModalContainerComponent;\n                break;\n            case \"labelLookup\":\n                comp = LabelSearchComponent;\n                break;\n            case \"expression\":\n                comp = EditConditionComponent;\n                dialogOptions = { disableClose: true, height: '600px', width: '950px' }\n                break;\n            case \"propertyCondition\":\n                comp = PropertyConditionsComponent;\n                dialogOptions = { disableClose: true, height: '600px', width: '800px' }\n                break;\n            case \"propertyConditionInitiators\":\n                break;\n        }\n\n        if (comp) {\n            let dial = this._dialog.open(comp,  dialogOptions);\n            dial.componentInstance.initContext(context);\n            dial.afterClosed().subscribe(result => {\n               if (result || this.property.name===\"HTMLText\")\n                    this.valueChanged.next(new ValueUpdatedData(this.property.name, result));\n           });\n        }\n    }\n\n    modalEditor(editor): string {\n        if (editor === \"modal\" || editor === \"propertyCondition\" || editor === \"expression\")\n            return editor;\n        return null;\n    }\n\n    private isEmpty(v: any): boolean {\n        if (this.property.originalTypeName.toLowerCase() == 'boolean')\n            return !(v === true || v === false);\n        if (_.isNumber(v))\n            return false;\n        return _.isEmpty(v);\n    }\n\n    private recordPropertyHistory(instance: any, path: string, oldValue: any, newValue: any) {\n        let c = new PropertyHistoryData(instance, path, oldValue, newValue, false);\n        this._studioStateService.writeHistory(RecordCommand.propertyChange, c);\n    }\n\n    toggleFavorite(ctrl: boolean) {\n        if (ctrl) {\n            this.property.favorite = !this.property.favorite;\n            this.setFavorite.emit(this.property);\n        }\n    }\n\n}","<div class=\"csi-name-value\" [ngClass]=\"resizeClass\" [class.disabled]=\"disabled\" [class.row-mode]=\"rowMode\" [class.hidden]=\"property.hidden\" (click)=\"onSelectProperty()\">\r\n\r\n    <div class=\"csi-property-hasValue\" [style.box-shadow]=\"property['__wscolor']\">\r\n        <span [hidden]=\"!hasValue\"><i class=\"fa fa-check\" aria-hidden=\"true\"></i></span>\r\n    </div>\r\n\r\n    <div class=\"csi-label-editor\">\r\n        <div class=\"csi-property-label\" title=\"{{label}}\" [class.favorite]=\"property.favorite\"\r\n            (click)=\"toggleFavorite($event.ctrlKey)\" >{{label}}</div>\r\n        \r\n        <div class=\"csi-value-editor\" [ngSwitch]=\"editorName\">\r\n            <div *ngSwitchCase=\"'switchBox'\">\r\n                <csi-editor-switchbox [property]=\"property\" [valueChanged]=\"valueChanged\"></csi-editor-switchbox>\r\n            </div>\r\n            <div *ngSwitchCase=\"'text'\">\r\n                <csi-editor-text [property]=\"property\" [value]=\"property.value\" [valueChanged]=\"valueChanged\"\r\n                                [resized]=\"inputResized\" [wizardDialog]=\"openWizard\">\r\n                </csi-editor-text>\r\n            </div>\r\n            <div *ngSwitchCase=\"modalEditor(editorName)\" class=\"popup\">\r\n                <span [class]=\"modalButtonClass\" (click)=\"openModal()\" title=\"{{label}}\">{{modalButtonCaption}}</span>\r\n            </div>\r\n            <div *ngSwitchCase=\"'labelLookup'\" class=\"popup\">\r\n                <csi-editor-text [property]=\"property\" [value]=\"property.value ? property.value : ''\" [valueChanged]=\"valueChanged\" [resized]=\"inputResized\" [wizardDialog]=\"openWizard\"></csi-editor-text>\r\n            </div>\r\n            <div *ngSwitchCase=\"'selector'\">\r\n                <csi-editor-selector [property]=\"property\" [value]=\"property.value\"\r\n                            [items]=\"property.editor?.selectableItems\"\r\n                            [valueChanged]=\"valueChanged\" [resized]=\"inputResized\"></csi-editor-selector>\r\n            </div>\r\n            <div *ngSwitchDefault>\r\n                <span class=\"bg-warning\">{{property.editor.directive}} not implemented.</span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { MetadataService } from '../../common/services/metadata.service';\nimport { IPropertyMetadata} from '../../common/objects/viewModel';\nimport { ILabel } from '../../common/objects/common';\n\nexport class ModalPropertiesContext {\n    property: IPropertyMetadata;\n    metadataService: MetadataService;\n    value: any;\n    title?: string;\n    hideTypeName?: boolean;\n    disableAdding?: boolean = false;\n    instance?: any;\n    instanceType?: string;\n    beforeClose?: (ok:boolean) => boolean;\n    duplicationErrorLabel?: ILabel;\n}","import {Injectable, Pipe, PipeTransform} from '@angular/core';\r\nimport { IPropertyMetadata } from '../../common/objects/viewModel';\r\nimport { Group, ViewTabs } from './propertyList';\r\n\r\n@Pipe({\r\n    name: 'propertyFilter'\r\n})\r\n\r\n@Injectable()\r\nexport class PropertyFilter implements PipeTransform {\r\n\r\n    transform(inp: IPropertyMetadata[] | Group[], complexFilter: any): IPropertyMetadata[] | Group[] {\r\n\r\n        let prm: { groupMode: boolean, group: Group, search: string, tab: ViewTabs, favorites: string[] } = complexFilter;\r\n        if (inp) {\r\n            if (!prm.groupMode) {\r\n                let filtered: IPropertyMetadata[] =\r\n                    (<IPropertyMetadata[]>inp)\r\n                        .filter(p2 => {\r\n                            if (prm.tab == ViewTabs.favorites)\r\n                                return prm.favorites ? prm.favorites.findIndex(fp => fp == p2.name.toLowerCase()) != -1 : false;\r\n\r\n                            else if (prm.tab == ViewTabs.grouped) \r\n                                return p2.category.toLowerCase() == prm.group.category.name;\r\n\r\n                            else if (prm.tab == ViewTabs.sorted) \r\n                                return true;                            \r\n                        })\r\n                        .filter(p3 => prm.search ? (p3.displayedName || p3.name).toLowerCase().indexOf(prm.search) != -1 : true);\r\n\r\n                return filtered;\r\n            }\r\n            else {\r\n                let ng = (<Group[]>inp).filter(g =>\r\n                    (prm.tab == ViewTabs.favorites || prm.tab == ViewTabs.sorted) ?\r\n                        g.category.name == \"favorites\" :\r\n                        g.category.name != \"favorites\");\r\n                if(ng.every(gs => !gs.expanded) ){\r\n                    // expand first group if no one expanded\r\n                    if( ng.length )\r\n                        ng[0].expanded = true;\r\n                }\r\n                return ng;\r\n            }\r\n        }\r\n        return inp;\r\n    }\r\n}","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { StudioSubjects } from '../../../common/objects/common';\r\nimport { SetDataValueItem  } from '../../../common/objects/viewModel';\r\n\r\n@Component({\r\n    selector: 'csi-condition',\r\n    styles:[`\r\n\r\n    :host {\r\n        display: flex;\r\n        flex-direction: column;\r\n        flex: 1 1;\r\n    }\r\n\r\n    .csi-condition {\r\n        display: flex;\r\n        flex-direction: column;\r\n        flex: 1 1 auto;\r\n    }\r\n    .csi-condition .control-row {\r\n        display: flex;\r\n        justify-content: flex-start;\r\n    }\r\n    \r\n    .csi-condition .control-group {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-self: center;\r\n        justify-content: center;\r\n        height: 100%;\r\n        padding: 5px 10px;\r\n    }\r\n\r\n    .csi-condition .control-group label {\r\n        margin: 0px;\r\n        font-weight: normal;\r\n    }\r\n    \r\n    .csi-condition .control-group span {\r\n        align-self: flex-start;\r\n    }    \r\n\r\n    .csi-condition select {\r\n        min-width: 140px;\r\n    }\r\n  \r\n    `],\r\n    template: `<csi-panel [component]=\"'csi-property-list'\" [subjects]=\"subjects\" [dataSource]=\"'propertyCondition'\"></csi-panel>`\r\n})\r\n\r\nexport class ConditionComponent {\r\n    @Input() valueItem: SetDataValueItem;\r\n    @Output() onValueChanged = new EventEmitter<any>();\r\n\r\n    subjects: StudioSubjects;\r\n\r\n    constructor() {\r\n        this.subjects = new StudioSubjects();\r\n        this.subjects.panel.subscribe(p => {\r\n            if (!this.valueItem)\r\n                this.valueItem = new SetDataValueItem();\r\n            this.subjects.propertyPanel.next(this.valueItem);\r\n        });\r\n\r\n        this.subjects.property.subscribe(n => {\r\n            this.subjects.propertyPanel.next(this.valueItem);\r\n            this.onValueChanged.emit(this.valueItem);\r\n        });\r\n    }\r\n}\r\n\r\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { MetadataService } from '../../../common/services/metadata.service';\r\nimport { ConditionExpression, SetDataValueItem, PropertyConditionExpression, InitiatorDefinition, IMetadataEnumValue } from '../../../common/objects/viewModel';\r\n\r\n@Component({\r\n    selector: 'csi-condition-display',\r\n    styles:[\r\n        `.csi-condition-display {\r\n            display: flex;\r\n            flex-direction: column;\r\n            margin-left: 20px;\r\n        }\r\n        .csi-condition-display > .line {\r\n              display: inline-flex;\r\n        }          \r\n        .csi-condition-display > [indent=\"1\"].line { margin-left: 20px; }\r\n        .csi-condition-display > [indent=\"2\"].line { margin-left: 40px; }\r\n        \r\n        .csi-condition-display > .line > [bold=\"true\"].item {\r\n            font-weight: bold;\r\n        }\r\n        .csi-condition-display > .line > [link=\"true\"].item {\r\n            text-decoration: underline;\r\n            color: blue;\r\n            cursor: pointer;\r\n        }\r\n        `\r\n    ],\r\n    template: \r\n    `<div class=\"csi-condition-display\">\r\n        <div class=\"line\" [attr.indent]=\"l.indent\" *ngFor=\"let l of lines\">\r\n            <div class=\"item\" [attr.bold]=\"it.isBold\" [attr.link]=\"it.isLink\" *ngFor=\"let it of l.items\" (click)=\"editCondition(it)\" >{{it.text}}&nbsp;</div>\r\n        </div>\r\n    </div>`\r\n})\r\n\r\nexport class ConditionDisplayComponent implements OnInit {\r\n    @Input() condition: PropertyConditionExpression;\r\n    @Output() onEditCondition = new EventEmitter<any>();\r\n\r\n    lines: line[] = [];\r\n    conditionComparisonEnum: IMetadataEnumValue[];\r\n    dataMemberConnectionTypeEnum: IMetadataEnumValue[];\r\n\r\n    constructor(private _metadata: MetadataService) {\r\n        this.conditionComparisonEnum = this._metadata.getMetadataType('ConditionComparisonType').enumValues;\r\n        this.dataMemberConnectionTypeEnum = this._metadata.getMetadataType('DataMemberConnectionType').enumValues;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.buildCondition(this.condition.condition);\r\n        if (this.condition.valueIfTrue) {\r\n            this.lines.push(new line(new txtItem('Then', true)));\r\n            this.buildExpression(this.condition.valueIfTrue, \"ThenValue\");\r\n        }\r\n    }\r\n\r\n    private buildCondition(cond: ConditionExpression): void {\r\n        if (cond === undefined || cond == null)\r\n            return;\r\n\r\n        this.buildExpression(this.getField(cond, 'value1'), \"Left\");\r\n        this.buildComparison(this.getField(cond, 'comparisonType'));\r\n        this.buildExpression(this.getField(cond, 'value2'), \"Right\");\r\n\r\n        [\"And\", \"Or\"].forEach(b => {\r\n            let bwCond: ConditionExpression[] = this.getField(cond, b.toLowerCase());\r\n            if (bwCond && bwCond.length) {\r\n                this.lines.push(new line(new txtItem(b, true)));\r\n                bwCond.forEach(cx => this.buildCondition(cx));\r\n            }\r\n        });\r\n    }\r\n\r\n    private buildExpression(d: SetDataValueItem, valName: string): void {\r\n        if (d === undefined || d == null)\r\n            return;\r\n\r\n        let l = new line();\r\n        if (valName == \"ThenValue\") {\r\n            l.items.push(new txtItem(\"Value of the property\"));\r\n        }\r\n        else {\r\n            l.items.push(\r\n                new txtItem(\"If Expression\"),\r\n                new txtItem(valName + \" Value\", true)\r\n            );\r\n        }\r\n        l.items.push(new txtItem(\"equals value on connection type\"));\r\n        let connTypeValue: number = this.getField(d, 'connectionType');\r\n        if (connTypeValue === undefined)\r\n            connTypeValue = 0;\r\n        let connType = this.dataMemberConnectionTypeEnum.find(t => t.value == connTypeValue);\r\n        l.items.push(new txtItem(connType.name, false, true));\r\n        this.lines.push(l);\r\n\r\n        this.buildFieldVal(d, 'key', connType.name);\r\n        this.buildFieldVal(d, 'property');\r\n        this.buildFieldVal(d, 'requestDataMode');\r\n        this.buildFieldVal(d, 'allowEmptyValue');\r\n\r\n        let initiators = this.getField(d, 'initiators');\r\n        if (initiators)\r\n            initiators.forEach(init => this.buildInitiator(init))\r\n    }\r\n\r\n    private buildFieldVal(d: SetDataValueItem, f: string, displayedFieldName: string = ''): void {\r\n        let v = this.getField(d, f);\r\n        if (v !== undefined) {\r\n            let l1 = new line();\r\n            l1.indent = 1;\r\n            l1.items.push(\r\n                new txtItem('and Value on field'),\r\n                new txtItem(displayedFieldName || f),\r\n                new txtItem('equals'),\r\n                new txtItem(v, false, true));\r\n            this.lines.push(l1);\r\n        }\r\n    }\r\n\r\n    private buildComparison(ct: number): void {\r\n        if (ct === undefined)\r\n            ct = 0;\r\n        let c = this.conditionComparisonEnum.find(e => e.value == ct);\r\n        this.lines.push(new line(new txtItem(c.name, true)));\r\n    }\r\n\r\n    private buildInitiator(init: InitiatorDefinition): void {\r\n        let l1 = new line();\r\n        l1.items.push(\r\n            new txtItem('and Initiator'),\r\n            new txtItem(this.getField(init, 'name'), false, true),\r\n            new txtItem('is triggered by'),\r\n            new txtItem(this.getField(init, 'key'), false, true),\r\n            new txtItem('on event'),\r\n            new txtItem(this.getField(init, 'event'), false, true));\r\n        this.lines.push(l1);\r\n    }\r\n\r\n    private getField(o: any, f: string) : any {\r\n        f = f.toLowerCase();\r\n        let key = Object.keys(o).find(k => k.toLowerCase() == f);\r\n        if (key) \r\n            return o[key];\r\n        return undefined;        \r\n    }\r\n\r\n    editCondition(t: txtItem) {\r\n        if (t.isLink)\r\n            this.onEditCondition.emit();\r\n    }\r\n}\r\n\r\nclass txtItem {\r\n\r\n    constructor(public text = '', public isBold = false, public isLink = false) {\r\n    }\r\n}\r\n\r\nclass line {\r\n    items: txtItem[] = [];\r\n    indent: number = 0;\r\n\r\n    constructor(t?: txtItem ) {\r\n        if (t)\r\n            this.items.push(t);\r\n    }\r\n}","import { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\nimport { ConditionExpression} from '../../../common/objects/viewModel';\r\nimport { ModalPropertiesContext } from '../properties';\r\n\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n    selector: 'csi-condition-editor',\r\n    styles:[\r\n        `\r\n        :host { \r\n            height: 100%;\r\n            min-height: 600px;\r\n            min-width: 850px;\r\n        }\r\n        .condition-expression {\r\n            overflow: auto;\r\n        }\r\n        `\r\n    ],\r\n    templateUrl: 'editCondition.html'\r\n})\r\n\r\nexport class EditConditionComponent {\r\n    condExp: ConditionExpression;\r\n\r\n    get dialogRef(): MatDialogRef<EditConditionComponent> {\r\n        return this._dialogRef;\r\n    }\r\n\r\n    constructor(\r\n        private _dialogRef: MatDialogRef<EditConditionComponent>) {\r\n    }\r\n\r\n    initContext(context: ModalPropertiesContext): void {\r\n        this.condExp = context.value ? _.cloneDeep(context.value) : new ConditionExpression();\r\n    }\r\n\r\n    expressionValueChanged(editCondition: any): void {\r\n        this.condExp = editCondition;\r\n    }\r\n\r\n    ok(): void {        \r\n        this._dialogRef.close(this.condExp);\r\n    }\r\n\r\n    cancel(): void {\r\n        this._dialogRef.close(null);\r\n    }\r\n\r\n}\r\n\r\n","<div class=\"csi-modal csi-condition-editor\" csi-dialog-decor [dialog]=\"dialogRef\">\r\n    <header>\r\n        <span class=\"title\">{{'Conditions Editor' | label: 'PS_CONDITION_EDITOR'}}</span>\r\n        <span class=\"close-icon\" (click)=\"cancel()\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></span>\r\n    </header>\r\n    <main>\r\n        <csi-expression class=\"condition-expression\" [expression]=\"condExp\" (onValueChanged)=\"expressionValueChanged($event)\"></csi-expression>\r\n    </main>\r\n    <footer>\r\n        <span class=\"default-btn\" (click)=\"cancel()\">{{'Cancel' | label: 'PS_CANCEL'}}</span>\r\n        <span class=\"primary-btn\" (click)=\"ok()\">{{'Ok' | label: 'PS_OK'}}</span>\r\n    </footer>\r\n</div>","import { Component, Input, OnChanges } from '@angular/core';\r\n\r\nimport { ConditionExpression, IMetadataEnumValue } from '../../../common/objects/viewModel';\r\nimport { MetadataService } from '../../../common/services/metadata.service';\r\n\r\n@Component({\r\n    selector: 'csi-expression',\r\n    templateUrl: 'expression.html',\r\n    styleUrls: ['./expression.less']\r\n})\r\n\r\nexport class ExpressionComponent implements OnChanges {\r\n    @Input() expression: ConditionExpression;\r\n\r\n    get enableAndAdd(): boolean { return this.expression.and !== undefined; }\r\n    get enableOrAdd(): boolean { return this.expression.or !== undefined; };\r\n\r\n    andOr = ['and', 'or'];\r\n    conditionComparisonEnum: IMetadataEnumValue[];\r\n\r\n    constructor(private _metadata: MetadataService) {\r\n        this.conditionComparisonEnum = this._metadata.getMetadataType('ConditionComparisonType').enumValues;\r\n    }\r\n\r\n    ngOnChanges(ch) {\r\n        if (ch.expression && ch.expression.currentValue.comparisonType === undefined)\r\n            ch.expression.currentValue.comparisonType = 0;\r\n    }\r\n\r\n    addRemoveGroup(op: string): void {\r\n        if (this.expression[op]) {\r\n            delete this.expression[op];\r\n        }\r\n        else {\r\n            if (!this.expression[op])\r\n                this.expression[op] = [];\r\n        }\r\n    }\r\n\r\n    addExpression(op: string): void {\r\n        this.expression[op].push(new ConditionExpression);\r\n    }\r\n\r\n    deleteExpression(exp: ConditionExpression, expressions: ConditionExpression[]): void {\r\n        let i = expressions.indexOf(exp);\r\n        if (i != -1)\r\n            expressions.splice(i, 1);\r\n    }\r\n}","<div class=\"csi-property-expressions\">\r\n    <div class=\"expressions\">\r\n        <div class=\"comparison\" >\r\n            <select id=\"allowEmptyInput\" [(ngModel)]=\"expression.comparisonType\">\r\n                <option *ngFor=\"let en of conditionComparisonEnum\" [ngValue]=\"en.value\">{{en.name}}</option>\r\n            </select>\r\n        </div>\r\n        <div class=\"expression-values\">\r\n            <div class=\"expression\">\r\n                <span class=\"title\">{{'Left Value' | label: 'PS_EXPR_LEFTVALUE'}}</span>\r\n                <csi-condition [valueItem]=\"expression.value1\" (onValueChanged)=\"expression.value1 = $event\"></csi-condition>\r\n            </div>\r\n            <div class=\"expression\">\r\n                <span class=\"title\">{{'Right Value' | label: 'PS_EXPR_RIGHTVALUE'}}</span>\r\n                <csi-condition [valueItem]=\"expression.value2\" (onValueChanged)=\"expression.value2 = $event\"></csi-condition>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"add-group-btn\">\r\n        <span class=\"btn\" (click)=\"addRemoveGroup('and')\">{{expression.and ? (' - remove AND group' | label: 'PS_REMOVE_AND_GROUP') : (' + add AND group' | label: 'PS_ADD_AND_GROUP') }}</span>\r\n        <span class=\"btn\" (click)=\"addRemoveGroup('or')\">{{expression.or ? (' - remove OR group' | label: 'PS_REMOVE_OR_GROUP'):('+ add OR group' | label: 'PS_ADD_OR_GROUP') }}</span>\r\n    </div>\r\n\r\n    <div *ngFor=\"let op of ['and','or']\" class=\"bitwise-group\">\r\n        <div class=\"group\" *ngIf=\"expression[op]\">\r\n            <div class=\"hook\"><i class=\"fa fa-level-up\" aria-hidden=\"true\"></i></div>\r\n            <div class=\"grp-content\">\r\n                <div class=\"grp-title\">\r\n                    <span class=\"bitwise\">{{op|uppercase}}</span>\r\n                    <span class=\"default-btn\" (click)=\"addExpression(op)\">{{'Add Condition' | label: 'PS_ADD_CONDITION'}}</span>\r\n                </div>\r\n\r\n                <div *ngFor=\"let exp of expression[op]\" class=\"expression\">\r\n                    <csi-expression [expression]=\"exp\" (onValueChanged)=\"valueChanged(exp,$event)\"></csi-expression>\r\n                    <span class=\"expression-delete\">\r\n                        <i class=\"fa fa-times-circle fa-lg delete-btn\" aria-hidden=\"true\" (click)=\"deleteExpression(exp, expression[op])\"></i>\r\n                    </span>                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","export * from './propertyConditions.module';","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\nimport { StudioSubjects } from '../../../common/objects/common';\r\nimport { InitiatorDefinition } from '../../../common/objects/viewModel';\r\nimport { ModalPropertiesContext } from '../properties';\r\n\r\n@Component({\r\n    selector: 'csi-prop-cond-initiator',\r\n    templateUrl: 'initiator.html',\r\n    styles:[`\r\n    :host {\r\n        height: 100%;        \r\n    }\r\n\r\n    .csi-initiator {\r\n        flex: 1 0;\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n\r\n    .csi-initiator .title {\r\n        background-color: #DCDCDC;\r\n        padding: 15px;\r\n    }\r\n      \r\n    .csi-initiator .initiator-list {\r\n        border-top: 1px solid black;\r\n        overflow-x: hidden;\r\n        overflow-y: auto;\r\n        flex-grow: 1;\r\n    }\r\n    .csi-initiator .initiator-list .initiator-item {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n\r\n    .csi-initiator .initiator-list .initiator-item > i.delete {\r\n        font-size: 20px;\r\n        padding: 0 10px 0 10px;\r\n        cursor: pointer;\r\n    }\r\n    `]\r\n}) \r\n\r\nexport class InitiatorComponent {\r\n\r\n    @Input() initiators: InitiatorDefinition[];\r\n    @Output() onValueChanged = new EventEmitter<any>();\r\n\r\n    arrayOfSubjects: StudioSubjects[] = [];\r\n    private context: ModalPropertiesContext;\r\n\r\n    get dialogRef(): MatDialogRef<InitiatorComponent> {\r\n        return this._dialogRef;            \r\n    }\r\n\r\n    constructor(private _dialogRef: MatDialogRef<InitiatorComponent>) {\r\n    }\r\n\r\n    initContext(context: ModalPropertiesContext) {\r\n        this.context = context;\r\n        if (this.context.value)\r\n            this.initiators = this.context.value;\r\n\r\n        if (this.initiators) {\r\n            this.initiators.forEach(it => this.addSubjects(it));\r\n        }\r\n    }\r\n\r\n    addInitiator(): void {\r\n        if (!this.initiators)\r\n            this.initiators = [];\r\n\r\n        let initiator = new InitiatorDefinition();\r\n        this.initiators.push(initiator);\r\n        this.addSubjects(initiator);\r\n    }\r\n\r\n    deleteInitiator(i: number): void {\r\n        this.arrayOfSubjects[i].property.unsubscribe();\r\n        //this.arrayOfSubjects[i].selectItem.unsubscribe();\r\n        this.arrayOfSubjects.splice(i, 1);\r\n\r\n        this.initiators.splice(i, 1);\r\n    }\r\n\r\n    private addSubjects(initiator): void {\r\n        let subjects = new StudioSubjects();\r\n        this.arrayOfSubjects.push(subjects);\r\n\r\n        subjects.property.subscribe(n => {\r\n            this.selectItem(initiator);\r\n        });\r\n\r\n        subjects.panel.subscribe(p => {\r\n            this.selectItem(initiator);\r\n        });\r\n    }\r\n\r\n    ok(): void {\r\n        this.context.value = this.initiators;\r\n        this._dialogRef.close(this.initiators);\r\n    }\r\n\r\n    cancel(): void {\r\n        this._dialogRef.close();\r\n    }\r\n\r\n    private selectItem(item:any){\r\n        console.warn('select ite', item);\r\n    }\r\n\r\n}","<div class=\"csi-modal csi-prop-cond-initiator\" csi-dialog-decor [dialog]=\"dialogRef\">\r\n    <header>\r\n        <span class=\"title\">{{'Initiator Editor' | label: 'PS_INITIATOR_EDITOR'}}</span>\r\n        <span class=\"close-icon\" (click)=\"cancel()\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></span>\r\n    </header>\r\n    <main>\r\n        <section class=\"csi-initiator\">\r\n            <div class=\"title\">\r\n                <span class=\"action-btn\" (click)=\"addInitiator()\">{{'Add Initiator' | label: 'PS_ADD_INITIATOR'}}</span>                        \r\n            </div>\r\n            <div class=\"initiator-list\">\r\n                <div *ngFor=\"let item of initiators; let i=index\" class=\"initiator-item\">\r\n                    <csi-panel [component]=\"'csi-property-list'\" [subjects]=\"arrayOfSubjects[i]\" [dataSource]=\"'propertyCondition/initiator'\"></csi-panel>\r\n                    <i class=\"delete fa fa-times-circle fa-lg\" aria-hidden=\"true\" (click)=\"deleteInitiator(i)\"></i>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </main>\r\n    <footer>\r\n        <section class=\"btns\">\r\n            <span class=\"default-btn\" (click)=\"cancel()\">{{'Cancel' | label: 'PS_CANCEL'}}</span>\r\n            <span class=\"primary-btn\" (click)=\"ok()\">{{'Ok' | label: 'PS_OK'}}</span>\r\n        </section>\r\n    </footer>\r\n</div>","import { Component } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\n\r\nimport { EditConditionComponent } from './editCondition';\r\nimport { ValueConditionComponent } from './valueCondition';\r\n\r\nimport { IMetadataEnumValue, PropertyConditionExpression, SetDataValueItem, ConditionExpression } from '../../../common/objects/viewModel';\r\nimport { ModalPropertiesContext } from '../properties';\r\nimport { MetadataService } from '../../../common/services/metadata.service';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n    selector: 'csi-property-condition',\r\n    styleUrls: ['./propertyConditions.less'],\r\n    templateUrl: 'propertyCondition.html'\r\n})\r\n\r\nexport class PropertyConditionsComponent {\r\n    newConditionName: string = '';\r\n    conditions: PropertyConditionExpression[] = [];\r\n\r\n    ownerProperties: string[];\r\n    readOnly: boolean;\r\n\r\n    private conditionComparisonEnum: IMetadataEnumValue[];\r\n    private context: ModalPropertiesContext;\r\n\r\n    get dialogRef(): MatDialogRef<PropertyConditionsComponent> {\r\n        return this._dialogRef;\r\n    }\r\n\r\n    constructor(\r\n        private _metadata: MetadataService,\r\n        private _dialog: MatDialog,\r\n        private _dialogRef: MatDialogRef<PropertyConditionsComponent>){\r\n\r\n        this.conditionComparisonEnum = this._metadata.getMetadataType('ConditionComparisonType').enumValues;\r\n    }\r\n\r\n    initContext(context: ModalPropertiesContext): void {\r\n        this.context = context;\r\n        this.conditions = this.context.value ? _.cloneDeep(this.context.value) : [];\r\n        this.conditions.forEach(c => {\r\n            if (c.condition)\r\n                c.condition.__shortDescription = this.getShortDesc(c.condition);\r\n        });\r\n        let instType = this._metadata.getMetadataType(this.context.instanceType.toLowerCase());\r\n        if (instType && instType.properties) {\r\n            this.ownerProperties = instType.properties.map(p => p.name);\r\n        }\r\n        this.readOnly = context.property.readOnly;\r\n    }\r\n\r\n    addCondition(name: string): void {\r\n        if( !this.readOnly ){\r\n            let c = new PropertyConditionExpression();\r\n            c.description = name;\r\n            this.newConditionName = '';\r\n            this.conditions.push(c);\r\n        }\r\n    }\r\n\r\n    editCondition(i: number): void {\r\n        if( this.readOnly )\r\n            return;\r\n        \r\n        let editConditionDialog = this._dialog.open(EditConditionComponent, { disableClose: true });\r\n        let context = new ModalPropertiesContext();\r\n        context.value = this.conditions[i].condition;\r\n        editConditionDialog.componentInstance.initContext(context);\r\n        editConditionDialog.afterClosed().subscribe((val: ConditionExpression) => {\r\n            this.conditions[i].condition = val;\r\n            if (this.conditions[i].condition)\r\n                this.conditions[i].condition.__shortDescription = this.getShortDesc(this.conditions[i].condition);\r\n        });\r\n        this.conditions[i].isExpanded = false;\r\n    }\r\n\r\n    editValueCondition(i: number): void {\r\n        if( this.readOnly )\r\n            return;\r\n        let valueConditionDialog = this._dialog.open(ValueConditionComponent, { disableClose: true });\r\n        let context = new ModalPropertiesContext();\r\n        context.value = this.conditions[i].valueIfTrue;\r\n        valueConditionDialog.componentInstance.initContext(context);\r\n        valueConditionDialog.afterClosed().subscribe((c: ModalPropertiesContext) => this.conditions[i].valueIfTrue = c.value);\r\n        this.conditions[i].isExpanded = false;\r\n    }\r\n\r\n    deleteCondition(condition: PropertyConditionExpression): void {\r\n        if( this.readOnly )\r\n            return;\r\n        let index = this.conditions.indexOf(condition);\r\n        this.conditions.splice(index, 1);\r\n    }\r\n\r\n    ok(): void {\r\n        this._dialogRef.close(this.conditions);\r\n    }\r\n\r\n    cancel(): void {\r\n        this._dialogRef.close(null);\r\n    }\r\n\r\n    private getKey(s: SetDataValueItem): string {\r\n        return \"'\" + ((s && s.key) || \"\") + \"'\";\r\n    };\r\n\r\n    private getShortDesc(exp: ConditionExpression): string {\r\n        let f = '(';\r\n\r\n        if (exp) {\r\n            f += this.getKey(exp.value1);\r\n\r\n            if (exp.comparisonType !== undefined) {\r\n                let comparisonName = this.conditionComparisonEnum.find(c => c.value == exp.comparisonType).name;\r\n                f += (' ' + comparisonName + ' ');\r\n            }\r\n            f += this.getKey(exp.value2);\r\n        }\r\n        f += ')';\r\n\r\n        if (exp) {\r\n            if (exp.and && exp.and.length) {\r\n                f += \" AND (...)\";\r\n            }\r\n            if (exp.or && exp.or.length) {\r\n                f += \" OR (...)\";\r\n            }\r\n        }\r\n\r\n        return f;\r\n    }\r\n\r\n\r\n}","<div class=\"csi-modal csi-property-condition\" csi-dialog-decor [dialog]=\"dialogRef\">\r\n    <header>\r\n        <span class=\"title\">{{'Property Conditions' | label: 'PS_PROPERTY_CONDITION_NAME'}}</span>\r\n        <span class=\"close-icon\" (click)=\"cancel()\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></span>\r\n    </header>\r\n    <main>\r\n        <section class=\"condition-add\">\r\n            <span class=\"title\">{{'Enter Property Condition Name' | label: 'PS_ENTER_PROPERTY_CONDITION_NAME'}}</span>\r\n            <input class=\"name\" type=\"text\" #condName [(ngModel)]=\"newConditionName\" [readonly]=\"readOnly\" />\r\n            <span class=\"action-btn\" (click)=\"addCondition(condName.value)\">{{'Add Case' | label: 'PS_ADD_CASE'}}</span>\r\n        </section>\r\n        <section class=\"conditions-container\">\r\n            <div class=\"sub-title\">{{'Organize Property Conditions' | label: 'PS_ORGANIZE_PROPERTY_CONDITIONS'}}</div>\r\n            <div class=\"conditions\">\r\n                <div class=\"condition-item\" *ngFor=\"let cond of conditions; let i=index\">\r\n                    <div class=\"header\">\r\n                        <i [class]=\"cond.isExpanded?'fa fa-lg fa-caret-down' : 'fa fa-lg fa-caret-right'\" aria-hidden=\"true\" (click)=\"cond.isExpanded = !cond.isExpanded\"></i>\r\n                        <input class=\"description-name\" type=\"text\"  [readonly]=\"readOnly\" [(ngModel)]=\"cond.description\" placeholder=\"{{cond.description?'':('Unnamed-'+(i+1))}}\" />\r\n                        <span class=\"formula\">{{cond.condition?.__shortDescription}}</span>\r\n                        <i class=\"fa fa-times-circle fa-lg\" aria-hidden=\"true\" (click)=\"deleteCondition(cond)\"></i>\r\n                    </div>\r\n                    <div *ngIf=\"cond.isExpanded\" class=\"narration\">\r\n                        <div>\r\n                            <span>{{'For Property' | label: 'PS_COND_FOR_PROPERTY'}}</span>\r\n                            <select [(ngModel)]=\"cond.property\" [disabled]=\"readOnly\">\r\n                                <option *ngFor=\"let op of ownerProperties\" [value]=\"op\">{{op}}</option>\r\n                            </select>\r\n                        </div>\r\n                        <csi-condition-display [condition]=\"cond\" (onEditCondition)=\"editCondition(i)\" ></csi-condition-display>\r\n                    </div>\r\n                    <div class=\"buttons\">\r\n                        <span class=\"action-btn\" (click)=\"editCondition(i)\">{{'Edit Conditions' | label: 'PS_EDIT_CONDITIONS'}}...</span>\r\n                        <span class=\"action-btn\" (click)=\"editValueCondition(i)\">{{'Edit Value If True' | label: 'PS_VALUE_IF'}}...</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    </main>\r\n    <footer>\r\n        <section class=\"btns\">\r\n            <span class=\"default-btn\" (click)=\"cancel()\">{{'Cancel' | label: 'PS_CANCEL'}}</span>            \r\n            <span [hidden]=\"readOnly\" class=\"primary-btn\" (click)=\"ok()\">{{'Ok' | label: 'PS_OK'}}</span>\r\n        </section>\r\n    </footer>\r\n</div>","import { NgModule, Optional, SkipSelf }       from '@angular/core';\r\n\r\nimport { PanelModule } from '../../../panel/panel.module';\r\nimport { SharedModule } from '../../../shared/shared.module';\r\n\r\nimport { PropertyConditionsComponent } from './propertyCondition';\r\nimport { EditConditionComponent } from './editCondition';\r\nimport { ValueConditionComponent } from './valueCondition';\r\nimport { ConditionComponent } from './condition';\r\nimport { ConditionDisplayComponent } from './conditionDisplay';\r\nimport { ExpressionComponent } from './expression';\r\nimport { InitiatorComponent } from './initiator';\r\n\r\n@NgModule({\r\n    imports: [\r\n        PanelModule,\r\n        SharedModule,\r\n    ],\r\n    declarations: [\r\n        PropertyConditionsComponent,\r\n        EditConditionComponent,\r\n        ValueConditionComponent,\r\n        ConditionComponent,\r\n        ConditionDisplayComponent,\r\n        ExpressionComponent,\r\n        InitiatorComponent,\r\n    ],\r\n    exports: [\r\n        ConditionComponent,\r\n        ExpressionComponent,\r\n    ],\r\n    entryComponents: [\r\n        PropertyConditionsComponent,\r\n        EditConditionComponent,\r\n        ValueConditionComponent,\r\n        InitiatorComponent,\r\n        ExpressionComponent\r\n    ],\r\n    providers: [\r\n    ]\r\n})\r\nexport class PropertyConditionModule {\r\n    constructor( @Optional() @SkipSelf() parentModule: PropertyConditionModule) {\r\n        if (parentModule) {\r\n            throw new Error(\r\n                'PropertyConditionModule is already loaded. Import it in the StudioModule only');\r\n        }\r\n    }\r\n}\r\n\r\n","import { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ModalPropertiesContext } from '../properties';\r\nimport { SetDataValueItem } from '../../../common/objects/viewModel';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n    selector: 'csi-value-condition',\r\n    styles: [`\r\n        :host{\r\n            min-height: 400px;\r\n            min-width: 700px;\r\n\r\n            display: flex;\r\n            flex-direction: column;\r\n            flex: 1 1 auto;            \r\n        }\r\n        .csi-value-condition{\r\n            flex: 1 1 auto;            \r\n        }\r\n        .condition-condition {\r\n            overflow: auto;\r\n        }\r\n    `],\r\n    templateUrl: 'valueCondition.html'\r\n})\r\n\r\nexport class ValueConditionComponent {\r\n    private context: ModalPropertiesContext;\r\n\r\n    valueIfTrue: SetDataValueItem;\r\n\r\n    get dialogRef(): MatDialogRef<ValueConditionComponent> {\r\n        return this._dialogRef;\r\n    }\r\n\r\n    constructor(private _dialogRef: MatDialogRef<ValueConditionComponent>) {}\r\n\r\n    initContext(context: ModalPropertiesContext): void {\r\n        this.context = context;\r\n        if (!context.value) \r\n            this.valueIfTrue = new SetDataValueItem();        \r\n        else\r\n            this.valueIfTrue = _.cloneDeep(context.value);\r\n    }\r\n\r\n    valueChanged(v: SetDataValueItem): void {\r\n        this.valueIfTrue = v;\r\n    }\r\n\r\n    ok(): void {\r\n        this.context.value = this.valueIfTrue;\r\n        this._dialogRef.close(this.context);\r\n    }\r\n\r\n    cancel(): void {\r\n        this._dialogRef.close(this.context);\r\n    }\r\n}","<div class=\"csi-modal csi-value-condition\" csi-dialog-decor [dialog]=\"dialogRef\">\r\n    <header>\r\n        <span class=\"title\">{{'Value If True Editor' | label: 'PS_VALUE_IF_TRUE_EDITOR'}}</span>\r\n        <span class=\"close-icon\" (click)=\"cancel()\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></span>\r\n    </header>\r\n    <main>\r\n        <csi-condition class=\"condition-condition\" [valueItem]=\"valueIfTrue\" (onValueChanged)=\"valueChanged($event)\"></csi-condition>\r\n    </main>\r\n    <footer>\r\n        <section class=\"btns\">\r\n            <span class=\"default-btn\" (click)=\"cancel()\">{{'Cancel' | label: 'PS_CANCEL'}}</span>\r\n            <span class=\"primary-btn\" (click)=\"ok()\">{{'Ok' | label: 'PS_OK'}}</span>\r\n        </section>\r\n    </footer>\r\n</div>","import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { IElement, ValueUpdatedData, PropertyRef, StudioSubjects } from '../../common/objects/common';\nimport { IPropertyMetadata, IMetadataType, PropertyCategory, PropertyDescriptions } from '../../common/objects/viewModel';\nimport { IContentPanel, PanelSettings, ReadOnlyLevel } from '../panel';\nimport { MetadataService } from '../../common/services/metadata.service';\nimport { LabelService } from '../../common/services/label.service';\nimport { LocalService } from '../../common/services/local.service';\nimport { DataAccessors } from '../../common/services/dataAccessors';\nimport { RecordCommand, PropertyHistoryData } from '../../common/objects/historyLog';\n\nimport { ValueProviderService } from '../../common/services/dataValue.service';\n\nimport { Subject, Subscription } from 'rxjs';\nimport _ from 'lodash';\nimport { StudioStateService } from '../../common/services/studioStateService';\n\n@Component({\n    selector: 'csi-property-list',\n    templateUrl: 'propertyList.html',\n    styleUrls: ['propertyList.less', '../../shared/internalTabs.less'],\n    changeDetection: ChangeDetectionStrategy.Default\n})\n\nexport class PropertyListComponent implements OnInit, IContentPanel {\n\n    visible: boolean;\n    isCollapsed: boolean = false;\n\n    selectedTab: ViewTabs = ViewTabs.unset;\n    searchFilter: string;\n    panel: PanelSettings;\n    showInternalTabs: boolean = false;\n    get showDescription() : boolean {return this.descriptionSections.length > 0;}\n    valueUpdated: Subject<ValueUpdatedData>;\n    descriptionName: string;\n    descriptionText: string;\n    groups: Group[];\n    internalTabs: ViewTab[];\n    properties: IPropertyMetadata[];\n    isRowMode = false;\n    isSidePanel = false;\n    cdoType = \"\";\n    \n    private get propertyDescriptions(): PropertyDescriptions { return this.metadataService.propertyDescriptions ;}\n    private propertyPanelSubscription: Subscription;\n    private searchInputSubscription: Subscription;\n    private nameInputSubscription: Subscription;\n    private nameChangedSubscription: Subscription;\n    private valueUpdatedSubscription: Subscription;\n    private descriptionSubscription: Subscription;\n    private nameProperty: IPropertyMetadata;\n    private instance: any;\n    private customWorkspaceColor: string;\n    private favProperties: string[];\n    private _propertyType: string;\n    private descriptionSections: string[] = [];\n    private instanceMetadataType : IMetadataType;\n    private onPropertyChangeSubj : Subject<any>;\n\n    constructor(\n        public metadataService: MetadataService,\n        private _labelService: LabelService,\n        private _localService: LocalService,\n        private _dataAccessors: DataAccessors,\n        private _valueService: ValueProviderService,\n        private _studioStateService: StudioStateService,\n        private _chRef: ChangeDetectorRef) {\n\n        this.valueUpdated = new Subject<ValueUpdatedData>();        \n        this.internalTabs = \n        [\n            <ViewTab>{ tab: ViewTabs.favorites, label: this._labelService.getLabel(\"PS_PROPERTY_TAB_FAVORITES\", 'Favorites'), caption: 'Favorites' },\n            <ViewTab>{ tab: ViewTabs.sorted, label: '', caption: 'Sorted' },\n            <ViewTab>{ tab: ViewTabs.grouped, label: '', caption: 'Grouped' }\n        ];        \n    }\n\n    ngOnInit() {\n        this.valueUpdatedSubscription = this.valueUpdated.subscribe(vc => {\n            let property = this.properties.find(p => p.name.toLowerCase() == vc.propertyName.toLowerCase());\n            if (property){\n                this.setPropertyValue(property, vc.val, vc.valueType);\n            }\n        });        \n    }   \n\n    init(s: PanelSettings, subjects: StudioSubjects): void {\n\n        if(s.parameters && s.parameters.cdoType)\n            this.cdoType = s.parameters.cdoType;\n\n        this.isRowMode = s.dataSource === 'propertyCondition' || s.dataSource === 'propertyCondition/initiator';\n        if(s.parameters && s.parameters.sidePanel === true )\n            this.isSidePanel = true;\n\n        s.actions = [];\n        if (!this.isRowMode) {\n            s.showSearch = false;\n            s.showName = false;\n            s.nameInput.hidden = true;\n\n            this.searchInputSubscription = s.searchInput.subscribe(si => {\n                this.searchFilter = si.toLowerCase();\n                s.searchText = si;                \n                this.ping();\n            });\n            // the event is fired when the name changed by typing in name input of panel\n            this.nameInputSubscription = s.nameInput.onValChange.subscribe(nv => this.onNameChanged(nv));\n            // the event is fired when the name has been changed in model (for example by undo/redo )\n            this.nameChangedSubscription = subjects.nameChanged.subscribe(n => s.nameInput.val = n);\n        }\n        else {\n            s.showSearch = false;\n            s.showName = false;\n        }\n\n        s.showRefresh = false;\n        this.panel = s;\n\n        this.propertyPanelSubscription = subjects.propertyPanel\n            .subscribe(data => {\n\n                // Do not refresh if properties are not changed\n                if( this.instance )\n                    if( this.instance == data)\n                        return;\n\n                if( data && data.__type && data.__type == \"UIComponentRef\" && !this.isSidePanel ){                    \n                    return; // ignore\n                }\n\n                this.instance = data;\n                this.selectedTab = ViewTabs.unset;\n                \n                this.onInstanceChanged();\n            });     \n        this.onPropertyChangeSubj = subjects.property;\n    }\n\n    destroy(subjects: StudioSubjects) {\n        [this.propertyPanelSubscription, this.searchInputSubscription,\n        this.nameInputSubscription, this.valueUpdatedSubscription, this.nameChangedSubscription, this.descriptionSubscription]\n            .forEach(s => { if (s) s.unsubscribe(); });\n    }\n\n    displayDescription(property: PropertyRef = null): void {     \n        this.descriptionName = '';\n        this.descriptionText = '';        \n        if (property) {            \n            let name:string = property.displayedName || property.name;\n            this.descriptionName = name;\n            //find desc text by property name            \n            let pLc = property.name.toLowerCase();          \n            this.descriptionSections.map(ds => {                     \n                let sec = this.propertyDescriptions[ds];\n                let key = Object.keys(sec).find(k => k.toLowerCase() == pLc);\n                if (key && ds.toLowerCase() == 'generalcontrol') {\n                    // populates description if there is no description for control.\n                    this.descriptionText = !this.descriptionText.length ? sec[key] : this.descriptionText;\n                }                                \n                else if (key && ds.toLowerCase() == this._propertyType.toLowerCase()) {\n                    this.descriptionText = sec[key];\n                }                   \n            });            \n        }\n    }\n\n    private ping(){\n        this._chRef.markForCheck();\n    }\n\n    private onInstanceChanged() : void {\n\n        let pt: string = null;\n        let readonly = false;\n        this.customWorkspaceColor = this._studioStateService.getCustomWorkspaceColor();\n\n        if (this.instance) {\n            if (this.instance.__unbound && this.isSidePanel) {\n                this.visible = false;\n                this.properties = [];\n                this.groups = [];\n                this.descriptionSections = [];\n                this.showInternalTabs = false;\n                this.setupPanel(this.instance);\n                this.ping();\n                return;\n            }\n            else {\n                this.visible = true;\n                this.showInternalTabs = true;\n\n                if (this.isRowMode)\n                    this.showInternalTabs = false;                \n\n                if (this.instance.isReference || this.panel.readOnly === ReadOnlyLevel.full || this.panel.readOnly === ReadOnlyLevel.value) {\n                    readonly = true;\n                }                \n            }\n\n            if (this.instance.typeName)\n                pt = this.instance.typeName;\n            else if (this.instance.__type)\n                pt = this.instance.__type;\n\n            if (!(this.panel.parameters && this.panel.parameters.showDescription === false)) {\n                if (this.instance.type === 'Control')\n                    this.descriptionSections = ['generalControl'];\n                else if (this.instance.type === 'Page' || this.instance.type === 'Webpart')\n                    this.descriptionSections = ['pageContent', 'webPartDefinition', 'generalControl'];\n                else if (this.instance.type === 'Pageflow' || this.instance.type === 'PageFlowNode' || this.instance.type === 'PageTransition')\n                    this.descriptionSections = ['pageflowContent', 'generalControl'];            \n                else\n                    this.descriptionSections = [];\n            }            \n            this.displayDescription();\n            this._studioStateService.searchPanelText(this.panel, \"\");\n\n            if (pt) {\n                this.favProperties = this._localService.getFavProperties(pt);\n                if( pt.startsWith('config.'))\n                    this.showInternalTabs = false;\n\n                this._propertyType = pt;\n                if (this.internalTabs) {\n                    // set initial tab\n                    if (this.favProperties && this.favProperties.length > 0 && this.selectedTab == ViewTabs.unset)\n                        this.selectedTab = ViewTabs.favorites;\n                    else if (this.internalTabs.length > 1 && this.selectedTab == ViewTabs.unset)\n                        this.selectedTab = ViewTabs.sorted;\n                }\n\n                // build properties                                \n                this.instanceMetadataType = this.metadataService.getMetadataType(pt);\n                this.properties = this.createProperties(readonly);\n               \n                this.panel.nameInput.readonly = readonly; \n\n                this.properties.forEach(p=> this.populateValue(p));\n                this.properties.forEach(p=> this.setValueProvider(p) );\n\n                this.groups = this.createGroups(this.properties);\n            }\n        }\n        else {\n            this.properties = [];\n            this.groups = [];\n            this.descriptionSections = [];\n            this.showInternalTabs = false;\n        }\n        this.setupPanel(this.instance);\n        this.ping();       \n    }\n\n    private createGroups(properties: IPropertyMetadata[]) : Group[]{\n\n        return _.chain(properties)\n            .map(x => x.category ? x.category.toLowerCase() : \"other\")\n            .union([\"favorites\"])\n            .uniq()\n            .map(cat=> {\n                let i = this.metadataService.propertyCategories.findIndex( c=> c.name.toLowerCase()== cat);\n                return new Group(this.metadataService.propertyCategories[i], i);\n            })\n            .sortBy( g=> g.order )\n            .value();\n    }\n\n    private populateValue(p: IPropertyMetadata ) : void {\n        p.favorite = (this.favProperties && this.favProperties.indexOf(p.name.toLowerCase()) != -1);\n        let v = this.getPropertyValue(p);\n        if (p.accessor) {\n            // Call setter to apply dependencies\n            this._dataAccessors.callSetter(v, this.instance, this.properties, undefined, p, true);\n        }\n        p.value = v;\n    }\n\n    private createProperties( readonly: boolean) : IPropertyMetadata[] {\n\n        let valueBehavior;\n        let nameComponent;\n        let properties = this.instance['properties'];\n        if(properties){\n            valueBehavior = properties.behavior;\n            nameComponent = properties.name;\n        }\n\n        let props = this.instanceMetadataType.properties.map( mp => {\n            let p = _.cloneDeep(mp);\n            if (readonly)\n                p.readOnly = readonly;\n\n            if (p.editor && p.editor.directive == \"modal\") \n                p.editor.directive = \"text\";\n\n            if (!this.isRefType(this.instanceMetadataType)) {\n                if (mp.name.toLowerCase() == 'name' ||\n                    (mp.displayedName && mp.displayedName.toLowerCase() == 'name') ||\n                    (mp.editor && mp.editor.parameters && mp.editor.parameters.find(ep => ep == 'asName'))) {\n                    // Save 'name' property for further using\n                    this.nameProperty = p;\n                    p.hidden = true;\n                    if (this.isRowMode)\n                        p.hidden = false;\n                }\n            }\n\n            if(valueBehavior === 4 && p.name == \"Display\"){\n                const n = nameComponent.toLowerCase();\n                if(this._displayPagesEnabled.filter(p=> p.toLowerCase() == n).length == 0)\n                    p.readOnly = true;\n            }\n\n            return p;\n        });\n        return _.sortBy(props, p => { return (p.order ? p.order : 999).toString() + (p.displayedName || p.name).toLowerCase(); });\n    }\n\n    private setValueProvider(p: IPropertyMetadata) : void{\n        if( p.editor && p.editor.directive){\n            if( p.editor.directive == 'enum'){\n                if( !p.editor.provider )\n                    p.editor.provider = \"enum\";                    \n                p.editor.directive = 'selector';\n            }\n\n            if( p.editor.parameters ){\n                let ci = p.editor.parameters.indexOf(\"#CDOTypeName\");\n                if( ci != -1){\n                    p.editor.parameters[ci] = this.cdoType;\n                }\n            }\n\n            if(p.editor.directive == 'selector'){\n                p.editor.selectableItems = this._valueService.getSelectableItems(p, this.instance);\n            }\n\n        }\n    }\n\n    private getPropertyValue(p: IPropertyMetadata): any {\n\n        // Create default value\n        if (p.defaultValue === undefined) {\n\n            if (p.editor && p.editor.directive == \"enum\" && p.enumValues) {\n                p.defaultValue = p.enumValues[0].value;\n            }\n            else if (p.originalTypeName.toLowerCase() == \"string\") {\n                // Set empty for string\n                p.defaultValue = '';\n            }\n            else\n                p.defaultValue = null;\n        }\n\n        if (this.instance) {\n            let n = p.name.toLowerCase();\n\n            let wscolor = this.getWorkspaceColor(n);\n            if (wscolor)\n                p['__wscolor'] = 'inset 0 0 5px ' + wscolor;\n\n            if (this._dataAccessors.hasGetter(p))\n                return  this._dataAccessors.callGetter(this.instance, p);            \n\n            let propertyValues = this.getPropertyValues();\n            let key = _.findKey(propertyValues, (v, k) => k.toLowerCase() == n);\n            if (key && propertyValues[key]!==undefined)\n                return propertyValues[key];\n        }\n\n        if (p.defaultValue !== undefined) {\n            let dv = p.defaultValue;\n            if (p.enumValues && _.isString(p.defaultValue)) {\n                // convert symbolic name to number\n                let enumItem = p.enumValues.find(v => v.name == p.defaultValue);\n                if (enumItem)\n                    dv = enumItem.value;\n                else\n                    console.error('enum item ' + p.defaultValue + ' not found', p.enumValues);\n            }\n            return dv;\n        }\n        return null;\n    }\n\n    private setPropertyValue(p: IPropertyMetadata, v: any, valType: string = 'string') {\n        let name = p.name.toLowerCase();\n        let touched = false;\n        let oldValue: any;\n\n        if (this.instance) {\n            var pl = this.getPropertyValues();            \n            if (p.accessor) {\n                touched = this._dataAccessors.callSetter(v, this.instance, this.properties, valType, p, false);\n            }\n            else {\n                let foundPropKey = _.findKey(pl, (v, k) => k.toLowerCase() == name);\n                if (foundPropKey) {\n                    oldValue = pl[foundPropKey];\n                    pl[foundPropKey] = v;       // Modify existing\n                }\n                else {\n                    pl[p.name] = v;               // Add new value\n                }\n                touched = true;\n            }\n\n            if (touched) {\n                p.value = v;\n\n                // find the properties that depends on the current\n                let dependentProperties = this.getDependentProperties(p.name);\n\n                // notify dependants\n                _.forEach(dependentProperties, pd => {\n                    // Reset value and selectableItems\n                    pd.value = null;\n                    if(pd.editor.directive == \"selector\" )\n                        pd.editor.selectableItems = this._valueService.getSelectableItems(pd, this.instance);\n                });\n\n                const prm : [any, any, IPropertyMetadata, any] = [v, oldValue, p, this.instance];\n                this._studioStateService.propertyChanged(prm);\n                if( this.onInstanceChanged )\n                    this.onPropertyChangeSubj.next(prm);\n            }\n        }\n        this.ping();\n    }\n\n    getDependentProperties(pn: string): IPropertyMetadata[] {\n        pn = pn.toLowerCase();\n        return this.properties.filter( p => _.find(p.dependencies, d => d.toLowerCase() == pn)).map(x => x);\n    }\n\n    private setupPanel(inst: any) {\n        let pp = this.panel;\n        if (inst == null || !this.visible) {\n            pp.collapsed = true;\n            pp.nameInput.hidden = true;\n            pp.showName = false;\n            pp.showSearch = false;\n            return;\n        }\n        else {\n            pp.collapsed = false;\n        }\n        if (this.isRowMode)\n            return;\n\n        // For properties on the top level\n        if (inst) {\n            pp.showSearch = true;\n            if (this.nameProperty) {\n                pp.showName = true;\n                pp.nameInput.label = inst.typeName || inst.__type;\n                pp.nameInput.val = this.getPropertyValue(this.nameProperty);\n                pp.nameInput.readonly = this.panel.nameInput.readonly;\n                pp.nameInput.hidden = false;\n\n                if (!pp.nameInput.onValChange) {\n                    pp.nameInput.onValChange = new Subject<string>();\n                    pp.nameInput.onValChange\n                        .subscribe(nv => this.onNameChanged(nv));\n                }\n            }\n            else {\n                pp.showName = false;\n            }\n        }\n        else {\n            pp.showName = false;\n            pp.showSearch = false;\n        }\n    }\n\n    onNameChanged(newName: any) {\n\n        this._studioStateService.isNameValid(newName, this.instance).subscribe(ok => {\n            if(ok){\n                let oldName = this.nameProperty.value;\n                this._studioStateService.renameLayoutRefs(this.instance, oldName, newName);\n                this.setPropertyValue(this.nameProperty, newName, null);\n                if(this.instance.name)\n                    this.instance.name = newName;\n\n                // Register history\n                if (this.isElement()) {\n                    let oldVal = {}; oldVal[this.nameProperty.name] = oldName;\n                    let newVal = {}; newVal[this.nameProperty.name] = newName;\n                    let c = new PropertyHistoryData(this.instance, this.nameProperty.name, oldVal, newVal, true);\n                    this._studioStateService.writeHistory(RecordCommand.propertyChange, c);\n                }\n            }\n            else{\n                // alert error and restore\n                this.panel.nameInput.val = this.getPropertyValue(this.nameProperty);\n            }\n        });\n    }\n\n    selectTab(t: ViewTab) {\n        this.selectedTab = t.tab;\n    }\n\n    setFavorite(pr: IPropertyMetadata) {\n        let changed = false;\n\n        if (!this.favProperties)\n            this.favProperties = [];\n\n        let name = pr.name.toLowerCase();\n        let i = this.favProperties.findIndex(p => p == name);\n        if (i != -1) {\n            // remove\n            this.favProperties.splice(i, 1);\n            changed = true;\n            pr.favorite = false;\n        }\n        else {\n            if (this.selectedTab != ViewTabs.favorites) {\n                // add\n                this.favProperties.push(name);\n                changed = true;\n                pr.favorite = false;\n            }\n        }\n\n        if (changed) {\n            this._localService.setFavProperties(this._propertyType, this.favProperties);\n            this.onInstanceChanged();\n        }\n    }\n\n    private getPropertyValues(): any {\n        let element = <IElement>this.instance;\n        if (element && element.__unbound)\n            return this.instance;\n        if (element && element.id !== undefined && element.name !== undefined && element.__type !== 'TabDefinition' && element.__maint === undefined) {\n            return this.instance.properties;\n        }\n        return this.instance;\n    }\n\n    private isRefType(t: IMetadataType) {\n        if (t._name == \"NamedObjectRef\" || t._name == \"PageMappingParameter\") {\n            return true;\n        }\n        if (t.baseTypeNames && t.baseTypeNames.find(v => v == \"NamedObjectRef\"))\n            return true;\n\n        return false;\n    }\n\n    private getWorkspaceColor(n: string) {\n        if (this.instance.map) {\n            if (_.find(this.instance.map, (o, k: string) => k.toLowerCase() == n))\n                return this.customWorkspaceColor;\n        }\n\n        return undefined;\n    }\n\n    private isElement(): boolean {\n        return (this.instance && (this.instance._fullTypeName || this.instance.properties));\n    }\n\n    private _displayPagesEnabled = [\"ModelingVP\", \"ModelingAuditTrail_VP\", \"ModelingEsig_vp\", \"DT_Selection_vp\", \"DT_References_vp\"];\n}\n\nexport enum ViewTabs { favorites, sorted, grouped, unset };\n\nclass ViewTab {\n    public tab: ViewTabs;\n    public caption: string;\n    public label: string;\n}\n\nexport class Group {\n    expanded: boolean = false;\n    hidden: boolean = false;\n\n    constructor(public category: PropertyCategory, public order: number) {\n        this.hidden = category.name == \"favorites\";\n        this.expanded = category.name == \"favorites\";\n    }\n}\n","<div class=\"csi-property-area\" [class.rowmode]=\"isRowMode\" [hidden]=\"!visible\">\r\n    <div class=\"csi-internal-tabs\" *ngIf=\"showInternalTabs\">\r\n        <ul>\r\n            <li *ngFor=\"let t of internalTabs\" [class.active]=\"t.tab == selectedTab\"><a (click)=\"selectTab(t)\">{{t.caption}}</a></li>\r\n        </ul>\r\n    </div> \r\n    <ng-container *ngIf=\"!isRowMode; else rowModeTemplate\">\r\n        <div class=\"csi-property-list col-mode\">\r\n            <div class=\"group\" *ngFor=\"let grp of (groups | propertyFilter : {groupMode: true, group:grp, search:searchFilter, tab: selectedTab})\">\r\n                <div [hidden]=\"grp.hidden\"><i [class]=\"grp.expanded?'fa fa-caret-down':'fa fa-caret-right'\" aria-hidden=\"true\" (click)=\"grp.expanded=!grp.expanded\"></i><span>{{grp.category.caption}}</span></div>\r\n                <csi-name-value [hidden]=\"!grp.expanded\" \r\n                    *ngFor=\"let property of (properties | propertyFilter : {groupMode:false, group:grp, search:searchFilter, tab: selectedTab, favorites: favProperties})\" \r\n                    class=\"csi-property-row\"\r\n                    [property]=\"property\"\r\n                    [instance]=\"instance\"\r\n                    [valueUpdated]=\"valueUpdated\" \r\n                    (setFavorite)=\"setFavorite($event)\"\r\n                    (displayDescription)=\"displayDescription($event)\"></csi-name-value>\r\n            </div>\r\n        </div>\r\n        <div class=\"csi-property-description\" *ngIf=\"showDescription\">\r\n            <header>{{descriptionName}}</header>\r\n            <div>{{descriptionText}}</div>\r\n        </div>\r\n    </ng-container>\r\n    <ng-template #rowModeTemplate>\r\n        <div class=\"csi-property-list-row\">             \r\n            <div *ngFor=\"let property of (properties)\" class=\"row-property\" [hidden]=\"property.hidden\"> \r\n                <csi-name-value                         \r\n                    class=\"csi-property-row\" \r\n                    [property]=\"property\"\r\n                    [rowMode]=\"true\"\r\n                    [instance]=\"instance\"\r\n                    [valueUpdated]=\"valueUpdated\"></csi-name-value>\r\n            </div>            \r\n        </div>\r\n    </ng-template>\r\n\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { IOMTypeDescriptor, OMType} from '../../../common/objects/viewModel';\nimport { PortalService } from '../../../common/services/portal.service';\nimport { ModalPropertiesContext} from '../properties';\nimport { FieldDirectoryBase, OMTypeDescriptor } from '../../../common/objects/fieldDirectoryBase';\nimport { StudioStateService } from '../../../common/services/studioStateService';\n\n@Component({\n    selector: 'csi-field-expression',\n    styles:[\n        `\n        :host{\n            flex: 1 1 auto;\n            display: flex;\n            flex-direction: column;    \n            height: 100%;\n        }\n        .csi-field-expression {\n            display: flex;\n            flex-direction: column;\n            flex: 1 1 auto;\n            height: 100%;\n        }\n\n        .csi-field-expression .result-row {\n            display: flex;\n            flex-direction: row;\n            flex: 0 0 25px;\n        }\n\n        .csi-field-expression .result-row > input {\n            width: 100%;\n            padding: 5px;\n            height : 25px;\n        }\n\n        .csi-field-expression .result-row > span.btn {\n            padding: 2px 4px 6px 4px;\n            text-align: center;\n            border: 1px solid black;\n            height : 25px;\n        }\n\n        .csi-field-expression .resultItem {\n            padding: 4px;\n            padding-bottom: 6px;\n            background-color: white;\n            cursor: pointer;\n        }\n\n        .csi-field-expression .resultItem:hover {\n            background-color: aquamarine;\n        }\n\n        .csi-field-expression .subtitle {\n            height: 25px;\n            flex: 0 0 auto;\n            display:flex;\n            align-items: center;\n\n        }\n\n        .service-list {\n            height: calc(100% - 120px);\n        }\n\n        `\n    ],\n    templateUrl: 'fieldExpression.html'\n})\n\nexport class FieldExpressionComponent extends FieldDirectoryBase implements OnInit{\n\n    @Input() context: ModalPropertiesContext;\n\n    get result(): string {\n        return this.context && this.context.value;\n    };\n    set result(v: string) {\n        if (this.context)\n            this.context.value = v;\n    };\n    resultItems: string[] = [];\n\n    get readonly(): boolean {\n        return this.context && this.context.property && this.context.property.readOnly;\n    }\n\n    constructor(portal: PortalService, state: StudioStateService) {\n        super(portal, state);\n    }\n\n    ngOnInit() {\n        this.context.title = \"Field Expressions Builder\";\n        if (this.context.property.value) {\n\n            this.resultItems = (<string>this.context.property.value).split(',');\n            this.selectResultItem(this.resultItems[0]);\n        }\n        this.loadServices();\n    }\n\n    selectItem(item: IOMTypeDescriptor) {\n        if (item.ItemType == OMType.Service || item.ItemType == OMType.Type)\n            return;\n\n        this.result = (<OMTypeDescriptor>item).getFieldExpression();\n    }\n\n    addResultItem() {\n        if (this.resultItems.indexOf(this.result) == -1) {\n            this.resultItems.splice(0, 0, this.result);\n            this.result = \"\";\n        }\n    }\n\n    selectResultItem(ri: string) {\n        if (this.result)\n            this.addResultItem();\n        this.result = ri;\n        let i = this.resultItems.indexOf(ri);\n        this.resultItems.splice(i, 1);\n    }\n\n    servicesLoaded() {\n        let primarySrv = '';\n\n        if (this.result && this.result[0] != '.') {\n            primarySrv = this.result.split('.', 1)[0];\n        }\n        else {\n            if(this.context.metadataService)\n                primarySrv = this.context.metadataService.getPrimaryService();\n        }        \n        this.search = primarySrv;\n    }\n\n}\n\n","<div class=\"csi-field-expression\">\n    <div class=result-row>\n        <input type=\"search\" placeholder=\"Expression\" [(ngModel)]=\"result\">\n        <span class=btn (click)=\"addResultItem()\"><i class=\"fa fa-plus\" aria-hidden=\"true\"></i></span>\n    </div>\n    <div class=resultItem *ngFor=\"let ri of resultItems\">\n        <span (click)=selectResultItem(ri)>{{ri}}</span>\n    </div>\n    <div class=\"subtitle\"><i class=\"fa\" [ngClass]=\"!parametricPanel?'fa-caret-down':'fa-caret-right'\" aria-hidden=\"true\" (click)=\"togglePanels(false)\"></i><span class=services>Services</span></div>\n    <div class=search-row *ngIf=\"!parametricPanel\">\n        <input type=search class=search [(ngModel)]=\"search\">\n        <span class=relative-mode [ngClass]=\"{relative: relativeMode}\" (click)=\"relativeMode=!relativeMode\">R</span>\n        <i class=\"refresh fa fa-refresh\" aria-hidden=\"true\" (click)=\"loadServices(true)\"></i>\n    </div>\n    <div class=\"service-list\" *ngIf=\"!parametricPanel\">\n        <div *ngFor=\"let item of (list | fieldDirectorySearchFilter : search)\" class=item-row [style.paddingLeft]=\"item._padding\" [class.hidden]=\"item._hidden\">\n            <span class=expander [class.hidden]=\"!item.IsExpand\" (click)=\"toggle(item)\"><i class=\"fa\" [ngClass]=\"item._expanded?'fa-caret-down':'fa-caret-right'\" aria-hidden=\"true\"></i></span>\n            <span class=text [ngClass]=\"item._imageClass\" [attr.title]=\"item.Metadata.Description\" (click)=\"selectItem(item)\">{{item.Name}}</span>\n        </div>\n    </div>\n\n    <div class=\"subtitle\"><i class=\"fa\" [ngClass]=\"parametricPanel?'fa-caret-down':'fa-caret-right'\" aria-hidden=\"true\" (click)=\"togglePanels(true)\"></i><span class=parametric>Parametric Data</span></div>\n    <div class=\"search-row\" *ngIf=\"parametricPanel\">\n        <input type=\"text\" class=\"search\" [value]=\"pdsearch\">\n        <span class=\"relative-mode\" [class.relative]=\"relativeMode\" (click)=\"relativeMode=!relativeMode\">R</span>\n        <i class=\"refresh fa fa-refresh\" aria-hidden=\"true\" (click)=\"loadParamtericData(true)\"></i>\n    </div>\n    <div class=\"parametric-data-list\" *ngIf=\"parametricPanel\">\n        <div *ngFor=\"let item of (pdlist | fieldDirectorySearchFilter : pdsearch)\" class=item-row [style.paddingLeft]=\"item._padding\" [class.hidden]=\"item._hidden\">\n            <span class=expander [class.hidden]=\"!item.IsExpand\" (click)=\"toggle(item)\"><i class=\"fa\" [ngClass]=\"item._expanded?'fa-caret-down':'fa-caret-right'\" aria-hidden=\"true\"></i></span>\n            <span class=text [ngClass]=\"item._imageClass\" [attr.title]=\"item.Metadata.Description\" (click)=\"selectItem(item)\">{{item.Name}}</span>\n        </div>\n    </div>\n</div>\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MetadataService } from '../../../common/services/metadata.service';\n\n@Component({\n    selector: 'csi-field-expression-dialog',\n    styles: [\n        `\n        :host{\n            min-height: 450px;\n            min-width: 400px;\n            height: 100%;\n            width: 100%;\n\n            display: flex;\n            flex-direction: column;\n        }\n        .csi-field-expression-dialog {\n            main {\n                height: 100%;\n            }\n        }\n        .csi-field-expression {\n            height: 85%;\n        }\n\n        \n        `\n    ],\n\n    template: `\n    <div class=\"csi-modal csi-field-expression-dialog\" csi-dialog-decor [dialog]=\"dialog\">\n\n        <header>\n            <span class=\"title\">{{'Field Expression Builder' | label: 'PS_FIELD_EXPRESSION_BUILDER'}}</span>\n            <span class=\"close-icon\" (click)=\"cancel()\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></span>\n        </header>\n        <main class=\"csi-field-expression\">\n            <csi-field-expression [context]=\"context\" (getTitle)=\"getTitle()\"></csi-field-expression>\n        </main>\n        <footer>\n            <div class=\"btns\">\n                <span class=\"default-btn\" (click)=\"cancel()\">{{'Cancel' | label: 'PS_CANCEL'}}</span>\n                <span class=\"primary-btn\" (click)=\"ok()\">{{'Ok' | label: 'PS_OK'}}</span>\n            </div>\n        </footer>\n    </div>\n    `\n})\nexport class FieldExpressionDialogComponent {\n    context: any;\n\n    get dialog(): MatDialogRef<FieldExpressionDialogComponent> {\n        return this._dialog;\n    }\n\n    constructor(\n        private _dialog: MatDialogRef<FieldExpressionDialogComponent>,\n        private _metadataService: MetadataService\n    ) {\n        this.context = {\n            property: {},\n            metadataService: this._metadataService\n        };\n    }\n\n    initContext(value: string) {\n        this.context.value = value;\n    }\n\n    getTitle() {\n    }\n\n    ok(): void {\n        this._dialog.close(this.context.value);\n    }\n\n    cancel(): void {\n        this._dialog.close();\n    }\n}","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\nimport { LabelService } from '../../../common/services/label.service';\r\n\r\n@Component({\r\n    selector: 'csi-label-search',\r\n    styles: [`\r\n    :host{\r\n        display:flex;\r\n        flex-direction: column;\r\n        flex: 1 1 auto;\r\n\r\n        min-height: 550px;\r\n        min-width: 600px;\r\n\r\n        height: 100%;\r\n        width: 100%;\r\n    }\r\n\r\n    .csi-label-search {\r\n        display:flex;\r\n        flex-direction: column;\r\n        flex: 1 1 auto;\r\n    }\r\n    \r\n    .csi-label-search > main {\r\n        padding: 15px 15px;\r\n    }\r\n\r\n    .csi-label-search > main > form {\r\n        display:flex;\r\n        flex-direction: column;\r\n        height: 450px;\r\n    }\r\n    \r\n    .csi-label-search .ls-filter .ls-label {\r\n        min-width: 150px;\r\n    }\r\n    \r\n    .csi-label-search .ls-filter .ls-input {\r\n        display:flex;\r\n        flex-direction: column;\r\n        flex: 1 1 auto;\r\n    }\r\n    .csi-label-search .ls-filter .ls-input > span {\r\n        min-width: 100px;\r\n    }\r\n    \r\n    .csi-label-search .ls-filter .ls-input input {\r\n        flex-grow: 1;\r\n        width: 100%;\r\n    }\r\n    \r\n    .csi-label-search .ls-group {\r\n        display: flex;\r\n        flex: 1 1 auto;\r\n        padding: 3px 0px;\r\n    }\r\n    \r\n    .csi-label-search .ls-labels {\r\n        display:flex;\r\n        flex-direction: column;\r\n        flex: 1 1 auto;\r\n        border: 1px solid black;\r\n        margin: 15px 0px;\r\n        overflow: hidden;\r\n    }\r\n\r\n    .ls-labels span {\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n    }\r\n    \r\n    .ls-label-header {\r\n        display: flex;\r\n        background-color: #DCDCDC;\r\n        font-weight: bold;\r\n        border-bottom: 1px solid black;\r\n        min-height: 17px;\r\n    }\r\n\r\n    .csi-label-search .ls-label-results {\r\n        flex-grow: 1;\r\n        overflow: auto;\r\n    }\r\n    \r\n    .csi-label-search .ls-labels .ls-label-results .ls-label {\r\n        display: flex;\r\n        border-bottom: 1px solid black;\r\n    }\r\n    \r\n    .csi-label-search .ls-name-col {\r\n        border-right: 1px solid black;\r\n        width: 180px;\r\n    }\r\n    \r\n    .csi-label-search .ls-default-col {\r\n        border-right: 1px solid black;\r\n        width: 150px;\r\n    }\r\n    \r\n    .csi-label-search .ls-local-col {\r\n        border-right: 1px solid black;\r\n        width: 150px;\r\n    }\r\n    \r\n    .csi-label-search .ls-category-col {\r\n        width: 80px;\r\n    }\r\n    \r\n    .csi-label-search .ls-results .ls-label {\r\n        min-width: 100px;\r\n    }\r\n    \r\n    .csi-label-search .ls-results .ls-group .ls-input {\r\n        flex-grow: 1;\r\n    }\r\n    .csi-label-search .ls-results .ls-group .ls-input input {\r\n        width: 100%;\r\n    }\r\n    \r\n    span.ls-label-alert {\r\n        color: red;\r\n    }\r\n    `],\r\n    templateUrl: 'labelSearch.html'\r\n})\r\n\r\nexport class LabelSearchComponent {\r\n    context: any;\r\n    categories: any[];\r\n    labels: any[];\r\n    searchForm: FormGroup;\r\n    resultMessage = { isAlert: false, text: '' };\r\n\r\n    get dialogRef(): MatDialogRef<LabelSearchComponent> {\r\n        return this._dialogRef;\r\n    }\r\n\r\n    constructor(\r\n        private _dialogRef: MatDialogRef<LabelSearchComponent>,\r\n        private _formBuilder: FormBuilder,\r\n        private _labelService: LabelService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this._labelService.getLabelCategories().subscribe(categories => {\r\n            this.categories = categories;\r\n        });\r\n    }\r\n\r\n    initContext(context: any): void {\r\n        this.searchForm = this._formBuilder.group({\r\n            category: '',\r\n            labelSearchName: '',\r\n            labelSearchText: '',\r\n            selectedLabelName: ['', Validators.required],\r\n            selectedDefaultText: '',\r\n            selectedLocalText: ''\r\n        });\r\n\r\n        this.context = context;\r\n        let labelName = this.context.value;\r\n        if (labelName != null && labelName.length > 0) {\r\n            this.searchForm.get('labelSearchName').setValue(labelName);\r\n            this.search(context.value);\r\n        }\r\n    }\r\n\r\n    search(selectedValue: string = \"\"): void {\r\n        let category = this.searchForm.get('category').value;\r\n        let searchName = this.searchForm.get('labelSearchName').value;\r\n        let searchText = this.searchForm.get('labelSearchText').value;\r\n\r\n        this._labelService.getLabels(category, searchName, searchText)\r\n            .subscribe(labels => {\r\n                this.labels = labels;\r\n                if (category == \"\" && searchName == \"\" && searchText == \"\" && labels.length > 199)\r\n                    this.resultMessage = {\r\n                        isAlert: true,\r\n                        text: \"Returned more than 200 rows.  Please use filters to narrow your request.\"\r\n                    };\r\n                else\r\n                    this.resultMessage = {\r\n                        isAlert: false,\r\n                        text: \"Returned: \" + labels.length + \" rows.\"\r\n                    };\r\n\r\n                if (selectedValue) {\r\n                    let label = labels.find(l => l.name = searchName)\r\n                    if (label)\r\n                        this.selectLabel(label);\r\n                }\r\n            });\r\n    }\r\n\r\n    selectLabel(label: any): void {\r\n        this.searchForm.get('selectedLabelName').setValue(label.name);\r\n        this.searchForm.get('selectedDefaultText').setValue(label.defaultValue);\r\n        this.searchForm.get('selectedLocalText').setValue(label.value);\r\n    }\r\n\r\n    ok(): void {\r\n        let labelName = this.searchForm.get('selectedLabelName').value;\r\n        this.context.value = labelName;\r\n        this._dialogRef.close(labelName);\r\n    }\r\n\r\n    cancel(): void {\r\n        this._dialogRef.close();\r\n    }\r\n}","<div class=\"csi-modal csi-label-search\" csi-dialog-decor [dialog]=\"dialogRef\">\r\n    <header [csi-closable]=\"\" (onClose)=\"cancel()\">\r\n        <span class=\"title\">{{'Label Lookup' | label: 'PS_LABEL_LOOKUP'}}</span>\r\n    </header>\r\n    <main>\r\n        <form novalidate [formGroup]=\"searchForm\">\r\n            <section id=\"filter\" class=\"ls-filter\">\r\n                <div class=\"ls-group\">\r\n                    <span class=\"ls-label\">Category:</span>\r\n                    <span class=\"ls-input\">\r\n                        <select id=\"categoryInput\" #category formControlName=\"category\">\r\n                            <option value=\"\">All</option>\r\n                            <option *ngFor=\"let cat of categories\" [value]=\"cat.value\">{{cat.name}}</option>\r\n                        </select>\r\n                    </span>\r\n                </div>\r\n                <div class=\"ls-group\">\r\n                    <span class=\"ls-label\">Search Label Name:</span>\r\n                    <span class=\"ls-input\"><input type=\"text\" #labelSearchName formControlName=\"labelSearchName\"></span>\r\n                </div>\r\n                <div class=\"ls-group\">\r\n                    <span class=\"ls-label\">Search Text:</span>\r\n                    <span class=\"ls-input\">\r\n                        <input type=\"text\" #labelSearchText formControlName=\"labelSearchText\">\r\n                        <span class=\"default-btn\" (click)=\"search()\">{{'Search' | label: 'PS_SEARCH'}}</span>\r\n                    </span>\r\n                </div>\r\n            </section>\r\n            <section id=\"search-results\" class=\"ls-labels\">\r\n                <div class=\"ls-label-header\">\r\n                    <span class=\"ls-name-col\">{{'Name' | label: 'PS_NAME'}}</span>\r\n                    <span class=\"ls-default-col\">{{'Default Text' | label: 'PS_DEFAULT_TEXT'}}</span>\r\n                    <span class=\"ls-local-col\">{{'Local Text' | label: 'PS_LOCAL_TEXT'}}</span>                    \r\n                    <span *ngIf=\"category.value == ''\" class=\"ls-category-col\">{{'Category' | label: 'PS_CATEGORY'}}</span>\r\n                </div>\r\n                <div class=\"ls-label-results\">\r\n                    <div class=\"ls-label\" *ngFor=\"let lab of labels\" (click)=\"selectLabel(lab)\">\r\n                        <span class=\"ls-name-col\">{{lab.name}}</span>\r\n                        <span class=\"ls-default-col\">{{lab.defaultValue}}</span>\r\n                        <span class=\"ls-local-col\">{{lab.value}}</span>\r\n                        <span *ngIf=\"category.value == ''\"  class=\"ls-category-col\">{{lab.category}}</span>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section id=\"selectedLabel\" class=\"ls-results\">\r\n                <div class=\"ls-label-data\" *ngIf=\"resultMessage\">\r\n                    <span [class.ls-label-alert]=\"resultMessage.isAlert\">{{resultMessage.text}}</span>\r\n                </div>\r\n                <div class=\"ls-group\">\r\n                    <span class=\"ls-label\">Default Text</span>\r\n                    <span class=\"ls-input\"><input type=\"text\" formControlName=\"selectedDefaultText\"></span>\r\n                </div>\r\n                <div class=\"ls-group\">\r\n                    <span class=\"ls-label\">Local Text</span>\r\n                    <span class=\"ls-input\"><input type=\"text\" formControlName=\"selectedLocalText\"></span>\r\n                </div>\r\n            </section>\r\n        </form>\r\n    </main>\r\n    <footer>\r\n        <div class=\"btns\">\r\n            <span class=\"default-btn\" (click)=\"cancel()\">{{'Cancel' | label: 'PS_CANCEL'}}</span>\r\n            <span class=\"primary-btn\" (click)=\"ok()\" [ngClass]=\"{'not-active': !searchForm.valid }\">{{'Ok' | label: 'PS_OK'}}</span>\r\n        </div>\r\n    </footer>\r\n</div>","import { Component, Input,  OnInit } from '@angular/core';\r\n\r\nimport { ModalPropertiesContext } from '../properties';\r\n\r\n@Component({\r\n    selector: 'csi-margins',\r\n    host: {\r\n        'class': 'flex-column-grow'\r\n    },\r\n    template: `\r\n        <div class='csi-margins'>\r\n            <div class='view'>\r\n                <div class=\"top cell\">\r\n                    <input type=\"number\" #pxTop [value]=\"data.top\" (change)=\"changeVal('top',pxTop.value)\" [autofocus]=\"true\">\r\n                </div>\r\n                <div class=\"middle\">\r\n                    <div class='left cell'>\r\n                        <input type=\"number\" #pxLeft [value]=\"data.left\" (change)=\"changeVal('left',pxLeft.value)\">\r\n                    </div>\r\n                    <div class=\"center cell\"> </div>\r\n                    <div class='right cell'>\r\n                        <input type=\"number\" #pxRight [value]=\"data.right\" (change)=\"changeVal('right', pxRight.value)\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"bottom cell\">\r\n                    <input type=\"number\" #pxBottom [value]=\"data.bottom\" (change)=\"changeVal('bottom', pxBottom.value)\">\r\n                </div>\r\n            </div>\r\n        </div>`\r\n})\r\n\r\nexport class MarginsComponent implements OnInit {  \r\n\r\n    @Input() context: ModalPropertiesContext;\r\n\r\n    data = {left:'', top:'', right: '', bottom:''};\r\n\r\n    get val(): string { return <string>(this.context.value); }\r\n    set val(v: string) { this.context.value = v; }\r\n\r\n    constructor() {\r\n    }  \r\n      \r\n    ngOnInit(): void {\r\n\r\n        this.context.title = this.context.property.displayedName || this.context.property.name;\r\n\r\n        if (this.val) {\r\n            let v = this.val.split(',');\r\n            this.data.left = v[0];\r\n            this.data.top = v[1];\r\n            this.data.right = v[2];\r\n            this.data.bottom = v[3];\r\n        }\r\n    }\r\n\r\n    changeVal(k: string, v: string) {\r\n        this.data[k] = v;\r\n        let m = this.data;\r\n        this.val = [m.left || '0', m.top || '0', m.right || '0', m.bottom || '0'].join();\r\n    }\r\n}\r\n","import { Component, OnInit, ChangeDetectorRef, OnDestroy} from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\nimport { StudioSubjects, val, ILabel, uuid} from '../../../common/objects/common';\nimport { IMetadataType, IPropertyMetadata, ListItemActions } from '../../../common/objects/viewModel';\nimport { ReadOnlyLevel, PanelUpdatedData } from '../../panel';\nimport { DragInfo } from '../../../shared/drag';\nimport _ from 'lodash';\nimport { MetadataService } from '../../../common/services/metadata.service';\nimport { PropertyListComponent } from '../propertyList';\nimport { Subscription } from 'rxjs';\nimport { AlertService } from '../../../alert/alert.service';\nimport { StudioStateService } from '../../../common/services/studioStateService';\nimport { DragService } from '../../../shared/drag.service';\nimport { DropDataInfo } from '../../../shared/directives/droppable.directive';\n\n\n@Component({\n    selector: 'csi-modal-collection',\n    styleUrls: [\"./modalCollection.less\"],\n    templateUrl: './modalCollection.html'\n})\nexport class ModalCollectionComponent implements OnInit, OnDestroy {\n    context: any;\n\n    // Instance is an item of the collection\n    instance: any = null;\n    subjects: StudioSubjects;\n\n    // base type of collection \n    basePropertyType: string;\n\n    // types derived from base type\n    propertyTypes: IMetadataType[];\n\n    // type of active collection item\n    activePropertyType: IMetadataType;\n    activePropertyTypeName: string;\n\n    nameProperty: IPropertyMetadata;\n\n    // the collection itself\n    collection: any[];\n    items: any[]\n\n    errorMessage: string;\n    itemType: string;\n    cdoRefType: string;\n    readOnly: ReadOnlyLevel;\n    hideTypeInName = false;\n    editable: boolean;\n    reorderingTop: boolean;\n\n    private modelingBehavior: boolean = false;\n    get dialog(): MatDialogRef<ModalCollectionComponent> {\n        return this._dialog;\n    }\n    private nameInputSubs: Subscription;\n    private originalName: string;\n\n    constructor(\n        private _dialog: MatDialogRef<ModalCollectionComponent>,\n        private _alert: AlertService,\n        private _chDetection: ChangeDetectorRef,\n        private _drag : DragService,\n        private _studiStateService: StudioStateService) {\n        this.subjects = new StudioSubjects();\n    }\n\n    initContext(context: any): void {\n        this.context = context;\n    }\n\n    ngOnInit() {\n\n        this.basePropertyType = this.context.property.originalTypeName;\n        if (this.basePropertyType) {\n            if (this.basePropertyType.indexOf('[]') != -1) {\n                this.basePropertyType = this.basePropertyType.replace('[]', '');\n            }\n        }\n        else {\n            this.errorMessage = \"Error: Property type is not defined. Editing impossible\";\n            return;\n        }\n\n        if (this.context.property.editor && this.context.property.editor.options) {\n            let it = this.context.property.editor.options.find(o => o.startsWith(\"itemType=\"));\n            if (it) {\n                this.itemType = it.split('=')[1];\n                this.cdoRefType = this.itemType;\n            }\n        }\n\n        this.propertyTypes = _.sortBy((this.context.metadataService as MetadataService).getSubTypes(this.basePropertyType), t => t._displayedName || t._name);\n        if (this.propertyTypes.length) {\n            // select first\n            this.selectType(this.propertyTypes[0]);\n        }\n\n        if (this.context.hideTypeName !== undefined) {\n            this.hideTypeInName = this.context.hideTypeName;\n        }\n        else {\n            if (this.propertyTypes.length == 1 && this.nameProperty)\n                this.hideTypeInName = true;\n        }\n\n        this.modelingBehavior = this._studiStateService.isModelingBehavior();\n        this.readOnly = this.context.property.readOnly ? ReadOnlyLevel.value : undefined;\n        this.editable = (this.readOnly === undefined);\n\n        this.collection = _.cloneDeep(this.context.value);\n\n        if (this.collection == null)\n            this.collection = [];\n        \n        if(this.collection) this.collection.map(el => el.__id = uuid.id());\n        this.buildItems();\n\n        this.subjects.property.subscribe(upd => {\n            if (this.modelingBehavior) {\n                if (this.instance.__action !== ListItemActions.add)\n                    this.instance.__action = ListItemActions.change;\n            }\n        });\n\n        this.subjects.panel.subscribe(p => {\n            // Set additional instance name verification\n            let data = <PanelUpdatedData>p;\n            let propertyList = data.contentCreated as PropertyListComponent;\n            if (propertyList && propertyList.panel.nameInput) {\n                this.nameInputSubs = propertyList.panel.nameInput.onValChange.subscribe(n => {\n                    this.setInstanceName(n);\n                });\n            }\n        });\n\n        this.selectItem(this.instance);\n    }\n\n    ngOnDestroy() {\n        if (this.nameInputSubs)\n            this.nameInputSubs.unsubscribe();\n\n        this._drag.clear(['collection-item'],null);\n    }\n\n    touch() {\n        this._chDetection.detectChanges();\n    }\n\n    ok() {\n        _.forEach(this.collection, it => {delete it.__parent;  delete it.__id;});\n        this._dialog.close(this.collection);\n    }\n\n    cancel() {\n        _.forEach(this.collection, it => {delete it.__parent;  delete it.__id;});\n        this._dialog.close();\n    }\n\n    selectItem(item: any) {\n        this.instance = item;\n        if (this.instance != null) {\n            if (this.instance.__type && this.propertyTypes.length > 1)\n                this.selectType(this.instance.__type);\n\n        }\n        else {\n            this.instance = null;\n            this.activePropertyType = null;\n            if (this.propertyTypes.length > 0) {\n                // select first\n                this.selectType(this.propertyTypes[0]);\n            }\n        }\n\n        if (this.instance) {\n            this.instance['__selectedInModalCollection'] = true;\n            this.originalName = this.getInstanceName();\n            this.instance.__parent = this.context.instance;\n        }\n\n        this.subjects.propertyPanel.next(this.instance);\n        this.touch();\n    }\n\n    selectType(selectedType: string | IMetadataType) {\n        if (!_.isString(selectedType)) {\n            this.activePropertyType = <IMetadataType>selectedType;\n        }\n        else {\n            let parsed = (<string>selectedType).split('.');\n            if (parsed.length > 1)\n                selectedType = parsed[1];\n\n            this.activePropertyType = this.propertyTypes.find(mdType => mdType._name == <string>selectedType);\n        }\n\n        this.activePropertyTypeName = this.activePropertyType._name.replace('[]', '');\n        this.nameProperty = this.activePropertyType.properties.find(p =>\n            p.name.toLowerCase() == 'name' ||\n            (p.displayedName && p.displayedName.toLowerCase() == 'name') ||\n            (p.editor && p.editor.parameters && p.editor.parameters.find(ep => ep == 'asItemName') !== undefined));\n    }\n\n    add(): void {\n        // TODO: this should be unique name validation\n        let itemType = this.activePropertyType._name;\n        if (this.activePropertyType._namespace)\n            itemType = this.activePropertyType._namespace + '.' + itemType;\n\n        let newItem = { __type: itemType, __index: this.collection.length + 1, __parent: this.context.instance };\n        if (this.modelingBehavior)\n            newItem['__action'] = ListItemActions.add;\n\n        if (this.activePropertyType.properties) {\n            if (this.nameProperty) {\n                if( (this.nameProperty.editor && this.nameProperty.editor.parameters && this.nameProperty.editor.parameters.find(ep => ep == 'asItemName') !== undefined) || this.cdoRefType )\n                    newItem[this.nameProperty.name] = \"\";    \n                else\n                    newItem[this.nameProperty.name] = this.generateNewName();\n            }\n        }\n        if (this.itemType) {\n            newItem['CDOTypeName'] = this.itemType;\n        }\n\n        (<any>newItem).__id = uuid.id();\n\n        if (this.collection == null)\n            this.collection = [newItem];\n        else\n            this.collection.push(newItem);\n\n        this.buildItems();\n        this.selectItem(newItem);\n    }\n\n    delete(item): void {\n        if (this.modelingBehavior) {\n            item['__action'] = ListItemActions.delete;\n        }\n        else {\n            let i = _.findIndex(this.collection, item);\n            if (i !== undefined && i != -1) {\n                this.collection.splice(i, 1);\n            }\n        }\n        this.buildItems();\n        this.selectItem(null);\n    }\n\n    private generateNewName(): string {\n        return this._studiStateService.getUniqueName(this.activePropertyType._name + '0', this.collection, this.nameProperty.name);\n    }\n\n    getName(el) {\n        let res = '';\n        let n = this.nameProperty ? val(el, this.nameProperty.name) : '';\n        if (n)\n            res = n;\n\n        if (!this.hideTypeInName && el.__type) {\n            let p = el.__type.split('.');\n            if (p.length > 1)\n                res += '[' + p[1] + ']';\n            else\n                res += '[' + el.__type + ']';\n        }\n        return res;\n    }\n\n    getDropOptions(el:any) : DropDataInfo {\n        // item is undefined for type selector to be able to insert before 0 position\n        return <DropDataInfo>{\n            id: 'dz_'+(el.__id),\n            disabled: false,\n            types: 'collection-item',\n            drop: (d, tm) => this.onDrop(d, tm),\n            over: (d, m) => this.onOver(d, m),\n            model: el\n        };\n    }\n\n\n    getInstanceName() {\n        return this.nameProperty ? this.instance[this.nameProperty.name] : this.instance.name;\n    }\n\n    setInstanceName(name: string) {\n        let nameKey = this.nameProperty ? this.nameProperty.name : 'name';\n        let nameLc = name.toLowerCase();\n        if (_.find(this.collection, v => val(v, nameKey).toLowerCase() == nameLc && v != this.instance)) {\n            let err: ILabel;\n            if( this.context.duplicationErrorLabel ){\n                err = this.context.duplicationErrorLabel;\n            }\n            else {\n                err = <ILabel>{\n                    Name: 'PS_NAME_EXISTS_ERROR',\n                    DefaultValue: '{0} with name {1} already exists. Changes are discarded.',\n                    arguments: [this.activePropertyTypeName, name]\n                }\n            };\n            this._alert.errorModal(err).subscribe(r => {\n                this.instance[nameKey] = this.originalName;\n                this.selectItem(this.instance);\n            });\n        }\n        else\n            this.instance[nameKey] = name;\n    }\n\n    private buildItems(): void {\n        this.items = _.filter(this.collection, v => v.__action !== ListItemActions.delete);\n    }\n\n    private onDrop(d: DragInfo, dropInf: DropDataInfo) {\n        const targetModel = dropInf.model;        \n        // Reorder \n        let sourceIndex = this.collection.findIndex(c => c === d.dragModel);\n        if (sourceIndex != -1) {\n            let targetIndex = targetModel ? this.collection.findIndex(c => c === targetModel) : -1;\n            const moveDown = targetIndex >= sourceIndex;\n            let removedItem = this.collection.splice(sourceIndex, 1)[0];\n            targetIndex = targetModel ? this.collection.findIndex(c => c === targetModel) : -1;\n            if( moveDown )\n                targetIndex ++;\n            // if target index = -1 the item is inserted at 0 position\n            this.collection.splice(targetIndex, 0, removedItem);\n        }\n        this.buildItems();\n    }\n\n    private onOver(d: DragInfo, mdl: any) {        \n        if (!d.leaveZone) {            \n            if (mdl)\n                mdl.__reordering = true;\n            else\n                this.reorderingTop = true;\n        }\n        else {\n            if (mdl)\n                delete mdl.__reordering;\n            else\n                this.reorderingTop = false;\n        }\n    }\n}\n","<div class=\"csi-modal csi-modal-collection\" csi-dialog-decor [dialog]=\"dialog\" #modalroot>\n    <header csi-closable (onClose)=\"cancel()\">\n        <span class=\"title\">{{context.property.name}}</span>\n    </header>\n    <main>\n        <div class=\"left-panel\" #leftPanel>\n            <div *ngIf=\"!context.disableAdding\" class=\"type-selector\" [class.reordering]=\"reorderingTop\">\n                <select [ngModel]=\"activePropertyTypeName\" (ngModelChange)=\"selectType($event)\" [disabled]=\"!editable\">\n                    <option *ngFor=\"let ptype of propertyTypes\" [value]=\"ptype._name\">{{ptype._displayedName  || ptype._name}}</option>\n                </select>\n                <button (click)=\"add()\" [disabled]=\"!editable\"> + </button>\n            </div>\n            <div class=\"instances\"> \n                <div *ngFor=\"let el of items\" [csi-droppable]=\"getDropOptions(el)\" [id]=\"'dz_'+(el.__id)\" class=\"inst-cont\">\n                    <div class=\"instance\"  [class.selected]=\"el==instance\" [class.changed]=\"el?.__action==1\" (click)=\"selectItem(el)\" [id]=\"el.__id\"\n                            [class.reordering]=\"el.__reordering\"\n                            [attr.title]=\"el.name||el.Name\"\n                            [csi-draggable]=\"{type: 'collection-item', id: el.__id, model: el, handleContainer: modalroot}\">\n                        <span *ngIf=\"editable\" class=\"delete\" (click)=\"delete(el)\"><i class=\"fa fa-trash\" aria-hidden=\"true\"></i></span>\n                        <span class=\"name\">{{getName(el)}}</span>\n                    </div>\n                </div>\n            </div>\n        </div>    \n        <csi-panel-splitter direction=\"v\" [panel]=\"leftPanel\" [panelBefore]=\"true\" ></csi-panel-splitter>\n        <div #rightPanel class=\"right-panel\" [hidden]=\"instance==null\" (click)=\"touch()\">\n            <csi-panel [component]=\"'csi-property-list'\" [subjects]=\"subjects\" [readOnly]=\"readOnly\" [parameters]=\"{showDescription: false, cdoType: itemType}\"></csi-panel>\n        </div>\n    </main>\n    <footer>        \n        <div class=\"popup-message\"><span>{{errorMessage}}</span></div>\n        <div class=\"btns\">\n            <span class=\"default-btn\" (click)=\"cancel()\">{{'Cancel' | label: 'PS_CANCEL'}}</span>\n            <span class=\"primary-btn\" (click)=\"ok()\" *ngIf=\"editable\">{{'Ok' | label: 'PS_OK'}}</span>\n        </div>\n    </footer>\n</div>\n","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ModalPropertiesContext } from '../properties';\r\nimport { StudioSubjects } from '../../../common/objects/common';\r\n\r\n@Component({\r\n    selector: 'csi-modal-container',\r\n    styles:[\r\n    `\r\n    :host{\r\n        min-height: 550px;\r\n        min-width: 450px;\r\n        height: 100%;\r\n        width: 100%;\r\n\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n\r\n    .field-expression-container{\r\n        flex: 1 1 auto;\r\n        display: flex;\r\n        flex-direction: column;        \r\n    }\r\n    .portal-settings-container, .longtext-container, .query-builder-container, .target-matrix-rows-container {\r\n        flex: 1 1 auto;\r\n        display: flex;\r\n        flex-direction: column;        \r\n    }\r\n\r\n\r\n    .csi-property-textarea.long-text{\r\n        flex: 1 1 auto;\r\n    }\r\n\r\n    .webi-reports-container{\r\n        flex: 1 1 auto;\r\n        display: flex;\r\n        flex-direction: column;        \r\n    }\r\n\r\n    `],\r\n    templateUrl: './modalContainer.html'\r\n})\r\n\r\nexport class ModalContainerComponent implements OnInit {\r\n    context: ModalPropertiesContext;\r\n    errorMessage: string;\r\n    contentType: string;\r\n    subjects: StudioSubjects;\r\n\r\n    get dialog(): MatDialogRef<ModalContainerComponent> {\r\n        return this._dialog;\r\n    }\r\n\r\n    get readonly(): boolean {\r\n        return this.context && this.context.property && this.context.property.readOnly;\r\n    }\r\n\r\n    constructor(\r\n        private _dialog: MatDialogRef<ModalContainerComponent>,\r\n        private _chDetection: ChangeDetectorRef) {\r\n        this.subjects = new StudioSubjects();\r\n    }\r\n\r\n    initContext(context: any) {\r\n        this.context = context;\r\n    }\r\n\r\n    ngOnInit() {\r\n        let propEditor = (this.context && this.context.property) ? this.context.property.editor : undefined;\r\n\r\n        if (propEditor && propEditor.provider)\r\n            this.contentType = propEditor.provider;\r\n\r\n        else \r\n            if(propEditor && propEditor.parameters && propEditor.parameters.length && propEditor.parameters[0] == \"longText\"){\r\n                this.contentType = 'longText';\r\n            }\r\n        else\r\n            this.contentType = 'portalSettings';\r\n    }\r\n\r\n    getTitle() {\r\n        return this.context.title;\r\n    }\r\n\r\n    touch() {\r\n        this._chDetection.detectChanges();\r\n    }\r\n\r\n\r\n    ok() {\r\n        let closing = this.context.beforeClose ? this.context.beforeClose(true) : true;\r\n        if( closing )\r\n            this._dialog.close(this.context.value);\r\n    }\r\n\r\n    cancel() {\r\n        let closing = this.context.beforeClose ? this.context.beforeClose(false) : true;\r\n        if( closing )\r\n            // restore\r\n            this._dialog.close();\r\n    }\r\n\r\n}\r\n","<div class=\"csi-modal csi-modal-container\" (click)=\"touch()\" csi-dialog-decor [dialog]=\"dialog\">\r\n    <header csi-closable (onClose)=\"cancel()\">\r\n        <span class=\"title\">{{context.title||context.property?.name}}</span>\r\n    </header>\r\n    <main [ngSwitch]=\"contentType\">\r\n        <section *ngSwitchCase=\"'fieldExpression'\" class='field-expression-container'>\r\n            <csi-field-expression [context]=\"context\" (getTitle)=\"getTitle()\"></csi-field-expression>\r\n        </section>\r\n        <section *ngSwitchCase=\"'portalSettings'\" class='portal-settings-container'>\r\n            <csi-portal-settings [context]=\"context\" [subjects]=\"subjects\"></csi-portal-settings>\r\n        </section>\r\n        <section *ngSwitchCase=\"'margins'\" class='margins-container'>\r\n            <csi-margins [context]=\"context\" (getTitle)=\"getTitle()\"></csi-margins>\r\n        </section>\r\n        <section *ngSwitchCase=\"'longText'\" class='longtext-container'>\r\n            <textarea class=\"csi-property-textarea long-text\" [(ngModel)]=\"context.value\">\r\n            </textarea>\r\n        </section>\r\n        <section *ngSwitchCase=\"'queryBuilder'\" class='query-builder-container'>\r\n            <csi-query-builder [context]=\"context\" (getTitle)=\"getTitle()\"></csi-query-builder>\r\n        </section>\r\n        <section *ngSwitchCase=\"'pageActionRuleBuilder'\" class='page-action-rule-builder-container'>\r\n            <csi-page-action-rule-builder [context]=\"context\" (getTitle)=\"getTitle()\"></csi-page-action-rule-builder>\r\n        </section>\r\n        <section *ngSwitchCase=\"'targetMatrixRows'\" class='target-matrix-rows-container'>\r\n            <csi-target-matrix-rows [context]=\"context\" (getTitle)=\"getTitle()\"></csi-target-matrix-rows>\r\n        </section>\r\n        <section *ngSwitchCase=\"'webiReports'\" class='webi-reports-container'>\r\n            <csi-webi-reports [context]=\"context\" (getTitle)=\"getTitle()\"></csi-webi-reports>\r\n        </section>\r\n        <section *ngSwitchDefault>\r\n            <h3>{{context.property?.editor?.provider}} is not yet implemented</h3>\r\n        </section>\r\n    </main>\r\n    <footer>        \r\n        <div class=\"popup-message\"><span>{{errorMessage}}</span></div>\r\n        <div class=\"btns\">\r\n            <span class=\"default-btn\" (click)=\"cancel()\">{{'Cancel' | label: 'PS_CANCEL'}}</span>\r\n            <span class=\"primary-btn\" (click)=\"ok()\" *ngIf=\"!readonly\">{{'Ok' | label: 'PS_OK'}}</span>\r\n        </div>\r\n    </footer>\r\n</div>\r\n","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { ModalPropertiesContext } from '../properties';\nimport { StudioSubjects } from '../../../common/objects/common';\nimport { IMetadataType } from '../../../common/objects/viewModel';\nimport { ReadOnlyLevel } from '../../panel';\n\n@Component({\n    selector: 'csi-modal-object',\n    styles: [\n        `\n        :host{\n            min-height: 450px;\n            min-width: 400px;\n            height: 100%;\n            width: 100%;\n        }\n\n        .csi-modal-object > main > section{\n            display: flex;\n            flex-direction: column;\n            flex: 1 1 auto;\n        }\n        .csi-modal-object > main > section > .type-selector {\n            flex: 0 0 auto;\n        }\n        .csi-modal-object > main > section > .type-selector > select {\n            height: 24px;\n            width: 100%;\n            cursor: pointer;\n        }\n        .csi-modal-object > main > section > .content {\n            display: flex;\n            flex-direction: column;\n            flex: 1 1 auto;\n        }\n        `\n    ],\n    template: `\n<div class=\"csi-modal csi-modal-object\" csi-dialog-decor [dialog]=\"dialog\">\n    <header csi-closable (onClose)=\"cancel()\">\n        <span class=\"title\">{{context.property.name}}</span>\n    </header>\n    <main>\n        <section>            \n            <div class=\"type-selector\" [hidden]=\"!showTypeSelector\">\n                <select [(ngModel)]=\"activePropertyTypeName\" [disabled]=\"lockTypeSelector\">\n                    <option *ngFor=\"let ptype of propertyTypes\" [value]=\"ptype._name\">{{ptype._displayedName || ptype._name}}</option>\n                </select>\n            </div>\n            <div class=\"content\" (click)=\"touch()\">\n                <csi-panel [component]=\"'csi-property-list'\" [subjects]=\"subjects\" [readOnly]=\"readOnly\" [parameters]=\"{showDescription: false}\"></csi-panel>\n            </div>\n        </section>\n    </main>\n    <footer>        \n        <div class=\"popup-message\"><span>{{errorMessage}}</span></div>\n        <div class=\"btns\">\n            <span class=\"default-btn\" (click)=\"cancel()\">{{'Cancel' | label: 'PS_CANCEL'}}</span>\n            <span class=\"primary-btn\" (click)=\"ok()\" *ngIf=\"readOnly===undefined\">{{'Ok' | label: 'PS_OK'}}</span>\n        </div>\n    </footer>\n</div>`\n})\n\nexport class ModalObjectComponent implements OnInit {\n    context: ModalPropertiesContext;\n\n    instance: any;\n    subjects: StudioSubjects;\n\n    // base type of object\n    basePropertyType: string;\n\n    // types derived from base type\n    propertyTypes: IMetadataType[];\n\n    // type of active collection item\n    get activePropertyTypeName(): string { return this._activePropertyType._name; }\n    set activePropertyTypeName(t: string) { this.onChangePropertyType(t); }\n\n    showTypeSelector: boolean = false;\n    lockTypeSelector : boolean = false;\n\n    errorMessage: string;    \n\n    readOnly: ReadOnlyLevel;\n\n    get dialog(): MatDialogRef<ModalObjectComponent> {\n        return this._dialog;\n    }\n\n    constructor(\n        private _dialog: MatDialogRef<ModalObjectComponent>,\n        private _chDetection: ChangeDetectorRef) {\n        this.subjects = new StudioSubjects();\n    }\n\n    initContext(context: any): void {\n        this.context = context;\n    }\n\n    ngOnInit() {\n        this.basePropertyType = this.context.property.originalTypeName;\n        if (!this.basePropertyType) {\n            this.errorMessage = \"Error: Property type is not defined. Editing impossible\";\n            return;\n        }\n\n        this.propertyTypes = this.context.metadataService.getSubTypes(this.basePropertyType);\n        this.showTypeSelector = this.propertyTypes ? this.propertyTypes.length > 1 : false;\n        if( this.context.property && this.context.property.editor && \n            this.context.property.editor.parameters && this.context.property.editor.parameters.find(p=> p == \"noTypeSelector\"))\n            this.showTypeSelector = false;\n            \n        if (this.context.value && this.context.value.__type) {\n            this.setActiveType(this.context.value.__type);\n        }\n        else {\n            if (this.propertyTypes.length) {\n                // select first                \n                this._activePropertyType = this.propertyTypes[0];\n            }\n        }\n\n        this.instance = this.context.value;\n        if (this.instance == null && this._activePropertyType) {\n            let tn = this._activePropertyType._name;\n            if (this._activePropertyType._namespace)\n                tn = this._activePropertyType._namespace + '.' + tn;\n\n            this.instance = { __type: tn };\n        }\n        this.readOnly = this.context.property.readOnly ? ReadOnlyLevel.value : undefined;\n        if (this.readOnly == ReadOnlyLevel.value)\n            this.showTypeSelector = false;\n       \n        this.instance.__parent = this.context.instance;\n        this.subjects.panel.subscribe(() => this.subjects.propertyPanel.next(this.instance));\n    }\n\n    touch() {\n        this._chDetection.detectChanges();\n    }\n\n    setActiveType(t: string) {\n        this._activePropertyType = this.propertyTypes.find(mdType => {\n            if (mdType._namespace)\n                return (mdType._namespace + '.' + mdType._name) == t;\n            else\n                return mdType._name == t;\n        });\n    }\n\n    onChangePropertyType(t: string) {\n        this.setActiveType(t);\n        if (this._activePropertyType) {\n            this.instance.__type = this._activePropertyType._name;\n            if(this.instance.typeName)\n                this.instance.typeName = this._activePropertyType._name;\n            \n            this.subjects.propertyPanel.next(this.instance);\n        }\n    }\n\n    ok() {\n        delete this.instance.__parent;\n        this._dialog.close(this.instance);\n    }\n\n    cancel() {\n        delete this.instance.__parent;\n        this._dialog.close();\n    }\n\n    private _activePropertyType: IMetadataType;\n}\n","import { Component, Input,  OnInit } from \"@angular/core\";\n\nimport { ModalPropertiesContext } from '../properties';\nimport { ValueProviderService, SelectableItem } from \"../../../common/services/dataValue.service\";\nimport { IPropertyMetadata, IPropertyEditor, IOMTypeDescriptor, FieldTypeCode } from \"../../../common/objects/viewModel\";\nimport { ValueUpdatedData, val } from \"../../../common/objects/common\";\nimport { Subject, from } from \"rxjs\";\nimport {toArray} from \"rxjs/operators\";\n\n@Component({\n    selector: \"csi-page-action-rule-builder\",\n    styles: [`\n        :host{\n            display: flex;\n            flex-direction: column;\n            flex: 1 1 auto;\n            min-width: 800px;\n        }\n        .csi-page-action-rule-builder{\n            display: flex;\n            flex-direction: column;\n            flex: 1 1 auto;            \n            padding: 1px;\n        }\n        .rule-text{\n            display: flex;\n            flex-direction: column;\n            flex: 1 1 auto;        \n            padding: 4px;    \n        }\n        \n        .long-text{\n            height: 300px;\n        }\n\n        .query-item{\n            width: 100%;\n            cursor: pointer;\n            padding: 3px;\n            flex: 0 0 auto;\n        }\n        .query-items-panel{\n            padding: 4px;\n            display: flex;\n            flex-direction: column;\n            flex: 0 0 200px;\n            border: 1px solid #aaaaaa;\n        }\n        .query-item-selector{\n            display: inline-flex;\n            flex: 0 0 auto;\n        }\n\n        .query-item-selector select{\n            height: 23px;\n        }\n        .item-rows{\n            display: flex;\n            flex-direction: column;\n            flex: 1 1 auto;\n            overflow: auto;\n        }\n        .item-row{\n            display: inline-flex;\n            flex: 0 0 auto;\n        }\n        .item-row:nth-child(even){\n            background-color: #eeeeee;\n        }\n        .column-header{            \n            display: flex;\n            flex: 0 0 20px;       \n            background-color: #dcdcdc;\n            font-weight: bold;\n            border-bottom: 1px solid #aaaaaa;                 \n            border-top: 1px solid #aaaaaa;\n        }\n\n        .col-operation{            \n            flex: 0 0 150px;\n            align-self: center;\n            text-align: center;\n        }\n        .col-leftValue-type{\n            flex: 1 1 auto;\n        }\n        .col-leftValue-field{\n        flex: 1 1 auto;\n        }\n        .col-leftValue-instance select{\n            width: 200px;\n        }\n        .col-comparison{            \n            flex: 1 1 auto;\n            text-align: center;\n        }\n        .col-rightValue{\n            flex: 1 1 auto;\n        }\n        .col-exp {            \n            flex: 1 1 auto;\n        }\n        .col-exp input{\n            width : 100%;\n            background-color: transparent;\n        }\n        .query-items .item-row {\n            display: flex;\n            flex: 0 0 auto;\n            border-bottom: 1px solid #aaaaaa;\n            border-left: 1px solid #aaaaaa;\n            border-right: 1px solid #aaaaaa;            \n        }\n        .query-items .item-row .col-name {\n            text-align: left;  \n            text-overflow: ellipsis;          \n        }\n        .add-button{\n         max-height:28px;\n        }\n        .selected{\n            background-color: #aaaaaa;\n        }\n    `],\n    templateUrl: \"pageActionRuleBuilder.component.html\"\n})\nexport class PageActionRuleBuilderComponent implements OnInit {  \n    @Input() context: ModalPropertiesContext;\n\n    get textValue(): string { return <string>(this.context.value) || ''; }\n    set textValue(v: string) { this.context.value = v; }\n\n    expItems: expressionItem[] = [];\n    expProp : {[name:string] : IPropertyMetadata};\n\n    propChanged = new Subject<ValueUpdatedData>();\n    \n    constructor(private _valueService: ValueProviderService) {\n        this.propChanged.subscribe(c=> this.onFieldChanged(c));\n    }  \n      \n    ngOnInit(): void {\n        this.context.title = \"Page Action Rule Builder\";\n        this.init();\n    \n        if(this.context.instance){\n            // load initial parameters\n            this.textValue = this.context.instance.expression;\n        }\n        this.onFieldChanged(new ValueUpdatedData(\"leftValueType\", this.leftValueTypes.Container ) )\n        this.changeText(this.textValue);\n    }\n\n    changeText(v) {\n        this.textValue = v;\n        this.expItems = this.parseText();        \n    }\n\n    onFieldChanged(upd: ValueUpdatedData){\n        let pr = val(this.expProp, upd.propertyName) as IPropertyMetadata;\n        pr.value = upd.val;\n\n        let pLc = upd.propertyName.toLowerCase();        \n\n        if(pLc  == \"leftValueType\".toLowerCase()){\n            let lv = this.expProp.leftValueField;        \n            lv.editor.parameters = [upd.val];\n            lv.editor.selectableItems = this._valueService.fieldsDirectory(lv, null);\n            lv.value = \"\";\n        }\n        else if(pLc == \"leftValueField\".toLowerCase() ){\n            let md = (<IOMTypeDescriptor>upd.val).Metadata;\n            let rv = this.expProp.rightValue;\n            if(md.IsList || md.HasSelVal || upd.val.TypeName == \"NamedObjectRef\" || upd.val.TypeName == \"RevisionedObjectRef\"){\n                rv.editor.directive = \"selector\";\n                rv.editor.parameters = [md.CDOTypeName];\n                rv.editor.selectableItems = this._valueService.ndoInstances(rv);\n                rv.value = null;                \n            }\n            else{\n                rv.editor.directive = \"text\";\n                if( md.FieldTypeCode == FieldTypeCode.TimeStamp)\n                    rv.originalTypeName = \"DateTime\";\n                else if (md.FieldTypeCode == FieldTypeCode.Boolean)\n                    rv.editor.directive = \"switchBox\";                \n                else\n                    rv.originalTypeName = \"String\";\n                rv.value = \"\";                \n            }\n        }\n    }\n\n    private parseText() : expressionItem[] {\n        let items : expressionItem[] = [];\n        if( this.textValue ){            \n            let op = '';\n            let it : expressionItem = new expressionItem();\n\n            this.textValue.split(' ').forEach(s=>{\n                let p = s.trim();\n                if( p.toLowerCase() == \"and\" || p.toLowerCase() == \"or\" ){\n                    op = p;\n                    items.push(it);\n                    it = new expressionItem(op);\n                }\n                else\n                    it.text += s;\n            });\n\n            // last item\n            if( it.text )\n                items.push(it);\n        }\n        return items;\n    }\n\n    private getLValue(){\n        let v : IOMTypeDescriptor = this.expProp.leftValueField.value;\n        if( v.TypeName == \"NamedObjectRef\" ||  v.TypeName == \"RevisionedObjectRef\")\n            return v.Name + \".Name\";\n        return v.Name;\n    }\n    private getRValue(){\n        let lf : IOMTypeDescriptor = this.expProp.leftValueField.value;\n        let t = lf.Metadata.FieldTypeCode;\n        if(t == FieldTypeCode.Integer) {\n            return `Constants.${this.expProp.rightValue.value}`;\n        }\n        else if(t == FieldTypeCode.Boolean) {\n            return `Constants.${(this.expProp.rightValue.value==true ? \"True\" : \"False\")}`;\n        }\n        else{\n            return `\"${this.expProp.rightValue.value}\"`;\n        }\n    }\n\n    addExp() : void {\n        // disable adding if boolean is not set\n        let lf : IOMTypeDescriptor = this.expProp.leftValueField.value;\n        if(lf.Metadata.FieldTypeCode == FieldTypeCode.Boolean && this.expProp.rightValue.value == \"\")\n            return;\n            \n        let s = '';\n        // first exp item should not have an bitwise operator\n        if(this.expItems.length > 0)\n            s += ` ${this.expProp.bitwiseOp.value} `;\n        \n        s += `${this.expProp.leftValueType.value}.${this.getLValue()} ${this.expProp.comparisonOp.value} ${this.getRValue()}`;\n\n        this.textValue += s;\n        this.expItems = this.parseText();\n    }\n\n    private init() {\n        this.expProp = {\n            bitwiseOp : <IPropertyMetadata> {\n                name:'bitwiseOp',  \n                value: \"And\",\n                editor: <IPropertyEditor>{directive : \"selector\", \n                    selectableItems : from(this.operations.map(s=> new SelectableItem(s))).pipe(toArray())}},\n            leftValueType : <IPropertyMetadata> {\n                name:'leftValueType', required: true,\n                editor: <IPropertyEditor>{directive : \"selector\",  \n                    selectableItems: from( Object.keys(this.leftValueTypes).map( k=> new SelectableItem(k, this.leftValueTypes[k]))).pipe(toArray())}},\n            leftValueField : <IPropertyMetadata> { \n                name: \"leftValueField\",\n                editor: <IPropertyEditor>{directive: \"selector\", provider: \"fieldsDirectory\"}},\n            comparisonOp: <IPropertyMetadata> {\n                name:'comparisonOp', required: true, \n                    value: \"=\",\n                    editor: <IPropertyEditor>{directive : \"selector\", \n                    selectableItems : from(this.comparisons.map(s=> new SelectableItem(s))).pipe(toArray())}},\n            rightValue: <IPropertyMetadata> { \n                name: \"rightValue\", value: \"\",\n                editor: <IPropertyEditor>{directive: \"text\"} }\n        };\n    }\n\n    private operations = ['And', 'Or'];\n    private comparisons= [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\"];\n    private leftValueTypes = {Container : 'CurrentContainerStatus', Resource:'ResourceStatusDetails', \n                Event:'QualityObjectStatusDetail', ChangePackage:'ChangePackage'};\n}\n\nclass expressionItem {\n    public bitwiseOp: string;\n    public leftValueType : string;\n    public leftValueField : any;\n    public comparisonOp: string;\n    public rightValue: any;\n    public text: string;\n\n    constructor(bitOp: string = \"\", txt: string = \"\"){\n        this.bitwiseOp = bitOp;\n        this.text = txt;\n    }\n}\n","<div class=\"csi-page-action-rule-builder\">\r\n    <div class=\"rule-text\">\r\n        <textarea [attr.spellcheck]=\"false\" class=\"csi-property-textarea long-text\" [value]=\"textValue\" #textcontrol (input)=\"changeText(textcontrol.value)\"></textarea>\r\n    </div>\r\n    <div class=\"query-items-panel\">\r\n        <div class=\"query-item-selector\">\r\n            <div class=\"col-operation\">\r\n                <csi-editor-selector [property]=\"expProp.bitwiseOp\" [items]=\"expProp.bitwiseOp.editor.selectableItems\" [value]=\"expProp.bitwiseOp.value\" [valueChanged]=\"propChanged\"></csi-editor-selector>\r\n            </div>\r\n            <div class=\"col-leftValue-type\">\r\n                <csi-editor-selector [property]=\"expProp.leftValueType\" [items]=\"expProp.leftValueType.editor.selectableItems\" [value]=\"expProp.leftValueType.value\" [valueChanged]=\"propChanged\"></csi-editor-selector>\r\n            </div>\r\n            <div class=\"col-leftValue-field\">\r\n                <csi-editor-selector [property]=\"expProp.leftValueField\" [items]=\"expProp.leftValueField.editor.selectableItems\" [value]=\"expProp.leftValueField.value\" [valueChanged]=\"propChanged\"></csi-editor-selector>\r\n            </div>\r\n            <div class=\"col-comparison\">\r\n                <csi-editor-selector [property]=\"expProp.comparisonOp\" [items]=\"expProp.comparisonOp.editor.selectableItems\" [value]=\"expProp.comparisonOp.value\" [valueChanged]=\"propChanged\"></csi-editor-selector>\r\n            </div>\r\n            <div class=\"col-rightValue\">\r\n                <csi-editor-selector *ngIf=\"expProp.rightValue.editor.directive=='selector'\" [property]=\"expProp.rightValue\" [items]=\"expProp.rightValue.editor.selectableItems\" [value]=\"expProp.rightValue.value\" [valueChanged]=\"propChanged\">\r\n                </csi-editor-selector>\r\n                <csi-editor-text *ngIf=\"expProp.rightValue.editor.directive=='text'\" [property]=\"expProp.rightValue\" [value]=\"expProp.rightValue.value\" [valueChanged]=\"propChanged\">\r\n                </csi-editor-text>\r\n                <csi-editor-switchbox *ngIf=\"expProp.rightValue.editor.directive=='switchBox'\" [property]=\"expProp.rightValue\" [valueChanged]=\"propChanged\">\r\n                </csi-editor-switchbox>\r\n            </div>\r\n                <button class=\"add-button\" (click)=\"addExp()\">Add</button>\r\n        </div>\r\n        <div class=\"column-header\">\r\n            <div class=\"col-operation\"></div>\r\n            <div class=\"col-exp\">Expression</div>            \r\n        </div>\r\n        <div class=\"item-rows\">\r\n            <div class=\"item-row\" *ngFor=\"let p of expItems\">\r\n                <div class=\"col-operation\">{{p.bitwiseOp}}</div>\r\n                <div class=\"col-exp\"><input class=\"col-value-input\" type=\"text\" [(ngModel)]=\"p.text\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, Input,  OnInit } from '@angular/core';\n\nimport { StudioSubjects} from '../../../common/objects/common';\nimport { LabelService } from '../../../common/services/label.service';\nimport { PanelSettings } from '../../panel';\nimport { ModalPropertiesContext } from '../properties';\nimport { PortalSettingsService, SettingSection } from '../../../common/services/portalSettings.service';\n\nimport { Observable } from 'rxjs';\n\n\n@Component({\n    selector: 'csi-portal-settings',\n    styles:[\n        `\n        :host{\n            flex: 1 1 auto;\n            display: flex;\n            flex-direction: column;\n            min-width: 600px;\n        }\n\n        .csi-portal-settings {\n            flex: 1 1 auto;\n            display: flex;\n        }\n        .left-panel {\n            min-width: 10%;\n            overflow: auto;\n            flex: 1 1;\n        }\n        .left-panel .instances {\n            height: 100%;\n            border-right: solid 1px #aaaaaa;\n        }\n        .left-panel .instance {\n            cursor: pointer;\n            padding: 3px;\n        }\n        .left-panel .instance.selected {\n            background-color: #aaaaaa;\n            color: white;\n        }\n\n        .right-panel {\n            overflow: auto;\n            width: 70%;\n            padding-left: 5px;\n            display: flex;\n            flex-direction: column;\n        }\n    }\n    `],\n    template: `\n        <div class='csi-portal-settings'>\n            <div class='left-panel'>\n                <div class=\"instances\">\n                    <div *ngFor=\"let section of sections | async\">\n                        <div class=\"instance\" [class.selected]=\"section===activeSection\" (click)=\"selectSection(section)\">{{section.type._name}}</div>\n                    </div>\n                </div>\n            </div>\n            <csi-panel-splitter direction=\"v\" [panel]=\"rightPanel\"></csi-panel-splitter>\n            <div class='right-panel' #rightPanel>\n                <csi-panel [component]=\"'csi-property-list'\" [subjects]=\"subjects\" [parameters]=\"{showDescription: false}\"></csi-panel>\n            </div>\n        </div>\n    `\n})\n\nexport class PortalSettingsComponent implements OnInit {  \n\n    @Input() context: ModalPropertiesContext;\n    @Input() subjects: StudioSubjects;\n\n    sections: Observable<SettingSection[]>;\n    activeSection: SettingSection;\n    \n    constructor(private _labelService: LabelService, private _portalSettingsService : PortalSettingsService) {\n    }  \n      \n    ngOnInit(): void {\n\n        let portalSettingsLabel = this._labelService.getLabel('PS_PORTAL_SETTINGS', 'Portal Settings');\n        this.context.title = portalSettingsLabel;\n        this.sections = this._portalSettingsService.getSections();\n        this.context.beforeClose = (ok : boolean )=> {\n            if( ok )\n                this.context.value = this._portalSettingsService.getSettingsData();\n            return true;\n        };\n    }\n\n    onPanelLoaded(panel: PanelSettings) {\n        panel.nameInput.readonly = true;\n        panel.visible = false;\n    }\n\n    selectSection(sec : SettingSection) {\n        this.activeSection = sec;\n        let inst = this._portalSettingsService.getSectionData(sec);\n        this.subjects.propertyPanel.next(inst);\n    }\n}\n","import { Component, Input, OnInit, ViewChild, ElementRef, AfterViewChecked } from \"@angular/core\";\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ModalPropertiesContext } from '../properties';\nimport { QueryGridParameter, DataContractConnectionType, QueryBoundGridParameter } from '../../../common/objects/viewModel';\nimport { ValueProviderService } from \"../../../common/services/dataValue.service\";\nimport { ISelectableItem, val } from \"../../../common/objects/common\";\nimport { PortalService } from \"../../../common/services/portal.service\";\n\nimport _ from 'lodash';\n\n@Component({\n    selector: \"csi-query-builder\",\n    styleUrls: ['queryBuilder.component.less'],\n    templateUrl: \"queryBuilder.component.html\"\n})\nexport class QueryBuilderComponent implements OnInit, AfterViewChecked {\n    @Input() context: ModalPropertiesContext;\n\n    @ViewChild(\"queryListElement\") queryListElement : ElementRef;\n\n    get textValue(): string { return <string>(this.context.value); }\n    set textValue(v: string) { this.context.value = v; }\n\n    get queryType(): string { return this.context.instance.queryType.toString(); }\n    set queryType(v: string) { this.context.instance.queryType = parseInt(v); this.typeAheadFilter = ''; this.getQueryList(); }\n\n    get typeAheadFilter(): string { return this._filter; }\n    set typeAheadFilter(v: string) { this._filter = v; this.getQueryList(); }\n\n    parameters: queryParameter[] = [];\n    isPredefined: boolean;\n    queryList: Observable<ISelectableItem[]>;\n    private gridMode = true;\n    private queryParametersField : string = \"queryParameters\";\n    private _scroll_to_selected = false;\n\n    private _filter: string;\n\n    constructor(private _valueService: ValueProviderService, private _portal: PortalService) {\n    }\n\n    ngOnInit(): void {\n        this.context.title = \"Query Builder\";\n        this.context.beforeClose = (ok: boolean) => this.onBeforeClose(ok);\n        if( this.context.instance.__type == \"GridDataSettingsPredefinedQuery\")\n            this.isPredefined = true;        \n        else if( this.context.instance.__type == \"GridDataSettingsAdHocQuery\")\n            this.isPredefined = false;\n        else if( this.context.instance.__type == \"SelectionDataSourceMap\") {\n            this.isPredefined = val(this.context.instance, \"QueryExecutionMode\") === 1;\n            this.gridMode = false;\n            this.queryParametersField = \"Parameters\";            \n        }\n\n        if (this.isPredefined) {\n            if (this.context.instance.queryType === undefined)\n                this.context.instance.queryType = 0;\n            this.getQueryList();            \n            if( this.textValue )\n                this._scroll_to_selected = true;            \n        }\n\n        let qparams = val( this.context.instance, this.queryParametersField) as any[];\n        if (qparams) {            \n            // load initial parameters\n            this.parameters = qparams.map<queryParameter>(p => new queryParameter(p.name, p.key));\n        }\n\n        if( !this.isPredefined)\n            this.changeText(this.textValue);\n    }\n\n    ngAfterViewChecked(){\n        if(this._scroll_to_selected){\n            if(this.queryListElement ){\n                let d = <HTMLDivElement>this.queryListElement.nativeElement;\n                let sel = d.querySelector(\"#q_\" + this.textValue);\n                if( sel ){\n                    this._scroll_to_selected = false;\n                    sel.scrollIntoView();\n                }\n            }\n        }\n    }\n    \n    changeText(v) {\n        this.textValue = v;\n        this.getAdHocQueryParameters(v);\n    }\n\n    selectQuery(q: ISelectableItem) {\n        if (q.childCount > 0)\n            this.getPredefQueryParameters(q.name);\n        else\n            this.parameters = [];\n\n        this.textValue = q.name;\n    }\n\n    private getAdHocQueryParameters(qText: string) {\n        let prms = qText ? qText.match(/(\\?\\w*)/ig) : [];\n\n        let newPrms = _.chain(prms)\n            .filter(x => x.length > 1)\n            .map(p => p.substr(1)).uniq().value()\n            .map(p => new queryParameter(p));\n\n        // take values from existing \n        newPrms.forEach(p => {\n            let pd = this.parameters.find(px => px.name == p.name);\n            if (pd) p.value = pd.value;\n        });\n        this.parameters = newPrms;\n    }\n\n    private getQueryList() {\n        let th = this.typeAheadFilter ? this.typeAheadFilter.toLowerCase() : '';\n        this.queryList = this._valueService.getSelectableItems(this.context.property, this.context.instance)\n            .pipe( map(qs => qs.filter(q => th ? q.name.toLowerCase().indexOf(th) != -1 : true)));\n    }\n\n    private onBeforeClose(ok: boolean): boolean {\n        if (ok) {\n            let ps : any[];\n            if( this.gridMode){\n                ps = this.parameters.map<QueryGridParameter>(p => {\n                    let existingParameter: QueryGridParameter = this.context.instance.queryParameters ? this.context.instance.queryParameters.find(qp => qp.name == p.name) : null;\n                    let q = new QueryGridParameter();\n                    q.connectionType = existingParameter ? existingParameter.connectionType : DataContractConnectionType.StaticValue;\n                    q.name = p.name;\n                    q.key = existingParameter ? existingParameter.key : p.value;\n                    q['__tempValue'] = p.value; // the value for further request the column list\n\n                    return q;\n                });\n            }\n            else{\n                ps = this.parameters.map<QueryBoundGridParameter>(p => {\n                    let prms = val(this.context.instance, \"parameters\");\n                    let existingParameter: QueryBoundGridParameter = prms ? prms.find(qp => qp.name == p.name) : null;\n                    let q = new QueryBoundGridParameter();\n                    q.connectionType = existingParameter ? existingParameter.connectionType : DataContractConnectionType.StaticValue;\n                    q.name = p.name;\n                    q.key = existingParameter ? existingParameter.key : p.value;\n                    return q;\n                });\n                \n            }\n\n            val(this.context.instance, this.queryParametersField, ps);\n        }\n        // reflect parameters \n        return true;\n    }\n\n    private getPredefQueryParameters(qText: string): void {\n        this._portal.getQueryParameters(parseInt(this.queryType), qText)\n            .subscribe(p => {\n                this.parameters = p.map(px => new queryParameter(px.Text));\n            });\n    }\n}\n\nclass queryParameter {\n    constructor(public name: string, public value: string = '', public type: string = \"String\") { }\n\n}\n","<div class=\"csi-query-builder\">\r\n    <div class=\"adhoc-query-input\" *ngIf=\"!isPredefined; else predefQuery\">\r\n        <textarea class=\"csi-property-textarea long-text\" [value]=\"textValue\" #textcontrol (input)=\"changeText(textcontrol.value)\"></textarea>\r\n    </div>\r\n    <ng-template #predefQuery>\r\n        <div class=\"predef-query-input\">\r\n            <select class=\"queryType-selector\" [(ngModel)]=\"queryType\">\r\n                <option [value]=\"0\">System</option>\r\n                <option [value]=\"1\">User</option>\r\n            </select>\r\n            <div class=\"query-search\">\r\n                <input class=\"query-search-input\" [(ngModel)]=\"typeAheadFilter\">\r\n            </div>                    \r\n            <div class=\"queries\" #queryListElement>\r\n                <div class=\"query-item\" [id]=\"'q_'+q.name\" [class.selected]=\"q.name===textValue\" *ngFor=\"let q of queryList | async\" (click)=\"selectQuery(q)\">{{q.name}}</div>\r\n            </div>            \r\n        </div>\r\n    </ng-template>\r\n    <div class=\"parameter-table\">\r\n        <div class=\"column-header\">\r\n            <div class=\"col-name\">{{'Name' | label: 'PS_NAMELBL'}}</div>\r\n            <div class=\"col-type\">{{'Type' | label: 'PS_TYPE'}}</div>\r\n            <div class=\"col-value\">{{'Value' | label: 'PS_VALUE'}}</div>\r\n        </div>\r\n        <div class=\"parameter-rows-section\">\r\n            <div class=\"parameter-rows\">\r\n                <div class=\"parameter-row\" *ngFor=\"let p of parameters\">\r\n                    <div class=\"col-name parameter\">{{p.name}}</div>\r\n                    <div class=\"col-type\">{{p.type}}</div>\r\n                    <div class=\"col-value\"><input class=\"col-value-input\" type=\"text\" [(ngModel)]=\"p.value\"></div>\r\n                </div>\r\n            </div>    \r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, Input, OnInit, OnDestroy, ElementRef, ViewChild, Renderer2, AfterViewChecked} from '@angular/core';\nimport { IPropertyMetadata } from '../../../common/objects/viewModel';\nimport { ISelectableItem, ValueUpdatedData, isIE } from '../../../common/objects/common';\nimport { Observable,Subject, Subscription } from 'rxjs';\nimport {map, switchAll} from \"rxjs/operators\";\n//import { FlexibleConnectedPositionStrategy } from '@angular/cdk/typings/overlay/position/flexible-connected-position-strategy';\n\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\nimport { MatOptionSelectionChange } from '@angular/material/core';\nimport _ from 'lodash';\nimport { PortalService } from '../../../common/services/portal.service';\nimport { FlexibleConnectedPositionStrategy } from '@angular/cdk/overlay/position/flexible-connected-position-strategy';\n\n@Component({\n    selector: 'csi-editor-selector',\n    templateUrl: 'selector.html',\n    styles: [`\n        .csi-editor-selector{\n            display: flex;\n        }\n        .input-container input.textInput {\n            flex: 1 1;\n            width: 20px;\n            border: none;\n            height: 25px;\n            cursor: pointer;\n            text-overflow: ellipsis;\n            padding-left: 4px;\n            margin-top: 1px;\n            outline: none;\n        }\n        .input-container input[type=file] {\n            display: none;\n        }\n        .input-container  {            \n            display: flex;           \n            flex: 1 1; \n            border: solid 1px #aaaaaa;\n        }\n        \n        .input-container input::-ms-clear {\n            display: none;\n        }\n\n        .selector-emptyOption  {\n            min-height: 17px;            \n        }\n\n        .selector-option {\n            text-overflow: inherit;\n            width: 100%;            \n            line-height: normal;\n            height: auto;\n            padding: 0 5px;\n        }\n\n        .option-text{\n            display: inline-block;\n            font-size: 12px;\n            font-family: \"Segoe UI\";\n            line-height: normal;\n        }\n\n        .popup-arrow {\n            flex: 0 0 10px;\n            background: no-repeat left url(Content/images/downarrow.png);        \n            cursor: pointer;\n        }\n\n        .image-icon {\n            height: 16px;\n            width: 16px;\n            align-self: center;\n        }\n\n        .upload-button{\n            width: 18px;\n            background-position: center center;\n            background-repeat: no-repeat;\n            background-size: contain;\n            background-color: #eeeeee;\n            cursor: pointer;\n        }\n        .upload-button.sound{\n            width: 18px;\n            background-size: 12px 12px;\n        }\n        .upload-button:hover{\n            border: solid 1px #aaaaaa;\n        }\n        `\n    ]\n})\n\nexport class SelectorEditorComponent implements OnInit,  OnDestroy, AfterViewChecked {\n    @Input(\"property\") __property: any;\n    @Input() valueChanged: Subject<ValueUpdatedData>;\n    @Input() resized: Subject<boolean>;\n    @Input() items: Observable<ISelectableItem[]>;\n    @Input() value: number | string;\n\n    @ViewChild(MatAutocompleteTrigger) acTrigger: MatAutocompleteTrigger;\n    @ViewChild(\"uploadFileCtl\") uploadFileCtl : ElementRef;\n\n    get property(): IPropertyMetadata { return this.__property; }\n\n    displayedIcon: string;\n    textBoxClass: string;\n    nameFilter = \"\";\n    readOnly: boolean;\n\n    uploadedFile: any;  // File\n    uploadedFileName : string;\n    fileExtAccept : string;\n    showUploadBtn = false;\n    fileItemType  : string;\n\n    private canvas: HTMLCanvasElement;\n    private canvasContext: CanvasRenderingContext2D;\n    private oldTriggerFunctions: any;\n\n    private fileDataReader = new Subject<any>();\n    private fileDataReaderSubs : Subscription;\n    private uploadDirectory : string;\n    private uploadType : string;\n    \n    private uploadedFiles : ISelectableItem[]= [];\n    private optionPanelWidth: number = 0;\n    private acPatched = false;    \n\n    constructor(private _render: Renderer2, private _portalService: PortalService) {\n    }\n\n    ngOnInit() {\n        this.readOnly = this.property.readOnly;\n        if(this.property.editor && this.property.editor.provider){\n            let fp =  this.property.editor.provider;\n            if(fp == \"imageFiles\"){\n                this.uploadDirectory = \"Images\";\n                this.fileExtAccept = \".png\";\n                this.uploadType = \"image/png\";\n                this.fileItemType = \"image\";\n                this.showUploadBtn = true;\n            }\n            else if(fp == \"soundFiles\"){\n                this.uploadDirectory = \"Sounds\";\n                this.fileExtAccept = \".mp3\";\n                this.uploadType = \"audio/mpeg\";    \n                this.fileItemType = \"sound\";\n                this.showUploadBtn = true;\n            }\n        }\n\n        this.fileDataReaderSubs = this.fileDataReader.pipe(\n                map(b => this._portalService.uploadFile(this.uploadedFileName, this.uploadDirectory, b) ),\n                switchAll())\n            .subscribe(() => {                    \n            let newFile = <ISelectableItem>{ \n                name: this.uploadedFileName, \n                value: this.uploadedFileName, \n                type: this.fileItemType, \n                img: this.uploadDirectory + '/' + this.uploadedFileName,\n                level: 0 \n            };\n\n            this.uploadedFiles.push(newFile);\n            this.value = this.uploadedFileName;\n            this.valChanged(newFile);\n            \n            this.items = this.items.pipe(map(m=> {\n                // In case the uploaded images already contained in the list\n                this.uploadedFiles = this.uploadedFiles.filter(i=> m.findIndex(mx=> mx.name == i.name) == -1 );\n                return _.concat(m, this.uploadedFiles);\n            }));\n\n        });        \n    }\n\n    ngOnDestroy() {\n        if( this.fileDataReaderSubs)\n            this.fileDataReaderSubs.unsubscribe();\n\n        if(this.acPatched)\n            this.triggerUnPatch();\n    }\n\n    ngAfterViewChecked() {\n        if( !this.acPatched && this.acTrigger ){\n            this.triggerPatch();\n            this.acPatched = true;\n        }\n    }\n\n    filterTextChange(ev: Event){\n        this.nameFilter = (<HTMLInputElement>ev.target).value;\n    }\n\n    clickDownArrow(ev: MouseEvent) {\n        if (!this.readOnly && this.acTrigger.panelOpen!==true ) \n            this.acTrigger.openPanel();\n        else \n            this.acTrigger.closePanel();\n        ev.stopPropagation();\n    }\n\n    getMaxWidth(items: ISelectableItem[]): number {\n\n        if (!this.canvas) {\n            this.canvas = <HTMLCanvasElement>document.getElementById(\"selector-canvas\");\n            if (!this.canvas) {\n                this.canvas = this._render.createElement(\"canvas\");\n                this.canvas.id = \"selector-canvas\";\n            }\n            if (!this.canvasContext) {\n                this.canvasContext = this.canvas.getContext(\"2d\");\n                this.canvasContext.font = \"12px Segoe UI\";\n            }\n        }\n\n        let maxOpt = _.maxBy(items, op => this.displayVal(op).length);\n        if (maxOpt) {\n            let txt = this.displayVal(maxOpt);\n            let m = this.canvasContext.measureText(txt);\n            let w = m.width + 10 /*padding*/ + (maxOpt.level * 10) /*indentation*/ + (maxOpt.type==\"image\"?16:0);\n            // scrollbar in IE11 wider\n            if( isIE )\n                w += 22;\n            return w;\n        }\n\n        return 0;\n    }\n\n    selectOption(opt: MatOptionSelectionChange, item: ISelectableItem) {\n        if (opt.isUserInput) {\n            this.valChanged(item);\n        }\n    }\n\n    valChanged(item: ISelectableItem) {\n\n        if (item.disabled) {\n            // Do Nothing \n            return;\n        }\n        this.value = item.value;\n        this.displayedIcon = item.img;\n        if( this.fileItemType == \"sound\")\n            this.displayedIcon = \"Content/images/portalStudioIcons/sound.png\";\n\n        this.valueChanged.next(new ValueUpdatedData(this.property.name, item.value, item.fullType));\n    }\n\n    getDisplayedValue(items: ISelectableItem[]) : string {\n\n        let dv;\n        let v = this.value;\n        if (v === undefined || v === null || v === '' ){\n            if(items && items.length > 0){\n                // Default value - first in the list\n                dv = this.displayVal(items[0]);\n                this.displayedIcon = items[0].img;\n            }\n            else {\n                // Default value - blank\n                dv = \"\";\n                this.displayedIcon = null;    \n            }\n        }\n        else {\n            // value is not empty - resolve by items\n            let comp: (si: ISelectableItem) => boolean;\n\n            if ((v != null && v !== undefined) && typeof v == 'object' && Object.getPrototypeOf(v).hasOwnProperty(\"comparer\"))\n                comp = Object.getPrototypeOf(v).comparer;\n\n            let d = items.find(i => comp ? comp.call(v, i) : (i.value === v));\n            dv = d ? this.displayVal(d) : v;\n\n            this.displayedIcon = d && d.img;\n\n            if( this.fileItemType == \"sound\")\n                this.displayedIcon = \"Content/images/portalStudioIcons/sound.png\";\n\n            this.optionPanelWidth = this.getMaxWidth(items);\n        }   \n        \n        return dv;\n    }\n\n    displayVal(item: ISelectableItem) {\n        return item.name;\n    }\n\n    fileBtnClick() {\n        let fileElement = this.uploadFileCtl.nativeElement as HTMLInputElement;\n        if (fileElement) {\n            fileElement.focus();\n            fileElement.click();\n        }\n    }\n\n    fileChanged(e : Event) {\n        let fileName = \"\";\n        let fileElement = this.uploadFileCtl.nativeElement as HTMLInputElement;\n        if (fileElement) {\n            if (fileElement.files && fileElement.files.length > 0) {\n                let file : File = fileElement.files[0];\n                if (file.type == this.uploadType) {\n                    fileName = file.name;\n                    this.fileReaderObs(file);\n                }\n            }\n        }\n        this.uploadedFileName = fileName;\n    }\n\n    private fileReaderObs(file : File) {\n        let reader = new FileReader();\n        reader.onload = () => {            \n            // convert to byte array            \n            let res : Uint8Array = new Uint8Array((<any> reader).result);\n            let data : Uint8Array[] = [];\n            for( let i = 0; i<res.length; i++)\n                data.push(<any> res[i]);\n            this.fileDataReader.next(data);\n        }        \n        reader.readAsArrayBuffer(file);\n    }\n\n\n    // next 2 methods may not be compatible with other Material version !!!\n    private triggerPatch(): void {\n        \n        if (!this.acTrigger['_getHostWidth'] || !this.acTrigger['_getOverlayPosition']) {\n            console.warn('MdAutocompleteTrigger does not have _getHostWidth or _getOverlayPosition.');\n            console.error(\"Selector's option panel is not resized.\");\n            return;\n        }\n        this.oldTriggerFunctions = {};\n        this.oldTriggerFunctions._getHostWidth = this.acTrigger['_getHostWidth'];\n        this.acTrigger['_getHostWidth'] = () => {\n            let oldWidth = this.oldTriggerFunctions._getHostWidth.call(this.acTrigger);\n            return this.optionPanelWidth > oldWidth ? this.optionPanelWidth : oldWidth;\n        };\n\n        this.oldTriggerFunctions._getOverlayPosition = this.acTrigger['_getOverlayPosition'];\n        this.acTrigger['_getOverlayPosition'] = () => {\n            let ovrPos = <FlexibleConnectedPositionStrategy> this.oldTriggerFunctions._getOverlayPosition.call(this.acTrigger);\n            ovrPos\n                .withPositions([\n                    { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' },\n                    { originX: 'end', originY: 'top' , overlayX: 'end', overlayY: 'bottom' }\n                ])\n            return ovrPos;\n        };\n    }\n\n    private triggerUnPatch(): void {\n        if (this.oldTriggerFunctions) {\n            this.acTrigger['_getHostWidth'] = this.oldTriggerFunctions._getHostWidth;\n            this.acTrigger['_getOverlayPosition'] = this.oldTriggerFunctions._getOverlayPosition;\n            delete this.oldTriggerFunctions;\n        }\n    }\n\n}\n","<div class=\"csi-editor-selector\" *ngIf=\"items | async as sitems;else loading\">\r\n    <div class=\"input-container\">\r\n        <span *ngIf=\"showUploadBtn\" class=\"upload-button {{fileItemType}}\" (click)=\"fileBtnClick($event)\" \r\n                [style.background-image]=\"displayedIcon ? ('url(' + displayedIcon + ')') : ''\">\r\n        </span>\r\n        <input type=\"file\" *ngIf=\"showUploadBtn\" #uploadFileCtl (change)=\"fileChanged($event)\" [accept]=\"fileExtAccept\">\r\n        <input type=\"text\" class=\"textInput\" matInput (keyup)=\"filterTextChange($event)\" [readonly]=\"readOnly\" [matAutocomplete]=\"auto\" \r\n                [attr.spellcheck]=\"false\" [value]=\"getDisplayedValue(sitems)\" [attr.title]=\"getDisplayedValue(sitems)\" />\r\n        <div class=\"popup-arrow\" (click)=\"clickDownArrow($event)\"></div>\r\n    </div>\r\n    <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayVal\" id=\"mySelect\">\r\n        <mat-option *ngFor=\"let si of sitems | elementFilter:nameFilter\" [value]=\"si\" [attr.indent]=\"si.level\" class=\"selector-option\"\r\n                [disabled]=\"si.disabled\" [attr.title]=\"si.name\"\r\n                (onSelectionChange)=\"selectOption($event, si)\" [class.selector-emptyOption]=\"si.name==''\" >\r\n            <img *ngIf=\"si.type==='image'\" class=\"image-icon\" [src]=\"si.img\" /> \r\n            <span class=\"option-text\">{{si.name||''}}</span>\r\n        </mat-option>\r\n    </mat-autocomplete>\r\n</div>\r\n\r\n<ng-template #loading>\r\n</ng-template>\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { IPropertyMetadata } from '../../../common/objects/viewModel';\nimport { ISelectableItem, ValueUpdatedData } from '../../../common/objects/common';\nimport { Subject } from 'rxjs';\n\n@Component({\n    selector: 'csi-editor-switchbox',\n    template:\n    `<div class=\"switchbox\">\n        <select #switchbox class=\"csi-property-selector\" [value]=\"val\" (change)=\"valChanged(switchbox.value)\" [disabled]=\"property.readOnly\">\n            <option *ngFor=\"let option of selectableItems\" [value]=\"option.value\" [selected]=\"option.value==val\">{{option.name}}</option>\n        </select>\n    </div>`,\n    styles:[`    \n        .switchbox:{}\n        .csi-property-selector {\n            width: 100%;\n            height: 27px;\n            border: solid 1px #aaaaaa;\n            outline:none;\n            padding-left:4px;\n        }\n        select::-ms-expand{\n            color: #ffffff;\n            border: none;\n            width: 15px;\n            padding-right:5px;\n            background: no-repeat right url(Content/images/downarrow.png);        \n        }\n\n    `]\n})\n\nexport class SwitchBoxEditorComponent implements OnInit{\n    @Input(\"property\") __property: any;\n    @Input() valueChanged: Subject<ValueUpdatedData>;\n\n    get property(): IPropertyMetadata { return this.__property; }\n\n    constructor() { }\n\n    val: string;\n    selectableItems: ISelectableItem[] = [\n        <ISelectableItem>{ name: 'Not Set', value: 'notset', typeName: 'boolean' },\n        <ISelectableItem>{ name: 'True', value: 'true', typeName: 'boolean' },\n        <ISelectableItem>{ name: 'False', value: 'false', typeName: 'boolean' }\n    ];\n\n    ngOnInit() {\n\n        // Exclude NotSet if the property is not nullable\n        if (this.property.notNullable === true) {\n            this.selectableItems.splice(0, 1);\n        }\n\n        // Load value\n        let n = 'notset';\n        if (this.property.value === true || this.property.value === 'true')\n            n = 'true';\n        else if (this.property.value === false || this.property.value === 'false')\n            n = 'false';\n        else {// value = undefined \n            if (this.property.notNullable === true) {\n                this.property.value = false;\n                n = 'false';\n            }\n        }\n        // TODO: the selectable items should be taken from metadata to localize name ( True -> Wahr )\n        this.val = this.selectableItems.find(i => i.value == n).value.toString();\n    }\n\n    valChanged(s: string) {\n        let v: boolean;  \n\n        if (s !== undefined && s !== null && s !== '' && s !== 'notset') {\n            v = (s === 'true');\n        }\n        \n        this.val = s;\n        this.valueChanged.next(new ValueUpdatedData(this.property.name, v, typeof v));\n    }\n\n}\n\n","import { Component, Input,  OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\n\nimport { ModalPropertiesContext } from '../properties';\nimport { Subject, Subscription } from 'rxjs';\nimport {map, switchAll} from \"rxjs/operators\";\nimport { PortalService } from '../../../common/services/portal.service';\nimport * as _ from 'lodash';\nimport { val } from '../../../common/objects/common';\n\n\n@Component({\n    selector: 'csi-target-matrix-rows',\n    template: `\n        <div class='target-matrix-data'>\n            <div class=\"buttons\">\n                <button (click)=\"addRow()\">Add Row</button>\n                <input type=\"file\" #excelInputFile (change)=\"inputFileChanged($event)\" accept=\".xls,.xlsx\">\n                <button type=\"button\" class=\"inputFileButton\" (click)=\"inputFileBtnClick($event)\">Import from Excel</button>    \n            </div>\n            <div class=\"matrix-data-grid\">\n                <div class=\"data-rows-container\">\n                    <div class=\"headers\">\n                        <div class=\"column-caption\" *ngFor=\"let col of columns\">{{col.caption}}</div>\n                        <div class=\"column-caption\">{{'Target'}}</div>\n                    </div>\n                    <div class=\"data-rows\">\n                        <div class=\"row\" *ngFor=\"let row of rows; index as rowIndex; even as rowEven; last as rowLast\">\n                            <div class=\"cell\" *ngFor=\"let c of row.cells\" [class.row-even]=\"rowEven\" [class.row-last]=\"rowLast\">\n                                <input type=\"text\" class=\"input-value\" [(ngModel)]=\"c.value\">\n                            </div>\n                            <div class=\"cell\" [class.row-even]=\"rowEven\" [class.row-last]=\"rowLast\">\n                                <input type=\"text\" class=\"input-value\" [(ngModel)]=\"row.targetValue\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>`,\n    styles:[`\n        :host {\n            display: flex;\n            flex-direction: column;\n            flex: 1 1;\n        }\n        .target-matrix-data{\n            display: flex;\n            flex-direction: column;\n            flex: 1 1;\n        }\n        .target-matrix-data .buttons{\n            display: flex;\n            flex: 0 0 auto;\n        }\n\n        .target-matrix-data .buttons button{\n            padding: 2px 4px;\n        }\n        \n        .matrix-data-grid{\n            padding: 2px;\n            border: 1px solid #cccccc;\n            display: flex;\n            flex-direction: column;\n            flex: 1 1;\n        }\n\n        .matrix-data-grid .headers{\n            flex: 0 0 auto;\n            display: flex;\n            background-color: #dddddd;\n        }\n\n        .column-caption, .cell {\n            flex: 0 0 100px;\n            border-right: 1px solid #aaaaaa;\n            padding-left: 3px;\n            padding-right: 3px;\n        }\n\n        .cell .input-value{\n            width: 100%;\n            border-color: transparent;            \n            background-color: transparent;\n        }\n\n        .cell.row-even{\n            background-color: #eeeeee;\n        }\n\n        .cell.row-last{\n            border-bottom: 1px solid #aaaaaa;\n        }\n\n        .column-caption{\n            padding-top: 2px;\n            padding-bottom: 2px;\n            background-color: #dddddd;\n        }\n        \n        .data-rows-container{\n            display: flex;\n            flex-direction: column;\n            flex: 1 1;\n            overflow: auto;\n        }\n        .data-rows {\n            display: flex;\n            flex-direction: column;\n            flex: 1 1;\n        }\n        .data-rows .row {\n            display: flex;\n            flex: 0 0 auto;\n            margin: 0;\n        }\n        input[type=file]{\n            display: none;\n        }\n    `]\n\n})\n\nexport class TargetMatrixRowsComponent implements OnInit, OnDestroy {  \n\n    @Input() context: ModalPropertiesContext;\n\n    @ViewChild(\"excelInputFile\")  excelInputFileCtl;\n\n    excelFile: string;\n    excelDataReader = new Subject<any>();\n    columns : targetMatrixColumn[];\n    rows: targetMatrixRow[];\n    excelReaderSubs: Subscription;\n\n    constructor(private _portalService: PortalService) {\n    }  \n      \n    ngOnInit(): void {\n        this.context.title = this.context.property.displayedName || this.context.property.name;\n        this.context.beforeClose = (ok: boolean) => this.onBeforeClose(ok);\n        this.rows = this.context.value as targetMatrixRow[] || [];\n\n        if(this.context.instance)\n            this.columns = _.map(val(this.context.instance, 'columns'), c=> {\n                let cx = new targetMatrixColumn();\n                cx.caption = val(c, 'caption');\n                cx.name = val(c, 'name');\n                return cx;\n            });\n\n        this.excelReaderSubs = this.excelDataReader.pipe(\n                map(b => this._portalService.targetMatrixFromExcel(b)),\n                switchAll()\n            ).subscribe(tx=> {                    \n                this.rows = tx.rows;\n                this.columns = tx.columns;\n            });        \n    }\n\n    ngOnDestroy(){\n        if( this.excelReaderSubs )\n            this.excelReaderSubs.unsubscribe();\n    }\n\n    inputFileChanged(e : Event) {\n        let fileName = \"\";\n        let fileElement = (this.excelInputFileCtl as ElementRef).nativeElement as HTMLInputElement;\n        if (fileElement) {\n            if (fileElement.files && fileElement.files.length > 0) {\n                let file = fileElement.files[0];\n                if (file.type == \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\") {\n                    fileName = file.name;\n                    this.fileReaderObs(file);\n                }\n            }\n        }\n        this.excelFile = fileName;\n    }\n\n    addRow(){\n        let r =  new targetMatrixRow();\n        r.cells = this.columns.map(col=> new targetMatrixCell(col.name));\n\n        this.rows.push(r);\n    }\n\n    private fileReaderObs(file : File) {\n        let reader = new FileReader();\n        reader.onload = () => {\n            // convert to byte array\n            let res : Uint8Array = new Uint8Array((<any>reader).result);\n            let data : Uint8Array[] = [];\n            for( let i = 0; i<res.length; i++)\n                data.push(<any> res[i]);\n            this.excelDataReader.next(data);\n        }        \n        reader.readAsArrayBuffer(file);\n    }\n\n    private onBeforeClose(ok: boolean) : boolean {\n        if( ok ){\n            this.context.value = this.rows;\n            val(this.context.instance, 'columns', this.columns);\n            val(this.context.instance, 'importedFileName', this.excelFile);\n            return true;\n        }\n\n        return true;\n    }\n\n    inputFileBtnClick(e) {\n        let fileElement = (this.excelInputFileCtl as ElementRef).nativeElement as HTMLInputElement;\n        if (fileElement) {\n            fileElement.focus();\n            fileElement.click();\n        }\n    }\n\n}\n\nclass targetMatrixColumn{\n    name: string;\n    caption: string;\n    __type: string = \"TargetMatrixColumn\";\n}\n\nclass targetMatrixCell{\n    __type: string = \"TargetMatrixCell\";\n    name: string = \"\";\n    value: string = \"\";\n\n    constructor(n: string = \"\"){\n        this.name = n;\n    }\n\n}\nclass targetMatrixRow{\n    cells: targetMatrixCell[];\n    targetValue: string = \"\";   \n    __type : string = \"TragetMatrixRow\";\n}\n","import { Component, Input, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { ValueUpdatedData } from '../../../common/objects/common';\nimport { Subject } from 'rxjs';\nimport { IPropertyMetadata } from '../../../common/objects/viewModel';\n\nimport _ from 'lodash';\n\n@Component({\n    selector: 'csi-editor-text',\n    template: \n        `<div class=\"text\">\n            <div *ngIf=\"!!resized\" class=\"resize\" [ngClass]=\"expanded?'wide':''\" (click)=\"toggleInputWidth()\">\n                <i class=\"grow fa fa-step-backward\" aria-hidden=\"true\"></i>\n                <i class=\"shrink fa fa-step-forward\" aria-hidden=\"true\"></i>\n            </div>\n            <input *ngIf=\"inputType!='area'\" class=\"csi-property-text\" [attr.type]=\"inputType\" [class.modal-wiz]=\"modalWizard\"\n                    #textInputCtl\n                    (focusout)=\"toggleInputWidth(false)\" [readonly]=\"readOnly\" [value]=\"value\" \n                    (keyup)=\"changeText()\" (paste)=\"changeText()\" (cut)=\"changeText()\" (input)=\"changeText()\" />\n\n            <textarea *ngIf=\"inputType=='area'\" class=\"csi-property-text csi-property-textarea\" \n                    #textInputCtl\n                    [readonly]=\"readOnly\" [value]=\"value\" \n                    (keyup)=\"changeText()\" (paste)=\"changeText()\" (cut)=\"changeText()\" (input)=\"changeText()\">\n            </textarea>\n\n            <div *ngIf=\"modalWizard\" class=\"modal-wiz\">\n                <span class=\"modal-wiz\" (click)=\"openModal()\"> . . . </span>\n            </div>\n        </div>`,\n    styles:[`\n    .csi-property-textarea {\n        max-width: 100%;\n        width: 100%;\n        height: 223px;\n        border: solid 1px #aaaaaa;\n    }\n\n\n    .csi-property-text {\n        max-width: 100%;\n        width: 100%;\n        height: 27px;\n        border: solid 1px #aaaaaa;\n        padding-left: 7px;\n    } \n\n    .text {\n        margin-left: -10px;\n        display: flex;\n    }\n    .text input.modal-wiz {\n        border-right: none;\n    }\n    \n    .text input[type=\"date\"] {            \n        width: 127px;   // for some unknown reason date input is wider then regular text                \n    }\n    \n    .text div.modal-wiz {\n        border-bottom: solid 1px #aaaaaa;\n        border-right: solid 1px #aaaaaa;\n        border-top: solid 1px #aaaaaa;\n    }\n    \n    .text span.modal-wiz {\n        width: 25px;\n        display: inline-block;\n        cursor: pointer;\n        padding: 1px 1px 1px 2px;\n        vertical-align: bottom;\n    }\n    \n    .text.date-value{\n        margin-left: 0px;\n    }\n    \n    .resize {\n        width: 10px;\n        padding: 0;\n        min-width: 10px;\n        max-width: 10px;\n        align-self: center;\n        color: darkgrey;\n    }\n   .grow {\n        display: block;\n        color: white;\n    }\n\n    .shrink {\n        display: none;\n    }\n\n    .shrink:hover .grow {\n        color: darkgrey;\n    }\n\n    .wide .grow {\n        display: none;\n    }\n\n    .wide .shrink {\n        display: block;\n    }\n`]\n})\n\nexport class TextEditorComponent implements OnInit {\n    @Input() value: string;\n    @Input(\"property\") __property: any; \n    @Input() valueChanged: Subject<ValueUpdatedData>;\n    @Input() wizardDialog: Subject<any>;\n    @Input() resized: Subject<boolean>;\n\n    @ViewChild(\"textInputCtl\") textInputCtl : ElementRef;\n\n    get property(): IPropertyMetadata { return this.__property; }\n\n    expanded: boolean = false;\n    get modalWizard(): boolean {\n        if(this.property && this.property.editor ){\n            if(this.property.editor.provider)\n                return true;\n            if( this.property.editor.parameters && this.property.editor.parameters.length && this.property.editor.parameters[0] === \"longText\")\n                return true;            \n        }\n        return false;\n    }\n    inputType: string = 'text';\n    readOnly: boolean;\n    typename: string;\n\n    constructor() {         \n    }\n\n    ngOnInit() {\n\n        this.typename = this.property.originalTypeName;\n        this.readOnly = this.property.readOnly;\n\n        // Convert to localized\n        if (this.typename == \"DateTime\") {\n            if (this.value){            \n                this.value = new Date(Date.parse(this.value)).toLocaleString();\n            }\n            this.inputType = 'datetime'\n        }\n        else if (this.typename == \"Int32\" || this.typename == \"int\" || this.typename == \"px\") {\n            this.inputType = 'number';\n            if (this.value === undefined)\n                this.value = '';\n        }\n\n        if (this.property.editor.options && this.property.editor.options.find(o=> o == 'area') ) {\n            this.inputType = 'area';\n            if (this.value === undefined)\n                this.value = '';\n        }\n\n    }\n\n    valChanged(s: string) {\n\n        let convertedValue : any = s;\n        this.value = s;\n        // Convert string back to value\n        if (this.typename == \"DateTime\") {\n            // DateTime cannot be required because there is no case where user inputs date-time\n            if (s) {\n                this.value = new Date(s).toISOString();\n                convertedValue = new Date(s);\n            }\n        }\n        else if (this.typename == \"Int32\" || this.typename == \"int\" || this.typename == \"px\") {\n            let n = parseFloat(s);\n            if (!_.isNaN(n)) {\n                this.value = n.toString();\n                convertedValue = n;\n            }\n            else {\n                this.value = '';\n                convertedValue = null;\n            }\n        }\n\n        this.valueChanged.next(new ValueUpdatedData(this.property.name, convertedValue, this.typename));\n    }\n\n    toggleInputWidth(exp?: boolean, s?: string) {\n\n        if (exp === undefined)\n            this.expanded = !this.expanded;\n        else\n            this.expanded = exp;\n\n        // Set focus to the text input . It's required to correctly fire blur event\n        if (this.expanded) {\n            this.setFocus();\n        }\n\n        if( this.resized )\n            this.resized.next(this.expanded);\n    }\n\n    changeText() {\n        if (this.readOnly)\n            return;\n\n        if( this.textInputCtl ){\n            this.valChanged(this.textInputCtl.nativeElement.value);\n        }\n    }\n\n    openModal() {\n        if(!this.readOnly)\n            this.wizardDialog.next(this.modalWizard);\n    }\n\n    private setFocus(){\n        if( this.textInputCtl ){\n            this.textInputCtl.nativeElement.focus();\n        }\n    }\n}\n\n","import { Component, Input,  OnInit } from '@angular/core';\n\nimport { ModalPropertiesContext } from '../properties';\nimport {Observable, of} from \"rxjs\";\nimport {map} from \"rxjs/operators\";\n\nimport { ValueProviderService } from '../../../common/services/dataValue.service';\nimport { ISelectableItem } from '../../../common/objects/common';\n\n@Component({\n    selector: 'csi-webi-reports',\n    template: `\n        <div class='webi-reports'>\n            <div class=\"search-report\">\n                <input type=\"search\" [(ngModel)]=\"searchName\" class=\"search-string\">\n            </div>\n            <div class=\"report-list\">\n                <div *ngFor=\"let r of reports | async | elementFilter:searchName; index as ind\" class=\"report-item\" \n                        [class.selected-item]=\"ind==(selectedItemIndex|async)\" (click)=\"onSelect(ind, r)\">\n                    {{r.name}}\n                </div>\n            </div>\n        </div>`,\n    styles:[`\n        :host {\n            display: flex;\n            flex-direction: column;\n            flex: 1 1;\n        }\n        .webi-reports{\n            display: flex;\n            flex-direction: column;\n            flex: 1 1;\n            padding: 3px;\n        }\n        .search-report {\n            display: flex;\n            flex: 0 0 auto;\n        }\n        .search-string {\n            flex: 1 1;\n        }\n        .report-list {\n            flex: 1 1;\n            overflow: auto;\n        }\n        .report-item {\n            cursor: pointer;\n        }\n        .selected-item{\n            background-color: #cccccc;\n        }\n    `]\n\n})\n\nexport class WebiReportsComponent implements OnInit {  \n\n    @Input() context: ModalPropertiesContext;\n\n    reports: Observable<ISelectableItem[]>;\n    selectedItemIndex: Observable<number>;\n    selectedItemName: string;\n    searchName: string;\n    \n    constructor(private _valueService: ValueProviderService) {\n    }  \n      \n    ngOnInit(): void {\n        this.context.title = \"Webi Report Name\";\n        this.reports = this._valueService.intelligenceReports(this.context.property, this.context.instance);\n\n        this.context.beforeClose = (ok: boolean) => this.onBeforeClose(ok);\n        this.selectedItemName = this.context.value;\n        this.selectedItemIndex = this.reports.pipe(map(rl=> rl.findIndex(rs=> rs.name == this.selectedItemName)));\n    }\n\n    private onBeforeClose(ok: boolean) : boolean {\n        if( ok ){\n            this.context.value = this.selectedItemName;\n            return true;\n        }\n\n        return true;\n    }\n\n    onSelect(i: number, r: ISelectableItem){\n        this.selectedItemIndex = of(i);\n        this.selectedItemName = r.name;\n    }\n\n}\n","import { Directive, OnDestroy, Input, AfterViewInit, HostListener } from \"@angular/core\";\r\nimport { MatMenuTrigger } from \"@angular/material/menu\";\r\nimport { ContextMenuItem } from \"../common/objects/common\";\r\n\r\n@Directive({\r\n    selector: '[context-popup-menu]'\r\n})\r\nexport class ContextMenuPopupDirective implements OnDestroy, AfterViewInit {\r\n    @Input('context-popup-menu') info: ContextMenuInfo;\r\n\r\n    @HostListener('contextmenu',['$event']) onContextMenu(e: MouseEvent) {\r\n        if( this.info.disabled === true || !this.info.trigger ){\r\n            return;\r\n        }\r\n\r\n        let trigger = this.info.trigger;\r\n        this.info.buildMenu.apply(this.info.execContext, [this.info.dataType, this.info.data, this.info.key]);\r\n        \r\n        event.preventDefault();\r\n        // @ts-ignore\r\n        const triggerElement: HTMLElement = trigger._element.nativeElement;\r\n        triggerElement.style.setProperty('left', `${e.clientX}px`);\r\n        triggerElement.style.setProperty('position', 'fixed');\r\n        triggerElement.style.setProperty('top', `${e.clientY}px`);\r\n        triggerElement.style.setProperty('visibility', 'hidden');\r\n        trigger.menuData = { data: this.info.data };\r\n        trigger.menu.focusFirstItem('mouse');\r\n        trigger.openMenu();        \r\n    }\r\n    \r\n    constructor(){        \r\n    }\r\n\r\n    ngAfterViewInit(){\r\n    }\r\n\r\n    ngOnDestroy(){\r\n    }\r\n}\r\n\r\n\r\nexport class ContextMenuInfo{\r\n    dataType: string;\r\n    data?: string;\r\n    trigger: MatMenuTrigger;    \r\n    buildMenu: (dataType: string, data:string, key?:string) => ContextMenuItem[];\r\n    disabled: boolean;\r\n    execContext: any;\r\n    key?:string\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n    selector: 'csi-confirm-dialog',\r\n    templateUrl: 'confirm.dialog.component.html'\r\n})\r\n\r\nexport class ConfirmDialogComponent {\r\n    context: ConfirmDialogContext;\r\n    actions: DialogAction[];\r\n\r\n    constructor(private _dialog: MatDialogRef<ConfirmDialogComponent> ) {}\r\n\r\n    initContext(context: ConfirmDialogContext)\r\n    {\r\n        this.context = context;\r\n        this.actions = this.context.actions;\r\n    }\r\n\r\n    execute(action: string): void {        \r\n        this._dialog.close(action);\r\n    }\r\n}\r\nexport class DialogAction {\r\n    action: string;\r\n    name: string;   \r\n    isPrimary: boolean = false;\r\n}\r\nexport class ConfirmDialogContext {\r\n    message: string;\r\n    title: string;        \r\n    actions: DialogAction[];\r\n}\r\n\r\n\r\n","<div [attr.title]=\"''\" class=\"csi-modal\">\r\n    <header>\r\n        <span class=\"title\">{{context.title}}</span>\r\n        <span class=\"close-icon\" (click)=\"execute('cancel')\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></span>\r\n    </header>\r\n\r\n    <main>\r\n        <div class=\"csi-modal-content\">{{context.message}}</div>\r\n    </main>\r\n    <footer>\r\n        <div class=\"btns\">\r\n            <span *ngFor='let action of actions' [ngClass]=\"{'primary-btn':action.isPrimary, 'default-btn': !action.isPrimary}\" (click)='execute(action.action)'>{{action.name}}</span>\r\n        </div>\r\n    </footer>\r\n</div>","import { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\nimport { DialogAction } from './confirm.dialog.component';\r\n\r\n@Component({\r\n    selector: 'csi-input-dialog',\r\n    templateUrl: 'input.dialog.component.html'\r\n})\r\n\r\nexport class InputDialogComponent {\r\n    alertMessage: string;\r\n    context: InputDialogContext;\r\n\r\n    constructor(private _dialogRef: MatDialogRef<InputDialogComponent>) { }\r\n\r\n    initContext(context: InputDialogContext) {\r\n        this.context = context;\r\n    }\r\n\r\n    execute(action: string): void {\r\n        if (action == 'ok') // assume that ok is submit\r\n        {\r\n            for (let i = 0; i < this.context.inputs.length; i++) {\r\n                let input = this.context.inputs[i];\r\n                if (input.value.length == 0) {\r\n                    this.alertMessage = `The '${input.name}' field is required`;\r\n                    return;\r\n                }\r\n            }\r\n            this._dialogRef.close(this.context.inputs);\r\n        }\r\n        else\r\n            this._dialogRef.close(action);\r\n    }\r\n}\r\n\r\nexport class DialogInput {\r\n    name: string;\r\n    type: string;\r\n    text: string;\r\n    value: string;\r\n}\r\n\r\nexport class InputDialogContext {\r\n    message: string;\r\n    title: string;\r\n    actions: DialogAction[];\r\n    inputs: DialogInput[];\r\n}\r\n","<div class=\"csi-modal\" [attr.title]=\"''\">\r\n    <header>\r\n        <span class=\"title\">{{context.title}}</span>\r\n        <span class=\"close-icon\" (click)=\"execute('cancel')\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></span>\r\n    </header>\r\n    <main>\r\n        <div class=\"csi-modal-content\">\r\n            <div *ngIf='context.message'>{{context.message}}</div>\r\n            <div *ngFor='let input of context.inputs' class=\"csi-modal-input\">\r\n                <span class=\"csi-modal-info\">\r\n                <input *ngIf=\"input.type=='checkbox'\" [id]=\"input.name\" type='checkbox' [checked]=\"input.value\" (change)=\"input.value=!input.value\" />\r\n                <input *ngIf=\"input.type=='text'\" [id]=\"input.name\" type='text' [(ngModel)]=\"input.value\" />\r\n                {{input.text}}</span>\r\n            </div>\r\n        </div>\r\n    </main>\r\n    \r\n    <footer>\r\n        <div *ngFor='let action of context.actions; let i=index' class=\"btns\">\r\n            <span type=\"button\" [ngClass]=\"{'primary-btn':action.isPrimary, 'default-btn': !action.isPrimary}\" [attr.type]=\"button\"\r\n                (click)='execute(action.action)'>{{action.name}}</span>\r\n        </div>\r\n    </footer>\r\n</div>\r\n<div *ngIf='alertMessage' class=\"alert alert-danger\" role=\"alert\">{{alertMessage}}</div>","import { Directive, ElementRef, AfterViewInit, OnDestroy, Renderer2, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[csi-closable]'\r\n})\r\nexport class ClosableDirective implements AfterViewInit, OnDestroy {\r\n\r\n    @Input('csi-closable') parentElement : any;\r\n    @Output('onClose') onClose = new EventEmitter<any>();\r\n\r\n    spanBtn : any;\r\n    foreColor : string = \"#1E1E1E\";\r\n\r\n    constructor(private _element: ElementRef,  private _rd: Renderer2) {\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n\r\n        const col = window.getComputedStyle(this._element.nativeElement, null).getPropertyValue(\"color\");\r\n        if( col )\r\n            this.foreColor = col;\r\n\r\n        this.spanBtn = this._rd.createElement(\"span\");\r\n        this._rd.addClass(this.spanBtn, \"close-tab-icon\");\r\n        this._rd.listen(this.spanBtn, \"click\", (ev) => this.onClick(ev));\r\n        this._rd.appendChild( this.spanBtn, this.createSvg(this._rd));\r\n        this._rd.appendChild(this._element.nativeElement, this.spanBtn);\r\n    }   \r\n\r\n    ngOnDestroy(){\r\n        this._rd.removeChild(this._element.nativeElement, this.spanBtn);\r\n    }\r\n\r\n    onClick(ev: Event){\r\n        this.onClose.emit(this.parentElement);\r\n    }\r\n\r\n    private createSvg(r: Renderer2){\r\n        let s = r.createElement(\"svg\", \"svg\");\r\n        r.setAttribute(s, \"width\", \"16\");\r\n        r.setAttribute(s, \"height\", \"16\");\r\n        r.appendChild(s, this.createSvgLine(r, true));\r\n        r.appendChild(s, this.createSvgLine(r, false));\r\n        let circle = this.createSvgCircle(r);\r\n        r.appendChild(s, circle);\r\n        r.listen(s, \"mouseover\", ()=>{ circle.style.display=\"block\"; });\r\n        r.listen(s, \"mouseout\", ()=>{ circle.style.display=\"none\"; });\r\n        return s;\r\n    }\r\n\r\n    private createSvgLine(r: Renderer2, slash = false){\r\n        const c1 = \"4\";\r\n        const c2 = \"12\";\r\n        let l = r.createElement(\"line\", \"svg\");\r\n        r.setAttribute(l, \"x1\", c1);\r\n        r.setAttribute(l, \"y2\", slash ? c1 : c2);\r\n        r.setAttribute(l, \"x2\", c2);\r\n        r.setAttribute(l, \"y1\", slash ? c2 : c1);\r\n        r.setAttribute(l, \"stroke\", this.foreColor);\r\n        r.setAttribute(l, \"stroke-width\", \"1\");\r\n        return l;\r\n    }\r\n\r\n    private createSvgCircle(r: Renderer2) : SVGCircleElement {\r\n        // <circle cx=\"8\" cy=\"8\" r=\"8\" style=\"fill:none; stroke-width:1px; stroke:white;display:none;\" />\r\n        const rad = \"8\";\r\n\r\n        let c = r.createElement(\"circle\", \"svg\");\r\n        r.setAttribute(c, \"cx\", rad);\r\n        r.setAttribute(c, \"cy\", rad);\r\n        r.setAttribute(c, \"r\", rad);\r\n        r.setAttribute(c, \"style\", \"fill:none; display:none; stroke-width:1px; stroke:\"+this.foreColor +\";\");\r\n        return c;\r\n    }\r\n    \r\n} \r\n","import { Directive, ElementRef, AfterViewInit, Input, OnDestroy, Renderer2 } from '@angular/core';\nimport { MatDialogRef, DialogPosition } from '@angular/material/dialog';\nimport {DragService } from '../drag.service';\nimport {DragInfo, dragModes} from '../drag';\nimport { uuid } from '../../common/objects/common';\n\nexport class MouseDiff{\n    x: number;\n    y: number;\n}\n\n@Directive({\n        selector: '[csi-dialog-decor]'        \n})\nexport class DialogDecorDirective implements AfterViewInit, OnDestroy {\n\n    @Input() dialog: MatDialogRef<any>;\n    @Input() dialogHeight?: number;\n    @Input() dialogWidth?: number;\n\n    private dragHandle: HTMLElement;\n    private resizeHandle: HTMLElement;\n    private leftPanel : HTMLDivElement;\n\n    private modalWindow: HTMLElement;\n    private resetPosizionOnResizing = true;\n\n    private minSize = {width: undefined, height: undefined};\n    private id = uuid.id();\n\n    constructor(private _element: ElementRef, private _rd: Renderer2, private _drag: DragService) {\n    }\n\n    ngAfterViewInit(): void {\n        this.modalWindow = this._element.nativeElement.parentElement.parentElement;\n        // Header is a handle\n        this.dragHandle = this._element.nativeElement.children[0];\n        this.modalWindow.style.position = 'relative';\n        this.dragHandle.classList.add('cursor-draggable');\n\n        const moveId = \"move-dialog\" + \"@\" + this.id;\n        this._drag.add(dragModes.moveWindow, moveId, \n                (m:DragInfo) => this.moveIt(m),  null, this.modalWindow, null);\n\n        this._element.nativeElement.setAttribute(\"dragDropId\", moveId);\n        this._element.nativeElement.classList.add(\"drag-element\");\n\n        this.minSize = {\n            width: this.modalWindow.offsetWidth,\n            height: this.modalWindow.offsetHeight\n        };\n        if (this.dialogHeight !== undefined)\n            this.minSize.height = this.dialogHeight;\n        if (this.dialogWidth !== undefined)\n            this.minSize.width = this.dialogWidth;\n\n        this.dialog.updateSize( \n            this.minSize.width + 'px', \n            this.minSize.height + 'px');\n        \n        this.createResizeHandle();\n\n        const dragId = \"resize-dialog\" + \"@\" + this.id;\n        this._drag.add(dragModes.resizeWindow, dragId, \n                (m:DragInfo) => this.resizeIt(m),  null, this.modalWindow, null);\n\n        this.resizeHandle.setAttribute(\"dragDropId\", dragId);\n        this.resizeHandle.classList.add(\"drag-element\");\n    }   \n\n    ngOnDestroy(){\n        this.dragHandle.classList.remove(\"cursor-draggable\");\n        this._drag.remove(dragModes.moveWindow, this.dragHandle.id);\n        this._drag.remove(dragModes.resizeWindow, this.resizeHandle.id);\n    }\n\n    private moveIt(d?: DragInfo){\n        if(d && d.endOfDrag )\n            return;\n        let x = d? d.diffx : 0;\n        let y = d? d.diffy : 0;\n        let newPos : DialogPosition = {            \n            top: (this.modalWindow.offsetTop + y)+'px', \n            left: (this.modalWindow.offsetLeft + x)+'px'\n        };\n\n        this.dialog.updatePosition(newPos);\n    }\n\n    private resizeIt(d: DragInfo){\n\n        if( d.endOfDrag )\n            return;\n\n        if(this.resetPosizionOnResizing){\n            this.moveIt();\n            this.resetPosizionOnResizing = false;\n        }\n\n        let newSize = {\n            width : this.modalWindow.offsetWidth + d.diffx, \n            height: this.modalWindow.offsetHeight + d.diffy\n        };        \n\n        if(newSize.width < this.minSize.width)\n            newSize.width = this.minSize.width;\n        if(newSize.height < this.minSize.height)\n            newSize.height = this.minSize.height;\n\n        this.dialog.updateSize( \n            newSize.width + 'px', \n            newSize.height + 'px');\n    }\n\n     resizePanel(d: DragInfo){\n        let currentWidth = parseFloat(this.leftPanel.style.flexBasis);\n        if( currentWidth == 0 || isNaN(currentWidth) )\n            currentWidth = this.leftPanel.offsetWidth;\n\n        this.leftPanel.style.flexBasis = (currentWidth + d.x).toString() + 'px';       \n    }\n    \n    private createResizeHandle(){\n        this.resizeHandle = this._rd.createElement(\"div\");\n        this._rd.addClass(this.resizeHandle, \"resize-handle\");\n        this._rd.appendChild(this.modalWindow, this.resizeHandle);\n    }\n} \n","import {Directive, ElementRef,  Input, AfterViewInit, Renderer2, OnDestroy } from '@angular/core';\nimport { DragService } from '../drag.service';\nimport {DragInfo, dragModes} from '../drag';\n\nexport class DragDataInfo {\n    disabled: boolean = false;\n    type: string;\n    id: string;\n    model: any;    \n    handleContainer?: HTMLElement;\n    hndClass? : string;\n    dragAction?: (d: DragInfo) => void;\n}\n\n@Directive({\n    selector: '[csi-draggable]'\n})\nexport class DraggableDirective implements AfterViewInit, OnDestroy {\n    @Input('csi-draggable') dragData: DragDataInfo;\n\n    hnd: HTMLElement;\n\n    constructor(private _el: ElementRef, private _drag: DragService, private _render: Renderer2) {       \n    }\n\n    ngAfterViewInit(){\n        if( this.dragData.disabled === undefined)\n            this.dragData.disabled = false;\n\n        if( !this.dragData.disabled ){\n            if(!this.dragData.handleContainer)\n                this.dragData.handleContainer = document.body;                            \n            let mode = dragModes.dragElement;\n            if(this.dragData.type == 'collection-item')\n                mode = dragModes.reorder;\n            else if(this.dragData.type == 'panel-splitter')\n                mode = dragModes.resizePanel;\n            \n            const dragId = this.dragData.type + \"@\" + this.dragData.id;\n            if(typeof this.dragData.dragAction == \"function\"){\n                this._drag.add(mode, dragId, (d:DragInfo) => this.dragData.dragAction(d),\n                    this.dragData.type, this.dragData.model, this.dragData.hndClass);\n            }\n            else{\n                this._drag.add(mode, dragId, (d:DragInfo) => this.dragging(d),\n                    this.dragData.type, this.dragData.model, this.dragData.hndClass);\n            }\n\n            this._el.nativeElement.setAttribute(\"dragDropId\", dragId);\n            this._el.nativeElement.classList.add(\"drag-element\");\n        }\n    }\n\n    ngOnDestroy(){\n        if( !this.dragData.disabled ){\n            this._drag.remove(this.dragData.type == 'collection-item' ? dragModes.reorder :  dragModes.dragElement, \"\");\n            this.removeHandle();\n        }\n    }\n\n    private dragging(d: DragInfo) : void{\n        if( !d.endOfDrag ){\n            if(! this.hnd ){\n                try{\n                    this.hnd = this.createHandle();\n                }\n                catch(e){\n                    console.warn(\"drag handle is not created\", d);\n                    this.hnd = null;\n                }\n            }\n            if( !this.hnd )\n                return;\n\n            let contPos = this.dragData.handleContainer.getBoundingClientRect();\n            let offset = {y: -25, x: 5};\n            this._render.setStyle(this.hnd, 'top', (d.y + offset.y - contPos.top) + 'px');\n            this._render.setStyle(this.hnd, 'left', (d.x + offset.x - contPos.left ) + 'px');\n            if(d.ctrlPressed)\n                this._render.addClass(this.hnd, \"copy\");\n            else\n                this._render.removeClass(this.hnd, \"copy\");\n        }\n        else{\n            // drops\n            this.removeHandle();\n        }\n    }\n\n    private createHandle() : any{\n\n        let root = this._render.createElement(\"div\");\n        this._render.addClass(root, \"dragging-handle\");\n\n        let imgs = this._el.nativeElement.getElementsByTagName('IMG');\n        if( imgs.length ){\n            let src = imgs[0].src;\n            let img = this._render.createElement('img');            \n            this._render.setProperty(img, 'src', src);\n            this._render.addClass(img, 'toolbox-image');\n            this._render.appendChild(root, img);                    \n        }\n\n        let txtImgs = this._el.nativeElement.getElementsByTagName('I');\n        if( txtImgs.length){\n            let t = (<HTMLElement> txtImgs[0]);\n            let txtImg = this._render.createElement('I');\n            t.className.split(' ').forEach(c=>this._render.addClass(txtImg, c));            \n            this._render.setAttribute(txtImg, \"aria-hidden\", \"true\");\n            this._render.appendChild(root, txtImg);\n        }\n        \n        let txt = (this.dragData.model && this.dragData.model.name) || this.dragData.id || this.dragData.type;\n        this._render.appendChild(root, this._render.createText(txt));\n        this._render.appendChild(this.dragData.handleContainer, root);\n\n        return root;\n    }       \n\n    private removeHandle(){\n        if(this.hnd){\n            this._render.removeChild(this.dragData.handleContainer, this.hnd);\n            delete this.hnd;\n        }\n    }    \n\n} \n","import { Directive, Input, AfterViewInit, ElementRef, OnDestroy } from '@angular/core';\nimport { DragService } from '../drag.service';\nimport { DragInfo } from '../drag';\n\nexport class DropDataInfo {\n    disabled?: boolean = false;\n    types: string;\n    drop?: (d: DragInfo, dropInf: DropDataInfo) => void;\n    over?: (d: DragInfo, dropInf: DropDataInfo) => void;\n    id: string;\n    model?: any;\n}\n\n@Directive({\n    selector: '[csi-droppable]'\n})\nexport class DroppableDirective implements AfterViewInit, OnDestroy {\n    @Input('csi-droppable') info: DropDataInfo;\n\n    constructor(private _el: ElementRef, private _drag: DragService) {\n    }\n\n    ngAfterViewInit() {        \n        if (!this.info.disabled){\n            this._drag.addZone(this.info.types.split(\",\"), this.info.id, (m: DragInfo) => this.action(m));\n            this._el.nativeElement.setAttribute(\"dragDropId\", \"drop-\" + this.info.id);\n            this._el.nativeElement.classList.add(\"drop-zone\");\n        }\n    }\n\n    ngOnDestroy() {\n        if (!this.info.disabled)\n            this._drag.removeZone(this.info.id);\n    }\n\n    private action(d: DragInfo) {\n        if (d.endOfDrag) {\n            if (this.info.drop && this.info.disabled !== true)\n                this.info.drop(d, this.info);\n        }\n        else {\n            if (this.info.over)\n                this.info.over(d, this.info);\n        }\n    }\n\n} \n","import {Injectable, Inject } from '@angular/core';\nimport { DragInfo, dragModes} from \"./drag\";\nimport { fromEvent } from 'rxjs';\nimport { map, filter } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\nimport { StudioStateService } from 'common/services/studioStateService';\nimport { DesignModes } from 'common/objects/common';\n\nabstract class ItemBase {\n  constructor(public id: string, public action: (d: DragInfo) => void, public model : any) {      \n  }\n\n  public isInside(m: HTMLElement, zoneStyle?:string) : boolean{\n    \n    let parent : HTMLElement = m;\n    let count = 10;\n    let found = false;\n    const zId = \"drop-\" + this.id;\n\n    while(count-- > 0 && parent && !found){\n        if( zoneStyle )\n            found = parent.classList.contains(zoneStyle);\n        else\n            found = parent.getAttribute(\"dragDropId\") === zId;\n        if( found ){\n            break;\n        }\n        parent = parent.parentElement;\n    }\n    return found;\n  }\n}\n\nexport class DragItem extends ItemBase {\n  constructor(public mode : dragModes, public id: string, public action: (d: DragInfo) => void, public dragType: string, public model: any, public hndClass : string){\n    super(id, action, model);\n  }\n}\n\nclass DropZone extends ItemBase {\n\n  constructor(public dragTypes : string[], public id: string, public action: (d: DragInfo) => void, model:any){\n    super(id, action, model);\n  }\n\n  public accept(it: DragItem){\n      // drag type of dragging item should be in the dragType list of the drop zone\n      return it && (it.mode == dragModes.dragElement || it.mode == dragModes.reorder) && it.dragType && this.dragTypes.indexOf(it.dragType)!=-1;\n  }\n\n}\n\n@Injectable()\nexport class DragService {\n    startInputName: boolean = false;\n\n    private _last: DragInfo;\n\n    private _draggables : DragItem[] = [];\n\n    // index of element in _draggables\n    private _draggableWindows : number[] = [];\n    private _draggableResizables : number[] = [];\n\n    private _activeMoved : number = -1;\n    private _activeResizable : number = -1;\n    private _dragging = false;\n    private _mouseDown = false;\n\n    private _draggingItem : DragItem;  \n    private _zones: DropZone[] = [];\n    private _lastZone: DropZone;\n    private _lastZoneElement : HTMLElement;\n    private _startDragTime: number;\n   \n    constructor(@Inject(DOCUMENT) private _document:any, private _studioStateService: StudioStateService){\n        this.initMouseHandlers();\n    }\n\n    // Adds drag item\n    public add(mode: dragModes, id: string , action: (d: DragInfo) => void, dragType: string, model: any, hndClass : string){\n        const dragItem = new DragItem(mode, id, action, dragType, model, hndClass);\n        let i = this._draggables.push(dragItem) - 1;\n\n        if( mode == dragModes.moveWindow){\n            this._draggableWindows.push(i);\n            this._activeMoved = i;\n        }\n        else if( mode == dragModes.resizeWindow){\n            this._draggableResizables.push(i);\n            this._activeResizable = i;\n        }\n    }\n\n    public remove(mode: dragModes, id: string){\n        let removedIndex : number;\n\n        if( mode == dragModes.moveWindow){\n            removedIndex = this._draggableWindows.pop();\n            // active modal handler is the last item in _draggableWindows\n            this._activeMoved = this._draggableWindows.length > 0 ? this._draggableWindows[this._draggableWindows.length-1] : -1;\n        }\n        else if( mode == dragModes.resizeWindow){\n            removedIndex = this._draggableResizables.pop();\n            // active modal handler is the last item in _draggableWindows\n            this._activeResizable = this._draggableResizables.length > 0 ? this._draggableResizables[this._draggableResizables.length-1] : -1;\n        }\n        else if( mode == dragModes.dragElement || mode == dragModes.resizePanel){\n            removedIndex = this._draggables.findIndex(d=> d.id == id);\n        }\n\n        if( removedIndex !== undefined && removedIndex != -1 )\n            this._draggables.splice(removedIndex, 1);\n    }\n\n    public addZone(acceptedTypes: string[], elementId: string, action: (d: DragInfo) => void){\n        if( this._zones.filter(z => z.id == elementId).length == 0)\n            this._zones.push (new DropZone(acceptedTypes, elementId, action, null) );\n    }\n\n    public removeZone(id: any){\n        // let i = this._zones.findIndex(z=> z.element == el);\n        // if( i != -1){\n        //     this._zones.splice(i, 1);\n        // }\n    }\n\n    public getDragDropId(m: HTMLElement, className:string) : string {\n        \n        let parent : HTMLElement = m;\n        let count = 10;\n        let found = false;\n\n        while(count-- > 0 && parent && !found){\n            found = parent.classList.contains(className);\n            if( found )\n                return parent.getAttribute(\"dragDropId\");\n            parent = parent.parentElement;\n        }\n        return null;\n    }\n\n\n    public clear(dragTypes: string[], dropTypes: string[] ){\n        if( dragTypes){\n            this._draggables = this._draggables.filter(d=> dragTypes.indexOf(d.dragType)==-1);\n        }\n        if( dropTypes ){\n            this._zones = this._zones.filter(z=> z.dragTypes.filter(d=> dropTypes.indexOf(d)!=-1).length==0);\n        }\n    }\n\n\n    private getDraggabledItem (el:HTMLElement) : DragItem {\n      \n        let i : number = -1;\n        let id = this.getDragDropId(el, \"drag-element\");\n        if( id )\n            i = this._draggables.findIndex( (d) => d.id == id );\n\n        let found = false;\n\n        if(i!=-1){\n            switch(this._draggables[i].mode){\n                case dragModes.moveWindow:\n                    if( el.classList.contains(\"cursor-draggable\") || el.parentElement.classList.contains(\"cursor-draggable\") ){\n                        found = this._activeMoved == i;\n                    }\n                    break;\n                case dragModes.resizeWindow:\n                    found = this._activeResizable == i;\n                    break;\n                case dragModes.dragElement:\n                    if(!this._draggables[i].hndClass || (this._draggables[i].hndClass && el.classList.contains(this._draggables[i].hndClass)))\n                        found = true;\n                    else\n                        found = false;\n                    break;\n                case dragModes.resizePanel:\n                    found = true;        \n                    break;\n                case dragModes.reorder:\n                    found = true;\n                    break;\n                default:\n                    found = false;   \n                    break;\n            }\n        }\n\n        if( found )\n            return this._draggables[i];\n\n        return null;\n    }\n\n    private initMouseHandlers(){\n\n        fromEvent<MouseEvent>(document, 'mouseover')\n            .pipe(\n                filter( m => this._dragging && this.isZone(m) ),\n                map<MouseEvent,DragInfo>(m => this.getDragOverInfo(m))\n            )\n            .subscribe(c=> this.dragOverZone(c)) ;\n\n        fromEvent<MouseEvent>(document, 'mousedown').subscribe(ev=> {                  \n            if( ev.which == 1) {                \n                this._mouseDown = true;\n                this._startDragTime = Date.now();\n                if( this.startDragging(ev.pageX, ev.pageY, <HTMLElement>ev.target ))\n                    ev.preventDefault();\n            }\n        });\n\n        fromEvent<MouseEvent>(document, 'mouseup').subscribe(ev=> this.mouseUp(ev));\n      \n        fromEvent<MouseEvent>(document, 'mousemove')\n            .subscribe((e) => {\n                let di = new DragInfo(e.pageX, e.pageY, this._last, e.ctrlKey);\n                if (this._mouseDown) {\n                    if (this._draggingItem && this._draggingItem.action) {\n                        this._draggingItem.action(di);\n                        this._last = di;\n                        e.preventDefault();\n                    }\n                }\n            });\n    }  \n\n    private isZone(m: MouseEvent) : boolean{\n        let z = this.findZone(m);\n        if( z ){\n            return true;      \n        }\n        if(this._lastZone && (!z || this._lastZone != z) ){\n            // should callback if any zone out\n            return true;\n        }\n        return false;\n    }  \n\n    private findZone(m: MouseEvent) : DropZone {\n        let acceptableZones = this._zones.filter(z=> z.accept(this._draggingItem));\n        let zxs = acceptableZones.filter(z=> z.isInside(<HTMLElement> (m.target)));\n        return zxs.length ? zxs[0] : null;\n    }\n\n    private findZoneElement(m: HTMLElement) : HTMLElement {\n        let parent : HTMLElement = m;\n        let count = 10;\n        let found = false;\n\n        while(count-- > 0 && parent && !found){\n            found = parent.classList.contains(\"drop-zone\");\n            if( found )\n                return parent;\n            parent = parent.parentElement;\n        }\n        return null;\n    }\n\n    private findZoneIndex(m: MouseEvent) : number {\n        let zone = this.findZone(m);\n        return zone ? this._zones.findIndex(z=> z == zone) : -1;\n    }\n\n    getDragDropElement(id: string){\n        return <HTMLElement>this._document.querySelector('[dragDropId=\"'+id+'\"]');\n    }\n\n    private getDragOverInfo(m: MouseEvent) : DragInfo{\n        let d = new DragInfo(m.pageX, m.pageY, undefined, (m as any).ctrlKey);    \n        d.dropZoneIndex = this.findZoneIndex(m);\n        d.dropZoneElement = this.findZoneElement(m.target as HTMLElement);\n        m.preventDefault();\n        return d;\n    }\n\n    private mouseUp(m: MouseEvent){\n        if( this._dragging ){\n\n            let d = new DragInfo(m.pageX, m.pageY, undefined, (m as any).ctrlKey);\n            // leave zone \n            if( this._lastZone){\n                if(this._studioStateService.activeRootElement.__designMode == DesignModes.Controls){\n                    d.leaveZone = true;\n                    if(this._lastZoneElement){\n                        this._lastZoneElement.classList.remove(\"drop-allowed\");\n                        this._lastZoneElement.classList.remove(\"drop-not-allowed\");\n                    }\n                    if(this._lastZone.action)\n                        this._lastZone.action(d);\n                }\n                \n            }\n\n            d.endOfDrag = true;\n            this._draggingItem.action(d);\n\n            if( Date.now() - this._startDragTime > 500 )\n                this.dropIt(d, m);\n\n            this._dragging = false;\n            this._draggingItem = null;\n            this._last = null;\n            this._lastZone = null;\n            this._lastZoneElement = null;\n\n            m.preventDefault();\n        }\n\n        this._mouseDown = false;\n        this._draggingItem = null;\n    }\n\n    private dropIt(d: DragInfo, m: MouseEvent){\n        d.dropZoneIndex = this.findZoneIndex(m);\n        // drop action\n        let z  = d.dropZoneIndex != - 1 ? this._zones[d.dropZoneIndex] : null;\n        if( z && z.action ){\n            d.dragModel = this._draggingItem.model;\n            d.dropZoneElement = this.findZoneElement(m.target as HTMLElement);\n            z.action(d);\n        }    \n    }\n\n    private dragOverZone(d:DragInfo){\n        \n        let z  = d.dropZoneIndex != - 1 ? this._zones[d.dropZoneIndex] : null;\n\n        if( this._lastZone ){\n            d.leaveZone = true;\n            if(this._lastZoneElement){\n                this._lastZoneElement.classList.remove(\"drop-allowed\");\n                this._lastZoneElement.classList.remove(\"drop-not-allowed\");\n            }\n\n            if( this._lastZone.action)\n                this._lastZone.action(d);        \n        }\n        \n        this._lastZone = z;\n        this._lastZoneElement = d.dropZoneElement;\n\n        if(z){      \n            if( d.dropZoneElement ){\n                d.dropZoneElement.classList.add(\"drop-allowed\");\n                d.dropZoneElement.classList.remove(\"drop-not-allowed\");\n            }\n            d.leaveZone = false;\n\n            if( z.action ){\n                // Enter zone\n                z.action(d);\n            }            \n        }  \n        \n    }\n\n    private startDragging(X:number, Y: number, el:HTMLElement) : boolean{\n\n        this._draggingItem = this.getDraggabledItem(el);\n        if( this._draggingItem ){\n            this._last = new DragInfo(X, Y, undefined, false);\n            this._last.dragMode = this._draggingItem.mode;\n            this._dragging = true;\n            this._lastZone = null;\n            return true;\n        }\n\n        return false;\n    }\n}\n","import { DragItem } from \"./drag.service\";\n\nexport enum dragModes {none, moveWindow, resizeWindow, resizePanel, dragElement, reorder};\n\nexport class DragInfo {\n    public x: number;\n    public y :number;\n\n    public diffx: number;\n    public diffy :number;\n\n    public dragMode : dragModes = dragModes.none;\n    public endOfDrag = false;\n\n    public dropZoneIndex: number = -1;\n    public dropZoneElement: HTMLElement;\n    public leaveZone: boolean = false;\n    public dragModel : DragItem;\n    public ctrlPressed : boolean = false;\n    \n    constructor(X: number, Y: number, start: DragInfo, ctrlKey: boolean){\n        this.x = X;\n        this.y = Y;\n        this.ctrlPressed = ctrlKey;\n\n        if( start ){\n\n            this.diffx = X - start.x;\n            this.diffy = Y - start.y;\n\n            start.x = this.x;\n            start.y = this.y;\n\n            this.dragMode = start.dragMode;\n        }\n    }\n}","export * from './shared.module';","import { Directive, Input, HostListener, } from \"@angular/core\";\r\nimport { MatDialog, } from \"@angular/material/dialog\";\r\nimport { InputDialogComponent, InputDialogContext } from \"./dialog/input.dialog.component\";\r\nimport { LabelService } from \"../common/services/label.service\";\r\nimport { PageGroupingService } from \"../common/services/pageGrouping.service\";\r\nimport { AlertService } from \"../alert/alert.service\";\r\n\r\n@Directive({\r\n    selector: '[context-add-group]',\r\n})\r\n\r\nexport class InputDialogAddGroupDirective {\r\n    @Input('context-add-group') info: string;\r\n    @Input('key') key: string;\r\n\r\n    @HostListener('click', ['$event']) onMouseClick(e: MouseEvent) {\r\n\r\n        if (![\"edit\",\"add\",\"addtonewgrp\"].includes(this.key))\r\n            return;\r\n\r\n         if(this._pageGroupingService.isSystemGroup(this.info)){\r\n            this._alertService.error(\"Unable to edit system folder\");\r\n            return;\r\n         }\r\n        const okLabel = this._labelService.getLabel('PS_ACTION_OK', 'Ok');\r\n        const cancelLabel = this._labelService.getLabel('PS_ACTION_CANCEL', 'Cancel');\r\n        const copyTitleLabel = \"Enter a group name:\";\r\n        const copyInputLabel = \"\";\r\n        const inputContext: InputDialogContext = {\r\n            title: copyTitleLabel,\r\n            message: '',\r\n            actions: [\r\n                { action: 'cancel', name: cancelLabel, isPrimary: false },\r\n                { action: 'ok', name: okLabel, isPrimary: true },],\r\n            inputs: [{ name: 'txt', type: 'text', text: '', value: copyInputLabel }]\r\n        };\r\n\r\n        const dockPanel = document.querySelector(\".dock-panel\");\r\n        const posDockPanel = dockPanel.getBoundingClientRect();\r\n        let dialog = this._dialog.open(InputDialogComponent, {\r\n            disableClose: false,\r\n            id: 'inputDialogAddGroupContainer',\r\n            width: `${posDockPanel.width}px`,\r\n            backdropClass: 'inputDialogAddGroup',\r\n        });\r\n\r\n        dialog.updatePosition({\r\n            top: `${posDockPanel.top - 65}px`,\r\n            right: `${posDockPanel.right}px`,\r\n            left: `${posDockPanel.left}px`,\r\n            bottom: `${posDockPanel.bottom}px`\r\n        });\r\n\r\n        dialog.componentInstance.initContext(inputContext);\r\n        dialog.afterClosed().subscribe(p => {\r\n            if (p != \"cancel\") {\r\n                const name = p[0]['value'];\r\n                if (this.key == \"add\") {          \r\n                    this._pageGroupingService.addGroup(name);\r\n                }\r\n                if (this.key == \"edit\") {   \r\n                    this._pageGroupingService.editGroup(name, this.info);       \r\n                }\r\n                if(this.key==\"addtonewgrp\"){\r\n                    this._pageGroupingService.moveToGroup(this.info, name);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    constructor(\r\n        public _dialog: MatDialog,\r\n        private _labelService: LabelService,\r\n        private _pageGroupingService: PageGroupingService,\r\n        private _alertService: AlertService\r\n    ) { }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { LabelService } from '../../common/services/label.service';\r\n\r\n@Pipe({\r\n    name: 'label',\r\n})\r\n\r\nexport class LabelPipe implements PipeTransform {\r\n\r\n    constructor(private _label: LabelService) { }\r\n\r\n    transform(defaultText: string, labelName: string, ...labelArgs: any[]): any {\r\n        if (!labelName) return;\r\n        return this._label.getLabelwithArguments(labelName, defaultText, labelArgs);\r\n    }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'panelName'\n})\nexport class PanelNamePipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if( value ){\n      let v = <string>value;\n      if( v == \"PortalMenuCommandChanges\" || v == \"PortalMenuSubMenuChanges\")\n        return \"Caption\";\n\n     if(v.startsWith(\"ActionDef\")) v = \"PageAction\" + v.slice(\"ActionDef\".length);\n     \n     if( v.endsWith(\"Changes\"))\n        value = v.substr(0, v.lastIndexOf(\"Changes\")); \n    }\n    return (value || \"\") + \" Name\";\n  }\n\n}\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\n//dialog\nimport { ConfirmDialogComponent } from './dialog/confirm.dialog.component';\nimport { InputDialogComponent } from './dialog/input.dialog.component';\n//directives\nimport { DialogDecorDirective } from './directives/dialogDecor.directive';\nimport { DraggableDirective } from './directives/draggable.directive';\nimport { DroppableDirective } from './directives/droppable.directive';\n//pipe\nimport { LabelPipe } from './pipe/label.pipe';\n//services\nimport { ConvertorService } from '../common/services/convertor.service';\nimport { DataAccessors } from '../common/services/dataAccessors';\nimport { DragService } from './drag.service';\nimport { LabelService } from '../common/services/label.service';\nimport { MetadataService } from '../common/services/metadata.service';\nimport { ValueProviderService } from '../common/services/dataValue.service';\nimport { ClosableDirective } from './directives/closable.directive';\nimport { PanelNamePipe } from './pipe/panel-name.pipe';\nimport { PageGroupingService } from '../common/services/pageGrouping.service';\nimport { ContextMenuPopupDirective } from './context-menu.directive';\nimport { InputDialogAddGroupDirective } from './inputdialog-addGroup.directive';\n\n\nconst COMPONENTS = [\n    ConfirmDialogComponent,\n    InputDialogComponent,\n    DialogDecorDirective,\n    DraggableDirective,\n    DroppableDirective,\n    ClosableDirective,\n    ContextMenuPopupDirective,\n    InputDialogAddGroupDirective,\n    LabelPipe,\n    PanelNamePipe\n];\nconst MATMODULES = [\n    MatAutocompleteModule,\n    MatDialogModule,\n    MatInputModule,\n    MatMenuModule,\n    MatOptionModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatSnackBarModule\n]\n\n@NgModule({\n    imports: [        \n        BrowserAnimationsModule,\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MATMODULES,\n    ],\n    declarations: [\n        COMPONENTS\n    ],\n    exports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        COMPONENTS,\n        MATMODULES\n    ],\n    entryComponents: [\n        ConfirmDialogComponent,\n        InputDialogComponent\n    ],\n    providers: [\n        ConvertorService,\n        DataAccessors,\n        DragService,\n        LabelService,\n        MetadataService,\n        ValueProviderService,\n        PageGroupingService\n    ]\n})\nexport class SharedModule {\n    constructor( @Optional() @SkipSelf() parentModule: SharedModule) {\n        if (parentModule) {\n            throw new Error(\n                'SharedModule is already loaded.');\n        }\n    }\n}\n","export * from './studio.module';","import { Component, OnInit } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nimport _ from 'lodash';\n\nimport {\n    IElement, IResultStatus, IUIDesigner, UpdatedInfo, val, TopMenuState,\n    DockPanel, ContentSection, IUIComponentRef, IUpdatedData, RefreshInfo, RefreshLevel, uuid, ILabel, isContainerControl, DesignModes, ExecuteCommand \n    } from '../common/objects/common';\nimport { PanelUpdatedData } from '../panel/panel';\nimport { Alert } from '../alert/alert';\nimport { IOMTypeDescriptor, OMType } from '../common/objects/viewModel';\nimport { OMTypeDescriptor } from '../common/objects/fieldDirectoryBase';\nimport { MatDialog } from '@angular/material/dialog';\n\n//Services\nimport { AlertService } from '../alert/alert.service';\nimport { ConvertorService } from '../common/services/convertor.service';\nimport { LabelService } from '../common/services/label.service';\nimport { LocalService } from '../common/services/local.service';\nimport { MetadataService } from '../common/services/metadata.service';\nimport { PortalService } from '../common/services/portal.service';\nimport { WCFService } from '../common/services/wcf.service';\n\nimport { HistoryOperation, HistoryLog, ElementHistoryData, RecordCommand, HistoryObjectType } from '../common/objects/historyLog';\nimport { ControlManager } from '../layout/design/control/controlManager';\nimport { PageWizardComponent } from './wizard/page/pageWizard.component';\nimport { BatchExportComponent } from './wizard/batchExportImport/batchExport.component';\nimport { BatchProgressPopup } from './wizard/batchExportImport/batchProgressPopup.component';\nimport { BatchImportComponent } from './wizard/batchExportImport/batchImport.component';\nimport { StudioStateService } from '../common/services/studioStateService';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    templateUrl: 'studio.component.html',\n    selector: 'csi-framework',\n    styles: [`\n    .main-right-column, .main-left-column {\n        display: flex;\n        flex-direction: column;\n        flex: 0 0 300px;\n    }\n    .hidden{\n        display: none;\n    }\n    .csi-layout-column {\n        display: flex;\n        flex-direction: column;\n        flex: 1 1 100%;\n        overflow: hidden;\n    }\n    .thin-blue-line{\n        width: 100%;\n        height: 2px;\n        background-color: #55A0B9;\n    }\n\n    /* Absolute Center Spinner */\n    .spinner {\n      position: fixed;\n      z-index: 999;\n      height: 2em;\n      width: 2em;\n      overflow: show;\n      margin: auto;\n      top: 0;\n      left: 0;\n      bottom: 0;\n      right: 0;\n    }\n    \n    /* Transparent Overlay */\n    .spinner:before {\n      content: '';\n      display: block;\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;      \n    }    \n    `]\n})\n\nexport class StudioComponent implements OnInit {\n    menuUpdated: UpdatedInfo;\n    dockPanels: { left: DockPanel[], right: DockPanel[] };\n    showTraceViewer: boolean = false;\n    \n    get metadataLoaded() { return this._metadataService.ready;}\n\n    get alerts(): Alert[] { return this._alert.alerts; };\n    get subjects() { return this._studioStateService.subjects; };\n    get openedElements() { return this._studioStateService.openedElements; };\n    get activeRootElement() { return this._studioStateService.activeRootElement; };\n    //get showSpinner() { return this._studioService.showSpinner; };\n\n    constructor(\n        private _alert: AlertService,\n        private _converter: ConvertorService,\n        private _dialog: MatDialog,\n        private _localService: LocalService,\n        private _labelService: LabelService,\n        private _metadataService: MetadataService,\n        private _portalService: PortalService,\n        private _studioStateService: StudioStateService,\n        private _wcf: WCFService) {\n\n        this._alert.init();\n    }\n\n    ngOnInit(): void {\n\n        this._labelService.load();\n        this.dockPanelsInit();\n\n        this.subjects.panel.subscribe(upd => this.panelCommand(upd));\n\n        this._studioStateService.subjects.execute.subscribe( (command:ExecuteCommand) => this.actionExecute(command) );\n\n        this.showTraceViewer = this._localService.isDisplayTraceViewer();\n        this.subjects.deleteElement.subscribe(el=> this.deleteElement(el) );\n    }\n\n    private deleteRoot(): void {\n        let rootElement = <IUIDesigner>this._studioStateService.activeRootElement;\n        let rootType = rootElement.type;\n        if (!rootType)\n            rootType = rootElement.typeName || rootElement['__type'];\n\n        if (rootType && rootType.endsWith('Changes'))\n            rootType = rootType.substr(0, rootType.lastIndexOf('Changes'));\n\n        this.deleteElement(rootElement);\n    }\n\n    private deleteElement(el : IElement | IUIComponentRef): void {\n        let elName = el.name;\n        let elType = el.type;\n        if (el.type === undefined){\n            elType = el.__type;\n        }\n        if( elType.toLowerCase() == \"webpart\" && (el as IUIComponentRef).isStatic === true){\n            // the General (programmatic) webparts cannot be removed\n            return;\n        }\n\n        let args = [elName, elType];\n        let titleLabel = <ILabel>{\n            Name: 'PS_WARNING_DELETE_ROOT_ELEMENT_TITLE',\n            DefaultValue: 'Delete {1}', arguments: args\n        };\n        let messageLabel = <ILabel>{\n            Name: 'PS_WARNING_DELETE_ROOT_ELEMENT_MESSAGE',\n            DefaultValue: 'You are about to permanently delete the selected {0} {1}. Do you want to continue?',\n            arguments: args\n        };\n\n        this._alert.confirmModal(messageLabel, titleLabel)\n            .subscribe(ok => { if (ok) this.deleteElementFinally(el); });\n    }\n\n    private deleteElementFinally(el : IElement | IUIComponentRef) {\n\n        let {name: elName, type: elType} = el;\n        let panelType = this.getPanelType(el);\n        let obs: Observable<IResultStatus>;\n        let svc = this._portalElementServiceMap[panelType];\n\n        if (svc){\n            if (svc == '*pageMap')\n                obs = this._portalService.deletePageMap(elName);\n            else if (svc == '*targetMatrix')\n                obs = this._portalService.deleteTargetMatrixItem(elName);\n            else\n                obs = this._wcf.deleteMaint(elName, svc);\n        }\n        else\n            obs = this._portalService.removeElement(elName, elType);\n\n        obs.subscribe(result => {\n            let CommitResult = <IResultStatus>result['CommitTransactionResult'];\n            if (result.IsSuccess || CommitResult.IsSuccess) {\n                let opened = this._studioStateService.openedElements.find( e=> e.name == elName && (e.type === elType || e.__maint === svc || e.__unbound === svc));\n                if( opened ){\n                    this._studioStateService.removeOpenedElement(opened);\n                    this._studioStateService.removeComponentRef((opened as IUIDesigner).componentRef);\n                    this._portalService.updateComponentCache(opened);\n                }\n                this._localService.removeElementHistory(el);\n                if(!result.IsSuccess){\n                    this._alert.success(CommitResult);\n                }\n                else{\n                    this._alert.success(result);\n                }\n                this.subjects.refreshElementPanel.next(panelType);                \n                this._studioStateService.activateRootElement();\n            }\n            else {\n                if(result.IsSuccess){\n                    this.displayError(result.Message, result.ExceptionData);\n                    \n                }else{\n                    this.displayError(CommitResult.Message, CommitResult.ExceptionData);\n                }     \n            }\n        });\n    }\n\n    private setLoadedElement(el: IUIDesigner, workspace : number) : IUIDesigner{\n        // refresh top menu commands.\n        let menu = new TopMenuState();\n        menu.save = false;\n        menu.delete = true;\n        menu.run = true;\n        this._studioStateService.refreshTopMenu(menu);\n\n        el.isRoot = true;\n        el[\"componentName\"] = el.name;\n        if( el.isRoot && el.isNew ){\n            el.__workspace = 0;\n            el.workspaceIndexes = [];\n        }\n        if( this._studioStateService.getRoot() )\n            el.scaleValue = this._studioStateService.getRoot().scaleValue || 100;\n\n        let index = _.findIndex(this._studioStateService.openedElements, (e) => { return e.name == el.name && e.type == el.type });\n        if (index >= 0) {\n            // Replace root in the same tab\n            this._studioStateService.openedElements[index] = el;\n            this._studioStateService.activateRootElement(el);\n        }\n        else {\n            this._studioStateService.addOpenedElement(el);\n            this._localService.addToElementHistory(el);\n        }\n\n        this._studioStateService.setComponentRef(this._studioStateService.activeRootElement);\n        this._studioStateService.activeRootElement.history = new HistoryLog();\n\n        workspace = (workspace === undefined) ? 0 : workspace;\n\n        this._studioStateService.activeRootElement.__workspace = workspace;  // DEV \n        this._studioStateService.activeRootElement.isReadOnly = workspace >= 1;\n        this._studioStateService.activeRootElement.__designMode = DesignModes.Controls;\n\n        return this._studioStateService.getRoot();\n    }\n\n    private loadElement({ name: elementName, type: elementType }: IElement | IUIComponentRef, workspace: number): void {\n\n        if (elementType != 'StartPage') {\n            this._portalService.getElement(elementName, elementType, this._metadataService.getWorkspaceCodeById(workspace))\n                .subscribe(\n                el => {\n                    this.setLoadedElement(el, workspace);\n                },\n                error => {\n                    let args = [elementName, elementType];\n                    let errorMessage = this._labelService.getLabelwithArguments('PS_ERROR_LOADING_OBJ_MESSAGE', 'Error occurred on loading {0} of type {1}\\r\\n', args);\n\n                    this.displayError(errorMessage, error.data);\n                });\n        }\n    }\n\n    private loadElementAsync({ name: elementName, type: elementType }: IElement | IUIComponentRef, workspace: number): Observable<IUIDesigner> {\n\n        return this._portalService.getElement(elementName, elementType, this._metadataService.getWorkspaceCodeById(workspace))\n            .pipe(map(el => this.setLoadedElement(el, workspace)));\n    }\n\n    loadNewPortalObject(type: string): void {\n        this.loadObject('', this.getSvcService(type));\n    }\n\n    loadObject(objectName: string, svc: string, loaded?: () => any, reload = false): void {\n        let existing = null;\n        if(!reload)\n            existing = objectName ? this._studioStateService.activateExistingOpenedElement(objectName) : undefined;\n        if (!existing) {\n            let observable: Observable<any>;\n            if (svc == '*targetMatrix')\n                observable = this._portalService.getTargetMatrix(objectName);\n            else if (svc == '*pageMap')\n                observable = this._portalService.getPageMap(objectName);\n            else \n                observable = this._wcf.getElement(objectName, svc);\n\n            observable.subscribe(\n                data => {\n                    let res: any;\n                    if (svc == '*targetMatrix') {\n                        res = this._converter.convertTargetMatrixToModel(data);\n                        res.__unbound = svc;\n                    }\n                    else if (svc == '*pageMap') {\n                        res = this._converter.convertSettingsToModel(data, \"PageMappingItem\", this._metadataService);\n                        res.__unbound = svc;\n                        if (res.Name) {\n                            let n = res.Name;\n                            res.name = n;\n                            delete res.Name;\n                        }\n                    }\n                    else {\n                        res = this._converter.convertMaintChangesToModel(data);\n                        res.__maint = svc;\n                        res.__unbound = 'NDO';\n                    }\n\n                    if (!objectName) {\n                        res.isNew = true;\n                        res.isDirty = true;\n                    }\n\n                    res.id = uuid.id();\n                    res.isRoot = true;\n                    res.componentName = objectName; \n                    let menu = new TopMenuState();\n                    menu.setAll(false);\n                    menu.copy = true;\n                    menu.delete = true;\n                    this._studioStateService.refreshTopMenu(menu);\n\n                    if( !reload )\n                        this._studioStateService.addOpenedElement(res);\n                    else\n                        this._studioStateService.replaceRoot(res);\n\n                    this._studioStateService.activateRootElement(res);\n                    this._studioStateService.subjects.propertyPanel.next(res);\n                    if (loaded)\n                        loaded();\n                },\n                error => {\n                    let args = [objectName, svc];\n                    let errorMessage = this._labelService.getLabelwithArguments('PS_ERROR_LOADING_OBJ_MESSAGE', 'Error occurred on loading {0} of type {1}\\r\\n', args);\n                    this.displayError(errorMessage, error.data);\n                });\n        }\n        else {\n            if (loaded)\n                loaded();\n        }\n    }\n\n    load(loadingElement: any) {\n        this.loadElement(loadingElement, 0);\n    }\n\n    activateOpenedElement(element: IElement, isSwitchTab?): void {\n        let result = this._studioStateService.activateRootElement(element);\n\n        let activateElement = () => {\n            this._portalService.updateComponentCache(element);\n            let panelType = this.getPanelType(element);\n            this.subjects.refreshElementPanel.next(panelType);\n        }\n          \n        if (result) {\n\n            if(isSwitchTab && element.__type && ['portaltabchanges',\n                 'portalmenudefinitionchanges','pagemappingitem',\n                 'actionrulechanges','actionrulechanges',\n                 'actiondefchanges', 'actioncategorychanges'].indexOf(element.__type.toLowerCase()) != -1){\n\n                this._studioStateService.activateRootElement(element);\n                this._studioStateService.subjects.propertyPanel.next(element);\n                activateElement();     \n            }\n\n            if (element.type && ['page', 'webpart', 'pageflow'].indexOf(element.type.toLowerCase()) != -1)\n                this._localService.addToElementHistory(element);\n\n            this._studioStateService.activateElement(element);\n        }\n    }\n\n    closeOpenedElement(element: IUIDesigner): void {\n        this._studioStateService.removeOpenedElement(element);\n    }\n\n    saveAndCloseOpenedElement(element: IUIDesigner): void {\n        this.saveRootElement(element, true);\n    }\n\n    actionExecute(command:ExecuteCommand) {\n        let newCommands = ['newPage', 'newWebpart', 'newPageflow', 'newAction', 'newActionCategory', 'newActionRule', 'newPageMap', 'newTargetMatrix', 'newMenu', 'newTab'];\n        let root = <IUIDesigner>this._studioStateService.getRoot();\n        let element = <any>this._studioStateService.activeRootElement;\n        let svc = root.__maint || root.__unbound;\n        let newName = null;\n        let respMessage = null;\n\n        let cmd : any = {};\n        cmd[command.cmd] = true;\n        cmd.data = command.data;\n        cmd.element = command.element;\n\n        if(cmd.data){            \n            if(cmd.data.hasOwnProperty('name')) \n                newName = cmd.data['name'];\n            if(cmd.data.hasOwnProperty('message'))\n                respMessage = cmd.data['message'];\n        }\n\n        if (cmd.save) {\n            if( root.__xml ){\n                this._alert.warningModal( \"Please switch to the Controls view and save again\", \"Save\" );\n                return;\n            }\n            this.saveRootElement(root, false);\n            element.componentName = element.name;\n        }\n        else if (cmd.saveAll) {\n            _.forEach(this._studioStateService.openedElements, (value: IUIDesigner) => {\n                if (value.isDirty) {\n                    this.saveRootElement(<IUIDesigner>value, false);\n                }\n            });\n            element.componentName = element.name;\n        }\n        else if (cmd.import) {\n            this.importRootElement(cmd.data);\n        }\n        else if (cmd.export) {\n            this.exportRootElement(root, root.__workspace);\n        }\n        else if (cmd.exportAll) {\n            this.exportRootElement(root);\n        }\n        else if (cmd.delete) {\n            this.deleteRoot();\n        }\n        else if (cmd.switchTab) {\n            this.activateOpenedElement(cmd.element, true);\n        }\n        else if (cmd.generate) {\n            this.menuGenerateCommand(cmd.data);\n        }\n        else if (cmd.batchExport) {\n            this.batchExportDialog();\n        }\n        else if (cmd.batchImport) {\n            this.batchImportDialog();\n        }\n        else if (newCommands.find(c => cmd[c] === true)) {\n            let cm = newCommands.find(c => cmd[c] === true);\n            let type = cm.substr(3);\n            if (type === 'Page')\n                this.loadNewPageDialog();\n            else if (type === 'Webpart' || type === 'Pageflow')\n                this.loadNewElement(type);\n            else\n                this.loadNewPortalObject(type);\n        }\n        else if (cmd.publish) {\n            const scaleValue = root.scaleValue + 0;\n            let selectedName = root.__selectedElement && root.__selectedElement.name;\n            root.__selectedElement = null;\n            (<any>root).activeElement = null;\n            let compToSave = _.cloneDeep<IElement>(root);\n            let firstPublish = root.type == 'Page' && !_.find((<any>root).workspaceIndexes, w => w > 0);\n            this._converter.convertRefs(compToSave);\n            (<any>root).activeElement = root;\n            this._portalService.publishElement(compToSave)\n                .subscribe(result => {\n                    delete root['__publishFlags'];\n                    let resp: IResultStatus = result;\n                    if (resp.IsSuccess) {\n                        if (firstPublish) {\n                            // set default permission to the page\n                            this._portalService.createPagePermissions(root.name, 'Default Pages').subscribe(resp => {\n                                this._alert.displayResultStatus(resp);\n                            });\n                        }\n\n                        this.loadElementAsync(root, 0).subscribe(el => {\n                            el.scaleValue = scaleValue;\n                            this._alert.displayResultStatus(resp);\n                            this._studioStateService.refreshElementPanel(this.getPanelType(el));\n\n                            let selectedItem = this._studioStateService.findItemByName(selectedName);\n                            if(selectedItem)\n                                this._studioStateService.activateElement(selectedItem);\n                            else\n                                this._studioStateService.activateRootElement();\n                        });\n                    }\n                    else {\n                        this.displayError(resp.Message, resp.ExceptionData);\n                    }\n                });\n        }\n        else if (cmd.revert) {\n            let confMsg = cmd.data == 'system' ?\n                this._labelService.getLabel('PS_REVERT_SYSTEM_CONF', \"By Reverting to the System Content, you will lose all of your changes. Do you want to continue?\") :\n                this._labelService.getLabel('PS_REVERT_PUBLISH_CONF', \"By Reverting to the last Published state, you will lose all of your changes. Do you want to continue?\");\n\n            this._alert.confirmModal(confMsg).subscribe(ok => {\n                if (ok) {\n                    this._portalService.revert(root.name, root.type, cmd.data).subscribe(() => {\n                        this._portalService.updateComponentCache(root);\n                        this.loadElement(root, 0);\n                        this.subjects.refreshElementPanel.next(this.getPanelType(root));\n                    });\n                }\n            });\n        }\n        else if (cmd.extract) {\n            this.extractWebpart(this._studioStateService.activeElement);\n        }\n        else if (cmd.reloadWebPart) {\n            this.reloadWebPart(this._studioStateService.activeElement);\n        }\n        else if (cmd.undo || cmd.redo) {\n            this._studioStateService.historyDo(cmd.undo ? HistoryOperation.undo : HistoryOperation.redo)\n                .then(upd => {\n                    this._studioStateService.propertyChanged([null, null, null, upd]);\n                });\n        }\n        else if (cmd.togglePanel) {\n            this.togglePanel(cmd.data);\n        }\n        else if (cmd.resetPanels) {\n            this.resetPanels();\n        }\n        else if (cmd.copy) {\n             if (cmd.element) {                \n                let obs : Observable<IResultStatus>;\n                let unbound = cmd.element.__unbound;\n                if (unbound) {\n                    let compToSave = _.cloneDeep<IElement>(cmd.element);\n                    if (unbound === \"*pageMap\")\n                        obs = this.savePageMap(compToSave);\n                    else if (unbound === \"*targetMatrix\")\n                        obs = this.saveTargetMatrix(compToSave);\n                }\n\n                respMessage = respMessage !== undefined? respMessage: cmd.element.__statusMessage;\n                delete cmd.element.__statusMessage;\n\n                if( !obs && !cmd.element.ExceptionData)\n                    obs = of(<IResultStatus>{IsSuccess : true, Message: respMessage});\n\n                if(cmd.element.ExceptionData){\n                    obs = of(<IResultStatus>{IsSuccess : false, Message: cmd.element.ExceptionData.Description});\n                }\n                 \n                obs.subscribe(status => {\n                    if (status.IsSuccess) {\n                        let activateElement = () => {\n                            this.activateOpenedElement(cmd.element);\n                            this._portalService.updateComponentCache(cmd.element);\n                            let panelType = this.getPanelType(cmd.element);\n                            this.subjects.refreshElementPanel.next(panelType);\n                        }\n                        \n                        if (svc)\n                            this.loadObject(newName, svc, activateElement);   //this.loadObject(cmd.element.name, svc, activateElement);\n                        else\n                            activateElement();\n                        if (status.Message)\n                            this._alert.displayResultStatus(status);\n                    }\n                    else\n                        this._alert.displayResultStatus(status);\n                });            \n            }\n        }\n        // NEXT cmd must be the last in the chain\n        else if (cmd.switchWorkspace !== undefined) {  \n             const selectedWS = cmd.data;\n             root.__workspace = selectedWS;\n             this.loadElement(root, selectedWS);\n        }\n    }\n\n    activateElement(element: IElement) {\n        this._studioStateService.activateElement(element);\n        let  m = this._studioStateService.getRoot().__topMenu;\n        if (element.type == 'Webpart') {\n            m.extract = true;\n            m.reloadWebPart = true;\n        }\n        else{\n            m.extract = false;\n            m.reloadWebPart = false;\n        }\n        this._studioStateService.refreshTopMenu();\n    }\n\n    private saveNDO(element: any, closeAfterSave: boolean): Observable<IResultStatus> {\n        let ch = this._converter.convertModelToMaintChanges(element, this._metadataService);\n        let changes = {};\n        if (element.isNew) {\n            changes['__new'] = 'new';\n        }\n        changes[element.__maint + '_ObjectChanges'] = ch;\n        return this._wcf.saveNDOInstance(element.componentName, element.__maint, changes);\n    }\n\n    private saveRootElement(element: IUIDesigner, closeAfterSave: boolean) {\n        if (!element)\n            return;\n\n        let obs: Observable<IResultStatus>;\n        let devState;\n        const isNdo = element.__unbound === 'NDO';\n        const scaleValue = element.scaleValue + 0;\n        const compName = element[\"componentName\"];\n\n        element['activeElement'] = null;\n        let compToSave = _.cloneDeep<IElement>(element);\n        element['activeElement'] = element;\n        if (element.__unbound === 'NDO') \n            obs = this.saveNDO(element, closeAfterSave);\n        else if (element.__unbound === '*pageMap')\n            obs = this.savePageMap(compToSave);\n        else if (element.__unbound === '*targetMatrix')\n            obs = this.saveTargetMatrix(compToSave);\n        else {\n            devState = compToSave[\"devContentState\"];\n            this._converter.convertRefs(compToSave);\n            obs = this._portalService.saveElement(compToSave);\n        }\n        obs.subscribe(\n            response => {\n                if (response) {\n                    let resp: IResultStatus = response;\n                    if (resp.IsSuccess) {\n                        let isNew = element.isNew;\n                        element.isDirty = false;\n                        element.isNew = false;\n                        element['devContentState'] = 1;\n                        if( element.type == \"Page\" || element.type == \"Webpart\"){\n                            if(element.layout)\n                                element['scaleValue'] = scaleValue;\n\n                            // Add dev workspace\n                            element.workspaceIndexes = element.workspaceIndexes || [];\n                            if( element.workspaceIndexes.indexOf(0) == -1)\n                                element.workspaceIndexes.push(0);\n                        }\n\n                        if (element.componentRef) {\n                            element.componentRef.isInDeveloping = true;\n                            this._studioStateService.addOrUpdateComponentRef(element.componentRef);                            \n                        }\n                        this._alert.success(resp);\n                        let isRenamed = false;\n                        // if component has been renamed get new name \n                        if (element.properties && element.properties['name'] && element.properties['name'] != compName) {\n                            let oldName = compName;\n                            element.name = element.properties.name;\n                            if (element.componentRef) {\n                                element.componentRef.name = element.name;\n                                this._studioStateService.renameComponentRef(element.componentRef, oldName);\n                            }\n                            isRenamed = true;\n                            this._localService.renameElementHistory(element, oldName);\n                        }\n\n                        if (closeAfterSave === true)\n                            this.closeOpenedElement(element);\n                        if (!isRenamed)\n                            this._localService.addToElementHistory(element);\n\n                        if (isNew || isRenamed || devState !== element['devContentState']) {  \n                            let panelType = this.getPanelType(element);\n                            this._localService.addToElementHistory(element);\n                            this.subjects.refreshElementPanel.next(panelType);\n                        }\n                        this._portalService.updateComponentCache(element);\n                        if(isNdo){\n                            this.loadObject(element.name, element.__maint, null, true);\n                        }\n                    }\n                    else {\n                        let args = [resp.Message, resp.ExceptionData ? resp.ExceptionData.Description : ''];\n                        let defautMsg = \"{0}\";\n                        if( args[1] ) \n                            defautMsg += \" Description: {1}\";\n                        let errorMessage = this._labelService.getLabelwithArguments('PS_ERROR_DESCRIPTION_MESSAGE', defautMsg, args);\n                        this.displayError(errorMessage);\n                    }\n                }\n            },\n\n            err => {\n                let args = [element.name];\n                let errorMessage = this._labelService.getLabelwithArguments('PS_ERROR_SAVE_MESSAGE', 'Error occurred attempting to save {0}!', args);\n                this.displayError(errorMessage);\n            }\n\n        );\n    }\n\n    savePageMap(compToSave: IElement): Observable<IResultStatus> {\n        let deletedFields = ['__unbound', 'history', 'id', 'propertyChanged', 'isDirty', '__designMode', 'activeElement', 'scaleValue'];\n        deletedFields.forEach(d => delete compToSave[d]);\n        // add required fields\n        let targets: any[] = (<any>compToSave).Targets;\n        if (!targets)\n            targets = (<any>compToSave).Targets = [];\n        targets.forEach(t => {\n            t.Conditions = t.Conditions || [];\n            t.Links = t.Links || [];\n        });\n        let name = compToSave.name;\n        let pm = this._converter.convertModelToSettings(compToSave);\n        pm.Name = name;\n        return this._portalService.savePageMap(pm);\n    }\n\n    saveTargetMatrix(compToSave: IElement): Observable<IResultStatus> {\n        let deletedFields = ['__unbound', 'history', 'id', 'propertyChanged', 'isDirty', '__designMode', 'activeElement', 'scaleValue'];\n        deletedFields.forEach(d => delete compToSave[d]);\n        return this._portalService.saveTargetMatrixItem(compToSave.name, compToSave);\n    }\n\n    togglePanel(dockPanelName: string) {\n        if (dockPanelName.toLowerCase() == \"traceviewer\") {\n            this._localService.toggleDisplayTraceViewer();\n            this.showTraceViewer = this._localService.isDisplayTraceViewer();\n            return;\n        }\n\n        let panel = this.getDockPanel(dockPanelName);\n        if (!panel) return;\n\n        let display: boolean = null;\n        switch (panel.name.toLowerCase()) {\n            case \"catalog\":\n                this._localService.toggleDisplayCatalog();\n                display = this._localService.isDisplayCatalog();\n                break;\n            case \"toolbox\":\n                this._localService.toggleDisplayToolbox();\n                display = this._localService.isDisplayToolbox();\n                break;\n            case \"property\":\n                this._localService.toggleDisplayProperty();\n                display = this._localService.isDisplayProperty(); /// changes\n                break;\n            default:\n                break;\n        }\n        panel.visible = display;\n    }\n\n    resetPanels(): void {\n        let panel: DockPanel;\n        let st = this._localService.isDisplayCatalog();\n        if (!st) {\n            this._localService.toggleDisplayCatalog();\n            panel = this.getDockPanel('catalog');\n            if (panel) panel.visible = true;\n        }\n\n        st = this._localService.isDisplayToolbox();\n        if (!st) {\n            this._localService.toggleDisplayToolbox();\n            panel = this.getDockPanel('toolbox');\n            if (panel) panel.visible = true;\n        }\n        st = this._localService.isDisplayProperty();\n        if (!st) {\n            this._localService.toggleDisplayProperty();\n            panel = this.getDockPanel('property');\n            if (panel) panel.visible = true;\n        }\n        st = this._localService.isDisplayTraceViewer();\n        if (st) {\n            this._localService.toggleDisplayTraceViewer();\n            this.showTraceViewer = false;\n        }\n    }\n\n    hasAnyVisiblePanels(dockPanels: Array<DockPanel>): boolean {\n        return dockPanels.filter(p => p.visible).length > 0;\n    }\n\n    private importRootElement(data: any) {\n        let rootElement = data.rootElement;\n\n        this._portalService.importComponent(rootElement.type, rootElement.name, false, data.content)\n            .subscribe(\n            element => {\n                if (element) {\n                    this._studioStateService.replaceElement(rootElement, element);\n                    element.isDirty = true;\n                    element.isRoot = true;\n                    element.__workspace = 0; // DEV\n                    this.subjects.refresh.next(new RefreshInfo(this._studioStateService.activeElement, RefreshLevel.full));\n                    this.subjects.menu.next();\n                }\n            },\n            error => {\n                let errorMessage = this._labelService.getLabel('PS_ERROR_IMPORTING_MESSAGE', \"Error occurred on importing new item\");\n                this.displayError(errorMessage);\n            });\n    }\n\n    private menuGenerateCommand(fdData: OMTypeDescriptor) {\n        if (fdData && fdData.Name && fdData.ItemType == OMType.Service) {\n            this.loadNewElement(\"Page\", (page) => {\n                page.properties[\"primaryServiceType\"] = fdData.Name;\n                page.properties[\"actions\"] = [\n                    { \"__type\": \"SubmitAction\", \"__action\": 0, \"__index\": 1, Name: \"SubmitAction\", ServiceName: fdData.Name, Location: 1, LabelText: \"Submit\" }\n                ];\n                page['codeBehind'] = 'Camstar.WebPortal.PortalFramework.WebPartPageBase';\n                page.properties['typeName'] = 'Camstar.WebPortal.PortalFramework.WebPartPageBase';\n\n                let emptyWp = ControlManager.createEmptyWebpartModel(\"BlankWP0\", 5, 3);\n                this._studioStateService.addElement(emptyWp, page.layout.tableCells[0][0]);\n\n                if (fdData) {\n                    var addFieldDirectoryToWebPart = function (ds: IOMTypeDescriptor, wp: IElement) {\n                        if (ds.Position && ds.Position.Row > 0 && ds.Position.Column > 0) {\n                            let typeDescr: OMTypeDescriptor = new OMTypeDescriptor(ds, fdData);\n                            typeDescr.Owner = fdData;\n                            typeDescr.addDragData();\n                            let newElement: IElement = ControlManager.createNewControl(typeDescr.type, typeDescr.typeName);\n                            typeDescr.controlInit(newElement, emptyWp, this._portalService);\n                            this._studioStateService.addElement(newElement, emptyWp.layout.tableCells[ds.Position.Row - 1][ds.Position.Column - 1]);\n                        }\n                    };\n\n                    if (!fdData.ChildItems) {\n                        this._portalService.getFieldsDirectory(fdData).subscribe(\n                            (om) => {\n                                if (om && om.ChildItems) {\n                                    om.ChildItems.forEach(ds => {\n                                        addFieldDirectoryToWebPart.call(this, ds, emptyWp);\n                                    });\n                                    this.subjects.refresh.next(new RefreshInfo(this._studioStateService.activeElement, RefreshLevel.full));\n                                }\n                            }\n                        );\n                    }\n                    else {\n                        fdData.ChildItems.forEach(ds => {\n                            addFieldDirectoryToWebPart.call(this, ds, emptyWp);\n                        });\n                        this.subjects.refresh.next(new RefreshInfo(this._studioStateService.activeElement, RefreshLevel.full));\n                    }\n                }\n            });\n        }\n    }\n\n    private exportRootElement(element: IElement, workspace: number = -1) {\n        this._portalService.exportComponent(element.type, element.name, (<IUIDesigner>element).isNew, this._metadataService.getWorkspaceCodeById(workspace))\n            .subscribe(\n            response => { },\n            error => {\n                let errorMessage = this._labelService.getLabel('PS_ERROR_EXPORTING_MESSAGE', \"Error occurred on exporting root element\");\n                this.displayError(errorMessage);\n            });\n    }\n\n    // propertyChanged(change: UpdatedInfo) {\n    //     this._studioStateService.setDirty();\n\n    //     let pd = change.DataOf<PropertyUpdatedData>();\n    //     if (pd.isName())\n    //         this._studioStateService.changeElementName(pd.val);\n\n    //     let menu = new CommandUpdatedData();\n    //     menu.save = true;\n    //     this.menuUpdated = new UpdatedInfo(menu);\n\n    //     // notify active element to refresh its design. For the page/webpart element the only specified properties cause refreshing\n    //     let refresh = true;\n\n    //     if (this._studioStateService.activeElement && (this._studioStateService.activeElement.type === 'Page' || this._studioStateService.activeElement.type === 'Webpart')) {\n    //         pd.path = pd.path.toLowerCase();\n    //         refresh = false;\n    //         if (_.find(this._refreshProperties, p => p.toLowerCase() == pd.path))\n    //             refresh = true;\n    //     }\n\n    //     if (refresh)\n    //         this.subjects.refresh.next(new RefreshInfo(this._studioStateService.activeElement, RefreshLevel.property));\n    // }\n\n    private batchExportDialog(): void {\n\n        let dialog = this._dialog.open(BatchExportComponent, { disableClose: true });\n        dialog.componentInstance.subjects = this.subjects;\n\n        dialog.afterClosed().subscribe(settings => {\n            if (settings) {\n                let progressPopup = this._dialog.open(BatchProgressPopup, { disableClose: true, width: '400px' });\n                progressPopup.componentInstance.title = this._labelService.getLabel(\"PS_BatchExportProgress\", \"Export Progress ...\");\n\n                this._portalService.batchExport(settings).subscribe(\n                    response => {\n                        let resp: IResultStatus = response;\n                        if (resp.IsSuccess) {\n                            this._dialog.closeAll();\n                            this._alert.success(resp);\n                        }\n                        else {\n                            let args = [resp.Message, resp.ExceptionData ? resp.ExceptionData.Description : '']\n                            let errorMessage = this._labelService.getLabelwithArguments('PS_ERROR_DESCRIPTION_MESSAGE', '{0} Description: {1}', args);\n                            this.displayError(errorMessage);\n                            this._dialog.closeAll();\n                        }\n                    },\n                    error => { },\n                    () => { progressPopup.close(); }\n                );\n            }\n        });\n    }\n\n    private batchImportDialog(): void {\n        let dialog = this._dialog.open(BatchImportComponent, { disableClose: true });\n        dialog.componentInstance.subjects = this.subjects;\n\n        dialog.afterClosed().subscribe(settings => {\n            if (settings) {\n                let progressPopup = this._dialog.open(BatchProgressPopup, { width: '400px' });\n                progressPopup.componentInstance.title = this._labelService.getLabel(\"PS_BatchImportProgress\", \"Import Progress ...\");\n\n                this._portalService.batchImport(settings).subscribe(\n                    response => {\n                        let resp: IResultStatus = response;\n                        if (resp.IsSuccess) {\n                            this._alert.success(resp.Message);\n                        }\n                        else {\n                            let args = [resp.Message, resp.ExceptionData ? resp.ExceptionData.Description : '']\n                            let errorMessage = this._labelService.getLabelwithArguments('PS_ERROR_DESCRIPTION_MESSAGE', '{0} Description: {1}', args);\n                            this.displayError(errorMessage);\n                        }\n                    },\n                    error => { },\n                    () => { progressPopup.close(); }\n                );\n            }\n        });\n    }\n    private loadNewPageDialog(): void {\n        let dialog = this._dialog.open(PageWizardComponent, { disableClose: true });\n        dialog.afterClosed().subscribe(settings => {            \n            if (settings)\n                this._portalService.getPageByTemplateType(settings.template)\n                    .subscribe(page => {                        \n                        if (settings.name) {\n                            page.name = settings.name;\n                            page.properties.name = settings.name;\n                        }\n\n                        if (settings.serviceType)\n                            page.properties.primaryServiceType = settings.serviceType;\n                        page.properties.typeName = \"Camstar.WebPortal.PortalFramework.WebPartPageBase\";\n                        page.isRoot = true;\n                        page.history = new HistoryLog();\n                        if( page.isRoot && page.isNew ){\n                            page.__workspace = 0;\n                            page.workspaceIndexes = [];\n                        }\n                        this._studioStateService.addOpenedElement(page)\n                    });\n        });\n    }\n\n    private loadNewElement(type: string, next?: (value: IUIDesigner) => void): void {\n        this._portalService.getElement(null, type)\n            .subscribe(\n            element => {\n                if (element.type == \"Webpart\")\n                    element.properties.typeName = \"Camstar.WebPortal.WebPortlets.MatrixWebPart\"\n                element.__workspace = 0;\n                element.isRoot = true;\n                element.history = new HistoryLog();\n                this._studioStateService.addOpenedElement(element);\n                if (next)\n                    next(element);\n            },\n            error => {\n                let args = [type];\n                let errorMessage = this._labelService.getLabelwithArguments('PS_ERROR_CREATING_MESSAGE', 'Error occurred on creating new {0}', args);\n                this.displayError(errorMessage)\n            });\n    }\n\n    private extractWebpart(webpart: IElement): void {\n        this._portalService.getElement(null, webpart.type)\n            .subscribe(\n            element => {\n                element.__workspace = -1;\n                element.name = webpart.name;\n                element.items = webpart.items;\n                element.layout = webpart.layout;\n                element.properties = webpart.properties;\n\n                // add items for layout-type controls\n                let refWebPartNames = [];\n                _.filter(element.items, (e:any) => isContainerControl(e.typeName) && e.layout && e.layout.tableCells)\n                    .forEach((contr:any) => _.flatten(contr.layout.tableCells).filter((c1: any) => c1.items)\n                        .forEach((c: any) => _.map(c.items, (c2: any) => refWebPartNames.push(c2.name))));\n\n                refWebPartNames.forEach(wpName => {\n                    let wp = _.find(this._studioStateService.activeRootElement.items, w => w.name == wpName);\n                    if (wp)\n                        element.items[wp.id] = wp;\n                });\n\n                this._studioStateService.addOpenedElement(element);\n            },\n            error => {\n                let args = [webpart.type];\n                let errorMessage = this._labelService.getLabelwithArguments('PS_ERROR_CREATING_MESSAGE', 'Error extracting new {0}', args);\n                this.displayError(errorMessage)\n            });\n    }\n\n    private displayError(message: string, data?: any): void {\n        if (data) {\n            if (data.exceptionType == \"PortalStudio.Models.ComponentModelException\")\n                message += \"\\r\\n\" + data.exceptionMessage;\n            else if (data.exceptionType) {\n                message += \"Exception: \" + data.exceptionType + \"\\r\\n\" +\n                    data.exceptionMessage + \"\\r\\n\" +\n                    data.message + \"\\r\\n\" +\n                    data.stackTrace;\n            }\n            else {\n                message = \"Exception: \" + val(data, \"description\");\n            }\n        }\n        this._alert.error(message);\n    }\n\n    panelCommand(upd: IUpdatedData) {\n        let cmd = <PanelUpdatedData>upd;\n        if (cmd.open) {\n            if (cmd.action)\n                this.loadObject(cmd.elementRef.name, cmd.action.svc);\n            else\n                this.loadElement(cmd.elementRef, 0);\n        }\n        else if (cmd.createNew && cmd.action && cmd.action.svc) {\n            if (cmd.action.svc == \"UIVirtualPageMaint\")\n                this.loadNewPageDialog();\n            else if (cmd.action.svc == \"WebPartMaint\")\n                this.loadNewElement(\"Webpart\");\n            else if (cmd.action.svc == \"UIPageFlowMaint\") {\n                this.loadNewElement(\"Pageflow\");\n            }\n            else\n                this.loadObject('', cmd.action.svc);\n        } else if (cmd.changeMode) {\n\n        }\n    }\n\n    private reloadWebPart(wp: IElement) {\n        let ws = this._studioStateService.getRoot().__workspace;\n        let created = wp.properties && val(wp.properties, \"created\");\n        if (created && typeof created == \"string\" && created.split('-', 1)[0] == \"0001\") {\n            // The web part cannot be reloaded if created date is not set or Date.min\n            return;\n        }\n\n        let hr = new ElementHistoryData(HistoryObjectType.Webpart);\n        hr.oldElement = _.clone(wp);\n\n        this._portalService.getWebpartElement(wp.name, wp.type, this._metadataService.getWorkspaceCodeById(ws))\n            .subscribe(webpartOrError => {\n                if (webpartOrError['name']) {\n                    let webpart = <IUIDesigner>webpartOrError;\n                    webpart.id = wp.id;\n                    this._studioStateService.replaceWebpart(wp, webpart);\n                    this._studioStateService.activeRootElement.isDirty = true;\n                    this._studioStateService.activateElement(wp);\n\n                    // record into the history\n                    hr.element = webpart;\n                    this._studioStateService.writeHistory(RecordCommand.replace, hr);\n                    this.subjects.refresh.next(new RefreshInfo(this._studioStateService.activeElement, RefreshLevel.full));\n                }\n                else {\n                    this._alert.error(<IResultStatus>webpartOrError);\n                }\n            });\n    }\n\n    private getDockPanel(name: string): DockPanel {\n        let _fn = (p: DockPanel) => p.name.toLocaleLowerCase() === name.toLocaleLowerCase();\n\n        return this.dockPanels.left.find(_fn) || this.dockPanels.right.find(_fn);\n    }\n\n    private dockPanelsInit() {\n        this.dockPanels = {\n            left: [\n                <DockPanel>{\n                    name: 'catalog',\n                    label: this._labelService.getLabel('PS_PANEL_CATALOG', 'Components'),\n                    visible: this._localService.isDisplayCatalog(),\n                    splitter: 'n',\n                    tabs: [\n                        {\n                            name: 'Components',\n                            sections: [\n                                <ContentSection>{\n                                    name: 'Pages', component: 'csi-element-panel', dataSource: 'Page'\n                                },\n                                <ContentSection>{ name: 'Web Parts', component: 'csi-element-panel', dataSource: 'Webpart' },\n                                <ContentSection>{ name: 'Pageflows', component: 'csi-element-panel', dataSource: 'Pageflow' }\n                            ]\n                        },\n                        {\n                            name: 'Navigation',\n                            sections: [\n                                <ContentSection>{ name: 'Menus', component: 'csi-portal-object-panel', dataSource: 'menu' },\n                                <ContentSection>{ name: 'Tabs', component: 'csi-portal-object-panel', dataSource: 'tab' }\n                            ]\n                        },\n                        {\n                            name: 'Modeling',\n                            sections: [\n                                <ContentSection>{ name: 'Page Actions', component: 'csi-portal-object-panel', dataSource: 'action' },\n                                <ContentSection>{ name: 'Page Actions Categories', component: 'csi-portal-object-panel', dataSource: 'actionCategory' },\n                                <ContentSection>{ name: 'Page Actions Rules', component: 'csi-portal-object-panel', dataSource: 'actionRule' },\n                                <ContentSection>{ name: 'Page Maps', component: 'csi-portal-object-panel', dataSource: 'pageMap' },\n                                <ContentSection>{ name: 'Target Matrices', component: 'csi-portal-object-panel', dataSource: 'targetMatrix' }\n                            ]\n                        }\n                    ]\n                },\n                <DockPanel>{\n                    name: 'toolbox',\n                    label: this._labelService.getLabel('PS_PANEL_TOOLBOX', 'Controls'),\n                    visible: this._localService.isDisplayToolbox(),\n                    splitter: 'h',\n                    tabs: [\n                        {\n                            name: 'Controls',\n                            sections: [\n                                <ContentSection>{ name: 'Controls', component: 'csi-control-panel' }\n                            ]\n                        },\n                        {\n                            name: 'Fields Directory',\n                            sections: [\n                                <ContentSection>{ name: 'Fields Directory', component: 'csi-field-directory' }\n                            ]\n                        }\n                    ]\n                }\n            ],\n            right: [\n                <DockPanel>{\n                    name: 'property',\n                    label: this._labelService.getLabel('PS_PANEL_PROPERTY', 'Properties'),\n                    visible: this._localService.isDisplayProperty(),\n                    tabs: [\n                        {\n                            name: 'Properties',\n                            sections: [\n                                <ContentSection>{ name: 'Properties', component: 'csi-property-list', dataSource: '' }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        };\n    }\n\n    private getPanelType(el : IElement | IUIComponentRef): string {\n        let panelType : string;\n        let compRef = <IUIComponentRef> el;\n        if( compRef.__type === \"UIComponentRef\" ){\n            panelType = compRef.type;\n        }\n        else{\n            let element = <IElement> el;\n            let maintType = element.__maint || element.__unbound;\n            if(maintType)\n                panelType = _.findKey(this._portalElementServiceMap, p => p == maintType);\n            else\n                panelType = element.type;\n        }\n        return panelType;\n    }\n\n    getSvcService(panelType: string): string {\n        return this._portalElementServiceMap[panelType.toLowerCase()];\n    }\n\n    private readonly _portalElementServiceMap = {\n        \"menu\": \"PortalMenuDefinitionMaint\",\n        \"tab\": \"PortalTabMaint\",\n        \"action\": \"ActionMaint\",\n        \"actioncategory\": \"ActionCategoryMaint\",\n        \"actionrule\": \"ActionRuleMaint\",\n        \"pagemap\": \"*pageMap\",\n        \"targetmatrix\": \"*targetMatrix\"\n    };\n}\n","<div class=\"csi-framework-template\" *ngIf=\"metadataLoaded; else mdloading\">\n    <header>\n        <csi-title-menu  [activeElement]='activeRootElement'></csi-title-menu>\n        <div class=\"thin-blue-line\"></div>\n        <csi-action-menu></csi-action-menu>\n    </header>\n    <main class=\"csi-framework-content\">\n        <div class=\"csi-main\">\n            <div #leftDock class=\"main-left-column csi-dock\" [class.hidden]=\"!hasAnyVisiblePanels(dockPanels.left)\">\n                <csi-dock-area [dockPanels]=\"dockPanels.left\" (panelCommand)=\"panelCommand($event)\" [subjects]=\"subjects\"></csi-dock-area>\n            </div>\n            <csi-panel-splitter [direction]=\"'v'\" [panel]=\"leftDock\" [panelBefore]=\"true\"></csi-panel-splitter>\n            <div class=\"csi-layout-column\">\n                <csi-layout-tabs class=\"layout-tab\" [elements]='openedElements'\n                                 [activeElement]='activeRootElement'\n                                 (closeElement)='closeOpenedElement($event)'\n                                 (closeAndSaveElement)='saveAndCloseOpenedElement($event)'></csi-layout-tabs>                \n                <csi-layout [rootElement]='activeRootElement' [subjects]=\"subjects\" [showTraceViewer]=\"showTraceViewer\"\n                            (onLoadElement)='load($event)'></csi-layout>                \n            </div>\n            <csi-panel-splitter [direction]=\"'v'\" [panel]=\"rightDock\"></csi-panel-splitter>\n            <div #rightDock class=\"main-right-column csi-dock\" [class.hidden]=\"!hasAnyVisiblePanels(dockPanels.right)\">\n                <csi-dock-area [dockPanels]=\"dockPanels.right\" (panelCommand)=\"panelCommand($event)\" [subjects]=\"subjects\"></csi-dock-area>\n            </div>\n        </div>\n        <mat-spinner *ngIf=\"false\" class=\"spinner\"></mat-spinner>\n    </main>\n</div>\n\n<ng-template #mdloading>\n    <div>Initializing...</div>\n</ng-template>","import { NgModule, Optional, SkipSelf } from '@angular/core';\n\n//app modules\nimport { AlertModule } from '../alert';\nimport { LayoutModule } from '../layout';\nimport { MenuModule } from '../menu';\nimport { PanelModule } from '../panel';\nimport { PropertyConditionModule } from '../panel/properties/propertyConditions';\nimport { SharedModule } from '../shared';\nimport { WizardModule } from './wizard';\n\n//app components\nimport { StudioComponent } from './studio.component';\n\n//app services\nimport { PortalSettingsService } from '../common/services/portalSettings.service';\nimport { MetadataService } from '../common/services/metadata.service';\n\n@NgModule({\n    imports: [\n        AlertModule,\n        LayoutModule,\n        MenuModule,\n        PanelModule,\n        PropertyConditionModule,\n        SharedModule,\n        WizardModule,\n    ],\n    declarations: [\n        StudioComponent,\n    ],\n    providers: [\n        MetadataService,\n        PortalSettingsService\n    ]\n})\nexport class StudioModule {\n    constructor( @Optional() @SkipSelf() parentModule: StudioModule) {\n        if (parentModule) {\n            throw new Error(\n                'StudioModule is already loaded. Import it in the AppModule only');\n        }\n    }\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport * as _ from 'lodash';\n\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { LabelService } from '../../../common/services/label.service';\nimport { ContentSection, StudioSubjects, BatchImportExportSettings } from '../../../common/objects/common';\nimport { Subject, Subscription } from 'rxjs';\nimport { MetadataService } from '../../../common/services/metadata.service';\n\ntype WS = { code: string, checked: boolean, name: string };\n\n@Component({\n    selector: 'batch-export-wizard',\n    styleUrls: ['batchExport.component.less', '../../../shared/internalTabs.less'],\n    templateUrl: 'batchExport.component.html'\n})\nexport class BatchExportComponent implements OnInit {\n    subjects: StudioSubjects;\n    internalTabs: ContentSection[];\n    activeTab: ContentSection;\n    exportToFileEnabled: boolean = false;\n    validationMessage: string;\n    checkedSubj = new Subject<{ n: string, t: string }[]>();\n    exportFileType: string;\n\n    wsCodes: WS[];\n    private checkedSubs: Subscription;\n    private selectedItems: { n: string, t: string }[] = [];\n    private get exportToXml(): boolean { return this.exportFileType == \"xml\"; }\n    private get exportToZip(): boolean { return this.exportFileType == \"zip\"; }\n\n    get dialog(): MatDialogRef<BatchExportComponent> {\n        return this._dialog;\n    }\n\n    constructor(\n        private _dialog: MatDialogRef<BatchExportComponent>,\n        private _labelService: LabelService,\n        private _metadataService: MetadataService) {\n\n        this.wsCodes = this._metadataService.workspaces.map(w => <WS>{ code: w.Code, checked: false, name: w.Name });\n\n        this.subjects = new StudioSubjects();\n    }\n\n    ngOnInit(): void {\n        this.internalTabs = [\n            <ContentSection>{ name: 'Pages', component: 'csi-element-panel', isSelectable: true, dataSource: 'Page' },\n            <ContentSection>{ name: 'Web Parts', component: 'csi-element-panel', isSelectable: true, dataSource: 'Webpart' },\n            <ContentSection>{ name: 'Pageflows', component: 'csi-element-panel', isSelectable: true, dataSource: 'Pageflow' }\n        ];\n        this.activeTab = this.internalTabs[0];\n        this.checkedSubs = this.checkedSubj.subscribe(s => this.selectedItems = s);\n    }\n\n    ngOnDestroy(): void {\n        if (this.checkedSubs) {\n            this.checkedSubs.unsubscribe();\n            this.checkedSubs = null;\n        }\n    }\n\n    save(): void {\n        if (this.validate())\n            this._dialog.close(this.getSettings());\n    }\n\n    cancel(): void {\n        this._dialog.close(null);\n    }\n\n    validate(): boolean {\n        let res = false;\n        if (_.some(this.wsCodes, w => w.checked)) {\n            if (this.exportToFileEnabled) {\n                if(this.exportToXml || this.exportToZip){\n                    if (this.selectedItems.length > 0)\n                        res = true;\n                    else\n                        this.validationMessage = this._labelService.getLabel(\"PS_BatchExport_Validation1\", \"No Pageflows, Pages or Web Parts are selected for export.\");\n                }else\n                     this.validationMessage = this._labelService.getLabel(\"PS_BatchExport_Validation4\", \"File type is not selected\");   \n                \n            }\n            else\n                this.validationMessage = this._labelService.getLabel(\"PS_BatchExport_Validation2\", \"Export to file was not selected.\");\n        }\n        else\n            this.validationMessage = this._labelService.getLabel(\"PS_BatchExport_Validation3\", \"Select at least one workspace to export.\");\n\n        return res;\n    }\n\n    getSettings(): BatchImportExportSettings {\n        let settings = new BatchImportExportSettings();\n        settings.ExportTo = this.exportToXml ? 0 : 1;\n        settings.SelectedWorkspaces = this.wsCodes.filter(ws => ws.checked).map(ws1=> ws1.code);\n        settings.Pages = this.selectedItems.filter(p=> p.t == \"Page\").map(p1 => p1.n).sort();\n        settings.WebParts = this.selectedItems.filter(p=> p.t == \"Webpart\").map(p1 => p1.n).sort();\n        settings.Pageflows = this.selectedItems.filter(p=> p.t == \"Pageflow\").map(p1 => p1.n).sort();\n        return settings;\n    }\n}","<div class=\"csi-modal batch-export-wizard\" csi-dialog-decor [dialog]=\"dialog\">\r\n    <header class=\"csi-modal-header\">\r\n        <span class=\"title\">{{'Batch Export' | label: 'PS_BATCH_EXPORT'}}</span>\r\n        <span class=\"close-icon\" (click)=\"cancel()\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></span>\r\n    </header>\r\n        \r\n    <form novalidate (ngSubmit)=\"save()\">\r\n        <main class=\"csi-export-body\">\r\n            <div class=\"csi-export-leftPane\">\r\n                <div class=\"csi-internal-tabs\">\r\n                    <ul>\r\n                        <li *ngFor=\"let tab of internalTabs\" [class.active]=\"activeTab==tab\"><a (click)=\"activeTab=tab\">{{tab.name}}</a></li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"csi-exportItems-panel\">\r\n                    <div *ngFor=\"let tab of internalTabs\" [hidden]=\"tab !== activeTab\" [class.active-tab]=\"tab==activeTab\">\r\n                        <csi-panel [component]=\"tab.component\" [dataSource]=\"tab.dataSource\" [subjects]=\"subjects\" [parameters]=\"{checkedSubj:checkedSubj,newAction:false}\"></csi-panel>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"csi-export-rightPane\">\r\n                <div class=\"title\">{{'Export Options' | label: 'PS_BatchExport_Options'}}</div>\r\n                <div class=\"csi-exportItems-panel\">\r\n                    <div class=\"section-content\">\r\n                        <span class=\"title\">{{'Personalization Type to Export' | label: 'PS_BatchExport_Personalization'}}</span>\r\n                        <div class=\"csi-export-persArea\">\r\n                            <label *ngFor=\"let ws of wsCodes\"><input [(ngModel)]=\"ws.checked\" type=\"checkbox\" [ngModelOptions]=\"{standalone: true}\">{{ws.name}} ({{ws.code}})</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"csi-exportItems-panel-bottom\">\r\n                    <div class=\"section-content\">\r\n                        <label><input [(ngModel)]=\"exportToFileEnabled\" type=\"checkbox\" [ngModelOptions]=\"{standalone: true}\">{{'Export To File' | label: 'PS_BatchExport_ToFile'}}</label>\r\n                        <div class=\"csi-export-fileTypeArea\" [class.areaDisabled]=\"!exportToFileEnabled\">\r\n                            <label><input name=\"fileType\" [ngModelOptions]=\"{standalone: true}\" type=\"radio\" [(ngModel)]=\"exportFileType\" value=\"xml\">{{'XML' | label: 'PS_LAYOUT_XML'}}</label>\r\n                            <label><input name=\"fileType\" [ngModelOptions]=\"{standalone: true}\" type=\"radio\" [(ngModel)]=\"exportFileType\" value=\"zip\">Zip</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n\r\n        <div *ngIf=\"validationMessage\" class=\"alert alert-warning\" (click)=\"this.validationMessage=''\">\r\n            {{validationMessage}}\r\n        </div>\r\n\r\n        <footer>        \r\n            <div class=\"btns\">\r\n                <span class=\"default-btn\" (click)=\"cancel()\">{{'Cancel' | label: 'PS_CANCEL'}}</span>\r\n                <span class=\"primary-btn\" (click)=\"save()\">{{'Start' | label: 'PS_Start'}}</span>\r\n            </div>\r\n        </footer>    \r\n    </form>\r\n</div>\r\n","import { Component } from '@angular/core';\nimport * as _ from 'lodash';\n\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { LabelService } from '../../../common/services/label.service';\n\nimport { StudioSubjects, BatchImportExportSettings } from '../../../common/objects/common';\nimport { MetadataService } from '../../../common/services/metadata.service';\n\ntype WS = { code: string, checked: boolean, name: string };\n\n@Component({\n    selector: 'batch-import-wizard',\n    styles: [`\n        :host{\n            min-width: 600px;\n            min-height: 300px;\n            height: 100%;\n            width: 100%;\n\n            display: flex;\n            flex-direction: column;\n        }\n\n        form {\n            display: flex;\n            flex-direction: column;\n            flex: 1 1 auto;\n        }\n\n        .section-types-to-import{\n            display: flex;\n            flex-direction: column;\n            padding: 10px;\n        }\n\n        .section-title{\n            font-weight: bold;\n        }\n\n        .import-persArea {\n            border: 1px solid #aaa;\n            padding: 5px;\n            max-height: 115px;\n            overflow-y: auto;\n\n            display: flex;\n            flex-direction: column;\n            flex: 1 1 auto;\n        }\n\n        .import-persArea > label input[type=checkbox] {\n            margin: 4px;\n            cursor: pointer;\n        }\n        \n        .import-persArea label{\n            display: flex;\n            align-items: center;\n        }\n\n        .section-import-from-file {\n            display: flex;\n            flex-direction: column;\n            padding: 10px;\n        }\n            \n        .section-import-from-file .file-input-area {\n            display: flex;\n        }\n\n        .section-import-from-file .file-input-area input[type=\"file\"] {\n            position: absolute;\n            left: -9999px;\n            display: none;\n            visibility: hidden;\n        }\n\n        .section-import-from-file .file-input-area input[type=\"text\"] {\n            flex: 1 0 30px;\n        }\n\n        .section-import-from-file .file-input-area  button {\n            flex: auto 0 0px;\n        }\n\n        .section-validation-message{\n            display: flex;\n            flex-direction: column;\n            padding: 10px;            \n        }\n\n        .override-existing {\n            padding-top: 10px;\n        }\n\n        .override-existing input[type=checkbox] {\n            margin: 4px;\n            cursor: pointer;\n        }\n        .override-existing label{\n            display: flex;\n            align-items: center;\n        }\n\n    `],\n    templateUrl: 'batchImport.component.html'\n})\nexport class BatchImportComponent {\n    public subjects: StudioSubjects;\n    public wsCodes: WS[];\n    validationMessage: string;\n    selectedFileName: string = \"\";\n    private selectedFile: any;\n    private overrideIfExists: boolean = true;\n\n    get dialog(): MatDialogRef<BatchImportComponent> {\n        return this._dialog;\n    }\n\n    constructor(\n        private _labelService: LabelService,\n        private _metadataService: MetadataService,\n        private _dialog: MatDialogRef<BatchImportComponent>) {\n\n        this.wsCodes = this._metadataService.workspaces.map(w => <WS>{ code: w.Code, checked: false, name: w.Name });\n        }\n\n    save(): void {\n        if (this.validate())\n            this._dialog.close(this.getSettings());\n    }\n\n    cancel(): void {\n        this._dialog.close(null);\n    }\n\n    inputFileTextKeyDown() {\n        return false; // ignore any keys on input from file textbox since it is readonly.\n    }\n\n    inputFileChanged(e) {\n        let fileName = \"\";\n        let fileElement = e.currentTarget;\n        if (fileElement) {\n            if (e.currentTarget.files && e.currentTarget.files.length > 0) {\n                let file = e.currentTarget.files[0];\n                if (file.type == \"text/xml\" || file.type == \"application/x-zip-compressed\") {\n                    fileName = file.name;\n                    this.selectedFile = file;\n                }\n            }\n        }\n        this.selectedFileName = fileName;\n    }\n\n    inputFileBtnClick(e) {\n        let fileElement = e.currentTarget.parentElement.querySelector(\"input[type=file]\");\n        if (fileElement) {\n            fileElement.focus();\n            fileElement.click();\n        }\n    }\n\n    overrideIfExistsClick(e) {\n        this.overrideIfExists = e.currentTarget.checked;\n    }\n\n    validate(): boolean {\n        let res = false;\n        if (_.some(this.wsCodes, w => w.checked)) {\n            if (this.selectedFileName)\n                res = true;\n            else\n                this.validationMessage = this._labelService.getLabel(\"PS_BatchImport_Validation1\", \"Import from File was not selected.\");\n        }\n        else\n            this.validationMessage = this._labelService.getLabel(\"PS_BatchImport_Validation2\", \"Select at least one workspace to import.\");\n        return res;\n    }\n\n    getSettings(): BatchImportExportSettings {\n        let settings = new BatchImportExportSettings();\n        settings.OverrideIfExists = this.overrideIfExists;\n        settings.SelectedWorkspaces = this.wsCodes.filter(ws => ws.checked).map(ws1=> ws1.code);\n        settings.PostedFile = this.selectedFile;\n        return settings;\n    }\n}","<div class=\"csi-modal batch-import-wizard\" csi-dialog-decor [dialog]=\"dialog\">\r\n    <header class=\"header\">\r\n        <span class=\"title\">{{'Batch Import' | label: 'PS_BATCH_IMPORT'}}</span>\r\n        <span class=\"close-icon\" (click)=\"cancel()\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></span>\r\n    </header>\r\n\r\n    <form novalidate (ngSubmit)=\"save()\">\r\n        <main>\r\n            <section class=\"section-types-to-import\">\r\n                <span class=\"section-title\">{{'Personalization Type to Import' | label: 'PS_BatchImport_Personalization'}}</span>\r\n                <div class=\"import-persArea\">\r\n                    <label *ngFor=\"let ws of wsCodes\"><input type=\"checkbox\" [(ngModel)]=\"ws.checked\" [ngModelOptions]=\"{standalone: true}\">{{ws.name}} ({{ws.code}})</label>\r\n                </div>\r\n            </section>\r\n\r\n            <section class=\"section-import-from-file\">\r\n                <span class=\"section-title\">{{ 'Import from File' | label: 'PS_ImportFromFile'}} </span>\r\n                <div class=\"file-input-area\">\r\n                    <input type=\"file\" id=\"file\" (change)=\"inputFileChanged($event)\" name=\"selectedFile\" accept=\".xml,.zip\" tabindex=\"-1\">\r\n                    <input type=\"text\" [attr.tabindex]=\"-1\" (keydown)=\"inputFileTextKeyDown()\" value=\"{{selectedFileName}}\" />\r\n                    <button type=\"button\" class=\"file-upload-button\" tabindex=\"-1\" (click)=\"inputFileBtnClick($event)\">...</button>    \r\n                </div>\r\n                <div class=\"override-existing\">\r\n                    <label><input type=\"checkbox\" (click)=\"overrideIfExistsClick($event)\" checked />{{'Override Web Part/Page/Pageflow if it already exists' | label: 'PS_BatchImport_Override'}}</label>\r\n                </div>\r\n            </section>\r\n            <section class=\"section-validation-message\">\r\n                <div *ngIf=\"validationMessage\" class=\"alert alert-warning\" (click)=\"validationMessage=''\">\r\n                    {{validationMessage}}\r\n                </div>\r\n            </section>\r\n        </main>\r\n        <footer>        \r\n            <div class=\"btns\">\r\n                <span class=\"default-btn\" (click)=\"cancel()\">{{'Cancel' | label: 'PS_CANCEL'}}</span>\r\n                <span class=\"primary-btn\" (click)=\"save()\">{{'Start' | label: 'PS_Start'}}</span>\r\n            </div>\r\n        </footer>\r\n    </form>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'batch-progress-popup',\r\n    template: `\r\n        <label style=\"display: block;\">{{getTitle()}}</label>\r\n        <div>\r\n            <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n        </div>        \r\n    `,\r\n})\r\nexport class BatchProgressPopup {\r\n    public title: string;\r\n\r\n    getTitle(): string {\r\n        return this.title;\r\n    }\r\n}","export * from './wizard.module';","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\n\nimport { PortalSettingsService, SettingSection } from '../../../common/services/portalSettings.service';\nimport { PortalService } from '../../../common/services/portal.service';\n\n@Component({\n    selector: 'csi-page-wizard',\n    styles: [`\n        :host{\n            min-height: 350px;\n            min-width: 500px;\n            height: 100%;\n            width: 100%;\n\n            display: flex;\n            flex-direction: column;            \n            flex: 1 1 auto;\n        }\n\n        .section-template-selector{\n            display: flex;\n            flex-direction: row;            \n            flex: 1 1 150px;\n        }\n\n        .section-page-parameters{\n            display: flex;\n            flex-direction: column;            \n            flex: 0 0 auto;\n            padding-left: 10px;\n        }\n\n        .section-page-parameters > div {\n            padding: 5px;\n        }\n\n        form {\n            display: flex;\n            flex-direction: column;\n            flex: 1 1 auto;\n        }\n\n        .template-type-description {\n            min-height: 100px;\n            min-width: 300px;\n            padding: 10px;\n        }\n\n        .radio-group-scrolling{  \n            overflow-y: auto;\n            flex-basis: 350px;\n        }\n            \n        .radio-group {\n            padding: 10px;\n            display: inline-flex;\n            flex-direction: column;\n        }\n\n        .radio-group label {\n            flex: 1 1 auto;\n        }\n            \n        .radio-button {\n            margin: 5px;\n        }            \n\n        span.disabled {\n            background-color: #aaaaaa;\n            cursor: not-allowed;\n        }\n\n        footer {\n            border-top: none;\n        }\n\n        .section-page-parameters > div #pageNameId{\n            width: 208px;\n        }\n\n        .section-page-parameters > div select {\n            height: 27px;\n        }\n        \n    `],\n    templateUrl: 'pageWizard.component.html'\n})\nexport class PageWizardComponent implements OnInit {\n    public pageForm: FormGroup;\n    public errorMessage: string;\n    public templateData: ITemplateDataInfo;\n\n    get dialog(): MatDialogRef<PageWizardComponent> {\n        return this._dialog;\n    }\n\n    constructor(\n        private _fb: FormBuilder,\n        private _dialog: MatDialogRef<PageWizardComponent>,\n        private _portalService: PortalService,\n        private _portalSettings: PortalSettingsService) { }\n\n    ngOnInit(): void {\n        this.pageForm = this._fb.group({\n            pageName: ['', Validators.required],\n            serviceType: '',\n            serviceTypes: [],\n            template: 'blank',\n            eproc: false\n        });\n        this._portalService.getCamstarServices().subscribe(services => {\n            this.pageForm.get('serviceTypes').setValue(services);\n        });\n        let sections = this._portalSettings.getSections();\n        sections.subscribe(sects => {\n            let templateSection = { name: \"templatesettings\" };\n            this.templateData = this._portalSettings.getSectionData(<SettingSection>templateSection);\n        })\n    }\n\n    save(): void {\n        if (this.pageForm.valid) {\n            let form = this.pageForm.value;\n            let template = form.template;\n            \n            if (template == 'modeling')\n                template = this.templateData.ModelingTemplatePage;\n            if (template == 'container')\n                template = form.eproc ? this.templateData.ContainerWithEprocedureTemplatePage : this.templateData.ContainerTemplatePage;\n\n            let page = {\n                name: form.pageName,\n                serviceType: form.serviceType,\n                template: template,\n                isEproc: form.eproc\n            }\n            this._dialog.close(page);\n        }\n    }\n\n    cancel(): void {\n        this._dialog.close();\n    }\n}\n\nexport interface ITemplateDataInfo {\n    ContainerTemplatePage: string;\n    ContainerWithEprocedureTemplatePage: string;\n    ModelingTemplatePage: string;\n    UserTemplate1?: string;\n    UserTemplate2?: string;\n    UserTemplate3?: string;\n}","<div class=\"csi-modal page-wizard\" [attr.title]=\"''\" csi-dialog-decor [dialog]=\"dialog\">\r\n\r\n    <header class=\"header\">\r\n        <span class=\"title\">Create New Page</span>\r\n        <span class=\"close-icon\" (click)=\"cancel()\">\r\n            <i class=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n        </span>\r\n    </header>\r\n\r\n    <form novalidate (ngSubmit)=\"save()\" [formGroup]=\"pageForm\">\r\n        <main class=\"main-content\">\r\n            <section class=\"section-template-selector\">\r\n                <div class=\"radio-group-scrolling\">\r\n                <mat-radio-group class=\"radio-group\" formControlName=\"template\">\r\n                    <mat-radio-button class=\"radio-button\" value=\"blank\">{{'Blank' | label: 'PS_BLANK'}}</mat-radio-button>\r\n                    <mat-radio-button class=\"radio-button\" value=\"container\">{{'Container' | label: 'PS_CONTAINER'}}</mat-radio-button>\r\n                    <mat-radio-button class=\"radio-button\" value=\"modeling\">{{'Modeling' | label: 'PS_MODELING'}}</mat-radio-button>\r\n                    <mat-radio-button class=\"radio-button\" *ngIf=\"templateData && templateData.UserTemplate1\" [value]=\"templateData.UserTemplate1\">{{templateData.UserTemplate1}}</mat-radio-button>\r\n                    <mat-radio-button class=\"radio-button\" *ngIf=\"templateData && templateData.UserTemplate2\" [value]=\"templateData.UserTemplate2\">{{templateData.UserTemplate2}}</mat-radio-button>\r\n                    <mat-radio-button class=\"radio-button\" *ngIf=\"templateData && templateData.UserTemplate3\" [value]=\"templateData.UserTemplate3\">{{templateData.UserTemplate3}}</mat-radio-button>\r\n                </mat-radio-group>\r\n            </div>\r\n                <div class=\"template-type-description\">\r\n                    <span *ngIf=\"pageForm.get('template').value == 'blank'\">\r\n                        {{'Using this template will provide a blank template for developing a general Portal page.' | label: 'PS_ADD_PAGE_BLANK'}}\r\n                    </span>\r\n                    <span *ngIf=\"pageForm.get('template').value == 'container'\">\r\n                        {{'Using this template will provide basic components for developing a container page.' | label: 'PS_ADD_PAGE_CONTAINER'}}\r\n                        <br>\r\n                        <input type=\"checkbox\" formControlName=\"eproc\"> {{'Include basic Eprocedure components' | label: 'PS_ADD_PAGE_EPROCEDURE'}}\r\n                    </span>\r\n                    <span *ngIf=\"pageForm.get('template').value == 'modeling'\">\r\n                        {{'Using this template will provide basic components for developing a modeling page.' | label: 'PS_ADD_PAGE_MODELING'}}\r\n                    </span>                    \r\n                </div>\r\n            </section>\r\n            <section class=\"section-page-parameters\">\r\n                <div>\r\n                    <label class=\"control-label\" for=\"pageNameId\">{{'Page Name' | label: 'PS_PAGE_NAME'}}</label>\r\n                    <div>\r\n                        <input class=\"\" id=\"pageNameId\" type=\"text\" placeholder=\"Page Name\" formControlName=\"pageName\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"\">\r\n                    <label class=\"control-label\" for=\"primaryServiceTypeId\">{{'Primary Service Type' | label: 'PS_PRIMARY_SERVICE_TYPE'}}</label>\r\n                    <div>\r\n                        <select class=\"\" formControlName=\"serviceType\">\r\n                            <option value=\"\"></option>\r\n                            <option *ngFor=\"let type of pageForm.get('serviceTypes').value\" [value]=\"type.ClassName\">{{type.ClassName}}</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </main>\r\n\r\n        <footer>\r\n            <div class=\"popup-message\">\r\n                <span>{{errorMessage}}</span>\r\n            </div>\r\n            <div class=\"btns\">\r\n                <span class=\"default-btn\" (click)=\"cancel()\">{{'Cancel' | label: 'PS_CANCEL'}}</span>\r\n                <span class=\"primary-btn\" (click)=\"save()\" [class.disabled]=\"!pageForm.valid\">{{'Ok' | label: 'PS_ACTION_OK'}}</span>\r\n            </div>\r\n        </footer>\r\n    </form>\r\n</div>","import { NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { PanelModule } from '../../panel';\r\nimport { SharedModule } from '../../shared';\r\n\r\n//third part modules\r\nimport { PageWizardComponent } from './page/pageWizard.component';\r\nimport { BatchExportComponent } from './batchExportImport/batchExport.component';\r\nimport { BatchImportComponent } from './batchExportImport/batchImport.component';\r\nimport { BatchProgressPopup } from './batchExportImport/batchProgressPopup.component';\r\n\r\nconst COMPONENTS = [\r\n    BatchExportComponent, \r\n    BatchImportComponent, \r\n    BatchProgressPopup,\r\n    PageWizardComponent,  \r\n]\r\n\r\n@NgModule({\r\n    imports: [\r\n        BrowserAnimationsModule,\r\n        PanelModule,\r\n        SharedModule,\r\n        ReactiveFormsModule,\r\n    ],\r\n    declarations: [\r\n        COMPONENTS,\r\n    ],\r\n    exports: [\r\n        COMPONENTS,\r\n    ],\r\n    entryComponents: [\r\n        COMPONENTS,\r\n    ],\r\n})\r\nexport class WizardModule {\r\n    constructor( @Optional() @SkipSelf() parentModule: WizardModule) {\r\n        if (parentModule) {\r\n            throw new Error(\r\n                'WizardModule is already loaded. Import it in the StudioModule only');\r\n        }\r\n    }\r\n}\r\n\r\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  portalUrl: \"\",\n  wcfUrl: \"\",\n  portalMode: \"\",\n  workspace: '0'\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nconst hr = window.location.href;\nconst i = hr.lastIndexOf('/index.html');\nconst iwcf = window.location.search.indexOf(\"&wcf=\");\n\nif( i==-1 || iwcf == -1){\n    // developer's default settings -- should be removed\n    environment.portalUrl = \"https://localhost/CamstarPortal\";\n    environment.wcfUrl = \"https://localhost/CamstarWCFServices\";\n    environment.portalMode = \"Apollo\";\n}\nelse{\n    environment.portalUrl = hr.substr(0, i - \"/PortalStudio\".length);\n    environment.wcfUrl = unescape(window.location.search.substr(iwcf+5));\n    if(window.location.host !== \"localhost\" &&  environment.wcfUrl.indexOf(\"//localhost/\") != -1){\n         environment.wcfUrl = unescape(window.location.search.substr(iwcf+5)).replace(\"localhost/\", window.location.host +\"/\");\n    }\n    \n    environment.portalMode = window.location.search.substr(12, iwcf - 12);\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":"webpack:///"}