{"version":3,"sources":["swac-base.min.js"],"names":["SWAC","_s4","_callbacks","_exposedHub","_isSourceComponent","_createMessage","_postMessage","_handleInternalMessage","_receiveMessage","_identifyTarget","_callAndForget","_beginCall","_activate","EventTarget","SWACConstructor","window","Communication","prototype","isContainer","version","Config","TimeOuts","Enabled","Create","Remove","CleanUp","Internal","Close","Proxy","Functions","Events","Authentication","Handshake","Container","URLs","BaseLibrary","Request","TlsHandler","Behaviors","CloseOnCleanUpTimeOut","AddDpcValues","Extensions","Control","Exception","errorCode","codeMsg","isNaN","this","message","exceptionCodes","Error","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","2001","3001","3002","3003","3004","3005","3006","3007","3008","3009","3010","4001","constructor","toString","AccessViolationException","call","InvalidArgumentException","InternalException","_internal","Utils","_getOwnPropertyNames","Object","getOwnPropertyNames","obj","prop","result","hasOwnProperty","push","_isArray","Array","isArray","arg","_indexOf","indexOf","that","start","i","j","length","_getBootObj","BootInstance","SWACBoot","WebCC","trimRegex","checkVersion","compareVersion","splitVersion","splitCompareVersion","versionNumber","compareVersionNumber","split","parseInt","getFullName","_bootObj","containerInfo","details","path","slice","estractParameters","theFunction","bComment","lComment","ignoreTill","functionFound","reservedF","retV","currParam","startCapture","parenthesisNum","str","addParam","trimmedPar","trim","charCodeAt","substr","getBootObj","Guid","Math","random","substring","generate","toLowerCase","Eventing","_listeners","addListener","type","listener","fire","event","isAsync","listeners","len","c","l","setTimeout","removeListener","splice","Event","name","_target","_name","data","subscribe","callback","unsubscribe","EventEx","Publisher","eventName","_subscribed","notify","localSub","caller","counter","asyncCaller","e","EventProxy","subscribed","callBack","idCallB","Defer","promise","Promise","fulfill","value","bucket","p","status","fulfilled","executeCallback","func","defer","reject","reason","rejected","bind","_that","then","all","promises","retDef","solver","retValues","Reason","index","solved","onSuccess","onFailure","reasonCode","errorCodes","undefined","replace","10001","11001","11002","11004","11005","11006","11007","11008","11011","11013","11014","12001","13001","13002","13005","13006","13007","13008","13009","13010","13011","13014","13015","14001","15001","15004","15005","16001","16002","17000","17001","17002","17003","17004","17005","17006","18000","18001","19000","peer","_onFailure","_onSuccess","_session","_peer","_containerDomain","_defer","_tlsMessageHandler","_ensureHandshake","_sendMessage","accept","sendMessage","isAuthenticated","getDomain","comp","host","port","res","get","getCurrentUrl","RegExp","exec","receiveMessage","ex","beginHandshake","tlsHandler","tlsMessage","timeout","setDomain","containerDomain","session","source","parent","msgType","content","JSON","stringify","t","wnd","targetOrigin","closed","self","swacPostMessage","postMessage","origin","guid","g","mybag","bag","com","createHandler","hasError","valReason","targetWnd","messageContent","msg","decoreMsg","orig","d","o","v","s","noProlong","_acknowledgeCall","identify","setCurrentUrl","m","apply","a","prolonged","clearTimeout","timer","handled","fullName","forwardMsg","dest","parse","f","component","libconfig","liburl","auth","cmpnt","iframe","configExtensions","theMsg","theSource","lastUrl","attributes","authentication","discard","url","containerVersion","namespace","control","keys","extensions","ControlLibrary","unshift","btoa","id","factory","Hub","settings","getLanguage","Component","remove","_handleBootMessage","to","target","checkIframe","fireOnFailure","contentWindow","method","args","destination","newTo","parkTo","addEventListener","removeEventListener","attachEvent","detachEvent","beginCall","evtname","evtobject","inf","dpcChanged","key","beginDpcGet","beginDpcSet","associateHub","hub","activate","original","instance","_onInterfaceActivated","_onReady","_onRemove","_onVisible","_onPosition","_onCleanUp","_eventsObj","_privateDpc","_rootNode","_id","_innerComponent","_activeInterfaces","_containerServices","_servicesOptions","_requestedEvents","_cachedServices","_cachedEventPublisher","_authentication","_handler","_createForwarder","flags","DPC","Flags","Stub","_createDpcHandler","handler","node","isEvent","_removeFromRequestedEventList","_eventCallback","eventArgs","property","safeEventArgs","_onComponentReady","onMouseEvents","_exposer","expose","interfaceName","eventCounter","dummyEvent","api","events","_getInfo","serviceName","delegable","_has","_beginCallService","service","serviceProvider","beginExpose","remHandler","addHandler","setHandler","hasPublicDpc","interfaces","expObj","errorMessage","Permissions","Read","Write","close","Node","root","access","onRemoved","onAdded","onValueChanged","beginAuthenticationHandshake","eventData","isInterfaceActivated","services","list","options","propName","srvList","filterOK","beginGet","asyncCall","bootObj","provider","fn","evPub","join","Function","_exposeService","getInfo","has","onInterfaceActivated","onReady","onRemove","onVisible","onPosition","onCleanUp","structure","element","blnRetVal","def","dpc","add","open","None","set","designMode","language","navigator","ext","ready","servicesInfo","next","cursor","proceed","returnValue","failed","_manageExtensions","show","visible","enableComponentEvent","level","arrayEventName","eventToRegister","componentList","componentObj","evt","getRegisteredEvent","inherited","disableComponentEvent","eventToUnregister","position","left","top","width","height","context","dpcGet","dpcSet","beginSet","modified","cleanUp","beginRequestInterface","interfaceReady","domain","setPrivateDPC","Data","uuid","_parent","_uuid","_forceForward","arguments","nullable","multipleKey","emptyStringKey","match","_checkKey","_flags","_normalizeFlags","_dirtyflag","_key","_value","_type","_isProxy","_isStub","_mine","_mustForward","_forward","action","forward","_getflags","_get","_onBeforeValueChanged","_fireOnBeforeValueChanged","validateObj","currentValue","currentKey","fireOnBeforeValueChanged","_onValueChanged","_fireOnValueChanged","oldValue","relativeKey","fireOnValueChanged","_set","publicNode","validatedObj","getPublicNode","componentVersion","addDpcValues","_beginSet","_equals","_gettype","_getPermissions","_dirty","mark","_onRemoved","onBeforeValueChanged","fireOnRemoved","dirty","mine","_isDirty","accessor","getter","refuseDot","lastIndexOf","_forwarder","_children","_canAdd","_canRemove","_list","sort","_open","namespaces","current","_beautifyFlags","_nestedKey","nKey","_beginSetSuccCallback","newValue","objRet","_onAdded","_fireOnAdded","fireOnAdded","_add","childNode","_remove","children","it","nestedKey","r","object1","object2","retVal","object1Type","object1PropList","object2PropList","module","exports","SystemJS","map","define","amdDefine","amd","requirejs","contexts","_","config","paths"],"mappings":"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","file":"swac-base.min.js","sourcesContent":["/* Version 1.5.1, copyright (C) 2019, Siemens AG. All Rights Reserved. */\r\n\r\n\r\n(function () {\r\n  var swacBaseModule = function (SWAC) {\r\n\r\n///////////////////////////////////////////\r\n// lib/base/_.js\r\n\r\n/**\r\n * @class SWAC\r\n */\r\n\r\n\r\n/**\r\n* Value will be changed by bootstrapper code for components.\r\n*\r\n* @property isContainer\r\n* @type boolean\r\n* @default true\r\n*/\r\nSWAC.isContainer = true;\r\n\r\n/**\r\n* Identify the current SWAC base engine version. \r\n*\r\n* Important Note: the property value must not be changed because it's used by SWAC to perform cross compatibility checks\r\n* @property version\r\n* @type string\r\n* @since SWAC 1.0.2\r\n* @final\r\n*/\r\nSWAC.version = '1.5.1';\r\n\r\n\r\n///////////////////////////////////////////\r\n// lib/base/misc/config.js\r\n\r\n\r\n/**\r\n * Class that manages all the configuration settings. \r\n *\r\n * @class SWAC.Config\r\n * @constructor\r\n * \r\n */\r\nSWAC.Config = (function () {\r\n\r\n  //////////////\r\n  // PUBLIC   //\r\n  //////////////\r\n\r\n  return {\r\n\r\n    /**\r\n     * Timeout settings\r\n     *\r\n     * @method TimeOuts\r\n     * @type Object\r\n     * @param [Enabled] {Boolean} Enable the TimeOuts settings (default: true)\r\n     * @param [Create] {Numeric} Timeout for component creation (default: 1000)\r\n     * @param [Remove] {Numeric} Timeout for component removal (default: 2000)\r\n     * @param [CleanUp] {Numeric} Timeout for components clean up (default: 60000)\r\n     * @param [Internal] {Numeric} Timeout for internal calls (default: 1000)\r\n     * @param [Close] {Numeric} Timeout for components closing (default: 120000)\r\n     * @param [Proxy] {Object}\r\n     * @param [Proxy.Functions] {Numeric} Timeout for function callback in proxy (default: 2000)\r\n     * @param [Proxy.Events] {Numeric} Timeout for an event in proxy (default: 1000)\r\n     * @param [Authentication] {Object}\r\n     * @param [Authentication.Handshake] {Numeric} Timeout for authentication handshake (default: 10000)\r\n     */\r\n    TimeOuts: {\r\n      Enabled: true,\r\n      Create: 1000,\r\n      Remove: 2000,\r\n      CleanUp: 20000,\r\n      Internal: 1000,\r\n      Close: 60000,\r\n      Proxy: {\r\n        Functions: 2000,\r\n        Events: 1000\r\n      },\r\n      Authentication: {\r\n        Handshake: 10000\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Container settings\r\n     *\r\n     * @method Container\r\n     * @type Object\r\n     * @param [URLs] {Object}\r\n     * @param [URLs.BaseLibrary] {String} SWAC-base library path (default: '')\r\n     * @param [Authentication] {Object}\r\n     * @param [Authentication.Request] {Boolean} Specify if an authentication is required (default: false)\r\n     * @param [Authentication.TlsHandler] {Object} Transport Layer Security handler (default: null)\r\n     * @param [Behaviors] {Object}\r\n     * @param [Behaviors.CloseOnCleanUpTimeOut] {Boolean} Specify if all components will be closed after timeout (default: true)\r\n     * @param [Behaviors.AddDpcValues] {Boolean} Specify if all components require value in onValueChanged DPC event (default: false)\r\n   */\r\n    Container: {\r\n      URLs: {\r\n        BaseLibrary: ''\r\n      },\r\n      Authentication: {\r\n        Request: false,\r\n        TlsHandler: null  // no handler set is equal to \"no authentication supported\"\r\n      },\r\n      Behaviors: {\r\n        CloseOnCleanUpTimeOut: true,\r\n        AddDpcValues : false\r\n      }\r\n    },\r\n\r\n    /**\r\n    * List of extensions\r\n    *\r\n    * @method Extensions\r\n    * @type Object \r\n    */\r\n    Extensions: {},\r\n\r\n    /**\r\n     * Control settings\r\n     *\r\n     * @method Control\r\n     * @type Object\r\n     * @param [URLs] {Object}\r\n     * @param [URLs.BaseLibrary] {String} WebCC-base library path (default: '')\r\n     * @param [Extensions] {Object} Extensions allows Custom Controls to work with \"domain-specific\" functionality provided by containers\r\n     */\r\n    Control: {\r\n      URLs: {\r\n        BaseLibrary: ''\r\n      },\r\n      Extensions: {}\r\n    }\r\n  };\r\n\r\n}());\r\n\r\n\r\n///////////////////////////////////////////\r\n// lib/base/misc/exception.js\r\n\r\n\r\n/**\r\n * Class that manages Exception message. \r\n *\r\n * @class SWAC.Exception\r\n * @constructor\r\n * @param {Numeric} errorCode\r\n */\r\nSWAC.Exception = function (errorCode) {\r\n  var codeMsg;\r\n\r\n/**\r\n * Exception code.\r\n *\r\n * @property errorCode\r\n * @type Numeric\r\n */\r\n    if (isNaN(errorCode)) {\r\n      this.errorCode = -1;\r\n      this.message = errorCode;\r\n    }\r\n    else {\r\n      this.errorCode = errorCode;\r\n\r\n      codeMsg = SWAC.Exception.prototype.exceptionCodes[errorCode];\r\n      /**\r\n       * Exception message.\r\n       *\r\n       * @property message\r\n       * @type String\r\n       */\r\n      this.message = 'Internal Error';\r\n      if (codeMsg !== null && codeMsg !== undefined) {\r\n        this.message = codeMsg;\r\n      }\r\n    }\r\n};\r\n\r\nSWAC.Exception.prototype = new Error();\r\nSWAC.Exception.prototype = {\r\n  /**\r\n * Object that manages exception codes. \r\n *\r\n * @private\r\n * @property exceptionCodes\r\n * @type Object \r\n */\r\n  exceptionCodes: {\r\n    /**\r\n     * Only one instance of SWAC.Hub is allowed.\r\n     *\r\n     * @private\r\n     * @property exceptionCodes.1000\r\n     * @type Numeric\r\n     */\r\n    1000: 'Only one instance of SWAC.Hub is allowed.',\r\n    /**\r\n     * Component not found.\r\n     *\r\n     * @private\r\n     * @property exceptionCodes.1001\r\n     * @type Numeric\r\n     */\r\n    1001: 'Component not found.',\r\n    /**\r\n    * Corresponding node does no longer exist.\r\n    *\r\n    * @private\r\n    * @property exceptionCodes.1002\r\n    * @type Numeric\r\n    */\r\n    1002: 'Corresponding node does no longer exist.',\r\n    /**\r\n    * No compatible node for the given key.\r\n    *\r\n    * @private\r\n    * @property exceptionCodes.1003\r\n    * @type Numeric\r\n    */\r\n    1003: 'No compatible node for the given key.',\r\n    /**\r\n    * No node for the given key.\r\n    *\r\n    * @private\r\n    * @property exceptionCodes.1004\r\n    * @type Numeric\r\n    */\r\n    1004: 'No node for the given key.',\r\n    /**\r\n    * Data node with different flags already exist.\r\n    *\r\n    * @private\r\n    * @property exceptionCodes.1005\r\n    * @type Numeric\r\n    */\r\n    1005: 'Data node with different flags already exist.',\r\n    /**\r\n    * Unable to set value on a structural node.\r\n    *\r\n    * @private\r\n    * @property exceptionCodes.1006\r\n    * @type Numeric\r\n    */\r\n    1006: 'Unable to set value on a structural node.',\r\n    /**\r\n    * Handshake cannot be restarted.\r\n    *\r\n    * @private\r\n    * @property exceptionCodes.1007\r\n    * @type Numeric\r\n    */\r\n    1007: 'Handshake cannot be restarted.',\r\n    /**\r\n    * Authorization handshake not active.\r\n    *\r\n    * @private\r\n    * @property exceptionCodes.1008\r\n    * @type Numeric\r\n    */\r\n    1008: 'Authorization handshake not active.',\r\n    /**\r\n    * Handshake no longer active.\r\n    *\r\n    * @private\r\n    * @property exceptionCodes.1009\r\n    * @type Numeric\r\n    */\r\n    1009: 'Handshake no longer active.',\r\n    /**\r\n    * Unable to add and set a sub-key for a data node.\r\n    *\r\n    * @private\r\n    * @property exceptionCodes.1010\r\n    * @type Numeric\r\n    */\r\n    1010: 'Unable to add and set a sub-key for a data node.',\r\n    /**\r\n    * Permission denied.\r\n    *\r\n    * @private\r\n    * @property exceptionCodes.2001\r\n    * @type Numeric\r\n    */\r\n    2001: 'Permission denied.',\r\n    /**\r\n    * Flags cannot be both Proxy and Stub'\r\n    *\r\n    * @private\r\n    * @property exceptionCodes.3001\r\n    * @type Numeric\r\n    */\r\n    3001: 'Flags cannot be both Proxy and Stub.',\r\n    /**\r\n    * Invalid Key, key not nullable.'\r\n    *\r\n    * @private\r\n    * @property exceptionCodes.3002\r\n    * @type Numeric\r\n    */\r\n    3002: 'Invalid Key, key not nullable.',\r\n    /**\r\n    * Invalid Key, key must be a string.\r\n    *\r\n    * @private\r\n    * @property exceptionCodes.3003\r\n    * @type Numeric\r\n    */\r\n    3003: 'Invalid Key, key must be a string.',\r\n    /**\r\n    *Invalid Key. Not multiple key accepted.\r\n    *\r\n    * @private\r\n    * @property exceptionCodes.3004\r\n    * @type Numeric\r\n    */\r\n    3004: 'Invalid Key. Not multiple key accepted.',\r\n    /**\r\n    * Invalid Key. Key cannot start/end with dot.\r\n    *\r\n    * @private\r\n    * @property exceptionCodes.3005\r\n    * @type Numeric\r\n    */\r\n    3005: 'Invalid Key. Key cannot start/end with a dot.',\r\n    /**\r\n    * Invalid Key, key cannot be an empty string.\r\n    *\r\n    * @private\r\n    * @property exceptionCodes.3006\r\n    * @type Numeric\r\n    */\r\n    3006: 'Invalid Key, key cannot be an empty string.',\r\n    /**\r\n    * Invalid flags.\r\n    *\r\n    * @private\r\n    * @property exceptionCodes.3007\r\n    * @type Numeric\r\n    */\r\n    3007: 'Invalid flags.',\r\n    /**\r\n      * Value not validated\r\n      *\r\n      * @private\r\n      * @property exceptionCodes.3008\r\n      * @type Numeric\r\n      */\r\n    3008: 'Value not validated.',\r\n    /**\r\n    * Flags of parent node is 'none', child node must have the same flags value\r\n    *\r\n    * @private\r\n    * @property exceptionCodes.3009\r\n    * @type Numeric\r\n    */\r\n    3009: 'Flags of parent node is \\'none\\', child node must have the same flags value.',\r\n    /**\r\n    * DPC name is not valid. It contains not Alphanumeric characters and underscores are allowed.\r\n    *\r\n    * @private\r\n    * @property exceptionCodes.3010\r\n    * @type Numeric\r\n    */\r\n    3010: 'DPC name is not valid. It contains not Alphanumeric characters only underscores are allowed.',\r\n    /**\r\n      * Converter function exception.\r\n      *\r\n      * @private\r\n      * @property exceptionCodes.4001\r\n      * @type Numeric\r\n      */\r\n    4001: 'Converter function exception.'\r\n  }\r\n};\r\nSWAC.Exception.prototype.constructor = SWAC.Exception;\r\n\r\n/**\r\n   * Returns a string message for the exception\r\n   *\r\n   * @method toString\r\n   * @return {string} Exception message\r\n   */\r\nSWAC.Exception.prototype.toString = function () {\r\n    return this.message;\r\n};\r\n\r\n/**\r\n * Class that manages AccessViolationException message. \r\n *\r\n * @class SWAC.AccessViolationException\r\n * @constructor\r\n * @param {Numeric} errorCode\r\n */\r\nSWAC.AccessViolationException = function (errorCode) {\r\n    SWAC.Exception.call(this, errorCode);\r\n};\r\n\r\nSWAC.AccessViolationException.prototype = new SWAC.Exception();\r\n\r\n/**\r\n * Class that manages InvalidArgumentException message. \r\n *\r\n * @class SWAC.InvalidArgumentException\r\n * @constructor\r\n * @param {Numeric} errorCode\r\n */\r\nSWAC.InvalidArgumentException = function (errorCode) {\r\n    SWAC.Exception.call(this, errorCode);\r\n};\r\n\r\nSWAC.InvalidArgumentException.prototype = new SWAC.Exception();\r\n\r\n/**\r\n * Class that manages InternalException message. \r\n *\r\n * @class SWAC.InternalException\r\n * @constructor\r\n * @param {Numeric} errorCode\r\n */\r\nSWAC.InternalException = function (errorCode) {\r\n  SWAC.Exception.call(this, errorCode);\r\n};\r\n\r\nSWAC.InternalException.prototype = new SWAC.Exception();\r\n\r\n\r\n///////////////////////////////////////////\r\n// lib/base/misc/extensions.js\r\n\r\n\r\nSWAC._internal = {};\r\n\r\n/**\r\n* Class that provides IE8 compatibility functions\r\n*\r\n* @class SWAC._internal.Utils\r\n* @constructor\r\n* \r\n*/\r\nSWAC._internal.Utils = (function () {\r\n  /**\r\n    * Get the array of property names of an object\r\n    *\r\n    * @private\r\n    * @method getOwnPropertyNames\r\n    * @param {Object} object The object to parse\r\n    * @return {Array} array of property names of the object\r\n    */\r\n  var _getOwnPropertyNames = null;\r\n  if (Object.getOwnPropertyNames) {\r\n    _getOwnPropertyNames = function (obj) {\r\n      return Object.getOwnPropertyNames(obj);\r\n    };\r\n  }\r\n  else {\r\n    _getOwnPropertyNames = function (obj) {\r\n      var prop, result = [];\r\n      if (typeof obj === 'object' || typeof obj === 'function') {\r\n        for (prop in obj) {\r\n          if (Object.prototype.hasOwnProperty.call(obj, prop)) {\r\n            result.push(prop);\r\n          }\r\n        }\r\n      }\r\n      return result;\r\n    };\r\n  }\r\n  /**\r\n    * Check if object is an array\r\n    *\r\n    * @private\r\n    * @method isArray\r\n    * @param {Object} arg The object to check\r\n    * @return {Boolean} true if object is an array, false otherwise\r\n    */\r\n  var _isArray = null;\r\n  if (Array.isArray) {\r\n    _isArray = function (arg) {\r\n      return Array.isArray(arg);\r\n    };\r\n  }\r\n  else {\r\n    _isArray = function (arg) {\r\n      return Object.prototype.toString.call(arg) === '[object Array]';\r\n    };\r\n  }\r\n  /**\r\n    * Get the index of the item inside the array\r\n    *\r\n    * @private\r\n    * @method indexOf\r\n    * @param {Array} that Array to check\r\n    * @param {Object} obj Object to find\r\n    * @param {Number} start Start index of research\r\n    * @return {Number} Index of item found inside the array\r\n    */\r\n  var _indexOf = null;\r\n  if (Array.indexOf) {\r\n    _indexOf = function (that, obj, start) {\r\n      return that.indexOf(obj, start);\r\n    };\r\n  }\r\n  else {\r\n    _indexOf = function (that, obj, start) {\r\n      if (_isArray(that)) {\r\n        for (var i = (start || 0), j = that.length; i < j; i++) {\r\n          if (that[i] === obj) {\r\n            return i;\r\n          }\r\n        }\r\n      }\r\n      return -1;\r\n    };\r\n  }\r\n\r\n  /**\r\n    * Regular Expression for trimming spaces \r\n    *\r\n    * @private\r\n    * @property trimRegex\r\n    * @type RegEx\r\n    */\r\n  var _trimRegex = /^\\s+|\\s+$/g;\r\n\r\n  /**\r\n  * Returns the boot object \r\n  *\r\n  * @protected\r\n  * @method getBootObj\r\n  * @return {object} the boot object\r\n  */\r\n  var _getBootObj = function () {\r\n    var _bootObj = null;\r\n\r\n    if (typeof SWAC.BootInstance !== 'undefined') {\r\n      _bootObj = SWAC.BootInstance;\r\n    }\r\n    else if ((typeof window.SWAC !== 'undefined') && (typeof window.SWAC.BootInstance !== 'undefined')) {\r\n      _bootObj = window.SWAC.BootInstance;\r\n    }\r\n    else if (typeof SWACBoot !== 'undefined') {\r\n      _bootObj = SWACBoot;\r\n    }\r\n    else if (typeof WebCC !== 'undefined') {\r\n      _bootObj = WebCC;\r\n    }\r\n    else {\r\n      _bootObj = null;\r\n    }\r\n\r\n    return _bootObj;\r\n  };\r\n\r\n  /**\r\n  * Component full hierarchical name \r\n  *\r\n  * @private\r\n  * @method getFullName\r\n  * @return {Array} the component fullName (or null for root container)\r\n  */\r\n  var _getFullName = function () {\r\n    var _bootObj = _getBootObj();\r\n\r\n    if (_bootObj && typeof _bootObj._internal !== 'undefined' && _bootObj._internal.containerInfo && _bootObj._internal.containerInfo.details && _bootObj._internal.containerInfo.details.path) {\r\n      return _bootObj._internal.containerInfo.details.path.slice(0);\r\n    }\r\n    else if (!_bootObj) { //no boot loaded ... I'm the root\r\n      return ['<root>'];\r\n    }\r\n    return null;\r\n  };\r\n\r\n  /**\r\n  * Compares versions \r\n  *\r\n  * @private\r\n  * @method checkVersion\r\n  * @param {String} version version to compare\r\n  * @param {String} compareVersion reference version\r\n  * @return {Number} Returns 0 if the version is the same, 1 if version is greater than compareVersion, -1 otherwise.\r\n  */\r\n  var _checkVersion = function (version, compareVersion) {\r\n    var splitVersion = '',\r\n        splitCompareVersion = '',\r\n        versionNumber = 0,\r\n        compareVersionNumber = 0;\r\n\r\n    if (typeof version !== 'string' || typeof compareVersion !== 'string') {\r\n      return -1;\r\n    }\r\n    if (version.indexOf('-') !== -1) {\r\n      version = version.split('-')[0];\r\n    }\r\n    if (compareVersion.indexOf('-') !== -1) {\r\n      compareVersion = compareVersion.split('-')[0];\r\n    }\r\n\r\n    splitVersion = version.split('.');\r\n    splitCompareVersion = compareVersion.split('.');\r\n\r\n    versionNumber = parseInt(splitVersion[0]);\r\n    compareVersionNumber = parseInt(splitCompareVersion[0]);\r\n\r\n    if (versionNumber > compareVersionNumber) {\r\n      return 1;\r\n    }\r\n    else if (versionNumber < compareVersionNumber) {\r\n      return -1;\r\n    }\r\n\r\n    versionNumber = versionNumber * 1000000 + parseInt(splitVersion[1]) * 1000 + parseInt(splitVersion[2]);\r\n    compareVersionNumber = compareVersionNumber * 1000000 + parseInt(splitCompareVersion[1]) * 1000 + parseInt(splitCompareVersion[2]);\r\n\r\n    if (versionNumber > compareVersionNumber) {\r\n      return 1;\r\n    }\r\n    else if (versionNumber < compareVersionNumber) {\r\n      return -1;\r\n    }\r\n\r\n    return 0;\r\n  };\r\n\r\n  /**\r\n  * Extracts Methods with params from the object\r\n  *\r\n  * @private\r\n  * @method estractParameters\r\n  * @param {Object} theFunction function of the component\r\n  * @return {Object} object containing the function informations \r\n  */\r\n  var _estractParameters = function (theFunction) {\r\n    var bComment = false,\r\n        lComment = false,\r\n        ignoreTill = '',\r\n        functionFound = false,\r\n        i = 1,\r\n        reservedF = 'function',\r\n        retV = [],\r\n        currParam = '',\r\n        startCapture = false,\r\n        parenthesisNum = 0, str = '',\r\n        addParam = function () {\r\n          var trimmedPar = currParam.trim();\r\n          if (trimmedPar.length > 0) {\r\n            retV.push(trimmedPar);\r\n            currParam = '';\r\n          }\r\n        };\r\n\r\n    if (typeof theFunction === 'function') {\r\n      str = '  ' + theFunction + '        '; //a couple of additional chars on start and end are for str[i-n] && str[i+'function'.length]\r\n      while (i < str.length) {\r\n        if (ignoreTill.length > 0) {\r\n          if (str[i] === ignoreTill && str[i - 1] !== '\\\\') {\r\n            ignoreTill = '';\r\n          }\r\n        }\r\n        else if (bComment) {\r\n          if (str[i] === '*' && str[i + 1] === '/') {\r\n            i++;\r\n            bComment = false;\r\n          }\r\n        }\r\n        else if (lComment) {\r\n          if (str[i + 1] === '\\n' || str[i + 1] === '\\r' || str[i + 1].charCodeAt(0) === 10) {\r\n            lComment = false;\r\n          }\r\n        }\r\n        else if (str[i] === '\"' || str[i] === '\\'') {\r\n          ignoreTill = str[i];\r\n          addParam();\r\n        }\r\n        else if (str[i] === '/') {\r\n          if (str[i + 1] === '*') {\r\n            bComment = true;\r\n          }\r\n          else if (str[i + 1] === '/') {\r\n            lComment = true;\r\n          }\r\n          else {\r\n            ignoreTill = '/';\r\n          }\r\n          addParam();\r\n        }\r\n        else {\r\n          if (!functionFound) {\r\n            if (str[i] === 'f' && str[i - 1] !== '\\\\' && (str.length - i) >= reservedF.length && str.substr(i, reservedF.length) === reservedF) {  //function\r\n              i += reservedF.length; //skip 'function'\r\n              functionFound = true;\r\n            }\r\n            else if (str[i] === '(') { //arrow function with parenthesis\r\n              functionFound = true;\r\n              continue; //'('  will be evaluated again below increasing parenthesisNum\r\n            }\r\n            else if (str[i].trim().length > 0) { //arrow function with 1 param\r\n              functionFound = true;\r\n              startCapture = true; //do not wait for '('\r\n              continue; //character will be evaluated again below\r\n            }\r\n          }\r\n          else {\r\n            //assumption: default param value in arrow function requires the '(' to incapsulate also single parameter\r\n            if (parenthesisNum <= 1 && (str[i] === ')' || (str[i] === '=' && str[i + 1] === '>'))) { //end of search\r\n              addParam();\r\n              break;\r\n            }\r\n            else if (str[i] === ',' && str[i - 1] !== '\\\\') { //param separator\r\n              addParam();\r\n              startCapture = true;\r\n            }\r\n            else if (str[i] === '(') {\r\n              if (retV.length === 0) { //check to exclude '(' in default param value expression\r\n                startCapture = true;\r\n              }\r\n              parenthesisNum++;\r\n            }\r\n            else if (str[i] === ')') { //check for exclude '(' in default param value expression\r\n              parenthesisNum--;\r\n            }\r\n            else if (str[i] === '=' && str[i - 1] !== '\\\\') { //param default value, stop Capture\r\n              addParam();\r\n              startCapture = false; //stop capturing till ',', ')' or '=>'\r\n            }\r\n            else if (startCapture && str[i].trim().length > 0) {\r\n              currParam += str[i];\r\n            }\r\n          }\r\n        }\r\n        i++;\r\n      }\r\n    }\r\n    else {\r\n      return null; //not a function\r\n    }\r\n    return retV;\r\n  };\r\n\r\n  return {\r\n    getOwnPropertyNames: _getOwnPropertyNames,\r\n    isArray: _isArray,\r\n    indexOf: _indexOf,\r\n    trimRegex: _trimRegex,\r\n    checkVersion: _checkVersion,\r\n    getFullName: _getFullName,\r\n    estractParameters: _estractParameters,\r\n    getBootObj: _getBootObj\r\n  };\r\n})();\r\n\r\n\r\n///////////////////////////////////////////\r\n// lib/base/misc/guid.js\r\n\r\n\r\n/**\r\n * Class that generates a random GUID. \r\n *\r\n * @class SWAC.Guid\r\n * @constructor\r\n * \r\n */\r\nSWAC.Guid = (function () {\r\n\r\n  //////////////\r\n  // PRIVATE  //\r\n  //////////////\r\n\r\n  var\r\n      /**\r\n      * Generates a random 4-digit number. \r\n      *\r\n      * @private\r\n      * @method _s4\r\n      * @return {String} Returns a 4-digit number\r\n      */\r\n      _s4 = function () {\r\n        return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n      },\r\n\r\n      /**\r\n      * Creates a valid GUID.\r\n      *\r\n      * @method guid\r\n      * @return {String} Returns a valid GUID\r\n      */\r\n      _guid = function () {\r\n        return (_s4() + _s4() + '-' + _s4() + '-4' + _s4().substr(0, 3) + '-' + _s4() + '-' + _s4() + _s4() + _s4()).toLowerCase();\r\n      };\r\n\r\n  //////////////\r\n  // PUBLIC   //\r\n  //////////////\r\n\r\n  return {\r\n    generate: _guid\r\n  };\r\n\r\n}());\r\n\r\n\r\n///////////////////////////////////////////\r\n// lib/base/event/eventing.js\r\n\r\n\r\nSWAC.Eventing = (function () {\r\n \r\n  /**\r\n  * Class that manages event\r\n  *\r\n  * @class SWAC.Eventing.EventProxy\r\n  * @constructor\r\n  */\r\n  var _eventProxy = function (subscribed) {\r\n    var _subscribed = subscribed;\r\n    return {\r\n      /**\r\n       * Method to subscribe to an event\r\n       *\r\n       * @method subscribe\r\n       * @param {Function} callback Function to call when event is raised\r\n       */\r\n      subscribe: function (callBack) {\r\n        _subscribed.push(callBack);\r\n      },\r\n\r\n      /**\r\n      * Method to unsubscribe to an event\r\n      *\r\n      * @method unsubscribe\r\n      * @param {Function} callback Function to remove from subscribe events list\r\n      */\r\n      unsubscribe: function (callBack) {\r\n        var idCallB = SWAC._internal.Utils.indexOf(_subscribed, callBack);\r\n        if (idCallB !== -1) {\r\n          _subscribed.splice(idCallB, 1);\r\n        }\r\n      }\r\n    };\r\n  };\r\n\r\n  /**\r\n  * Class that manages event\r\n  *\r\n  * @class SWAC.Eventing.Publisher\r\n  * @constructor\r\n  * @param {String} eventName Event name\r\n  */\r\n  var _publisher = function (eventName) {\r\n    var _subscribed = [];\r\n    return {\r\n      /**\r\n      * Method to notify an event\r\n      *\r\n      * @method notify \r\n      * @param {Object} data Event data\r\n      * @param {Boolean} isAsync callback execution in sync/async mode\r\n      */\r\n      notify: function (data, isAsync) {\r\n        var localSub = _subscribed.slice(), i,\r\n          caller = function (counter) {\r\n              if (!data || data.type !== eventName) {\r\n                  localSub[counter].call(null, { type: eventName, data: data });\r\n            }\r\n            else {\r\n                  localSub[counter].call(null, data);\r\n            }\r\n          },\r\n          asyncCaller = function (counter) {\r\n            setTimeout(function () { caller(counter); }, 0);\r\n          };\r\n\r\n        for (i = 0; i < localSub.length; i++) {\r\n          try {\r\n            if (isAsync) {\r\n              asyncCaller(i);\r\n            }\r\n            else {\r\n              caller(i);\r\n            }\r\n          }\r\n          catch (e) {\r\n          }\r\n        }\r\n        return localSub.length;\r\n      },\r\n\r\n      /**\r\n      * Object for managing eventProxy\r\n      *\r\n      * @property event\r\n      */\r\n      event: new SWAC.Eventing.EventProxy(_subscribed)\r\n    };\r\n  };\r\n\r\n  // OBSOLETE\r\n\r\n/**\r\n* OBSOLETE Class that manages event\r\n*\r\n* @class SWAC.Eventing.EventEx\r\n* @constructor\r\n* \r\n*/\r\n  var EventTarget = function () {\r\n    this._listeners = {};\r\n  };\r\n\r\n  EventTarget.prototype = {\r\n\r\n    constructor: EventTarget,\r\n\r\n    /**\r\n    * Adds a listener on event\r\n    *\r\n    * @method addListener\r\n    * @param {String} type Name of event\r\n    * @param {Function} listener Callback to add\r\n    */\r\n    addListener: function (type, listener) {\r\n      if (typeof this._listeners[type] === 'undefined') {\r\n        this._listeners[type] = [];\r\n      }\r\n\r\n      this._listeners[type].push(listener);\r\n    },\r\n\r\n    /**\r\n  * Fires event\r\n  *\r\n  * @method fire\r\n  * @param {Object|String} event Event object or event name\r\n  * @param {Bool} isAsync to execute callback in async or sync mode\r\n  */\r\n    fire: function (event, isAsync) {\r\n      var listeners,\r\n      i = 0,\r\n      len = 0;\r\n\r\n      if (typeof event === 'string') {\r\n        event = { type: event };\r\n      }\r\n\r\n      if (!event.type) {\r\n        throw new Error('Event object missing \\'type\\' property.');\r\n      }\r\n\r\n      if (this._listeners[event.type] instanceof Array) {\r\n        // Executes callbacks asyncronous\r\n        listeners = this._listeners[event.type].slice();\r\n        if (isAsync) {\r\n\r\n          var c = function (l) { l.call(this, event); };\r\n          len = listeners.length;\r\n          for (i = 0; i < len; i++) {\r\n            setTimeout(c(listeners[i]), 0);\r\n          }\r\n\r\n        }\r\n          // Execute callbacks syncronous\r\n        else {\r\n          len = listeners.length;\r\n          for (i = 0; i < len; i++) {\r\n            listeners[i].call(this, event);\r\n          }\r\n        }\r\n      }\r\n\r\n    },\r\n\r\n    /**\r\n    * Removes listener on event\r\n    *\r\n    * @method removeListener\r\n    * @param {String} type Name of event\r\n    * @param {Function} listener Callback to remove\r\n    */\r\n    removeListener: function (type, listener) {\r\n      var listeners,\r\n     i = 0,\r\n      len = 0;\r\n\r\n      if (this._listeners[type] instanceof Array) {\r\n        listeners = this._listeners[type];\r\n        len = listeners.length;\r\n        for (i = 0; i < len; i++) {\r\n          if (listeners[i] === listener) {\r\n            listeners.splice(i, 1);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n  * OBSOLETE Class that manages event\r\n  *\r\n  * @class SWAC.Eventing.Event\r\n  * @constructor\r\n  * @param {String} name Event name\r\n  */\r\n  var SimpleEvent = function (name) {\r\n    var _target = new EventTarget(),\r\n        _name = name;\r\n\r\n    return {\r\n      /**\r\n       * Fires the event\r\n       *\r\n       * @method fire\r\n       * @param {Object} someData Event data\r\n       * @param {Boolean} isAsync to execute relative callback in async or sync mode\r\n       */\r\n        fire: function (data, isAsync) {\r\n            var event = { type: _name, data: data };\r\n        _target.fire(event, isAsync);\r\n      },\r\n\r\n      /**\r\n      * Method to subscribe to an event\r\n      *\r\n      * @method subscribe\r\n      * @param {Function} callback Function to call when event is raised\r\n      */\r\n      subscribe: function (callback) {\r\n        _target.addListener(_name, callback);\r\n      },\r\n\r\n      /**\r\n      * Method to unsubscribe to an event\r\n      *\r\n      * @method unsubscribe\r\n      * @param {Function} callback Function to remove\r\n      */\r\n      unsubscribe: function (callback) {\r\n        _target.removeListener(_name, callback);\r\n      }\r\n    };\r\n  };\r\n\r\n  return {\r\n    Event: SimpleEvent,\r\n    EventEx: EventTarget,\r\n    Publisher: _publisher,\r\n    EventProxy: _eventProxy\r\n  };\r\n}());\r\n\r\n\r\n///////////////////////////////////////////\r\n// lib/base/promise/defer.js\r\n\r\n\r\n/**\r\n* Create a SWAC Defer object \r\n*\r\n* @class SWAC.Defer\r\n* @constructor\r\n* \r\n*/\r\nSWAC.Defer = function () {\r\n  this.promise = new SWAC.Promise();\r\n};\r\n\r\nSWAC.Defer.prototype = {\r\n  /**\r\n   * Invoking fulfill method of defer object causes execution of success callback function associated to its promise\r\n   *\r\n   * @method fulfill\r\n   * @param {Object} value The object is passed like input parameter to success callback function of promise\r\n   */\r\n  fulfill: function (value) {\r\n    var p = this.promise, bucket;\r\n    if (p.status === 'pending') { //fixed state\r\n      p.value = value;\r\n      p.status = 'fulfilled';\r\n      for (bucket = 0; bucket < p._internal.fulfilled.length; bucket++) {\r\n        p._internal.executeCallback(p._internal.fulfilled[bucket].func, p._internal.fulfilled[bucket].defer, value, p.status);\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Invoking reject method of defer object causes execution of fail callback function associated to its promise\r\n   *\r\n   * @method reject\r\n   * @param {Object} reason The object is passed like input parameter to fail callback function of promise\r\n   */\r\n  reject: function (reason) {\r\n    var p = this.promise, bucket;\r\n    if (p.status === 'pending') { //fixed state\r\n      p.reason = reason;\r\n      p.status = 'rejected';\r\n      for (bucket = 0; bucket < p._internal.rejected.length; bucket++) {\r\n        p._internal.executeCallback(p._internal.rejected[bucket].func, p._internal.rejected[bucket].defer, reason, p.status);\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Invoking bind method of defer object permits to chain the defer object with a promise\r\n   *\r\n   * @method bind\r\n   * @param {Object} promise When success/fail callbacks of promise will be executed, defer will be fulfilled/rejected\r\n   */\r\n  bind: function (promise) {\r\n    var _that = this;\r\n    if ((promise) && (promise.then)) {\r\n      promise.then(function (value) {\r\n        _that.fulfill(value);\r\n      }, function (reason) {\r\n        _that.reject(reason);\r\n      });\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n};\r\n\r\n\r\n///////////////////////////////////////////\r\n// lib/base/promise/promise.js\r\n\r\n/**\r\n* Promise class\r\n*\r\n* @class SWAC.Promise\r\n* @constructor\r\n* \r\n*/\r\nSWAC.Promise = function () {\r\n  this._internal = {\r\n    /**\r\n   * Executes the callback function in case of fulfilling or rejecting the promise\r\n   *\r\n   * @protected\r\n   * @method executeCallback\r\n   * @param {Object} callback Callback function parameter\r\n   * @param {Object} defer defer object\r\n   * @param {Object} data Callback function data\r\n   * @param {Object} status promise status\r\n   */\r\n    executeCallback: function (callback, defer, data, status) {\r\n      var result = data;\r\n      if (typeof callback === 'function') {\r\n        setTimeout(function () {\r\n          try {\r\n            result = callback(data);\r\n            if (status === 'fulfilled') {\r\n              defer.fulfill(result);\r\n            } else {\r\n              defer.reject(result);\r\n            }\r\n          }\r\n          catch (e) {\r\n            defer.reject(e);\r\n            return;  // reject chaining defer with exception\r\n          }\r\n        }, 0);\r\n      }\r\n      else {\r\n        if (defer) {\r\n          if (status === 'fulfilled') {\r\n            defer.fulfill(result);\r\n          } else {\r\n            defer.reject(result);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    fulfilled: [],\r\n    rejected: []\r\n  };\r\n};\r\n\r\n/**\r\n * SWAC.Promise.all method accept an array of promise and return a promise rejected when one of the input promise is rejected or fufilled when all promise are fulfilled.\r\n *\r\n * @method all\r\n * @param {array} promises list of promise to be 'observed'\r\n * @return {object} an object defer.promise: success provide an array of all values of the input promises fulfilled, failure provide the first reason\r\n */\r\nSWAC.Promise.all = function (promises) {\r\n  var retDef = new SWAC.Defer(),\r\n    i = 0,\r\n    solver = null,\r\n    counter = 0,\r\n    retValues = [];\r\n\r\n  if (SWAC._internal.Utils.isArray(promises) && promises.length > 0) {\r\n    for (i = 0; i < promises.length ; i++) { // check content\r\n      if (!(typeof promises[i] === 'object' || typeof promises[i] === 'function') && typeof promises[i].then !== 'function') {\r\n        retDef.reject(new SWAC.Reason(18000));\r\n        return retDef.promise;\r\n      }\r\n    }\r\n\r\n    solver = function (index) {\r\n      var solved = false; // multiple call check\r\n\r\n      promises[index].then(\r\n          function (value) {\r\n            if (retDef.promise.status !== 'pending' || solved) {\r\n              return;\r\n            }\r\n            solved = true;\r\n            counter++;\r\n            retValues[index] = value;\r\n            if (counter === promises.length) {\r\n              retDef.fulfill(retValues);\r\n            }\r\n          },\r\n          function (reason) {\r\n            if (retDef.promise.status !== 'pending' || solved) {\r\n              return;\r\n            }\r\n            solved = true;\r\n            retDef.reject(reason);\r\n          }\r\n      );\r\n    };\r\n\r\n    for (i = 0; i < promises.length ; i++) { //check content\r\n      solver(i);\r\n    }\r\n  }\r\n  else {\r\n      retDef.fulfill([]);\r\n  }\r\n\r\n  return retDef.promise;\r\n};\r\n\r\nSWAC.Promise.prototype = {\r\n\r\n  /**\r\n  * Get the status of a promise object.\r\n  *\r\n  * @property status\r\n  * @type string\r\n  */\r\n  status: 'pending',\r\n\r\n  /**\r\n  * Reason of last rejected promise.\r\n  *\r\n  * @property reason\r\n  * @type object\r\n  */\r\n  reason: null,\r\n\r\n  /**\r\n  * Last fulfilled value for the current promise.\r\n  *\r\n  * @property value\r\n  * @type object\r\n  */\r\n  value: null,\r\n\r\n  /**\r\n   * Permits to execute async code when promise will be fulfilled or rejected\r\n   *\r\n   * @method then\r\n   * @param {Function} onSuccess Called when the promise is fulfilled by defer.fulfill(value) invocation\r\n   * @param {Function} onFailure Called when the promise is rejected by defer.reject(reason) invocation\r\n   */\r\n  then: function (onSuccess, onFailure) {\r\n    var defer = new SWAC.Defer();\r\n\r\n    // Add callbacks to the arrays with the defer binded to these callbacks\r\n    this._internal.fulfilled.push({\r\n      func: onSuccess,\r\n      defer: defer\r\n    });\r\n\r\n    this._internal.rejected.push({\r\n      func: onFailure,\r\n      defer: defer\r\n    });\r\n\r\n    // Check if the promise is pending, otherwise execute callbacks.\r\n    if (this.status === 'fulfilled') {\r\n      this._internal.executeCallback(onSuccess, defer, this.value, this.status);\r\n    } else if (this.status === 'rejected') {\r\n      this._internal.executeCallback(onFailure, defer, this.reason, this.status);\r\n    }\r\n\r\n    return defer.promise;\r\n  }\r\n};\r\n\r\n\r\n///////////////////////////////////////////\r\n// lib/base/promise/reason.js\r\n\r\n\r\n/**\r\n * Create a SWAC Reason object with a specific reason code. \r\n *\r\n * @class SWAC.Reason\r\n * @constructor\r\n * \r\n */\r\nSWAC.Reason = function (errorCode, data) {\r\n  var codeMsg = null;\r\n  /**\r\n * Error code.\r\n *\r\n * @property errorCode\r\n * @type Numeric\r\n */\r\n  if (isNaN(errorCode)) {\r\n    this.errorCode = -1;\r\n    this.message = errorCode;\r\n  }\r\n  else {\r\n    this.reasonCode = errorCode;\r\n\r\n    codeMsg = SWAC.Reason.prototype.errorCodes[errorCode];\r\n    /**\r\n     * Reason message.\r\n     *\r\n     * @property message\r\n     * @type String\r\n     */\r\n    this.message = '';\r\n    if (codeMsg !== null && codeMsg !== undefined) {\r\n      if (data !== undefined) {\r\n        codeMsg = codeMsg.replace('%%data%%', data);\r\n      }\r\n      this.message = codeMsg;\r\n    }\r\n  }\r\n};\r\n\r\nSWAC.Reason.prototype = {\r\n\r\n  /**\r\n* Object that manages reason codes. \r\n*\r\n* @private\r\n* @property errorCodes\r\n* @type Object \r\n*/\r\n  errorCodes: {\r\n    /**\r\n     * Handshake time-out expired. (SWAC.Config.TimeOuts.Authentication.Handshake)\r\n     *\r\n     * @private\r\n     * @property _errorCode.10001\r\n     * @type Numeric\r\n     */\r\n    10001: 'Handshake time-out expired. (SWAC.Config.TimeOuts.Authentication.Handshake)',\r\n    /**\r\n     * Time-out expired. (SWAC.Config.TimeOuts.Internal)\r\n     *\r\n     * @private\r\n     * @property errorCodes.11001\r\n     * @type Numeric\r\n     */\r\n    11001: 'Time-out expired. (SWAC.Config.TimeOuts.Internal)',\r\n    /**\r\n     * Time-out expired. (SWAC.Config.TimeOuts.Proxy.Functions)\r\n     *\r\n     * @private\r\n     * @property errorCodes.11002\r\n     * @type Numeric\r\n     */\r\n    11002: 'Time-out expired. (SWAC.Config.TimeOuts.Proxy.Functions)',\r\n    /**\r\n     * Time-out expired. (SWAC.Config.TimeOuts.Remove)\r\n     *\r\n     * @private\r\n     * @property errorCodes.11004\r\n     * @type Numeric\r\n     */\r\n    11004: 'Time-out expired. (SWAC.Config.TimeOuts.Remove)',\r\n    /**\r\n     * Time-out expired. (SWAC.Config.TimeOuts.CleanUp)\r\n     *\r\n     * @private\r\n     * @property errorCodes.11005\r\n     * @type Numeric\r\n     */\r\n    11005: 'Time-out expired. (SWAC.Config.TimeOuts.CleanUp)',\r\n    /**\r\n     * Unhandled time-out expired.\r\n     *\r\n     * @private\r\n     * @property errorCodes.11006\r\n     * @type Numeric\r\n     */\r\n    11006: 'Unhandled time-out expired.',\r\n    /**\r\n     * Invalid target.\r\n     *\r\n     * @private\r\n     * @property errorCodes.11007\r\n     * @type Numeric\r\n     */\r\n    11007: 'Invalid target.',\r\n    /**\r\n     * Result message rejected.\r\n     *\r\n     * @private\r\n     * @property errorCodes.11008\r\n     * @type Numeric\r\n     */\r\n    11008: 'Result message rejected.',\r\n    /**\r\n    * Container unreachable.\r\n    *\r\n    * @private\r\n    * @property errorCodes.11011\r\n    * @type Numeric\r\n    */\r\n    11011: 'Container unreachable.',\r\n    /**\r\n    * Component not found.\r\n    *\r\n    * @private\r\n    * @property errorCodes.11013\r\n    * @type Numeric\r\n    */\r\n    11013: 'Component not found.',\r\n    /**\r\n      * Error creating Iframe.\r\n      *\r\n      * @private\r\n      * @property errorCodes.11014\r\n      * @type Numeric\r\n      */\r\n    11014: 'Error creating Iframe.',\r\n    /**\r\n    * Service not found.\r\n    *\r\n    * @private\r\n    * @property errorCodes.12001\r\n    * @type Numeric\r\n    */\r\n    12001: 'Service not found.',\r\n    /**\r\n     * Invalid Component.\r\n     *\r\n     * @private\r\n     * @property errorCodes.13001\r\n     * @type Numeric\r\n     */\r\n    13001: 'Invalid Component.',\r\n    /**\r\n     * Component needs to be UI.\r\n     *\r\n     * @private\r\n     * @property errorCodes.13002\r\n     * @type Numeric\r\n     */\r\n    13002: 'Component needs to be UI.',\r\n    /**\r\n    * Error creating Iframe.\r\n    *\r\n    * @private\r\n    * @property errorCodes.13005\r\n    * @type Numeric\r\n    */\r\n    13005: 'Error creating Iframe.',\r\n    /**\r\n    * Error during component/s creation.\r\n    *\r\n    * @private\r\n    * @property errorCodes.13006\r\n    * @type Numeric\r\n    */\r\n    13006: 'Error during component/s creation.',\r\n    /**\r\n    * Time-out expired during IFrame creation. (SWAC.Config.TimeOuts.Create)\r\n    *\r\n    * @private\r\n    * @property errorCodes.13007\r\n    * @type Numeric\r\n    */\r\n    13007: 'Time-out expired during IFrame creation. (SWAC.Config.TimeOuts.Create)',\r\n    /**\r\n    * Container.create: Wrong argument(s).\r\n    *\r\n    * @private\r\n    * @property errorCodes.13008\r\n    * @type Numeric\r\n    */\r\n    13008: 'Container.create: Wrong argument(s).',\r\n    /**\r\n    * Aborted by the user.\r\n    *\r\n    * @private\r\n    * @property errorCodes.13009\r\n    * @type Numeric\r\n    */\r\n    13009: 'Aborted by the user.',\r\n    /**\r\n   * Component has been discarded.\r\n   *\r\n   * @private\r\n   * @property errorCodes.13010\r\n   * @type Numeric\r\n   */\r\n    13010: 'Component has been discarded.',\r\n    /**\r\n   * Time-out expired. (beginClose Time-out)\r\n   *\r\n   * @private\r\n   * @property errorCodes.13011\r\n   * @type Numeric\r\n   */\r\n    13011: 'Time-out expired. (beginClose Time-out)',\r\n    /**\r\n      * method not supported.\r\n      *\r\n      * @private\r\n      * @property errorCodes.13014\r\n      * @type Numeric\r\n      */\r\n    13014: 'Method not supported.',\r\n    /**\r\n      * Specified component/s does/do not exist.\r\n      *\r\n      * @private\r\n      * @property errorCodes.13015\r\n      * @type Numeric\r\n      */\r\n    13015: 'Specified component/s does/do not exist.',\r\n    /**\r\n   * Interface not found.\r\n   *\r\n   * @private\r\n   * @property errorCodes.14001\r\n   * @type Numeric\r\n   */\r\n    14001: 'Interface not found.',\r\n    /**\r\n     * Parameter timeout is not a number.\r\n     *\r\n     * @private\r\n     * @property errorCodes.15001\r\n     * @type Numeric\r\n     */\r\n    15001: 'Parameter timeout is not a number.',\r\n    /**\r\n     * Dual boot detected. Component has been removed.\r\n     *\r\n     * @private\r\n     * @property errorCodes.15004\r\n     * @type Numeric\r\n     */\r\n    15004: 'Dual boot detected. Component has been removed.',\r\n    /**\r\n     * Component integrity is compromised. Component has been removed.\r\n     *\r\n     * @private\r\n     * @property errorCodes.15005\r\n     * @type Numeric\r\n     */\r\n    15005: 'Component integrity is compromised. Component has been removed.',\r\n    /**\r\n     * Event management is not supported.\r\n     *\r\n     * @private\r\n     * @property errorCodes.16001\r\n     * @type Numeric\r\n     */\r\n    16001: 'Event management is not supported.',\r\n    /**\r\n     * Event is not supported.\r\n     *\r\n     * @private\r\n     * @property errorCodes.16002\r\n     * @type Numeric\r\n     */\r\n    16002: 'Event is not supported.',\r\n    /**\r\n        * Value not validated\r\n        *\r\n        * @private\r\n        * @property errorCodes.17000\r\n        * @type Numeric\r\n        */\r\n    17000: 'Value not validated.',\r\n    /**\r\n        * Permission denied.\r\n        *\r\n        * @private\r\n        * @property errorCodes.17001\r\n        * @type Numeric\r\n        */\r\n    17001: 'Permission denied.',\r\n    /**\r\n        * Corresponding node does no longer exist.\r\n        *\r\n        * @private\r\n        * @property errorCodes.17002\r\n        * @type Numeric\r\n        */\r\n    17002: 'Corresponding node does no longer exist.',\r\n    /**\r\n        * Unable to add and set a sub-key for a data node.\r\n        *\r\n        * @private\r\n        * @property errorCodes.17003\r\n        * @type Numeric\r\n        */\r\n    17003: 'Unable to add and set a sub-key for a data node.',\r\n    /**\r\n        * Unable to set value on a structural node.\r\n        *\r\n        * @private\r\n        * @property errorCodes.17004\r\n        * @type Numeric\r\n        */\r\n    17004: 'Unable to set value on a structural node.',\r\n    /**\r\n        * Internal error.\r\n        *\r\n        * @private\r\n        * @property errorCodes.17005\r\n        * @type Numeric\r\n        */\r\n    17005: 'Internal error.',\r\n    /**\r\n        * Corresponding node does not exist.\r\n        *\r\n        * @private\r\n        * @property errorCodes.17006\r\n        * @type Numeric\r\n        */\r\n    17006: 'Corresponding node does not exist.',\r\n    /**\r\n        * Wrong parameter, all array elements should be thenable.\r\n        *\r\n        * @private\r\n        * @property errorCodes.18000\r\n        * @type Numeric\r\n        */\r\n    18000: 'Wrong parameter, all array elements should be thenable.',\r\n    /**\r\n        * Wrong parameter, method parameter must be an array with at least one thenable.\r\n        *\r\n        * @private\r\n        * @property errorCodes.18001\r\n        * @type Numeric\r\n        */\r\n    18001: 'Wrong parameter, method parameter must be an array with at least one thenable.',\r\n    /**\r\n        * Extension could not be loaded. Creation stopped on first failure.\r\n        *\r\n        * @private\r\n        * @property errorCodes.19000\r\n        * @type Numeric\r\n        */\r\n    19000: 'Extension %%data%% could not be loaded. Creation stopped on first failure.',\r\n  }\r\n};\r\n\r\n/**\r\n   * Return reason message\r\n   *\r\n   * @method toString\r\n   * @return {string} Reason message\r\n   */\r\nSWAC.Reason.prototype.toString = function () {\r\n  return this.message;\r\n};\r\n\r\n\r\n///////////////////////////////////////////\r\n// lib/base/communication/authentication.js\r\n\r\n\r\n/**\r\n * SWAC.Authentication permits to write custom authentication method that'll be used when container creates component\r\n *\r\n * @class SWAC.Authentication\r\n * @constructor\r\n * @param {String} peer component's name\r\n */\r\nSWAC.Authentication = function (peer) {\r\n\r\n  //////////////\r\n  // PRIVATE  //\r\n  //////////////\r\n\r\n  var\r\n      _onFailure = new SWAC.Eventing.Publisher('onFailure'),\r\n      _onSuccess = new SWAC.Eventing.Publisher('onSuccess'),\r\n\r\n      _that = this,\r\n\r\n      /**\r\n       * Get generated Guid for session\r\n       *\r\n       * @protected\r\n       * @method session\r\n       * @return {string} session Guid\r\n       */\r\n      _session = SWAC.Guid.generate(),\r\n\r\n      // in container: component's name\r\n      // otherwise null\r\n      _peer = peer,\r\n      _containerDomain = '',\r\n\r\n      _defer = null,\r\n\r\n      _tlsMessageHandler = null,\r\n\r\n      /**\r\n       * Check if it is authenticated\r\n       *\r\n       * @method isAuthenticated\r\n       * @return {boolean} true or false\r\n       */\r\n      _isAuthenticated = function () {\r\n        return (_defer !== null && _defer.promise.status === 'fulfilled') ? true : false;\r\n      },\r\n\r\n      /**\r\n       * Checks if handshake is possible, if it is not possible a SWAC.Exception is throw\r\n       *\r\n       * @private \r\n       * @method _ensureHandshake\r\n       */\r\n      _ensureHandshake = function () {\r\n        if (_defer === null || _tlsMessageHandler === null) {\r\n          throw new SWAC.Exception(1008);\r\n        } else if (_defer && (_defer.promise.status !== 'pending' && _defer.promise.status !== 'fulfilled')) {\r\n          throw new SWAC.Exception(1009);\r\n        }\r\n      },\r\n\r\n       /**\r\n       * Send a message\r\n       *\r\n       * @method sendMessage\r\n       * @param {Object} message message to send\r\n       */\r\n      _sendMessage = function (message) {\r\n        _ensureHandshake();\r\n        SWAC.Communication._internal.call(_peer, 'tlsMessage', [message]);\r\n      },\r\n\r\n\r\n      /**\r\n       * Begins the handshake between container and component\r\n       *\r\n       * @protected\r\n       * @method _beginHandshake\r\n       * @param {Function} tlsHandler callback with two param: message and authentication instance\r\n       * @param {String} tlsMessage message \r\n       * @param {Number} timeout timeout of handshaking\r\n       * @return {object} returns a promise.\r\n       */\r\n      _beginHandshake = function (tlsHandler, tlsMessage, timeout) {\r\n        if (_defer) {\r\n          throw new SWAC.Exception(1007);\r\n        }\r\n        _defer = new SWAC.Defer();\r\n        if (SWAC.Config.TimeOuts.Enabled) {\r\n          window.setTimeout(\r\n              function () {\r\n                if (_defer && _defer.promise.status === 'pending') {\r\n                  _defer.reject(new SWAC.Reason(10001));\r\n                }\r\n              },\r\n              timeout || SWAC.Config.TimeOuts.Authentication.Handshake);\r\n        }\r\n\r\n        _tlsMessageHandler = tlsHandler;\r\n        if (tlsMessage) { // hub initiated authentication\r\n          _sendMessage(tlsMessage);\r\n        }\r\n\r\n        return _defer.promise;\r\n      },\r\n\r\n      /**\r\n       * Authentication is accepted\r\n       * Note: Accept should be called by component/container implementation before TLS end-handshake message is sent\r\n       *\r\n       * @method accept\r\n       */\r\n      _accept = function () {\r\n        _ensureHandshake();\r\n        _defer.fulfill();\r\n        _onSuccess.notify({});\r\n      },\r\n\r\n      /**\r\n       * Authentication is rejected. Event onFailure is fired.\r\n       *\r\n       * @method reject\r\n       * @param {Object} reason reason of authentication failure\r\n       */\r\n      _reject = function (reason) {\r\n        _ensureHandshake();\r\n        _defer.reject(reason);\r\n        _onFailure.notify({});\r\n      },\r\n\r\n       /**\r\n       * Receive a message\r\n       *\r\n       * @protected\r\n       * @method _receiveMessage\r\n       * @param {Object} message message to receive\r\n       */\r\n      _receiveMessage = function (message) {\r\n        try {\r\n          _ensureHandshake();\r\n          _tlsMessageHandler(message, _that);\r\n        } catch (ex) {\r\n        }\r\n      },\r\n      /**\r\n       * Return domain of container or component\r\n       *\r\n       * @method getDomain\r\n       * @return {string} returns domain\r\n       */\r\n      _getDomain = function () {\r\n        var res = '',\r\n        comp,\r\n        regExpr,\r\n        protocol,\r\n        host,\r\n        port;\r\n\r\n        if (_peer === null) {\r\n          //component side\r\n          res = _containerDomain; //document.referrer;\r\n        }\r\n        else {\r\n          //container side\r\n          comp = SWAC.Container.get({ name: _peer });\r\n          if (comp && !comp.promise) {\r\n            res = comp._internal.getCurrentUrl();\r\n          }\r\n        }\r\n        if ((res !== '') && (res !== null) && (res !== undefined)) {\r\n          regExpr = new RegExp(/^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*):?([^:@]*))?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/);\r\n          res = regExpr.exec(res);\r\n          regExpr = null;\r\n          protocol = res[1];\r\n\r\n          if (protocol === 'file') {\r\n            res = res[10];\r\n          }\r\n          else {\r\n            host = res[6];\r\n            port = res[7];\r\n            if ((port === '') || (port === null) || (port === undefined)) {\r\n              res = host;\r\n            } else {\r\n              res = host + ':' + port;\r\n            }\r\n          }\r\n        }\r\n        return res;\r\n      },\r\n      /**\r\n       * set domain of container or component\r\n       *\r\n       * @protected\r\n       * @method setDomain\r\n       * @param {string} containerDomain domain\r\n       */\r\n      _setDomain = function (containerDomain) {\r\n        _containerDomain = containerDomain;\r\n      };\r\n\r\n  //////////////\r\n  // PUBLIC   //\r\n  //////////////\r\n\r\n  // API\r\n  this.accept = _accept;\r\n  this.reject = _reject;\r\n  this.sendMessage = _sendMessage;\r\n  this.isAuthenticated = _isAuthenticated;\r\n  this.getDomain = _getDomain;\r\n\r\n  // EVENTS\r\n  //See comments on _accept and _reject above\r\n\r\n  /**\r\n   * Fired when authentication is failed\r\n   *\r\n   * @event onFailure\r\n   */\r\n  this.onFailure = _onFailure.event;\r\n\r\n  /**\r\n   * Fired when authentication is succeeded\r\n   *\r\n   * @event onSuccess\r\n   */\r\n  this.onSuccess = _onSuccess.event;\r\n\r\n  // INTERNAL, DO NOT USE\r\n  this._internal = {\r\n    receiveMessage: _receiveMessage,\r\n    beginHandshake: _beginHandshake,\r\n    setDomain: _setDomain,\r\n    session: _session\r\n  };\r\n};\r\n\r\n\r\n///////////////////////////////////////////\r\n// lib/base/communication/communication.js\r\n\r\n\r\n/**\r\n * Communication object for SWAC components\r\n *\r\n * @class SWAC.Communication\r\n * @constructor\r\n */\r\nSWAC.Communication = (function () {\r\n\r\n  //////////////\r\n  // PRIVATE  //\r\n  //////////////\r\n\r\n  var\r\n      // List of all callbacks (as promises), to be identified by generated GUID.\r\n      _callbacks = {},\r\n\r\n      _exposedHub = null,\r\n\r\n       /**\r\n       * Checks if the source (a window object) is a component otherwise it is the container.\r\n       *\r\n       * @private\r\n       * @method _isSourceComponent\r\n       * @param {Object} source a window object\r\n       * @return {boolean} true if it is a window otherwise false\r\n       */\r\n      _isSourceComponent = function (source) {\r\n        // If the source was the parent object, it must have been a container.\r\n        if (source === window.parent) {\r\n          return false;\r\n        }\r\n        return true;\r\n      },\r\n\r\n       /**\r\n       * Return if object is a window\r\n       *\r\n       * @private\r\n       * @method _isWindow\r\n       * @param {object} obj object to analyze if it is a window\r\n       * @return {boolean} true if it is a window otherwise false\r\n       */\r\n      _isWindow = function (obj) {\r\n        if (typeof (window.constructor) === 'undefined') {\r\n          return obj instanceof window.constructor;\r\n        } else {\r\n          return obj.window === obj;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Creates a boot message\r\n       *\r\n       * @private\r\n       * @method _createMessage\r\n       * @param {string} msgType type of the message\r\n       * @param {object} content content of the message\r\n       * @return {string} a string in JSON format containig messagetype and content. \r\n       */\r\n      _createMessage = function (msgType, content) {\r\n        return JSON.stringify({ t: msgType, c: content });\r\n      },\r\n\r\n       /**\r\n      * SWAC Communication postMessage\r\n      *\r\n      * @private\r\n      * @method _postMessage\r\n      * @param {object} wnd Required. Win target\r\n      * @param {string} message Required. String that specifies the message. \r\n      * @param {string} targetOrigin Required. String that specifies the URI (scheme, hostname and port) of the target document's location \r\n      */\r\n        _postMessage = function (wnd, message, targetOrigin) {\r\n          if (!wnd.closed) {\r\n            if (wnd === window.parent && window.parent === self && typeof window['swacPostMessage'] === 'function') {\r\n              swacPostMessage(message, targetOrigin);\r\n            }\r\n            else {\r\n              wnd.postMessage(message, targetOrigin);\r\n            }\r\n          }\r\n        },\r\n\r\n       /**\r\n       * Handles the handshake and bootstrapping messages.\r\n       *\r\n       * @private\r\n       * @method _handleBootMessage\r\n       * @param {object} source source window of the message\r\n       * @param {object} content content of the message\r\n       * @param {String} origin origin of the message\r\n       */\r\n      _handleBootMessage = function (source, content, origin) {\r\n        var component,\r\n          libconfig,\r\n          liburl,\r\n          auth,\r\n          cmpnt,\r\n          iframe,\r\n          configExtensions,\r\n          theMsg,\r\n          i,\r\n\t\t      theSource = [], p;\r\n\r\n        var _defineExtension = function (id, factory) {\r\n          this.SWAC.Hub.prototype.Extensions[id] = factory;\r\n        };\r\n\r\n        // function to avoid name change during minification process\r\n        function createFunctionString(name, fn) {\r\n          return 'var ' + name + ' = ' + fn.toString();\r\n        }\r\n\r\n        switch (content.message) {\r\n          case 'ping':\r\n            if (typeof SWAC.Container === 'undefined') {\r\n              break;\r\n            }\r\n\r\n            component = SWAC.Container._internal.identify(source);\r\n            if (!component) {   // component has been removed\r\n              break;\r\n            }\r\n            libconfig = SWAC.Config.Container.URLs.BaseLibrary;\r\n            liburl = typeof libconfig === 'function' ? libconfig(content.version) : libconfig;\r\n            liburl = liburl.replace(SWAC._internal.Utils.trimRegex, '');\r\n            auth = SWAC.Config.Container.Authentication.TlsHandler ? SWAC.Config.Container.Authentication.Request ? 'req' : 'can' : 'no';\r\n            component.lastUrl = origin;\r\n\r\n            if (content.attributes) {\r\n              component.attributes = content.attributes;\r\n            }\r\n\r\n            if ((content.authentication === 'req' && auth === 'no') || (typeof liburl !== 'string')) {\r\n              theMsg = {\r\n                message: 'peng',\r\n                reason: (auth === 'no') ? 'Authentication not supported' : 'No appropriate SWAC library'\r\n              };\r\n              _postMessage(source, _createMessage('boot', theMsg), '*');\r\n              SWAC.Container._internal.discard(source);\r\n            } else {\r\n              component.authentication = content.authentication === 'req';\r\n              theMsg = {\r\n                message: 'pong',\r\n                url: liburl,\r\n                name: component.name,\r\n                type: component.type,\r\n                authentication: (content.authentication === 'req') ? 'can' : auth,\r\n                containerVersion: SWAC.version,\r\n                namespace: 'SWAC',\r\n                _internal: {}\r\n              };\r\n\r\n              if (content.attributes && content.attributes.control) {\r\n                configExtensions = (SWAC.Config.Control.Extensions &&\r\n                                      (Object.keys(SWAC.Config.Control.Extensions).length > 0 &&\r\n                                      SWAC.Config.Control.Extensions.constructor === Object)) ?\r\n                                      SWAC.Config.Control.Extensions :\r\n                                      SWAC.Config.Extensions;\r\n              }\r\n              else {\r\n                configExtensions = SWAC.Config.Extensions;\r\n              }\r\n\r\n              if (content.extensions && configExtensions) {\r\n                for (i = 0; i < content.extensions.length; i++) {\r\n                  theMsg.extensions = theMsg.extensions || [];\r\n                  if (configExtensions[content.extensions[i]]) {\r\n                    theMsg.extensions.push(configExtensions[content.extensions[i]]);\r\n                  }\r\n                  else {\r\n                    theMsg.extensions.push('$$unknownExtension$$');\r\n                  }\r\n                }\r\n              }\r\n\r\n              theMsg.extensions = theMsg.extensions || [];\r\n              if (content.attributes && content.attributes.control) {\r\n                libconfig = (((typeof SWAC.Config.Control.URLs.BaseLibrary === 'string') && (SWAC.Config.Control.URLs.BaseLibrary !== '')) || (typeof SWAC.Config.Control.URLs.BaseLibrary === 'function')) ?\r\n                          SWAC.Config.Control.URLs.BaseLibrary :\r\n                          ((((typeof SWAC.Config.Container.URLs.ControlLibrary === 'string') && (SWAC.Config.Container.URLs.ControlLibrary !== '')) || (typeof SWAC.Config.Container.URLs.ControlLibrary === 'function')) ?\r\n                          SWAC.Config.Container.URLs.ControlLibrary :\r\n                          '');\r\n                liburl = typeof libconfig === 'function' ? libconfig(content.version) : libconfig;\r\n                liburl = liburl.replace(SWAC._internal.Utils.trimRegex, '');\r\n                theMsg.extensions.unshift(liburl);\r\n              }\r\n\r\n              if (theMsg.extensions.length > 0) {\r\n                theMsg.extensions.unshift('data:text/javascript;base64,' + window.btoa(createFunctionString('defineExtension', _defineExtension)));\r\n              }\r\n\r\n              _postMessage(source, _createMessage('boot', theMsg), '*');\r\n            }\r\n            break;\r\n          case 'ok':\r\n            if (typeof SWAC.Container === 'undefined') {\r\n              break;\r\n            }\r\n\r\n            component = SWAC.Container._internal.identify(source); //creation info are available only before accept\r\n            if (SWAC.Container._internal.accept(source)) {\r\n              // Call is synchronous, public component will be created afterwards\r\n              theSource = SWAC._internal.Utils.getFullName() || ['<root>'];\r\n              theSource.push(component.name);\r\n\r\n              theMsg = {\r\n                message: 'ok2',\r\n                details: {\r\n                  path: theSource\r\n                }\r\n              };\r\n\r\n              if (component.settings && typeof component.settings['designMode'] === 'boolean') {\r\n                theMsg.details['designMode'] = component.settings['designMode'];\r\n              }\r\n\r\n              if (typeof SWAC.Container.getLanguage === 'function') {\r\n                theMsg.details['language'] = SWAC.Container.getLanguage();\r\n              }\r\n\r\n              _postMessage(source, _createMessage('boot', theMsg), '*');\r\n            }\r\n            else {\r\n              cmpnt = SWAC.Container._internal.identify(source);\r\n              if (typeof cmpnt !== 'undefined') {\r\n                iframe = (cmpnt instanceof SWAC.Component) ? cmpnt._internal.iframe : cmpnt.iframe;\r\n                SWAC.Container._internal.remove(typeof cmpnt.name === 'function' ? cmpnt.name() : cmpnt.name, iframe, new SWAC.Reason(15004));\r\n                iframe = null;\r\n              }\r\n            }\r\n            break;\r\n          case 'failed':\r\n            if (typeof SWAC.Container === 'undefined') {\r\n              break;\r\n            }\r\n\r\n            SWAC.Container._internal.discard(source);\r\n            break;\r\n          case 'pong':\r\n            break;\r\n          case 'ok2':\r\n            var _bootObj = SWAC._internal.Utils.getBootObj();\r\n            if (_bootObj && typeof _bootObj._internal !== 'undefined') {\r\n              if (!content.details) {\r\n                _bootObj._internal.containerInfo['details'] = {\r\n                  path: ['<root>']\r\n                };\r\n              }\r\n              // merge ok2 message info into containerInfo object\r\n              for (p in content) {\r\n                if (p !== 'message' && content.hasOwnProperty(p)) {\r\n                  if (!_bootObj._internal.containerInfo.hasOwnProperty(p)) {\r\n                    _bootObj._internal.containerInfo[p] = content[p];\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            break;\r\n          default:\r\n        }\r\n      },\r\n\r\n       /**\r\n       * Sends a postmessage to the target window for notifying the result of a call\r\n       *\r\n       * @private\r\n       * @method _acknowledgeCall\r\n       * @param {object} targetWnd Window to send the post message of acknowledge\r\n       * @param {string} guid guid of the message\r\n       * @param {Boolean} hasError boolean that indicates if the call was success or not\r\n       * @param {object} value value of the message\r\n       */\r\n      _acknowledgeCall = function (targetWnd, guid, hasError, value, messageContent) {\r\n        var msg = '',\r\n            decoreMsg = function (msg, orig) {\r\n              if (orig && orig.d && orig.o) {\r\n                msg['o'] = orig.d;  //swap d & p\r\n                msg['d'] = orig.o;\r\n              }\r\n              return msg;\r\n            };\r\n\r\n        if (hasError) {\r\n          if (targetWnd) {\r\n            try {\r\n              if ((value instanceof SWAC.Reason) && (value.reasonCode === 17000)) {   // DPC new value has been rejected\r\n                msg = { t: 'result', g: guid, v: value, s: 1, e: 0 };\r\n              }\r\n              else {\r\n                msg = { t: 'result', g: guid, e: 1 };\r\n              }\r\n              decoreMsg(msg, messageContent);\r\n              _postMessage(targetWnd, _createMessage('msg', msg), '*');\r\n            }\r\n            catch (e) {\r\n            }\r\n          }\r\n          return;\r\n        }\r\n        if ((value !== null) && (typeof value === 'object') && (typeof value['then'] === 'function')) {\r\n          // This is a promise, do not return a result, but prolong call\r\n          if (targetWnd) {\r\n            if (!value.noProlong) {\r\n              msg = { t: 'prolong', g: guid };\r\n              decoreMsg(msg, messageContent);\r\n              _postMessage(targetWnd, _createMessage('msg', msg), '*');\r\n            }\r\n          }\r\n          value.then(\r\n              function (value) {\r\n                var msg = '';\r\n                if (targetWnd) {\r\n                  msg = { t: 'result', g: guid, v: value, s: 0, e: 0 }; // s=0 -> fulfilled\r\n                  decoreMsg(msg, messageContent);\r\n                  _postMessage(targetWnd, _createMessage('msg', msg), '*');\r\n                }\r\n              },\r\n              function (reason) {\r\n                var msg = '';\r\n                if (targetWnd) {\r\n                  msg = { t: 'result', g: guid, v: reason, s: 1, e: 0 }; // s=1 -> rejected\r\n                  decoreMsg(msg, messageContent);\r\n                  _postMessage(targetWnd, _createMessage('msg', msg), '*');\r\n                }\r\n              });\r\n        }\r\n        else // Plain Old JavaScript Object\r\n        {\r\n          if (targetWnd) {\r\n            msg = { t: 'result', g: guid, v: value, e: 0 };\r\n            decoreMsg(msg, messageContent);\r\n            _postMessage(targetWnd, _createMessage('msg', msg), '*');\r\n          }\r\n        }\r\n      },\r\n\r\n       /**\r\n       * Handles internal messages (between container and components), no proxy calls.\r\n       *\r\n       * @private\r\n       * @method _handleInternalMessage\r\n       * @param {String} source source of the message\r\n       * @param {object} content content of the message\r\n       * @param {String} origin orgin of the message\r\n       */\r\n            _handleInternalMessage = function (source, content, origin) {\r\n              var guid = content.g,\r\n                  mybag = null,\r\n                  bag = null,\r\n                  value = null,\r\n                  com = null,\r\n                  createHandler = function (hasError) {\r\n                    return function (valReason) {\r\n                      if (typeof guid === 'string') {\r\n                        _acknowledgeCall(source, guid, hasError, valReason, content);\r\n                      }\r\n                    };\r\n                  };\r\n\r\n              if (_isSourceComponent(source)) {\r\n                if (typeof SWAC.Container === 'undefined') {\r\n                  return;\r\n                }\r\n\r\n                com = SWAC.Container._internal.identify(source);\r\n                if ((com) && (!com.promise)) {\r\n                  com._internal.setCurrentUrl(origin);\r\n                }\r\n              }\r\n              else {\r\n                if (_exposedHub) {\r\n                  _exposedHub._internal.setDomain(origin);\r\n                }\r\n              }\r\n\r\n              switch (content.t) {\r\n                case 'call':\r\n                  if (_isSourceComponent(source)) {\r\n                    if (typeof SWAC.Container === 'undefined') {\r\n                      break;\r\n                    }\r\n\r\n                    com = SWAC.Container._internal.identify(source);\r\n                    if (com && com._internal[content.m]) {\r\n                      //backward compatibility\r\n                      if (typeof content.o === 'undefined') {\r\n                        content['o'] = SWAC._internal.Utils.getFullName() || ['<root>'];\r\n                        content['o'].push(com.name());\r\n                      }\r\n                      value = com._internal[content.m].apply(content, content.a);\r\n                      createHandler(false)(value);\r\n                    } else {\r\n                      createHandler(true)(null);\r\n                    }\r\n                  }\r\n                  else {\r\n                    if (_exposedHub && _exposedHub._internal[content.m]) {\r\n                      value = _exposedHub._internal[content.m].apply(_exposedHub, content.a);\r\n                      createHandler(false)(value);\r\n                    } else {\r\n                      createHandler(true)(null);\r\n                    }\r\n                  }\r\n                  break;\r\n                case 'begin':\r\n                  if (_isSourceComponent(source)) {\r\n                    if (typeof SWAC.Container === 'undefined') {\r\n                      break;\r\n                    }\r\n\r\n                    com = SWAC.Container._internal.identify(source);\r\n                    if (com && com._internal[content.m]) {\r\n                      //backward compatibility\r\n                      if (typeof content.o === 'undefined') {\r\n                        content['o'] = SWAC._internal.Utils.getFullName() || ['<root>'];\r\n                        content['o'].push(com.name());\r\n                      }\r\n                      com._internal[content.m].apply(content, content.a).then(\r\n                        createHandler(false), createHandler(true));\r\n                    } else {\r\n                      createHandler(true)(null);\r\n                    }\r\n                  }\r\n                  else {\r\n                    if (_exposedHub && _exposedHub._internal[content.m]) {\r\n                      _exposedHub._internal[content.m].apply(_exposedHub, content.a).then(\r\n                           createHandler(false), createHandler(true));\r\n                    } else {\r\n                      createHandler(true)(null);\r\n                    }\r\n                  }\r\n                  break;\r\n                case 'prolong':\r\n                  // The method on the other side returned a promise instead of a value; kill timer, because value/reason will be handled async and is not limited by the time-out.\r\n                  mybag = _callbacks[guid];\r\n                  if (mybag) {\r\n                    mybag.prolonged = true; // is not subject to time-out\r\n                    if (SWAC.Config.TimeOuts.Enabled) {\r\n                      window.clearTimeout(mybag.timer);\r\n                    }\r\n                  }\r\n                  break;\r\n                case 'result':\r\n                  // Resolve callback (promise) from array and fire it.\r\n                  bag = _callbacks[guid];\r\n                  if (bag) {\r\n                    bag.handled = true;\r\n                    if (SWAC.Config.TimeOuts.Enabled) {\r\n                      window.clearTimeout(bag.timer);\r\n                    }\r\n                    if (content.e) {\r\n                      bag.promise.reject(new SWAC.Reason(11008));\r\n                    } else if (content.s) {\r\n                      bag.promise.reject(content.v);\r\n                    } else {\r\n                      bag.promise.fulfill(content.v);\r\n                    }\r\n                  }\r\n\r\n                  delete _callbacks[guid];\r\n                  break;\r\n                default:\r\n              }\r\n            },\r\n\r\n       /**\r\n       * Maps incoming messages to corresponding handlers.\r\n       *\r\n       * @private\r\n       * @method _receiveMessage\r\n       * @param {object} event received event to manage\r\n       */\r\n          _receiveMessage = function (event) {\r\n            if ((typeof (event.data) === 'string') && (event.data.length > 0)) {\r\n              var data = {},\r\n                  fullName = ['<root>'],\r\n                  forwardMsg = event.data,\r\n                  dest = null, destWnd = null; //default forward up\r\n\r\n              try {\r\n                data = JSON.parse(event.data);\r\n                if (!data || !data.t || !data.c) {\r\n                  throw new Error('Incompatible message received');\r\n                }\r\n                else if (data.t !== 'boot' && data.t !== 'msg') {\r\n                  throw new Error('Unknown message received: ' + data.t);\r\n                }\r\n                else if (data.c && data.c.d) {\r\n                  fullName = SWAC._internal.Utils.getFullName() || ['<root>'];\r\n                  //forward strategy\r\n                  if (fullName.length !== data.c.d.length) {\r\n                    if (typeof data.c.f === 'undefined') { //add \"f\"\r\n                      data.c['f'] = true;\r\n                      forwardMsg = JSON.stringify(data);\r\n                    }\r\n                    if (fullName.length < data.c.d.length) {\r\n                      dest = data.c.d[fullName.length]; //forward down\t\t\t\t\t\r\n                    }\r\n                    destWnd = _identifyTarget(dest); //old boot support ... no fullName -> assigned root -> probably forward down to a wrong child\r\n                    if (destWnd !== null) {\r\n                      _postMessage(_identifyTarget(dest), forwardMsg, '*');\r\n                      return;\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              catch (e) {\r\n                return;\r\n              }\r\n              switch (data.t) {\r\n                case 'boot': // INITIAL HAND-SHAKE\r\n                  _handleBootMessage(event.source, data.c, event.origin);\r\n                  break;\r\n                case 'msg': // INTERNAL MESSAGES\r\n                  _handleInternalMessage(event.source, data.c, event.origin);\r\n                  break;\r\n              }\r\n            }\r\n          },\r\n\r\n      /**\r\n       * Method for identifying the target\r\n       *\r\n       * @private\r\n       * @method _identifyTarget\r\n       * @param {Object} to Identification target. Can be a window or a component's name\r\n       * @return {object} the window of the target \r\n       */\r\n       /* jshint latedef: false */\r\n      _identifyTarget = function (to) {\r\n        var target;\r\n\r\n        if (to === null || to === '' || to === undefined) {\r\n          return window.parent;\r\n        } else if (_isWindow(to)) {\r\n          return to;\r\n        } else if (SWAC.Container) {\r\n          if (SWAC.Container._internal.checkIframe(to)) {\r\n            target = SWAC.Container.get({ name: to });\r\n            if (target instanceof SWAC.Component) {\r\n              return target._internal.iframe.contentWindow;\r\n            }\r\n          }\r\n          else {\r\n            SWAC.Container._internal.fireOnFailure(to, 'integrityCheck', 'Component integrity is compromised', false);\r\n            SWAC.Container._internal.remove(to, null, new SWAC.Reason(15005));\r\n            return null;\r\n          }\r\n        }\r\n        return null;\r\n      },\r\n      /* jshint latedef: true */\r\n\r\n       /**\r\n       * Method for creating postmessage\r\n       *\r\n       * @protected\r\n       * @method call\r\n       * @param {object} to Identification target\r\n       * @param {String} method Method to call\r\n       * @param {object} args Arguments of the call\r\n       * @param {object} path component path\r\n       * @param {object} destination destination of the call\r\n       */\r\n      _callAndForget = function (to, method, args, path, destination) {\r\n        var targetWnd = null,\r\n            newTo = to,\r\n\t\t    fullName = (SWAC._internal.Utils.getFullName() || ['<root>']),\r\n\t\t    parkTo = destination,\r\n            dest = null,\r\n            msg;\r\n\r\n        if (typeof to === 'string') {\r\n          try {\r\n            parkTo = JSON.parse(to);\r\n            if (SWAC._internal.Utils.isArray(parkTo)) {\r\n              if (!dest) {\r\n                dest = parkTo;\r\n              }\r\n              if (dest.length > fullName.length) {\r\n                newTo = dest[fullName.length];\r\n              }\r\n            }\r\n            else {\r\n              newTo = parkTo;\r\n            }\r\n          }\r\n          catch (e) {\r\n            //not a JSON array ... simply the name\r\n            if (!dest) {\r\n              dest = fullName.slice(0);\r\n              dest.push(to);\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          //parent message ... calculate destination\r\n          if (!dest && fullName.length > 1) {\r\n            dest = fullName.slice(0, fullName.length - 1);\r\n          }\r\n        }\r\n\r\n        targetWnd = _identifyTarget(newTo);\r\n\r\n        // Only start postMessage and timer if there is an apropriate target component.\r\n        if (targetWnd) {\r\n          if (dest) {\r\n            msg = _createMessage('msg', { t: 'call', m: method, a: args, o: (path || fullName), d: dest });\r\n          }\r\n          else {\r\n            msg = _createMessage('msg', { t: 'call', m: method, a: args, o: (path || fullName) });\r\n          }\r\n          _postMessage(targetWnd, msg, '*');\r\n        }\r\n      },\r\n\r\n       /**\r\n       *Auxiliary method that manages calls.\r\n       *\r\n       * @protected\r\n       * @method beginCall\r\n       * @param {Object} to Identification target\r\n       * @param {Number} timeout Timeout of the request\r\n       * @param {string} method Method to call\r\n       * @param {object} args Arguments of the call\r\n       * @param {Boolean} isAsync Async call or not\r\n       * @param {Object} source One or more component names\r\n       * @param {Object} destination One or more destinations\r\n       * @return {object} an object defer.promise\r\n       */\r\n      _beginCall = function (to, timeout, method, args, isAsync, source, destination) {\r\n        var guid = SWAC.Guid.generate(),\r\n            defer = new SWAC.Defer(),\r\n            targetWnd = _identifyTarget(to),\r\n            t,\r\n            res = 0,\r\n            bag = {},\r\n            msg;\r\n\r\n        // Ensure (probably not set) async argument gets turned into a real boolean.\r\n        isAsync = isAsync === true;\r\n\r\n        // Only start postMessage and timer if there is an apropriate target component.\r\n        if (targetWnd) {\r\n          // Handles the time-out only (rejecting the promise)\r\n          t = function () {\r\n            if (SWAC.Config.TimeOuts.Enabled) {\r\n              res = setTimeout(function () {\r\n                if (!bag.handled && !bag.prolonged) {\r\n                  switch (method) {\r\n                    case 'beginExpose':\r\n                    case 'show':\r\n                    case 'position':\r\n                    case 'ready':\r\n                    case 'bind':\r\n                    case 'beginRequestService':\r\n                    case 'beginRequestInterface':\r\n                    case 'dpcGet':\r\n                    case 'dpcSet':\r\n                      defer.reject(new SWAC.Reason(11001));\r\n                      break;\r\n                    case 'callService':\r\n                    case 'call':\r\n                      defer.reject(new SWAC.Reason(11002));\r\n                      break;\r\n                    case 'remove':\r\n                      defer.reject(new SWAC.Reason(11004));\r\n                      break;\r\n                    case 'cleanUp':\r\n                      defer.reject(new SWAC.Reason(11005));\r\n                      break;\r\n                    default:\r\n                      defer.reject(new SWAC.Reason(11006));\r\n                      break;\r\n                  }\r\n                }\r\n                delete _callbacks[guid];\r\n              }, timeout);\r\n            }\r\n            return res;\r\n          };\r\n          bag = {\r\n            guid: guid,\r\n            promise: defer,\r\n            handled: false,\r\n            prolonged: false,\r\n            timer: t()\r\n          };\r\n\r\n          // Adds the callback information with the timer within the object.\r\n          _callbacks[guid] = bag;\r\n          if (!source) {\r\n            source = SWAC._internal.Utils.getFullName() || ['<root>'];\r\n          }\r\n          msg = { t: isAsync ? 'begin' : 'call', g: guid, m: method, a: args, o: source };\r\n          if (destination) {\r\n            msg['d'] = destination;\r\n          }\r\n          else if (!to) { //message to parent\r\n            if (source.length > 1) {\r\n              msg['d'] = source.slice(0, source.length - 1);\r\n            }\r\n          }\r\n          else {\r\n            msg['d'] = source.slice(0);\r\n            msg['d'].push(to);\r\n          }\r\n          msg = _createMessage('msg', msg);\r\n          _postMessage(targetWnd, msg, '*');\r\n        }\r\n        else {\r\n          defer.reject(new SWAC.Reason(11007));\r\n        }\r\n\r\n        return defer.promise;\r\n      },\r\n\r\n       // Fire and forget\r\n       /**\r\n       * Method that fires an event\r\n       *\r\n       * @protected\r\n       * @method fire\r\n       * @param {object} target Event receiver\r\n       * @param {Number} evtname name of the event\r\n       * @param {Number} evtobject object contained in the event\r\n       * @param {object} inf interface object)\r\n       */\r\n      _fireEvent = function (target, evtname, evtobject, inf) {\r\n        _callAndForget(target, 'fire', [evtname, evtobject, inf]);\r\n      },\r\n\r\n      // Fire and forget\r\n      /**\r\n       * Method that fires changing of dpc value\r\n       *\r\n       * @protected\r\n       * @method dpcChanged\r\n       * @param {String} to Identification target\r\n       * @param {String} key name of the dpc key\r\n       * @param {String} type dpc type\r\n       * @param {Object} content content of the event\r\n       */\r\n      _dpcChanged = function (to, key, type, content) {\r\n        if ((key.indexOf('public') === 0) || (key.indexOf('private') === 0)) {\r\n          _callAndForget(to, 'dpcChanged', [key, type, content]);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Asyncronous method of get dpc value\r\n       *\r\n       * @protected\r\n       * @method beginDpcGet\r\n       * @param {Object} to Identification target\r\n       * @param {String} key name of the dpc key\r\n       * @return {object} promise object\r\n       */\r\n      _beginDpcGet = function (to, key) {\r\n        return _beginCall(to, SWAC.Config.TimeOuts.Internal, 'dpcGet', [key]);\r\n      },\r\n\r\n      /**\r\n       * Asyncronous method of set dpc value\r\n       *\r\n       * @protected\r\n       * @method beginDpcSet\r\n       * @param {Object} to Identification target\r\n       * @param {String} key name of the dpc key\r\n       * @param {String} type type of the dpc key\r\n       * @param {Object} content value of the dpc key\r\n       * @return {object} promise object\r\n       */\r\n      _beginDpcSet = function (to, key, type, content) {\r\n        return _beginCall(to, SWAC.Config.TimeOuts.Internal, 'dpcSet', [key, type, content], true);\r\n      },\r\n\r\n      /**\r\n       * Components have to associate a hub during exposure\r\n       *\r\n       * @protected\r\n       * @method associateHub\r\n       * @param {object} hub hub to associate\r\n       */\r\n      _associateHub = function (hub) {\r\n        _exposedHub = hub;\r\n      },\r\n\r\n       /**\r\n       * Always listen for messages in case of the container. For components the bootloader explicitely switchs communication to this modules.\r\n       *\r\n       * @protected\r\n       * @method activate\r\n       */\r\n      _activate = function () {\r\n        if (window.addEventListener) {\r\n          window.addEventListener('message', _receiveMessage, false);\r\n          window.addEventListener('unload', function () {\r\n            window.removeEventListener('message', _receiveMessage);\r\n          });\r\n        }\r\n        else {\r\n          window.attachEvent('onmessage', _receiveMessage);\r\n          window.attachEvent('onunload', function () {\r\n            window.detachEvent('onmessage', _receiveMessage);\r\n          });\r\n        }\r\n      };\r\n\r\n  //////////////\r\n  // INIT     //\r\n  //////////////\r\n\r\n  (function () {\r\n    // Always listen for messages in case of the container. For components the bootloader explicitely switchs communication to this modules.\r\n    _activate();\r\n  }());\r\n\r\n  //////////////\r\n  // PUBLIC   //\r\n  //////////////\r\n\r\n  return {\r\n\r\n    // API\r\n\r\n    // No public API, this module must be used by SWAC framework only.\r\n\r\n    // INTERNAL, DO NOT USE\r\n    _internal: {\r\n      beginCall: _beginCall,\r\n      call: _callAndForget,\r\n      fire: _fireEvent,\r\n      dpcChanged: _dpcChanged,\r\n      beginDpcGet: _beginDpcGet,\r\n      beginDpcSet: _beginDpcSet,\r\n      associateHub: _associateHub,\r\n      activate: _activate\r\n    }\r\n  };\r\n}());\r\n\r\n\r\n///////////////////////////////////////////\r\n// lib/base/communication/hub.js\r\n\r\n\r\n/**\r\n * Hub object for SWAC components\r\n *\r\n * @class SWAC.Hub\r\n * @constructor\r\n * @param {object} original public interface of component that exposes methods and events\r\n */\r\nSWAC.Hub = function (original) {\r\n\r\n  //////////////\r\n  // PRIVATE  //\r\n  //////////////\r\n\r\n  if (typeof SWAC.Hub.instance === 'object') {\r\n    // Only one instance of SWAC.Hub is allowed\r\n    throw new SWAC.Exception(1000);\r\n  }\r\n\r\n  var\r\n      _onInterfaceActivated = new SWAC.Eventing.Publisher('onInterfaceActivated'),\r\n      _onReady = new SWAC.Eventing.Publisher('onReady'),\r\n      _onRemove = new SWAC.Eventing.Publisher('onRemove'),\r\n      _onVisible = new SWAC.Eventing.Publisher('onVisible'),\r\n      _onPosition = new SWAC.Eventing.Publisher('onPosition'),\r\n      _onCleanUp = new SWAC.Eventing.Publisher('onCleanUp'),\r\n\r\n      _eventsObj = {},\r\n\r\n      // this is the DPC accessor the hub is working on. (Won't result in forwarding towards container, avoiding loop)\r\n      _privateDpc = null,\r\n\r\n      _rootNode = null,\r\n      _publicNode = null,\r\n\r\n      _id = SWAC.Guid.generate(),\r\n\r\n      _innerComponent = original,\r\n\r\n      _activeInterfaces = [],\r\n\r\n      _containerServices = [],\r\n      _servicesOptions = {},\r\n\r\n      // list of event requested by the parent when the component is a mixed one\r\n      _requestedEvents = [],\r\n\r\n      _cachedServices = {},\r\n      _cachedEventPublisher = {},\r\n\r\n      _authentication = new SWAC.Authentication(null),\r\n\r\n       /**\r\n       * Handler of event\r\n       *\r\n       * @private\r\n       * @method _handler\r\n       * @param {String} eventName Name of the event\r\n       * @param {object} inf interface object\r\n       * @return {function} Returns a function that fires the event\r\n       */\r\n      _handler = function (eventName, inf) {\r\n        return function (event) {\r\n          if (inf && (SWAC._internal.Utils.indexOf(_activeInterfaces, inf) < 0)) {\r\n            return;\r\n          }\r\n          SWAC.Communication._internal.fire(null, eventName, event, inf);\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Check if DPC structure is valid\r\n       *\r\n       * @private\r\n       * @method _checkDpcStructure\r\n       * @param {Object} element item in DPC structure\r\n       * @return {Boolean} true if DPC structure is valid otherwise false\r\n       */\r\n      _checkDpcStructure = function (element) {\r\n        var blnRetVal = false;\r\n\r\n        if (typeof element === 'object') {\r\n          if (typeof element.key === 'string') {\r\n            blnRetVal = true;\r\n          }\r\n        }\r\n\r\n        return blnRetVal;\r\n      },\r\n\r\n       /**\r\n       * Bind of DPC: creation of node.\r\n       *\r\n       * @protected\r\n       * @method _bind\r\n       */\r\n      _bind = function () {\r\n        var def = _innerComponent.dpc, // dpc-property is used by convention\r\n            structure,\r\n            element,\r\n            i = 0,\r\n            flags,\r\n           _bootObj = SWAC._internal.Utils.getBootObj();\r\n\r\n\r\n        _privateDpc.root.add('private', SWAC.DPC.Permissions.Read);\r\n        _publicNode = new SWAC.DPC.Node(_rootNode, _id, SWAC.DPC.Permissions.Read | SWAC.DPC.Permissions.Write | SWAC.DPC._internal.Flags.Stub, 'public', true);\r\n\r\n        this.DPC = _rootNode.open('public').access(_id);\r\n        this.status = _rootNode.open('private').access();\r\n\r\n        if (def) {\r\n          structure = def.structure;\r\n\r\n          if (structure && SWAC._internal.Utils.isArray(structure)) { // Initial structure is optional\r\n            for (i = 0; i < structure.length; i++) {\r\n              element = structure[i];\r\n              if (_checkDpcStructure(element)) {\r\n                flags = SWAC.DPC.Permissions.Read | SWAC.DPC.Permissions.Write;\r\n                if (typeof element.flags === 'string') {\r\n                  if (element.flags.toLowerCase() === 'none') {\r\n                    flags = SWAC.DPC.Permissions.None;\r\n                  }\r\n                  else if ((element.flags.toLowerCase().indexOf('rw') === -1) && (element.flags.toLowerCase().indexOf('wr') === -1)) {\r\n                    if (element.flags.toLowerCase().indexOf('r') !== -1) {\r\n                      flags = SWAC.DPC.Permissions.Read;\r\n                    }\r\n                    if (element.flags.toLowerCase().indexOf('w') !== -1) {\r\n                      flags = SWAC.DPC.Permissions.Write;\r\n                    }\r\n                  }\r\n                }\r\n\r\n                try {\r\n                  if (element.value !== undefined) {\r\n                    // Create a data node\r\n                    _privateDpc.root.open('public').set(element.key, element.value, element.type, flags);\r\n                  }\r\n                  else {\r\n                    // Create a node\r\n                    _privateDpc.root.open('public').add(element.key, flags);\r\n                  }\r\n                }\r\n                catch (e) {\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // internal DCP for dirtyStatus\r\n        _privateDpc.root.open('private').set('isDirty', false, 'boolean', SWAC.DPC.Permissions.Read | SWAC.DPC.Permissions.Write);\r\n\r\n        // designMode support\r\n        if (_bootObj && _bootObj._internal && _bootObj._internal.containerInfo && _bootObj._internal.containerInfo.details &&\r\n          typeof _bootObj._internal.containerInfo.details.designMode === 'boolean') {\r\n          _privateDpc.root.open('private').set('isDesignMode', _bootObj._internal.containerInfo.details.designMode, 'boolean', SWAC.DPC.Permissions.Read);\r\n        }\r\n        else {\r\n          _privateDpc.root.open('private').set('isDesignMode', false, 'boolean', SWAC.DPC.Permissions.Read);\r\n        }\r\n\r\n        // language support\r\n        if (_bootObj && _bootObj._internal && _bootObj._internal.containerInfo && _bootObj._internal.containerInfo.details &&\r\n                 typeof _bootObj._internal.containerInfo.details.language === 'string') {\r\n          _privateDpc.root.open('private').set('language', _bootObj._internal.containerInfo.details.language, 'string', SWAC.DPC.Permissions.Read);\r\n        }\r\n        else {\r\n          _privateDpc.root.open('private').set('language', navigator.language, 'string', SWAC.DPC.Permissions.Read);\r\n        }\r\n        // Extensions DPCs for loading report\r\n        _privateDpc.root.open('private').add('extensions');\r\n        if (Object.keys(SWAC.Hub.instance.Extensions).length > 0) {\r\n          for (var ext in SWAC.Hub.instance.Extensions) {\r\n            if (SWAC.Hub.instance.Extensions.hasOwnProperty(ext)) {\r\n              _privateDpc.root.open('private.extensions').set(ext, false, 'boolean', SWAC.DPC.Permissions.Read);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Deregister event listener\r\n        _privateDpc.root.onAdded.unsubscribe(_privateDpc.addHandler);\r\n        _privateDpc.root.onRemoved.unsubscribe(_privateDpc.remHandler);\r\n        _privateDpc.root.onValueChanged.unsubscribe(_privateDpc.setHandler);\r\n\r\n        if (def) {\r\n          if (typeof def.bind === 'function') {\r\n            def.bind(_privateDpc.root.open('public'));\r\n          }\r\n        }\r\n      },\r\n\r\n       /**\r\n       * Creates a forwarder message\r\n       *\r\n       * @private\r\n       * @method _createForwarder\r\n       * @return {function} Returns a forwarder function\r\n       */\r\n      _createForwarder = function () {\r\n        return function (key, type, content) {\r\n\r\n          if (type === 'add' || type === 'set' || type === 'remove') {\r\n            if (content.flags !== SWAC.DPC._internal.Flags.Stub) {  //Stub + 0 (permission.None) -> node is not created proxy side\r\n              SWAC.Communication._internal.dpcChanged(null, key, type, content); // null addresses the container\r\n            }\r\n          }\r\n        };\r\n      },\r\n\r\n       /**\r\n       * Creates  Dpc handler\r\n       *\r\n       * @private\r\n       * @method _createDpcHandler\r\n       * @param {String} type type of the handler of DPC (onAdd, onRemove,onValueChanged)\r\n       * @return {function} Returns Dpc Handler function\r\n       */\r\n      _createDpcHandler = function (type) {\r\n        return function (event) {\r\n          // Convert pre-bind events to Forwarder messages\r\n          var handler = _createForwarder();\r\n          if (type === 'onAdded') {\r\n            // add\r\n            if (event.data.node === 'node') {\r\n              handler(event.data.key, 'add', { isEvent: true, flags: event.data.flags });\r\n            } else {\r\n              handler(event.data.key, 'set', { isEvent: true, flags: event.data.flags });\r\n            }\r\n            // set\r\n          } else if (type === 'onRemoved') {\r\n            // remove\r\n            handler(event.data.key, 'remove', { isEvent: true });\r\n          } else if (type === 'onValueChanged') {\r\n          }\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Fires the event of onVisible\r\n       *\r\n       * @protected\r\n       * @method _show\r\n       * @param {Boolean} visible Component visible or not\r\n       */\r\n      _show = function (visible) {\r\n        _onVisible.notify({ visible: visible });\r\n      },\r\n\r\n      /**\r\n       * Remove the specified event from internal list of requested events\r\n       *\r\n       * @private\r\n       * @method _removeFromRequestedEventList\r\n       * @param {String} event event name\r\n       */\r\n      _removeFromRequestedEventList = function (event) {\r\n        var i;\r\n\r\n        for (i = _requestedEvents.length - 1; i >= 0; i--) {\r\n          if (_requestedEvents[i] === event) {\r\n            _requestedEvents.splice(i, 1);\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Function called when an event is fired inside the component\r\n       *\r\n       * @private\r\n       * @method _eventCallback\r\n       * @param {Object} eventArgs event arguments\r\n       */\r\n      _eventCallback = function (eventArgs) {\r\n        var safeEventArgs = {},\r\n          property;\r\n\r\n        // safe copy of event arguments for postMessage\r\n        for (property in eventArgs) {\r\n          if (typeof eventArgs[property] !== 'object') {\r\n            safeEventArgs[property] = eventArgs[property];\r\n          }\r\n        }\r\n        property = null;\r\n\r\n        SWAC.Communication._internal.call(null, 'manageEvent', [safeEventArgs]);\r\n\r\n        safeEventArgs = null;\r\n      },\r\n\r\n      /**\r\n       * Function called when a new component is ready\r\n       *\r\n       * @private\r\n       * @method _onComponentReady\r\n       * @param {Object} arg event arguments\r\n       */\r\n      _onComponentReady = function (arg) {\r\n        if (_requestedEvents.length > 0) {\r\n          SWAC.Container.get({ name: arg.data.name }).onMouseEvents.subscribe(null, _requestedEvents, true);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Add an event listener to the component, the action is propagated in case of mixed component\r\n       *\r\n       * @protected\r\n       * @method enableComponentEvent\r\n       * @param {Object} eventName one or more event name, can be a string or a string array\r\n       * @param {String} level level of event registration\r\n       */\r\n      _enableComponentEvent = function (eventName, level) {\r\n        var componentList = null,\r\n          componentObj = null,\r\n          evt = null, i, j,\r\n          arrayEventName,\r\n          eventToRegister;\r\n\r\n        // array copy to always work with an array parameter\r\n        if (SWAC._internal.Utils.isArray(eventName)) {\r\n          arrayEventName = eventName;\r\n        }\r\n        else {\r\n          arrayEventName = [eventName];\r\n        }\r\n\r\n        // all requested events are attached to the component\r\n        for (i = 0; i < arrayEventName.length; i++) {\r\n          window.addEventListener(arrayEventName[i], _eventCallback, true);\r\n        }\r\n\r\n        // in case of mixed component check if a propagation is needed\r\n        if (SWAC.Container && (level === '_nested')) {\r\n          componentList = SWAC.Container.get();\r\n          if (componentList.length > 0) {\r\n            // cycle every child component\r\n            for (i = 0; i < componentList.length; i++) {\r\n              eventToRegister = [];\r\n              componentObj = componentList[i];\r\n              // cycle every requested event\r\n              for (j = 0; j < arrayEventName.length; j++) {\r\n                // get the event details record\r\n                evt = componentObj._internal.getRegisteredEvent(arrayEventName[j]);\r\n                if (evt !== null) {\r\n                  // event already present, it now became an inherited event\r\n                  evt.inherited = true;\r\n                }\r\n                else {\r\n                  // event never requested, added to register list\r\n                  eventToRegister.push(arrayEventName[j]);\r\n                }\r\n              }\r\n              evt = null;\r\n              // single subscribe call with register list\r\n              if (eventToRegister.length > 0) {\r\n                componentObj.onMouseEvents.subscribe(null, eventToRegister, true);\r\n              }\r\n            }\r\n            componentObj = null;\r\n          }\r\n\r\n          // create component onReady callback only the first time to avoid multiple callback\r\n          if (_requestedEvents.length === 0) {\r\n            SWAC.Container.onReady.subscribe(_onComponentReady);\r\n          }\r\n\r\n          // event list added to _requestedEvents array\r\n          for (i = 0; i < arrayEventName.length; i++) {\r\n            _requestedEvents.push(arrayEventName[i]);\r\n          }\r\n\r\n          componentList = null;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Remove the event listener from the component, the action is propagated in case of mixed component\r\n       *\r\n       * @protected\r\n       * @method disableComponentEvent\r\n       * @param {Object} eventName one or more event name, can be a string or a string array\r\n       * @param {String} level level of event registration\r\n       */\r\n      _disableComponentEvent = function (eventName, level) {\r\n        var componentList = null,\r\n          componentObj = null,\r\n          evt = null, i, j,\r\n          arrayEventName,\r\n          eventToUnregister;\r\n\r\n        // array copy to always work with an array parameter\r\n        if (SWAC._internal.Utils.isArray(eventName)) {\r\n          arrayEventName = eventName;\r\n        }\r\n        else {\r\n          arrayEventName = [eventName];\r\n        }\r\n\r\n        // all specified events are detached from the component\r\n        for (i = 0; i < arrayEventName.length; i++) {\r\n          window.removeEventListener(arrayEventName[i], _eventCallback, true);\r\n        }\r\n\r\n        // in case of mixed component check if a propagation is needed\r\n        if (SWAC.Container && (level === '_nested')) {\r\n          componentList = SWAC.Container.get();\r\n          if (componentList.length > 0) {\r\n            // cycle every child component\r\n            for (i = 0; i < componentList.length; i++) {\r\n              eventToUnregister = [];\r\n              componentObj = componentList[i];\r\n              // cycle every requested event\r\n              for (j = 0; j < arrayEventName.length; j++) {\r\n                // get the event details record\r\n                evt = componentObj._internal.getRegisteredEvent(arrayEventName[j]);\r\n                if (evt !== null) {\r\n                  // event already present, it is no longer an inherited event\r\n                  if (evt.inherited) {\r\n                    evt.inherited = false;\r\n                  }\r\n                  // event with one or more callback, it needs to be registered\r\n                  if (evt.callback.length === 0) {\r\n                    eventToUnregister.push(arrayEventName[j]);\r\n                  }\r\n                }\r\n                evt = null;\r\n              }\r\n              // single unsubscribe call with unregister list\r\n              if (eventToUnregister.length > 0) {\r\n                componentObj.onMouseEvents.unsubscribe(null, eventToUnregister);\r\n              }\r\n              componentObj = null;\r\n            }\r\n          }\r\n\r\n          // events removed from _requestedEvents array\r\n          for (i = 0; i < arrayEventName.length; i++) {\r\n            _removeFromRequestedEventList(arrayEventName[i]);\r\n          }\r\n\r\n          // component onReady callback removed if no more events are requested\r\n          if (_requestedEvents.length === 0) {\r\n            SWAC.Container.onReady.unsubscribe(_onComponentReady);\r\n          }\r\n\r\n          componentList = null;\r\n        }\r\n      },\r\n\r\n      /**\r\n      * set a private DPC \r\n      *\r\n      * @private\r\n      * @method _setPrivateDPC\r\n      * @param {string} name name of the DPC\r\n      * @param {string} value object new value of the DPC\r\n      */\r\n      _setPrivateDPC = function (name, value) {\r\n        _privateDpc.root.open('private').set(name, value);\r\n      },\r\n\r\n      /**\r\n      * Fill Extensions list\r\n      *\r\n      * @private\r\n      * @method _manageExtensions\r\n      * @return {Object} an object defer.promise\r\n      */\r\n      _manageExtensions = function () {\r\n        var _defer = new SWAC.Defer();\r\n\r\n        if (SWAC.Hub.instance.Extensions && Object.keys(SWAC.Hub.instance.Extensions).length > 0) {\r\n\r\n          var next = function (keys, cursor) {\r\n            var result,\r\n                proceed = function (returnValue) {\r\n                  SWAC.Hub.instance.Extensions[keys[cursor]] = returnValue;\r\n                  _privateDpc.root.open('private.extensions').set(keys[cursor], true);\r\n                  next(keys, ++cursor);\r\n                },\r\n                failed = function (reason) {\r\n                  if (typeof SWAC._internal.Utils.getBootObj().Extensions !== 'undefined') {\r\n                    _defer.reject(reason);\r\n                  }\r\n                  else {\r\n                    delete SWAC.Hub.instance.Extensions[keys[cursor]];\r\n                    next(keys, ++cursor);\r\n                  }\r\n                };\r\n\r\n            if (cursor < keys.length) {\r\n              if (typeof SWAC.Hub.instance.Extensions[keys[cursor]] === 'function') {\r\n                result = SWAC.Hub.instance.Extensions[keys[cursor]](SWAC.Hub.instance);\r\n                if (typeof result === 'object') {\r\n                  if (result.then) {\r\n                    result.then(function (value) {\r\n                      proceed(value);\r\n                    }, failed);\r\n                  }\r\n                  else {\r\n                    proceed(result);\r\n                  }\r\n                }\r\n                else {\r\n                  failed(new SWAC.Reason(19000, keys[cursor]));\r\n                }\r\n              }\r\n              else {\r\n                failed(new SWAC.Reason(19000, keys[cursor]));\r\n              }\r\n            }\r\n            else {\r\n              _defer.fulfill();\r\n            }\r\n          };\r\n\r\n          next(Object.keys(SWAC.Hub.instance.Extensions), 0);\r\n        }\r\n        else {\r\n          _defer.fulfill();\r\n        }\r\n\r\n        return _defer.promise;\r\n      },\r\n\r\n      /**\r\n       * Fire the event of onReady\r\n       *\r\n       * @protected\r\n       * @method _ready\r\n       * @param {Array} services list of names of available services\r\n       * @param {object} servicesInfo list of \"all\" service (parent and delegated) with their option\r\n       */\r\n      _ready = function (services, servicesInfo) {\r\n        var _defer = new SWAC.Defer();\r\n\r\n        var i = 0;\r\n        if (typeof servicesInfo === 'object') {\r\n          _containerServices = Object.getOwnPropertyNames(servicesInfo);\r\n          _servicesOptions = servicesInfo;\r\n        }\r\n        else {\r\n          _containerServices = services;\r\n          for (i = 0 ; i < _containerServices.length; i++) {\r\n            _servicesOptions[_containerServices[i]] = { delegable: false };\r\n          }\r\n        }\r\n        _defer.promise.then(function () {\r\n          _onReady.notify({});\r\n        });\r\n\r\n        _manageExtensions().then(function () {\r\n          _defer.fulfill();\r\n        },\r\n        function (reason) {\r\n          _defer.reject(reason);\r\n        });\r\n\r\n        return _defer.promise;\r\n      },\r\n\r\n      /**\r\n       * Fires the event of onPosition\r\n       *\r\n       * @protected\r\n       * @method _position\r\n       * @param {String} left left position.\r\n       * @param {String} top top position.\r\n       * @param {String} width width position.\r\n       * @param {String} height height position.\r\n       */\r\n      _position = function (left, top, width, height) {\r\n        _onPosition.notify({ left: left, top: top, width: width, height: height });\r\n      },\r\n\r\n      /**\r\n       * Fires the event of onRemove\r\n       *\r\n       * @protected\r\n       * @method _remove\r\n       * @param {SWAC.Reason} reason reason object of removing the component\r\n       */\r\n      _remove = function (reason) {\r\n        var def = new SWAC.Defer();\r\n        var callbacksNum = _onRemove.notify({ reason: reason, defer: def });\r\n        if (!callbacksNum) {\r\n          def.fulfill();\r\n        }\r\n\r\n        def.promise.noProlong = true;\r\n        return def.promise;\r\n      },\r\n\r\n      /**\r\n       * Calls the method indicated in the parameter\r\n       *\r\n       * @protected\r\n       * @method _call\r\n       * @param {String} method name of method to call\r\n       * @param {Object} args arguments of the called function\r\n       * @param {String} inf interface name \r\n       */\r\n      _call = function (method, args, inf) {\r\n        var context = (typeof inf === 'string') ? _innerComponent.interfaces[inf] : _innerComponent;\r\n        return context[method].apply(context, args);\r\n      },\r\n\r\n       /**\r\n       * Notification that DPC has been changed.\r\n       *\r\n       * @protected\r\n       * @method _dpcChanged\r\n       * @param {string} key modified key\r\n       * @param {string} type type of the change\r\n       * @param {Object} content content of the dpc\r\n       */\r\n      _dpcChanged = function (key, type, content) {\r\n\r\n        if (type === 'remove') {\r\n          _privateDpc.root.remove(key);\r\n        } else if (type === 'add') {\r\n          _privateDpc.root.add(key, content.flags);\r\n        } else if (type === 'set') {\r\n          _privateDpc.root.set(key, content.value, content.type, content.flags, false);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Gets the requested dpc\r\n       *\r\n       * @protected\r\n       * @method dpcGet\r\n       * @param {string} key dpc key\r\n       * @return {Object} the requested dpc\r\n       */\r\n      _dpcGet = function (key) {\r\n        return _privateDpc.root.get(key);\r\n      },\r\n\r\n      /**\r\n       * Sets the specified dpc with content and value\r\n       *\r\n       * @protected\r\n       * @method dpcSet\r\n       * @param {string} key dpc key\r\n       * @param {string} type dpc type\r\n       * @param {string} content value to set\r\n       * @return {Object} the modified dpc\r\n       */\r\n      _dpcSet = function (key, type, content) {\r\n        return _privateDpc.root.beginSet(key, content.value, content.type, content.flags).then(\r\n          function (value) {\r\n            if (!value.modified) {\r\n              delete value.data;  // communication optimization\r\n            }\r\n            return value;\r\n          },\r\n          function (reason) {\r\n            throw reason;\r\n          });\r\n      },\r\n\r\n      /**\r\n      * Fill contract data for component and interface\r\n      *\r\n      * @private\r\n      * @method _exposer\r\n      */\r\n      _exposer = function (expose, interfaceName) {\r\n        var property,\r\n          eventName,\r\n          eventCounter,\r\n          dummyEvent,\r\n          api = {},\r\n          events = [];\r\n\r\n        for (property in expose) {\r\n          if (expose.hasOwnProperty(property)) {\r\n            // Manage events property (v 1.5.0)\r\n            if (property === 'events' && (Object.prototype.toString.call(expose[property]) === '[object Array]')) {\r\n              for (eventCounter = 0; eventCounter < expose[property].length; eventCounter++) {\r\n                eventName = expose.events[eventCounter];\r\n                if (events.indexOf(eventName) === -1) {\r\n                  dummyEvent = new SWAC.Eventing.Event(eventName);\r\n                  dummyEvent.subscribe(_handler(eventName, interfaceName));\r\n                  _eventsObj[interfaceName ? interfaceName + '.' + eventName : eventName] = dummyEvent;\r\n                  events.push(eventName);\r\n                }\r\n              }\r\n            }\r\n            else {\r\n              // Parse available Methods\r\n              if (typeof expose[property] === 'function') {\r\n                api[property] = SWAC._internal.Utils.estractParameters(expose[property]);\r\n              }\r\n                // Parse available Events\r\n              else if ((typeof expose[property] === 'object') &&\r\n                        (expose[property].subscribe) &&\r\n                        (expose[property].subscribe.length === 1)) {\r\n                if (events.indexOf(property) === -1) {\r\n                  // Subscribe to event and let handler call aproporate call towards container\r\n                  expose[property].subscribe(_handler(property, interfaceName));\r\n                  events.push(property);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        return {\r\n          api: api,\r\n          events: events\r\n        };\r\n      },\r\n\r\n      /**\r\n       * Asynchronously exposition of the component\r\n       *\r\n       * @method beginExpose\r\n       * @return {Object} an object defer.promise\r\n       */\r\n      _beginExpose = function () {\r\n        var _defer = new SWAC.Defer(),\r\n          errorMessage = '',\r\n          remHandler = {},\r\n          addHandler = {},\r\n          setHandler = {},\r\n          flags = SWAC.DPC._internal.Flags.Stub | SWAC.DPC.Permissions.Read | SWAC.DPC.Permissions.Write,\r\n          hasPublicDpc,\r\n          interfaces,\r\n          expObj = null;\r\n\r\n        if (typeof (_innerComponent) !== 'object') {\r\n          errorMessage = 'Component must be a javascript object';\r\n          _defer.reject(errorMessage);\r\n          SWAC.Hub.instance.close(errorMessage);\r\n          return _defer.promise;\r\n        }\r\n\r\n        hasPublicDpc = (_innerComponent.dpc) ? true : false;\r\n        interfaces = _innerComponent.interfaces ? SWAC._internal.Utils.getOwnPropertyNames(_innerComponent.interfaces) : [];\r\n\r\n        expObj = _exposer(_innerComponent);\r\n\r\n        /// DPC always created (isDirty dataNode always present)\r\n        {\r\n          // Create local DPC on hub.\r\n          _rootNode = new SWAC.DPC.Node(_createForwarder(), _id, flags, null, true);\r\n          remHandler = _createDpcHandler('onRemoved');\r\n          addHandler = _createDpcHandler('onAdded');\r\n          setHandler = _createDpcHandler('onValueChanged');\r\n\r\n          _privateDpc = {};\r\n          _privateDpc.root = _rootNode.access(_id);\r\n          _privateDpc.remHandler = remHandler;\r\n          _privateDpc.root.onRemoved.subscribe(remHandler);\r\n          _privateDpc.addHandler = addHandler;\r\n          _privateDpc.root.onAdded.subscribe(addHandler);\r\n          _privateDpc.setHandler = setHandler;\r\n          _privateDpc.root.onValueChanged.subscribe(setHandler);\r\n        }\r\n\r\n        // Expose data (register hub for communication and tell container about interface)\r\n        SWAC.Communication._internal.beginCall(null, SWAC.Config.TimeOuts.Internal, 'beginExpose', [expObj.api, expObj.events, hasPublicDpc, interfaces, SWAC.version], true).then(\r\n                function (value) {\r\n                  _defer.fulfill(value);\r\n                },\r\n                function (reason) {\r\n                  _defer.reject(reason);\r\n                  SWAC.Hub.instance.close(reason);\r\n                }\r\n            );\r\n\r\n        return _defer.promise;\r\n      },\r\n\r\n     /**\r\n       * Request of the interface of the component\r\n       *\r\n       * @protected\r\n       * @method beginRequestInterface\r\n       * @param {String} name interface name\r\n       * @return {Object} an object containing the name of the interface, its methods and its events\r\n       */\r\n      _beginRequestInterface = function (name) {\r\n        var interfaces = _innerComponent.interfaces ? SWAC._internal.Utils.getOwnPropertyNames(_innerComponent.interfaces) : [],\r\n          res = null,\r\n          expObj = null;\r\n\r\n        if (SWAC._internal.Utils.indexOf(interfaces, name) >= 0) {\r\n          expObj = _exposer(_innerComponent.interfaces[name], name);\r\n          res = { name: name, api: expObj.api, events: expObj.events };\r\n        }\r\n\r\n        return res;\r\n      },\r\n\r\n       /**\r\n       * Returns if the interface indicated is activated or not.\r\n       *\r\n       * @method isInterfaceActivated\r\n       * @param {String} name name of the interface.\r\n       * @return {Boolean} true if interface is activated otherwise false.\r\n       */\r\n      _isInterfaceActivated = function (name) {\r\n        if (SWAC._internal.Utils.indexOf(_activeInterfaces, name) < 0) {\r\n          return false;\r\n        }\r\n        return true;\r\n      },\r\n\r\n      /**\r\n       * Notifies that intarface is ready.\r\n       *\r\n       * @protected\r\n       * @method interfaceReady\r\n       * @param {String} name name of the interface.\r\n       */\r\n      _interfaceReady = function (name) {\r\n        if (SWAC._internal.Utils.indexOf(_activeInterfaces, name) < 0) { // Only fire event if interface was not activated before.\r\n          _activeInterfaces.push(name);\r\n          _onInterfaceActivated.notify(name);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Asynchronously method of closing the hub: fire&forget, otherwise component might be removed before this function ends.\r\n       *\r\n       * @method close\r\n       * @param {Object} reason reason of closure.\r\n       */\r\n      _close = function (reason) {\r\n        SWAC.Communication._internal.call(null, 'close', [reason]); // fire&forget, otherwise component might be removed before this function ends.\r\n      },\r\n\r\n      /**\r\n       * Calls the method of authentication for transport layer security\r\n       *\r\n       * @protected\r\n       * @method _tlsMessage\r\n       * @param {String} message message to send to the authentication \r\n       */\r\n      _tlsMessage = function (message) {\r\n        _authentication._internal.receiveMessage(message);\r\n      },\r\n\r\n      /**\r\n       * Manages the authentication handshake\r\n       *\r\n       * @method beginAuthenticationHandshake\r\n       * @param {object} tlsHandler transport layer security handler\r\n       * @param {string} tlsMessage transport layer security message \r\n       * @param {object} timeout one or more components to create\r\n       * @return {Object} an object defer.promise\r\n       */\r\n      _beginAuthenticationHandshake = function (tlsHandler, tlsMessage, timeout) {\r\n        return _authentication._internal.beginHandshake(tlsHandler, tlsMessage, timeout);\r\n      };\r\n\r\n  SWAC.Communication._internal.associateHub(this);\r\n\r\n  /**\r\n   * Method for setting the dirty state of the component\r\n   *\r\n   * @protected\r\n   * @method cleanUp \r\n   * @return {Object} an object defer.promise\r\n   */\r\n  var _cleanUp = function () {\r\n    var defer = new SWAC.Defer();\r\n    var callbacksNum = _onCleanUp.notify({ defer: defer });\r\n    if (!callbacksNum) {\r\n      defer.fulfill();\r\n    }\r\n    return defer.promise;\r\n  };\r\n\r\n  /**\r\n   * Method for retrieving the list of services\r\n   *\r\n   * @method services.list\r\n   * @param {object} options filter object operating on service options\r\n   * @return {Array} list of services of the container\r\n   */\r\n  var _list = function (options) {\r\n    var propName = '',\r\n      srvList = [],\r\n      filterOK = true,\r\n      i = 0, serviceName;\r\n\r\n    if (typeof options !== 'object') {\r\n      return _containerServices;\r\n    }\r\n    else {\r\n      for (i = 0; i < _containerServices.length ; i++) {\r\n        serviceName = _containerServices[i];\r\n        filterOK = true;\r\n        for (propName in options) {\r\n          if (options.hasOwnProperty(propName)) {\r\n            if (typeof _servicesOptions[serviceName][propName] !== 'undefined') {\r\n              filterOK = filterOK && (_servicesOptions[serviceName][propName] === options[propName]);\r\n            }\r\n            else {\r\n              filterOK = false;\r\n            }\r\n            if (!filterOK) {\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        if (filterOK) {\r\n          srvList.push(serviceName);\r\n        }\r\n      }\r\n      return srvList;\r\n    }\r\n  },\r\n\r\n   /**\r\n   * Method for retrieving the options of services\r\n   *\r\n   * @method services.getInfo\r\n   * @param {String} serviceName name of the service.\r\n   * @return {object} option of services\r\n   */\r\n   _getInfo = function (serviceName) {\r\n     return _servicesOptions.hasOwnProperty(serviceName) ? _servicesOptions[serviceName] : { delegable: false };\r\n   },\r\n\r\n/**\r\n* Method for searching a service.\r\n*\r\n* @method services.has\r\n* @param {String} name name of the service.\r\n* @return {Boolean} true or false if the service exists.\r\n*/\r\n  _has = function (name) {\r\n    return (SWAC._internal.Utils.indexOf(_containerServices, name) >= 0);\r\n  },\r\n\r\n   /**\r\n  * Method for calling a service\r\n  *\r\n  * @private\r\n  * @method _beginCallService\r\n  * @param {String} method name of method to call.\r\n  * @param {String} args arguments of the call.\r\n  * @param {String} service service name of the call.\r\n  * @param {String} serviceProvider service provider.\r\n  * @return {Object} an object defer.promise\r\n  */\r\n  _beginCallService = function (method, args, service, serviceProvider) {\r\n    return SWAC.Communication._internal.beginCall(null, SWAC.Config.TimeOuts.Proxy.Functions, 'callService', [method, args, service], undefined, undefined, serviceProvider).then(\r\n         function (value) { return value; },\r\n         function (reason) { throw reason; }\r\n        );\r\n  },\r\n\r\n   /**\r\n  * Function for exposing methods and event of the service\r\n  *\r\n  * @private\r\n  * @method _exposeService\r\n  * @param {String} name name of the service.\r\n  * @param {Object} api Methods of the service.\r\n  * @param {Object} events events of the service.\r\n  * @param {String} serviceProvider service provider.\r\n  * @return {Object} an object defer.promise\r\n  */\r\n  _exposeService = function (name, api, events, serviceProvider) {\r\n    var inf = {},\r\n      method,\r\n      args,\r\n      fn,\r\n      i = 0,\r\n      event,\r\n      evPub;\r\n\r\n    if (!_cachedServices[name]) {\r\n      //// Methods\r\n      for (method in api) {\r\n        if (api.hasOwnProperty(method)) {\r\n          args = api[method].join(', ');\r\n          fn = 'return function (' + args + ') { var myargs = Array.prototype.slice.call(arguments, 0); var args = [\"' + method + '\", myargs, \"' + name + '\",' + JSON.stringify(serviceProvider) + ' ];  return fn.apply( ctx, args ); };';\r\n          /* jshint -W054 */\r\n          inf[method] = (new Function('ctx', 'fn', fn))(this, _beginCallService);\r\n          /* jshint +W054 */\r\n        }\r\n      }\r\n\r\n      //// EVENTS\r\n      for (i = 0; i < events.length; i++) {\r\n        event = events[i];\r\n        evPub = new SWAC.Eventing.Publisher(event);\r\n        _cachedEventPublisher[name] = _cachedEventPublisher[name] || {};\r\n        _cachedEventPublisher[name][event] = evPub;\r\n        inf[event] = evPub.event;\r\n      }\r\n\r\n      _cachedServices[name] = inf;\r\n    }\r\n  },\r\n\r\n  /**\r\n  * Method for getting the service\r\n  *\r\n  * @method service.beginGet\r\n  * @param {String} name name of the service.\r\n  * @return {Object} an object defer.promise\r\n  */\r\n   _beginGet = function (name) {\r\n     var defer = new SWAC.Defer(),\r\n       inf = {},\r\n       asyncCall = false,\r\n       bootObj = SWAC._internal.Utils.getBootObj(),\r\n       options;\r\n\r\n     if (bootObj === null) {\r\n       defer.reject(new SWAC.Reason(17005));\r\n       return defer.promise;\r\n     }\r\n\r\n     if (typeof bootObj._internal !== 'undefined') {\r\n       if (SWAC._internal.Utils.checkVersion(bootObj._internal.containerInfo.containerVersion, '1.4.0') >= 0) {\r\n         asyncCall = true;\r\n       }\r\n     }\r\n\r\n     if (_cachedServices[name]) {\r\n       defer.fulfill(_cachedServices[name]);\r\n     }\r\n     else if (_has(name)) {\r\n       options = _getInfo(name);\r\n       return SWAC.Communication._internal.beginCall(null, SWAC.Config.TimeOuts.Internal, 'beginRequestService', [name], asyncCall, undefined, options.provider).then(\r\n           function (value) {\r\n             inf = value;\r\n             if (inf) {\r\n               _exposeService(inf.name, inf.api, inf.events, inf.provider);\r\n               return _cachedServices[name];\r\n             }\r\n             else {\r\n               throw (new SWAC.Reason(12001));\r\n             }\r\n           },\r\n           function (reason) {\r\n             throw reason;\r\n           }\r\n         );\r\n     }\r\n     else {\r\n       defer.reject(new SWAC.Reason(12001));\r\n     }\r\n     return defer.promise;\r\n   },\r\n\r\n   /**\r\n  * Method for firing event from the cached services\r\n  *\r\n  * @private\r\n  * @method _fireEvent\r\n  * @param {String} evtname name of the event.\r\n  * @param {Object} evtobject object of the event.\r\n  * @param {string} service service name.\r\n  */\r\n  _fireEvent = function (evtname, evtobject, service) {\r\n    if (_cachedEventPublisher[service] && _cachedEventPublisher[service][evtname]) {\r\n      _cachedEventPublisher[service][evtname].notify(evtobject.data);\r\n    }\r\n  },\r\n\r\n  /**\r\n  * Return the authentication domain\r\n  *\r\n  * @method getDomain\r\n  * @return {string} authentication domain.\r\n  */\r\n  _getDomain = function () {\r\n    return _authentication.getDomain();\r\n  },\r\n\r\n  /**\r\n  * set authentication domain\r\n  * \r\n  * @protected\r\n  * @method setDomain\r\n  * @param {string} authentication domain.\r\n  */\r\n  _setDomain = function (domain) {\r\n    _authentication._internal.setDomain(domain);\r\n  },\r\n\r\n  /**\r\n  * Fire an event by name\r\n  *\r\n  * @method fire\r\n  * @param {String} eventName name of the event.\r\n  * @param {Object} eventData object of the event.\r\n  */\r\n  _fire = function (eventName, eventData) {\r\n    if (_eventsObj.hasOwnProperty(eventName)) {\r\n      _eventsObj[eventName].fire(eventData);\r\n    }\r\n  };\r\n\r\n  //////////////\r\n  // PUBLIC   //\r\n  //////////////\r\n\r\n  // No return-block here to keep object type SWAC.Component (otherwise untyped <object>)\r\n\r\n  // API\r\n  this.beginExpose = _beginExpose;\r\n  this.beginAuthenticationHandshake = _beginAuthenticationHandshake;\r\n  this.close = _close;\r\n  this.getDomain = _getDomain;\r\n  this.fire = _fire;\r\n\r\n  this.isInterfaceActivated = _isInterfaceActivated;\r\n\r\n  /**\r\n  * Services Object\r\n  *\r\n  * @property services\r\n  * @type Object\r\n   */\r\n  this.services = {\r\n    list: _list,\r\n    beginGet: _beginGet,\r\n    getInfo: _getInfo,\r\n    has: _has\r\n  };\r\n\r\n  // EVENTS\r\n\r\n  /**\r\n  * Fired whenever an Interface is activated.\r\n  *\r\n  * @event onInterfaceActivated\r\n  */\r\n  this.onInterfaceActivated = _onInterfaceActivated.event;\r\n\r\n  /**\r\n  * Fired whenever Hub is fully established.\r\n  *\r\n  * @event onReady\r\n  */\r\n  this.onReady = _onReady.event; // After Hub is fully established (e.g. DPCs bound) -> necessary especially for headless components\r\n\r\n  /**\r\n  * Fired whenever the container wants to remove the component (triggered by container).\r\n  *\r\n  * @event onRemove\r\n  */\r\n  this.onRemove = _onRemove.event;\r\n\r\n  /**\r\n  * Fired whenever the component is shown or hidden (triggered by container).\r\n  *\r\n  * @event onVisible\r\n  */\r\n  this.onVisible = _onVisible.event;\r\n\r\n  /**\r\n  * Fired whenever the component gets repositioned.\r\n  *\r\n  * @event onPosition\r\n  */\r\n  this.onPosition = _onPosition.event;\r\n\r\n  /**\r\n * Fired whenever needs to be clean up.\r\n *\r\n * @event onCleanUp\r\n */\r\n  this.onCleanUp = _onCleanUp.event;\r\n\r\n  // INTERNAL, DO NOT USE\r\n  this._internal = {\r\n    bind: _bind,\r\n    remove: _remove,\r\n    ready: _ready,\r\n    show: _show,\r\n    enableComponentEvent: _enableComponentEvent,\r\n    disableComponentEvent: _disableComponentEvent,\r\n    position: _position,\r\n    call: _call,\r\n    fire: _fireEvent,\r\n    dpcChanged: _dpcChanged,\r\n    dpcGet: _dpcGet,\r\n    dpcSet: _dpcSet,\r\n    tlsMessage: _tlsMessage,\r\n    cleanUp: _cleanUp,\r\n    beginRequestInterface: _beginRequestInterface,\r\n    interfaceReady: _interfaceReady,\r\n    setDomain: _setDomain,\r\n    setPrivateDPC: _setPrivateDPC\r\n  };\r\n\r\n  SWAC.Hub.instance = this;\r\n};\r\n\r\nSWAC.Hub.prototype.Extensions = {};\r\n\r\n\r\n///////////////////////////////////////////\r\n// lib/base/dpc/data.js\r\n\r\n\r\nSWAC.DPC = (SWAC.DPC || {});\r\n\r\n/**\r\n * Data class manager for DPC Data Node\r\n *\r\n * @class SWAC.DPC.Data\r\n * @constructor\r\n * @param {object} parent parent of the current node.\r\n * @param {String} uuid User ID for accessing data node.\r\n * @param {number} flags flags of the node.\r\n * @param {String} key key of the node.\r\n * @param {object} value value of the node.\r\n * @param {String} type type of the node.\r\n * \r\n */\r\nSWAC.DPC.Data = function (parent, uuid, flags, key, value, type) {\r\n\r\n  //////////////\r\n  // PRIVATE  //\r\n  //////////////\r\n\r\n  var _that = this,\r\n      _uuid = uuid,\r\n      _forceForward = (arguments.length === 7) ? arguments[6] : false;\r\n\r\n  /**\r\n  * Checks the input key\r\n  *\r\n  * @private\r\n  * @method _checkKey\r\n  * @param {String} key Key to check\r\n  * @param {Boolean} nullable express if the key is nullable or not\r\n  * @param {Boolean} multipleKey if the key is multiple or not\r\n  * @param {Boolean} emptyStringKey if an empty string is allowed as key\r\n  */\r\n  var _checkKey = function (key, nullable, multipleKey, emptyStringKey) {\r\n\r\n    if ((nullable === false) && ((key === null) || (key === undefined))) {\r\n      throw new SWAC.InvalidArgumentException(3002);\r\n    }\r\n    if ((key !== null) && (key !== undefined)) {\r\n      if (typeof (key) !== 'string') {\r\n        throw new SWAC.InvalidArgumentException(3003);\r\n      }\r\n      if ((multipleKey === false) && (key.indexOf('.') !== -1)) {\r\n        throw new SWAC.InvalidArgumentException(3004);\r\n      }\r\n      if ((emptyStringKey === false) && (key.replace(SWAC._internal.Utils.trimRegex, '') === '')) {\r\n        throw new SWAC.InvalidArgumentException(3006);\r\n      }\r\n    }\r\n    if (key && !key.match('^[a-zA-Z0-9_]*$')) {\r\n      throw new SWAC.InvalidArgumentException(3010);\r\n    }\r\n  };\r\n\r\n  _checkKey(key, false, false, false);\r\n\r\n  var _parent;\r\n\r\n  /**\r\n * Normalize input flags\r\n *\r\n * @private\r\n * @method _normalizeFlags\r\n * @param {Number} flags flags to normalize\r\n * @return {Number} a normalized flag or an exception if flag is invalid\r\n */\r\n  var _normalizeFlags = function (flags) {\r\n    var res = SWAC.DPC._internal.Flags.None;\r\n    if ((typeof (flags) === 'string') ||\r\n        (typeof (flags) === 'boolean') ||\r\n        (typeof (flags) === 'function') ||\r\n        ((typeof (flags) === 'object') && (flags !== null))\r\n        ) {\r\n      throw new SWAC.InvalidArgumentException(3007);\r\n    }\r\n    if ((flags === null) || (flags === undefined)) {\r\n      return (SWAC.DPC.Permissions.Read | SWAC.DPC.Permissions.Write);\r\n    }\r\n    if (flags < 0) {\r\n      throw new SWAC.InvalidArgumentException(3007);\r\n    }\r\n\r\n    if ((flags & SWAC.DPC._internal.Flags.Stub) === SWAC.DPC._internal.Flags.Stub) { res |= SWAC.DPC._internal.Flags.Stub; }\r\n    if ((flags & SWAC.DPC._internal.Flags.Proxy) === SWAC.DPC._internal.Flags.Proxy) { res |= SWAC.DPC._internal.Flags.Proxy; }\r\n    if ((flags & SWAC.DPC.Permissions.Read) === SWAC.DPC.Permissions.Read) { res |= SWAC.DPC.Permissions.Read; }\r\n    if ((flags & SWAC.DPC.Permissions.Write) === SWAC.DPC.Permissions.Write) { res |= SWAC.DPC.Permissions.Write; }\r\n    if (((res & SWAC.DPC._internal.Flags.Stub) === SWAC.DPC._internal.Flags.Stub) && ((res & SWAC.DPC._internal.Flags.Proxy) === SWAC.DPC._internal.Flags.Proxy)) {\r\n      throw new SWAC.InvalidArgumentException(3001);\r\n    }\r\n    return res;\r\n  };\r\n\r\n  var _flags = _normalizeFlags(flags);\r\n\r\n  var _dirtyflag = false,\r\n      _key = key,\r\n      _value = value,\r\n      _type = type,\r\n      _isProxy = ((_flags & SWAC.DPC._internal.Flags.Proxy) === SWAC.DPC._internal.Flags.Proxy),\r\n      _isStub = ((_flags & SWAC.DPC._internal.Flags.Stub) === SWAC.DPC._internal.Flags.Stub),\r\n\r\n      /**\r\n       * Returns if the user accessing data node is owner\r\n       *\r\n       * @method mine\r\n       * @param {String} uuid User ID\r\n       * @return {Boolean} True if the user accessing data node is owner, false otherwise\r\n       */\r\n      _mine = function (uuid) {\r\n        if (_uuid === uuid) {\r\n          return true;\r\n        }\r\n        return false;\r\n      },\r\n\r\n       /**\r\n       * Returns if a forward is necessary or not\r\n       *\r\n       * @private\r\n       * @method _mustForward\r\n       * @param  {String} uuid User ID\r\n       * @return {Boolean} Return if it necessary to do a forward or not.\r\n       */\r\n      _mustForward = function (uuid) {\r\n        // Created by current accessor and on proxy side.\r\n        return ((!_mine(uuid) && (_isProxy || _isStub)) || _forceForward);\r\n      },\r\n\r\n      /**\r\n       * Forwards action to parent node\r\n       *\r\n       * @private\r\n       * @method _forward\r\n       * @param {String} key Key of node\r\n       * @param {String} action Action to forward\r\n       * @param {Object} content Data of action to forward\r\n       */\r\n      _forward = function (key, action, content) {\r\n        if (_parent && _parent['_internal'] && _parent['_internal']['forward']) {\r\n          return _parent._internal.forward(key, action, content);\r\n        }\r\n      },\r\n\r\n       /**\r\n       * Gets permissions flags of data value into data node\r\n       *\r\n       * @method flags\r\n       * @return {Number} Return permissions flags value present in data node\r\n       */\r\n      _getflags = function () {\r\n        return _flags;\r\n      },\r\n\r\n      /**\r\n       * Gets data value of data node\r\n       *\r\n       * @method get\r\n       * @param  {String} uuid User ID\r\n       * @return {Object} Return object value present in data node or an exception if Permission is denied.\r\n       */\r\n      _get = function (uuid) {\r\n        if ((_mine(uuid)) || ((_getflags() & SWAC.DPC.Permissions.Read) === SWAC.DPC.Permissions.Read)) {\r\n          if (_isProxy && _mustForward(uuid)) {\r\n            return _forward(_key, 'get', {});\r\n          }\r\n          return _value;\r\n        }\r\n        else {\r\n          throw new SWAC.AccessViolationException(2001);\r\n        }\r\n      },\r\n\r\n       /**\r\n       * Get public root node\r\n       *\r\n       * @private\r\n       * @method _getPublicNode\r\n       * @return {Object} Return public root node\r\n       */\r\n      _getPublicNode = function () {\r\n        var res = null;\r\n        if (_parent && _parent['_internal'] && _parent['_internal']['getPublicNode']) {\r\n          res = _parent._internal.getPublicNode();\r\n        }\r\n        return res;\r\n      },\r\n\r\n      /**\r\n      * Fired when data node is going to be changed\r\n      *\r\n      * @event onBeforeValueChanged\r\n      * @param {Object} validateObj  validatedObj Object containing the following properties: key, currentValue, value and reject\r\n      * <br/>key is the key of data node \r\n      * <br/>currentValue is the current value of data node before updating\r\n      * <br/>value is the new value to set into data node\r\n      * <br/>reject is a boolean that specifies if value can be accepted or not\r\n      */\r\n      _onBeforeValueChanged = new SWAC.Eventing.Publisher('onBeforeValueChanged'),\r\n\r\n      /**\r\n       * Fires onBeforeValueChanged event\r\n       *\r\n       * @method fireOnBeforeValueChanged\r\n       */\r\n      _fireOnBeforeValueChanged = function (validateObj) {\r\n        var currentValue = validateObj.currentValue,\r\n          currentKey = validateObj.key,\r\n          value = validateObj.value;\r\n\r\n        _onBeforeValueChanged.notify(validateObj);\r\n        if ((validateObj.reject === null) || (validateObj.reject === undefined)) {\r\n          validateObj.reject = false;\r\n        }\r\n        if ((validateObj.value === null) || (validateObj.value === undefined)) {\r\n          validateObj.value = value;\r\n        }\r\n        if (!validateObj.reject) {\r\n          if (_parent && _parent['_internal'] && _parent['_internal']['fireOnBeforeValueChanged']) {\r\n            validateObj.currentValue = currentValue;\r\n            validateObj.key = currentKey;\r\n            _parent._internal.fireOnBeforeValueChanged(validateObj);\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n      * Fired when value of data node is changed\r\n      *\r\n      * @event onValueChanged\r\n      * @param {Object} data Object with 'key', 'value' and 'oldValue' properties related to the modified data node\r\n      */\r\n      _onValueChanged = new SWAC.Eventing.Publisher('onValueChanged'),\r\n\r\n      /**\r\n       * Fires onValueChanged event\r\n       *\r\n       * @private\r\n       * @method _fireOnValueChanged\r\n       * @param {Object} value New value of data node\r\n       * @param {Object} oldValue Old value of data node\r\n       */\r\n       _fireOnValueChanged = function (value, oldValue) {\r\n         _onValueChanged.notify({ key: _key, relativeKey: _key, value: value, oldValue: oldValue });\r\n         if (_parent && _parent['_internal'] && _parent['_internal']['fireOnValueChanged']) {\r\n           _parent._internal.fireOnValueChanged(_key, value, oldValue);\r\n         }\r\n       },\r\n\r\n      /**\r\n       * Sets data value of data node\r\n       *\r\n       * @method set\r\n       * @param  {String} uuid User ID\r\n       * @param  {Object} value Object to insert in data node\r\n       */\r\n      _set = function (uuid, value) {\r\n        var forward,\r\n          oldValue,\r\n          publicNode = null,\r\n          validatedObj = {\r\n            key: _key,\r\n            relativeKey: _key,\r\n            value: value,\r\n            currentValue: _value,\r\n            reject: false\r\n          };\r\n\r\n        if (!_isProxy) {\r\n          _fireOnBeforeValueChanged(validatedObj);\r\n        }\r\n\r\n        if (!validatedObj.reject) {\r\n          forward = (arguments.length === 3) ? arguments[2] : true;\r\n\r\n          if (_mine(uuid) || ((_getflags() & SWAC.DPC.Permissions.Write) === SWAC.DPC.Permissions.Write)) {\r\n            if ((_mustForward(uuid) && forward) || !_isProxy) {\r\n              if (!((!_isProxy) && (_flags === SWAC.DPC._internal.Flags.Stub))) {\r\n                _forward(_key, 'set', { value: validatedObj.value });\r\n              }\r\n            }\r\n\r\n            if (_isProxy) {\r\n              publicNode = _getPublicNode();\r\n              if (_mine(uuid) || (publicNode && publicNode.componentVersion && (publicNode.componentVersion === '1.0.0'))) {\r\n                if (publicNode && publicNode.addDpcValues) {\r\n                  oldValue = _value;\r\n                  _value = validatedObj.value;\r\n                  _fireOnValueChanged(_value, oldValue);\r\n                }\r\n                else {\r\n                  _fireOnValueChanged();\r\n                }\r\n              }\r\n            }\r\n            else {\r\n              oldValue = _value;\r\n              _value = validatedObj.value;\r\n              _fireOnValueChanged(_value, oldValue);\r\n            }\r\n          }\r\n          else {\r\n            throw new SWAC.AccessViolationException(2001);\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n        * Try to set a data node value\r\n        *\r\n        * @method beginSet\r\n        * @param {String} uuid User ID\r\n        * @param {Object} value dpc value\r\n        * @return {Object} promise object\r\n       */\r\n      _beginSet = function (uuid, value) {\r\n        var oldValue,\r\n          res = new SWAC.Defer(),\r\n          validatedObj = {\r\n            key: _key,\r\n            relativeKey: _key,\r\n            value: value,\r\n            currentValue: _value,\r\n            reject: false\r\n          },\r\n          locPromise = null;\r\n\r\n        if (_mine(uuid) || ((_getflags() & SWAC.DPC.Permissions.Write) === SWAC.DPC.Permissions.Write)) {\r\n          if (_isProxy) {\r\n            locPromise = _forward(_key, 'beginset', { value: validatedObj.value });\r\n            return locPromise.then(function (data) {\r\n              var obj = data;\r\n              if (!obj.modified) {\r\n                obj['data'] = value;\r\n              }\r\n              return obj;\r\n            }, function (reason) {\r\n              throw reason;\r\n            });\r\n          }\r\n          else {\r\n            _fireOnBeforeValueChanged(validatedObj);\r\n            if (!validatedObj.reject) {\r\n              oldValue = _value;\r\n              _value = validatedObj.value;\r\n              _fireOnValueChanged(_value, oldValue);\r\n              if (!((!_isProxy) && (_flags === SWAC.DPC._internal.Flags.Stub))) {\r\n                _forward(_key, 'set', { value: validatedObj.value });\r\n              }\r\n              res.fulfill({ modified: !SWAC.DPC.Node.prototype._equals(_value, value), data: _value });\r\n            }\r\n            else {\r\n              res.reject(new SWAC.Reason(17000));\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          res.reject(new SWAC.Reason(17001));\r\n        }\r\n        return res.promise;\r\n      },\r\n\r\n      /**\r\n       * Gets type of data value into data node\r\n       *\r\n       * @method type\r\n       * @return {String} Return type of object value present in data node\r\n       */\r\n      _gettype = function () {\r\n        return _type;\r\n      },\r\n\r\n       /**\r\n       * Gets RW permissions flags of data value into data node\r\n       *\r\n       * @private\r\n       * @method _getPermissions\r\n       * @return {Number} Return permissions flags value present in data node\r\n       */\r\n      _getPermissions = function () {\r\n        var flags = _flags;\r\n        if ((flags & SWAC.DPC._internal.Flags.Stub) === SWAC.DPC._internal.Flags.Stub) {\r\n          flags = flags ^ SWAC.DPC._internal.Flags.Stub;\r\n        }\r\n\r\n        if ((flags & SWAC.DPC._internal.Flags.Proxy) === SWAC.DPC._internal.Flags.Proxy) {\r\n          flags = flags ^ SWAC.DPC._internal.Flags.Proxy;\r\n        }\r\n\r\n        return flags;\r\n      },\r\n\r\n      /**\r\n       * Checks if data value into data node is valid\r\n       *\r\n       * @method dirty\r\n       * @param {Object} mark object to indicate that value is dirty\r\n       * @return {Boolean} True if data is valid, false otherwise\r\n       */\r\n      _dirty = function (mark) {\r\n        if (mark !== undefined) {\r\n          _dirtyflag = true;\r\n        }\r\n        return _dirtyflag;\r\n      },\r\n\r\n      /**\r\n      * Fired when data node is removed\r\n      *\r\n      * @event onRemoved\r\n      * @param {Object} data Object with 'key' property related to the removed data node\r\n      */\r\n      _onRemoved = new SWAC.Eventing.Publisher('onRemoved'),\r\n\r\n      /**\r\n       * Fires onRemoved event\r\n       *\r\n       * @method fireOnRemoved\r\n       */\r\n      _fireOnRemoved = function () {\r\n        _onRemoved.notify({ key: _key, relativeKey: _key });\r\n        if (_parent && _parent['_internal'] && _parent['_internal']['fireOnRemoved']) {\r\n          _parent._internal.fireOnRemoved(_key);\r\n        }\r\n      };\r\n\r\n  //////////////\r\n  // PUBLIC   //\r\n  //////////////\r\n\r\n  this.get = _get;\r\n  this.set = _set;\r\n  this.beginSet = _beginSet;\r\n  this.type = _gettype;\r\n  this.flags = _getPermissions;\r\n  this.onRemoved = _onRemoved.event;\r\n  this.onBeforeValueChanged = _onBeforeValueChanged.event;\r\n\r\n  this._internal = {\r\n    fireOnRemoved: _fireOnRemoved,\r\n    fireOnBeforeValueChanged: _fireOnBeforeValueChanged,\r\n    dirty: _dirty,\r\n    mine: _mine\r\n  };\r\n\r\n  /**\r\n  * Return public/private accessor of data node\r\n  *\r\n  * @method access\r\n  * @param {String} uuid ID of user who get accessor. If user ID is owner user ID, private accessor is returned with all permissions, \r\n  * otherwise public accessor is returned with read and write permissions conditioned by the flags\r\n  * @return {Object} Return accessor object of dataNode\r\n  */\r\n  this.access = function (uuid) {\r\n    var _isDirty = function () {\r\n      if (_dirty()) {\r\n        throw new SWAC.Exception(1002);\r\n      }\r\n    },\r\n        accessor = {\r\n          type: function () {\r\n            _isDirty();\r\n            return _gettype();\r\n          },\r\n          flags: function () {\r\n            _isDirty();\r\n            return _getPermissions();\r\n          },\r\n          onRemoved: _onRemoved.event\r\n        };\r\n\r\n    // Requires permission: read\r\n    if (_mine(uuid) || ((_getflags() & SWAC.DPC.Permissions.Read) === SWAC.DPC.Permissions.Read)) {\r\n      var getter = function () {\r\n        _isDirty();\r\n        return _get(uuid);\r\n      };\r\n\r\n      if (_isProxy && _mustForward(uuid)) {\r\n        accessor.beginGet = getter;\r\n      } else {\r\n        accessor.get = getter;\r\n        accessor.onBeforeValueChanged = _onBeforeValueChanged.event;\r\n      }\r\n      accessor.onValueChanged = _onValueChanged.event;\r\n    }\r\n\r\n    // Requires permission: write\r\n    if (_mine(uuid) || ((_getflags() & SWAC.DPC.Permissions.Write) === SWAC.DPC.Permissions.Write)) {\r\n      accessor.set = function (value) {\r\n        var forward = (arguments.length === 2) ? arguments[1] : true;\r\n\r\n        _isDirty();\r\n        _set(uuid, value, forward);\r\n      };\r\n      accessor.beginSet = function (value) {\r\n        var forward = (arguments.length === 2) ? arguments[1] : true;\r\n\r\n        if (_dirty()) {\r\n          var res = new SWAC.Defer();\r\n          res.reject(new SWAC.Reason(17002));\r\n          return res.promise;\r\n        } else {\r\n          return _beginSet(uuid, value, forward);\r\n        }\r\n      };\r\n    }\r\n\r\n    return accessor;\r\n  };\r\n\r\n  if (parent instanceof SWAC.DPC.Node) {\r\n    if ((parent._internal.mine(uuid))) {\r\n      _parent = parent;\r\n      parent.add(uuid, key, flags, _that, value);\r\n    }\r\n    else {\r\n      throw new SWAC.AccessViolationException(2001);\r\n    }\r\n  }\r\n  else {\r\n    _parent = undefined;\r\n  }\r\n};\r\n\r\n\r\n///////////////////////////////////////////\r\n// lib/base/dpc/flags.js\r\n\r\nSWAC.DPC._internal = (SWAC.DPC._internal || {});\r\n\r\n/**\r\n * Flag for dpc type\r\n *\r\n * @protected\r\n * @class SWAC.DPC._internal.Flags\r\n * @constructor\r\n */\r\nSWAC.DPC._internal.Flags = {\r\n    /**\r\n     * No type\r\n     *\r\n     * @property None\r\n     * @type Numeric\r\n     * @default 0\r\n     */\r\n    None: 0,\r\n    /**\r\n     * Is a Proxy\r\n     *\r\n     * @property Proxy\r\n     * @type Numeric\r\n     * @default 128\r\n     */\r\n    Proxy: 128,\r\n    /**\r\n     * Is a Stub\r\n     *\r\n     * @property Stub\r\n     * @type Numeric\r\n     * @default 256\r\n     */\r\n    Stub: 256\r\n};\r\n\r\n\r\n\r\n///////////////////////////////////////////\r\n// lib/base/dpc/node.js\r\n\r\n/**\r\n * Data class manager for DPC Node\r\n *\r\n * @class SWAC.DPC.Node\r\n * @constructor\r\n * @param {object} parent parent of the current node.\r\n * @param {String} uuid User ID for accessing data node.\r\n * @param {Number} flags flags of the node.\r\n * @param {String} key key of the node.\r\n * \r\n */\r\nSWAC.DPC.Node = function (parent, uuid, flags, key) {\r\n\r\n  //////////////\r\n  // PRIVATE  //\r\n  //////////////\r\n\r\n  /**\r\n * Checks the input key\r\n *\r\n * @private\r\n * @method _checkKey\r\n * @param {String} key Key to check\r\n * @param {Boolean} nullable express if the key is nullable or not\r\n * @param {Boolean} multipleKey if the key is multiple or not\r\n * @param {Boolean} emptyStringKey if an empty string is allowed as key\r\n * @param {Boolean} refuseDot refuse key with dot\r\n */\r\n  var _checkKey = function (key, nullable, multipleKey, emptyStringKey, refuseDot) {\r\n\r\n    if ((nullable === false) && ((key === null) || (key === undefined))) {\r\n      throw new SWAC.InvalidArgumentException(3002);\r\n    }\r\n    if ((key !== null) && (key !== undefined)) {\r\n      if (typeof (key) !== 'string') {\r\n        throw new SWAC.InvalidArgumentException(3003);\r\n      }\r\n      if ((multipleKey === false) && (key.indexOf('.') !== -1)) {\r\n        throw new SWAC.InvalidArgumentException(3004);\r\n      }\r\n      if ((key.indexOf('.') === 0) || ((key.length > 0) && (key.lastIndexOf('.') === (key.length - 1)))) {\r\n        throw new SWAC.InvalidArgumentException(3005);\r\n      }\r\n      if ((emptyStringKey === false) && (key.replace(SWAC._internal.Utils.trimRegex, '') === '')) {\r\n        throw new SWAC.InvalidArgumentException(3006);\r\n      }\r\n    }\r\n    //dot checked is done looking at multipleKey parameter\r\n    if (key && !key.match('^[a-zA-Z0-9_.]*$')) {\r\n      throw new SWAC.InvalidArgumentException(3010);\r\n    }\r\n\r\n  };\r\n\r\n  _checkKey(key, true, false, false, true);\r\n\r\n  var _that = this,\r\n      _forceForward = (arguments.length === 5) ? arguments[4] : false,\r\n      _key = key;\r\n\r\n  var _parent;\r\n\r\n  /**\r\n  * Normalize input flags\r\n  *\r\n  * @private\r\n  * @method _normalizeFlags\r\n  * @param {Number} flags flags to normalize\r\n  * @return {Number} a normalized flag or an exception if flag is invalid\r\n  */\r\n  var _normalizeFlags = function (flags) {\r\n    var res = SWAC.DPC._internal.Flags.None;\r\n    if ((typeof (flags) === 'string') ||\r\n        (typeof (flags) === 'boolean') ||\r\n        (typeof (flags) === 'function') ||\r\n        ((typeof (flags) === 'object') && (flags !== null))\r\n        ) {\r\n      throw new SWAC.InvalidArgumentException(3007);\r\n    }\r\n    if ((flags === null) || (flags === undefined)) {\r\n      return (SWAC.DPC.Permissions.Read | SWAC.DPC.Permissions.Write);\r\n    }\r\n    if (flags < 0) {\r\n      throw new SWAC.InvalidArgumentException(3007);\r\n    }\r\n\r\n    if ((flags & SWAC.DPC._internal.Flags.Stub) === SWAC.DPC._internal.Flags.Stub) { res |= SWAC.DPC._internal.Flags.Stub; }\r\n    if ((flags & SWAC.DPC._internal.Flags.Proxy) === SWAC.DPC._internal.Flags.Proxy) { res |= SWAC.DPC._internal.Flags.Proxy; }\r\n    if ((flags & SWAC.DPC.Permissions.Read) === SWAC.DPC.Permissions.Read) { res |= SWAC.DPC.Permissions.Read; }\r\n    if ((flags & SWAC.DPC.Permissions.Write) === SWAC.DPC.Permissions.Write) { res |= SWAC.DPC.Permissions.Write; }\r\n    if (((res & SWAC.DPC._internal.Flags.Stub) === SWAC.DPC._internal.Flags.Stub) && ((res & SWAC.DPC._internal.Flags.Proxy) === SWAC.DPC._internal.Flags.Proxy)) {\r\n      throw new SWAC.InvalidArgumentException(3001);\r\n    }\r\n    return res;\r\n  };\r\n\r\n  var _forwarder = (typeof (parent) === 'function') ? parent : undefined, // forwards proxy's calls to the original\r\n      _uuid = uuid,\r\n      _flags = _normalizeFlags(flags);\r\n\r\n\r\n  var _dirtyflag = false,\r\n      _children = {}, // contained namespace and data nodes.\r\n\r\n      /**\r\n       * Checks if content node is valid\r\n       *\r\n       * @method dirty\r\n       * @return {Boolean} True if content is valid, false otherwise\r\n       */\r\n       _dirty = function (mark) {\r\n         if (mark !== undefined) {\r\n           _dirtyflag = true;\r\n         }\r\n         return _dirtyflag;\r\n       },\r\n\r\n      _isProxy = ((_flags & SWAC.DPC._internal.Flags.Proxy) === SWAC.DPC._internal.Flags.Proxy),\r\n\r\n      _isStub = ((_flags & SWAC.DPC._internal.Flags.Stub) === SWAC.DPC._internal.Flags.Stub),\r\n\r\n      /**\r\n       * Checks if user is the owner\r\n       *\r\n       * @method mine\r\n       * @param {String} uuid User ID\r\n       * @return {Boolean} Returns true is user is owner, false otherwise\r\n       */\r\n      _mine = function (uuid) {\r\n        if (_uuid === uuid) {\r\n          return true;\r\n        }\r\n        return false;\r\n      },\r\n\r\n\r\n      /**\r\n       * Checks if user can add node\r\n       *\r\n       * @private\r\n       * @method _canAdd\r\n       * @param {String} uuid User ID\r\n       * @return {Boolean} Returns true is user can add node, false otherwise\r\n       */\r\n       _canAdd = function (uuid) { return (_mine(uuid)); },\r\n\r\n      /**\r\n       * Checks if user can remove node\r\n       *\r\n       * @private\r\n       * @method _canRemove\r\n       * @param {String} uuid User ID\r\n       * @return {Boolean} Returns true is user can remove node, false otherwise\r\n       */\r\n       _canRemove = _canAdd,\r\n\r\n       /**\r\n       * Checks if action on node must be forwarded\r\n       *\r\n       * @private\r\n       * @method _mustForward\r\n       * @param {String} uuid User ID\r\n       * @return {Boolean} Return true is action on node must be forwarded, false otherwise\r\n       */\r\n      _mustForward = function (uuid) {\r\n        // Created by current accessor and on proxy side.\r\n        return ((!_mine(uuid) && (_isProxy || _isStub)) || _forceForward);\r\n      },\r\n\r\n      /**\r\n       * Gets names list of children node\r\n       *\r\n       * @method list\r\n       * @return {Array} Returns array of names of children nodes alphabetically sorted\r\n       */\r\n      _list = function () {\r\n        return SWAC._internal.Utils.getOwnPropertyNames(_children).sort();\r\n\r\n      },\r\n\r\n       /**\r\n       * Opens a node\r\n       *\r\n       * @method open\r\n       * @param {String} key Node key\r\n       * @return {Object} Returns the node\r\n       */\r\n      _open = function (key) {\r\n        var namespaces,\r\n          current,\r\n          i = 1;\r\n\r\n        // Currently no permissions required for opening, thus no up-front check.\r\n        _checkKey(key, false, true, false);\r\n\r\n        // No key returns the node itself.\r\n        if ((key === '') || (key === null)) {\r\n          return _that;\r\n        }\r\n\r\n        // Dots within the key specify nested namespaces.\r\n        if (key.indexOf('.') > -1) {\r\n          namespaces = key.split('.');\r\n          current = _open(namespaces[0]);\r\n          if (current === undefined) {\r\n            return undefined;\r\n          }\r\n          for (i = 1; i < namespaces.length; i++) {\r\n            if (current !== undefined) {\r\n              current = current.open(namespaces[i]);\r\n            }\r\n            else {\r\n              return undefined;\r\n            }\r\n          }\r\n          return current;\r\n        }\r\n\r\n        // Request for a single node.\r\n        if (_children[key] !== undefined && (_children[key] instanceof SWAC.DPC.Node || _children[key] instanceof SWAC.DPC.Data)) {\r\n          return _children[key];\r\n        }\r\n\r\n        return undefined;\r\n      },\r\n\r\n       /**\r\n       * Returns node's flags\r\n       *\r\n       * @method flags\r\n       * @return {Number} Returns the flags of the node.\r\n       */\r\n      _getflags = function () {\r\n        return _flags;\r\n      },\r\n\r\n      /**\r\n       * Gets node\r\n       *\r\n       * @method get\r\n       * @param  {String} uuid User ID\r\n       * @param  {String} key Key Node\r\n       * @return {Object} Returns object value present in data node\r\n       */\r\n      _get = function (uuid, key) {\r\n        var namespaces,\r\n         current,\r\n         i = 1;\r\n        var p = new SWAC.Defer();\r\n        // No key, no data.\r\n        _checkKey(key, false, true, true);\r\n\r\n        if ((_mine(uuid)) || ((_getflags() & SWAC.DPC.Permissions.Read) === SWAC.DPC.Permissions.Read)) {\r\n          if ((key === '') || (key === null)) {\r\n            if (_isProxy) {\r\n              p.reject(new SWAC.Reason(17006));\r\n              return p.promise;\r\n            } else {\r\n              return undefined;\r\n            }\r\n          }\r\n\r\n          // Dots within the key specify nested namespaces.\r\n          if (key.indexOf('.') > -1) {\r\n            namespaces = key.split('.');\r\n            current = _open(namespaces[0]);\r\n            if (current === undefined) {\r\n              if (_isProxy) {\r\n                p.reject(new SWAC.Reason(17006));\r\n                return p.promise;\r\n              } else {\r\n                return undefined;\r\n              }\r\n            }\r\n            if ((current instanceof SWAC.DPC.Data) && (namespaces.length > 1)) {\r\n              if (_isProxy && _mustForward(uuid)) {\r\n                p.reject(new SWAC.Reason(17006));\r\n                return p.promise;\r\n              } else {\r\n                return undefined;\r\n              }\r\n            }\r\n            for (i = 1; i < namespaces.length - 1; i++) {\r\n              if (current !== undefined) {\r\n                current = current.open(namespaces[i]);\r\n              }\r\n              else {\r\n                if (_isProxy && _mustForward(uuid)) {\r\n                  p.reject(new SWAC.Reason(17006));\r\n                  return p.promise;\r\n                } else {\r\n                  return undefined;\r\n                }\r\n              }\r\n            }\r\n\r\n            if (current === undefined) {\r\n              if (_isProxy) {\r\n                p.reject(new SWAC.Reason(17006));\r\n                return p.promise;\r\n              } else {\r\n                return undefined;\r\n              }\r\n            }\r\n            return current.get(uuid, namespaces[namespaces.length - 1]);\r\n          }\r\n\r\n          // Request for a single node.\r\n          if (_children[key] !== undefined && // has child-node\r\n               _children[key] instanceof SWAC.DPC.Data && // is data-node\r\n               _children[key]['get']) { // can be read\r\n            return _children[key].get(uuid);\r\n          } else if (_children[key] !== undefined) {\r\n            throw new SWAC.Exception(1003);\r\n          }\r\n\r\n          throw new SWAC.Exception(1004);\r\n\r\n        }\r\n        else {\r\n          throw new SWAC.AccessViolationException(2001);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Beautifies flag proxy/stub affiliation\r\n       *\r\n       * @private\r\n       * @method _beautifyFlags\r\n       * @param {Number} flags Flags to beautify\r\n       * @return {Number} Returns beautified flags\r\n       */\r\n      _beautifyFlags = function (flags) {\r\n        flags = (flags === undefined || flags === null) ? _flags : flags; // Inherit from this node if not set explicitely.\r\n\r\n        if ((_flags === SWAC.DPC._internal.Flags.Stub) && (flags !== _flags)) {\r\n          throw new SWAC.InvalidArgumentException(3009);\r\n        }\r\n        // ensure that new flags do not change proxy/stub affiliation.\r\n        if ((_flags & SWAC.DPC._internal.Flags.Stub) === SWAC.DPC._internal.Flags.Stub) {\r\n          if ((flags & SWAC.DPC._internal.Flags.Proxy) === SWAC.DPC._internal.Flags.Proxy) {\r\n            flags = flags ^ SWAC.DPC._internal.Flags.Proxy;\r\n          }\r\n          flags = flags | SWAC.DPC._internal.Flags.Stub;\r\n        } else if ((_flags & SWAC.DPC._internal.Flags.Proxy) === SWAC.DPC._internal.Flags.Proxy) {\r\n          if ((flags & SWAC.DPC._internal.Flags.Stub) === SWAC.DPC._internal.Flags.Stub) {\r\n            flags = flags ^ SWAC.DPC._internal.Flags.Stub;\r\n          }\r\n          flags = flags | SWAC.DPC._internal.Flags.Proxy;\r\n        }\r\n\r\n        return flags;\r\n      },\r\n\r\n       /**\r\n       * Returns nested node key\r\n       *\r\n       * @method nestedKey\r\n       * @param {String} key Node key\r\n       * @return {String} Returns nested key value\r\n       */\r\n      _nestedKey = function (key) {\r\n        var nKey = key;\r\n        if (_key && _parent) {\r\n          nKey = _key + '.' + nKey;\r\n        }\r\n        return nKey;\r\n      },\r\n\r\n       /**\r\n       * Forwards parameters to parent node, if it is a function. \r\n       *\r\n       * @private\r\n       * @method _forward\r\n       * @param {String} key Key of node\r\n       * @param {String} action Action to forward\r\n       * @param {Object} content Data of action to forward\r\n       */\r\n      _forward = function (key, action, content) {\r\n        var nKey = _nestedKey(key);\r\n        if (_forwarder && typeof (_forwarder) === 'function') { // Root node!\r\n          return _forwarder(nKey, action, content);\r\n        } else if (_parent && _parent['_internal'] && _parent['_internal']['forward']) {\r\n          return _parent._internal.forward(nKey, action, content);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Sets node content\r\n       *\r\n       * @method set\r\n       * @param {String} uuid User ID\r\n       * @param {String} key Node key\r\n       * @param {Object} value Node Content\r\n       * @param {String} type Node type\r\n       * @param {Number} flags Node Flags\r\n       * @return {Object} Returns modified node\r\n       */\r\n      _set = function (uuid, key, value, type, flags) {\r\n        var forward = (arguments.length >= 6) ? arguments[5] : true,\r\n          namespaces,\r\n          current = _that,\r\n          i = 0;\r\n\r\n        _checkKey(key, false, true, false);\r\n\r\n        if ((_mine(uuid)) || ((_getflags() & SWAC.DPC.Permissions.Write) === SWAC.DPC.Permissions.Write)) {\r\n          flags = _beautifyFlags(flags);\r\n\r\n          // Dots within the key specify nested namespaces.\r\n          if (key.indexOf('.') > -1) {\r\n            namespaces = key.split('.');\r\n            for (i = 0; i < namespaces.length - 1; i++) {\r\n              if (current instanceof SWAC.DPC.Node) {\r\n                if (SWAC._internal.Utils.indexOf(current.list(), namespaces[i]) >= 0) {\r\n                  current = current.open(namespaces[i]);\r\n                } else {\r\n                  if (!_mine(uuid)) {\r\n                    throw new SWAC.Exception(2001);\r\n                  }\r\n                  else {\r\n                    current = current.add(uuid, namespaces[i], flags);\r\n                  }\r\n                }\r\n              } else {\r\n                throw new SWAC.Exception(1010);\r\n              }\r\n            }\r\n            if (current instanceof SWAC.DPC.Node) {\r\n              return current.set(uuid, namespaces[namespaces.length - 1], value, type, flags, forward);\r\n            } else {\r\n              throw new SWAC.Exception(1010);\r\n            }\r\n          }\r\n\r\n          // Request for a single node\r\n          if (_children[key] === undefined) {\r\n            if (!_mine(uuid)) {\r\n              throw new SWAC.Exception(2001);\r\n            }\r\n            else {\r\n              // Fire to component (if not initiated by base-library itself)\r\n              if (_mustForward(uuid) && forward) {\r\n                if (!((!_isProxy) && (_flags === SWAC.DPC._internal.Flags.Stub))) {\r\n                  _forward(key, 'set', { value: value, type: type, flags: flags });\r\n                }\r\n              }\r\n              _children[key] = new SWAC.DPC.Data(_that, _uuid, flags, key, value, type, _forceForward); // Create with original owner UUID\r\n            }\r\n          }\r\n          else {\r\n            // Firing to component (if not initiated by base-library itself) is handled in data-node's set!\r\n            if (_children[key] instanceof SWAC.DPC.Data) {\r\n              _children[key].set(uuid, value, forward);\r\n            }\r\n            else {\r\n              throw new SWAC.Exception(1006);\r\n            }\r\n          }\r\n\r\n          return _children[key];\r\n        }\r\n        else {\r\n          throw new SWAC.AccessViolationException(2001);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Try to set a structural node value\r\n       *\r\n       * @method beginSet\r\n       * @param {String} uuid User ID\r\n       * @param {String} key dpc key\r\n       * @param {Object} value dpc value\r\n       * @param {String} type dpc node type\r\n       * @param {Number} flags dpc flags\r\n       * @return {Object} promise object\r\n       */\r\n      _beginSet = function (uuid, key, value, type, flags) {\r\n        var res = new SWAC.Defer();\r\n\r\n        try {\r\n          var forward = (arguments.length >= 6) ? arguments[5] : true,\r\n            namespaces,\r\n            current = _that,\r\n            i = 0, p = null,\r\n            _beginSetSuccCallback = null;\r\n\r\n          _checkKey(key, false, true, false);\r\n\r\n          if ((_mine(uuid)) || ((_getflags() & SWAC.DPC.Permissions.Write) === SWAC.DPC.Permissions.Write)) {\r\n            flags = _beautifyFlags(flags);\r\n\r\n            // Dots within the key specify nested namespaces.\r\n            if (key.indexOf('.') > -1) {\r\n              namespaces = key.split('.');\r\n              for (i = 0; i < namespaces.length - 1; i++) {\r\n                if (current instanceof SWAC.DPC.Node) {\r\n                  if (SWAC._internal.Utils.indexOf(current.list(), namespaces[i]) >= 0) {\r\n                    current = current.open(namespaces[i]);\r\n                  } else {\r\n                    if (!_mine(uuid)) {\r\n                      res.reject(new SWAC.Reason(17001));\r\n                      return res.promise;\r\n                    } else {\r\n                      current = current.add(uuid, namespaces[i], flags);\r\n                    }\r\n\r\n                  }\r\n                } else {\r\n                  res.reject(new SWAC.Reason(17003));\r\n                  return res.promise;\r\n                }\r\n              }\r\n              if (current instanceof SWAC.DPC.Node) {\r\n                p = current.beginSet(uuid, namespaces[namespaces.length - 1], value, type, flags, forward);\r\n                return p;\r\n              } else {\r\n                res.reject(new SWAC.Reason(17003));\r\n                return res.promise;\r\n              }\r\n            }\r\n\r\n            _beginSetSuccCallback = function (value, newValue) {\r\n              var retVal = null,\r\n                objRet = null;\r\n\r\n              if (!_isProxy) {\r\n                // Component side\r\n                if (newValue && (typeof newValue === 'object') && (typeof newValue.modified === 'boolean')) {\r\n                  retVal = newValue;\r\n                }\r\n                else {\r\n                  objRet = { modified: false };\r\n                  if (!SWAC.DPC.Node.prototype._equals(newValue, value)) {\r\n                    objRet.modified = true;\r\n                    objRet['data'] = newValue;\r\n                  }\r\n                  retVal = objRet;\r\n                }\r\n              }\r\n              else {\r\n                // Container side\r\n                if (!newValue.modified) {\r\n                  newValue['data'] = value;\r\n                }\r\n                retVal = newValue;\r\n              }\r\n\r\n              return retVal;\r\n            };\r\n\r\n            // Request for a single node\r\n            if (_children[key] === undefined) {\r\n              // Fire to component (if not initiated by base-library itself)\r\n              if (!_mine(uuid)) {\r\n                res.reject(new SWAC.Reason(17001));\r\n                return res.promise;\r\n              } else {\r\n                if (_isProxy) {\r\n                  return _forward(key, 'beginset', { value: value, type: type, flags: flags });\r\n                } else {\r\n                  _children[key] = new SWAC.DPC.Data(_that, _uuid, flags, key, undefined, type, _forceForward); // Create with original owner UUID\r\n                  _children[key].beginSet(uuid, value, forward).then(\r\n                      function (newValue) {\r\n                        res.fulfill(_beginSetSuccCallback(value, newValue));\r\n                      },\r\n                      function (reason) {\r\n                        res.reject(reason);\r\n                      }\r\n                  );\r\n                  return res.promise;\r\n                }\r\n              }\r\n            }\r\n            else {\r\n              // Firing to component (if not initiated by base-library itself) is handled in data-node's set!\r\n              if (_children[key] instanceof SWAC.DPC.Data) {\r\n                _children[key].beginSet(uuid, value, forward).then(\r\n                    function (newValue) {\r\n                      res.fulfill(_beginSetSuccCallback(value, newValue));\r\n                    },\r\n                    function (reason) {\r\n                      res.reject(reason);\r\n                    });\r\n                return res.promise;\r\n              }\r\n              else {\r\n                res.reject(new SWAC.Reason(17004));\r\n              }\r\n            }\r\n          }\r\n          else {\r\n            res.reject(new SWAC.Reason(17001));\r\n          }\r\n        }\r\n        catch (e) {\r\n          res.reject(new SWAC.Reason(17005));\r\n        }\r\n        return res.promise;\r\n      },\r\n\r\n      /**\r\n      * Fired when node is added\r\n      *\r\n      * @event onAdded\r\n      * @param {Object} data Object with 'key', 'node', 'flags' properties related to the added node\r\n      * <br/>'value' additional property is present for data node\r\n      */\r\n      _onAdded = new SWAC.Eventing.Publisher('onAdded'),\r\n\r\n      /**\r\n       * Fires onAdded event\r\n       *\r\n       * @method fireOnAdded\r\n       * @param {String} key Key of added node\r\n       * @param {String} node 'node' for node, 'data' for dataNode\r\n       * @param {Object} value Value of dataNode added\r\n       * @param {Number} flags flags of the added node\r\n       */\r\n       _fireOnAdded = function (key, node, value, flags, relativeKey) {\r\n         var nKey = _nestedKey(key);\r\n\r\n         if (!relativeKey) {\r\n           relativeKey = key;\r\n         }\r\n\r\n         if (((nKey.indexOf('public.') !== -1) || (nKey.indexOf('private.') !== -1))) {\r\n           nKey = nKey.substr(nKey.indexOf('.') + 1);\r\n         }\r\n         _onAdded.notify(node === 'node' ? { key: nKey, relativeKey: relativeKey, node: node, flags: flags } : { key: nKey, relativeKey: relativeKey, node: node, value: value, flags: flags });\r\n         if (_parent && _parent['_internal'] && _parent['_internal']['fireOnAdded']) {\r\n           _parent._internal.fireOnAdded(nKey, node, value, flags, relativeKey);\r\n         }\r\n       },\r\n\r\n      /**\r\n       * Adds a node\r\n       *\r\n       * @method add\r\n       * @param {String} uuid User ID\r\n       * @param {String} key Node key\r\n       * @param {Number} flags Node Flags\r\n       * @param {Object} childNode Istance of node to add. If null, node is created\r\n       * @param {Object} Value of node to add\r\n       * @return {Object} Returns added node\r\n       */\r\n      _add = function (uuid, key, flags, childNode, value) {\r\n        var namespaces,\r\n          current,\r\n          i = 1;\r\n        _checkKey(key, false, true, false);\r\n\r\n        // Up-front permission check.\r\n        if (!_canAdd(uuid)) {\r\n          throw new SWAC.AccessViolationException(2001);\r\n        }\r\n\r\n        flags = _beautifyFlags(flags);\r\n\r\n        // Dots within the key specify nested namespaces.\r\n        if (key.indexOf('.') > -1) {\r\n          namespaces = key.split('.');\r\n          current = _add(uuid, namespaces[0], flags);\r\n\r\n          for (i = 1; i < namespaces.length; i++) {\r\n            current = current.add(uuid, namespaces[i], flags);\r\n          }\r\n          return current;\r\n        }\r\n\r\n        // Add a single node.\r\n        if (_children[key] === undefined) {\r\n\r\n          if ((childNode === null) || (childNode === undefined)) {\r\n            // Fire to component (if not initiated by base-library itself)\r\n            if (_mustForward(uuid)) {\r\n              if (!((!_isProxy) && (_flags === SWAC.DPC._internal.Flags.Stub))) {\r\n                _forward(key, 'add', { flags: flags });\r\n              }\r\n            }\r\n            _children[key] = new SWAC.DPC.Node(_that, _uuid, flags, key, _forceForward);\r\n          }\r\n          else {\r\n            _children[key] = childNode; // // Create with original owner UUID\r\n            if (childNode instanceof SWAC.DPC.Node) {\r\n              _fireOnAdded(key, 'node', null, flags);\r\n            }\r\n            else {\r\n              _fireOnAdded(key, 'data', value, flags);\r\n            }\r\n          }\r\n        }\r\n        return _children[key];\r\n      },\r\n\r\n      /**\r\n       * Removes a node\r\n       *\r\n       * @method remove\r\n       * @param {String} uuid User ID\r\n       * @param {String} key Node key\r\n       * @return {Boolean} Returns true if node is successfully removed, false otherwise\r\n       */\r\n      _remove = function (uuid, key) {\r\n        var namespaces,\r\n         current,\r\n         i = 1,\r\n         node,\r\n         children,\r\n         it;\r\n        _checkKey(key, false, true, false);\r\n\r\n        // Up-front permission check.\r\n        if (!_canRemove(uuid)) { throw new SWAC.AccessViolationException(2001); }\r\n\r\n\r\n        // Dots within the key specify nested namespaces.\r\n        if (key.indexOf('.') > -1) {\r\n          namespaces = key.split('.');\r\n          current = _open(namespaces[0]);\r\n\r\n          for (i = 1; i < namespaces.length - 1; i++) {\r\n            if (current !== undefined) {\r\n              current = current.open(namespaces[i]);\r\n            }\r\n            else {\r\n              return false;\r\n            }\r\n          }\r\n          if (current === undefined) {\r\n            return false;\r\n          }\r\n          return current.remove(uuid, namespaces[namespaces.length - 1]);\r\n        }\r\n\r\n        // Remove a dedicated node.\r\n        if (_children[key] !== undefined) {\r\n\r\n          // Deep remove, iterate through all children and children's children...\r\n          if (_children[key] instanceof SWAC.DPC.Node) {\r\n            children = _children[key].list();\r\n            for (it = children.length - 1; it > -1; it--) {\r\n              _children[key].remove(uuid, children[it]);\r\n            }\r\n          }\r\n          node = _children[key];\r\n          node._internal.dirty(true);\r\n\r\n\r\n          // Fire to component (if not initiated by base-library itself)\r\n          if (_mustForward(uuid)) {\r\n            if (!((!_isProxy) && (_flags === SWAC.DPC._internal.Flags.Stub))) {\r\n              _forward(key, 'remove', {});\r\n            }\r\n          }\r\n          _children[key] = null;\r\n          delete _children[key];\r\n\r\n          if ((node instanceof SWAC.DPC.Data) || (_isProxy)) {\r\n            node._internal.fireOnRemoved();\r\n          }\r\n\r\n          return true;\r\n        }\r\n        return false;\r\n      },\r\n\r\n        /**\r\n       * Gets RW permissions flags of data value into data node\r\n       *\r\n       * @private\r\n       * @method _getPermissions\r\n       * @return {Number} Return permissions flags value present in data node\r\n       */\r\n      _getPermissions = function () {\r\n        var flags = _flags;\r\n        if ((flags & SWAC.DPC._internal.Flags.Stub) === SWAC.DPC._internal.Flags.Stub) {\r\n          flags = flags ^ SWAC.DPC._internal.Flags.Stub;\r\n        }\r\n\r\n        if ((flags & SWAC.DPC._internal.Flags.Proxy) === SWAC.DPC._internal.Flags.Proxy) {\r\n          flags = flags ^ SWAC.DPC._internal.Flags.Proxy;\r\n        }\r\n\r\n        return flags;\r\n      },\r\n\r\n      /**\r\n      * Fired when content of node is changed\r\n      *\r\n      * @event onValueChanged\r\n      * @param {Object} data Object with 'key', 'value' and 'oldValue' properties related to the modified node\r\n      */\r\n      _onValueChanged = new SWAC.Eventing.Publisher('onValueChanged'),\r\n\r\n      /**\r\n       * Fires onValueChanged event\r\n       *\r\n       * @method fireOnValueChanged\r\n       * @param {String} key Node key\r\n       * @param {Object} value New value of data node\r\n       * @param {Object} oldValue Old value of data node\r\n       */\r\n       _fireOnValueChanged = function (key, value, oldValue, relativeKey) {\r\n         var nKey = _nestedKey(key);\r\n\r\n         if (!relativeKey) {\r\n           relativeKey = key;\r\n         }\r\n\r\n         if (((nKey.indexOf('public.') !== -1) || (nKey.indexOf('private.') !== -1))) {\r\n           nKey = nKey.substr(nKey.indexOf('.') + 1);\r\n         }\r\n         _onValueChanged.notify({ key: nKey, relativeKey: relativeKey, value: value, oldValue: oldValue });\r\n         if (_parent && _parent['_internal'] && _parent['_internal']['fireOnValueChanged']) {\r\n           _parent._internal.fireOnValueChanged(nKey, value, oldValue, relativeKey);\r\n         }\r\n       },\r\n\r\n       /**\r\n      * Fired when node is removed\r\n      *\r\n      * @event onRemoved\r\n      * @param {Object} data Object with 'key' property related to the removed node\r\n      */\r\n      _onRemoved = new SWAC.Eventing.Publisher('onRemoved'),\r\n\r\n      /**\r\n       * Fires onRemoved event\r\n       *\r\n       * @method fireOnRemoved\r\n       * @param {String} key Key of removed node\r\n       */\r\n       _fireOnRemoved = function (key, relativeKey) {\r\n         var nKey = key ? _nestedKey(key) : _key;\r\n\r\n         if (!relativeKey) {\r\n           relativeKey = key;\r\n         }\r\n\r\n         if (((nKey.indexOf('public.') !== -1) || (nKey.indexOf('private.') !== -1))) {\r\n           nKey = nKey.substr(nKey.indexOf('.') + 1);\r\n         }\r\n         _onRemoved.notify({ key: nKey, relativeKey: relativeKey });\r\n         if (_parent && _parent['_internal'] && _parent['_internal']['fireOnRemoved']) {\r\n           _parent._internal.fireOnRemoved(nKey, relativeKey);\r\n         }\r\n       },\r\n\r\n       /**\r\n      * Fired when data node is going to be changed\r\n      *\r\n      * @event onBeforeValueChanged\r\n      * @param {Object} validateObj  validatedObj Object containing the following properties: key, currentValue, value and reject\r\n      * <br/>key is the key of data node \r\n      * <br/>currentValue is the current value of data node before updating\r\n      * <br/>value is the new value to set into data node\r\n      * <br/>reject is a boolean that specifies if value can be accepted or not\r\n      */\r\n      _onBeforeValueChanged = new SWAC.Eventing.Publisher('onBeforeValueChanged'),\r\n\r\n      /**\r\n       * Fires onBeforeValueChanged event\r\n       *\r\n       * @method fireOnBeforeValueChanged\r\n       */\r\n      _fireOnBeforeValueChanged = function (validateObj) {\r\n        var currentValue = validateObj.currentValue,\r\n          currentKey = _nestedKey(validateObj.key),\r\n          value = validateObj.value;\r\n\r\n        _onBeforeValueChanged.notify(validateObj);\r\n        if ((validateObj.reject === null) || (validateObj.reject === undefined)) {\r\n          validateObj.reject = false;\r\n        }\r\n        if ((validateObj.value === null) || (validateObj.value === undefined)) {\r\n          validateObj.value = value;\r\n        }\r\n        if (!validateObj.reject) {\r\n          if (_parent && _parent['_internal'] && _parent['_internal']['fireOnBeforeValueChanged']) {\r\n            validateObj.currentValue = currentValue;\r\n            validateObj.key = currentKey;\r\n            _parent._internal.fireOnBeforeValueChanged(validateObj);\r\n          }\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Get public root node\r\n       *\r\n       * @method _getPublicNode\r\n       * @return {Object} Return public root node\r\n       */\r\n      _getPublicNode = function () {\r\n        var res = null;\r\n        if (_key === 'public') {\r\n          return _that;\r\n        }\r\n        if (_parent && _parent['_internal'] && _parent['_internal']['getPublicNode']) {\r\n          res = _parent._internal.getPublicNode();\r\n        }\r\n        else {\r\n          res = _children['public'];\r\n        }\r\n        return res;\r\n      };\r\n\r\n  //////////////\r\n  // PUBLIC   //\r\n  //////////////\r\n\r\n  this.get = _get;\r\n  this.set = _set;\r\n  this.beginSet = _beginSet;\r\n  this.open = _open;\r\n  this.add = _add;\r\n  this.remove = _remove;\r\n  this.list = _list;\r\n  this.flags = _getPermissions;\r\n  this.nestedKey = _nestedKey;\r\n  this.onBeforeValueChanged = _onBeforeValueChanged.event;\r\n\r\n  this._internal = {\r\n    forward: _forward,\r\n    getPublicNode: _getPublicNode,\r\n    fireOnAdded: _fireOnAdded,\r\n    fireOnRemoved: _fireOnRemoved,\r\n    fireOnValueChanged: _fireOnValueChanged,\r\n    fireOnBeforeValueChanged: _fireOnBeforeValueChanged,\r\n    dirty: _dirty,\r\n    mine: _mine\r\n\r\n  };\r\n\r\n  /**\r\n     * Returns public/private accessor of data node\r\n     *\r\n     * @method access\r\n     * @param {String} uuid ID of user who get accessor. If user ID is owner user ID, private accessor is returned with all permissions, \r\n     * otherwise public accessor is returned with read and write permissions conditioned by the flags\r\n     * @return {Object} Returns accessor object of node\r\n     */\r\n  this.access = function (uuid) {\r\n    var _isDirty = function () {\r\n      if (_dirty()) {\r\n        throw new SWAC.Exception(1002);\r\n      }\r\n    },\r\n        accessor = { // Default public accessor, additional methods are added only when sufficent permissions are set.\r\n          list: function () {\r\n            _isDirty();\r\n            return _list();\r\n          },\r\n          open: function (key) { // required read-permissions in an older version.\r\n            var r = {};\r\n            _isDirty();\r\n            r = _open(key);\r\n            return ((r instanceof SWAC.DPC.Node || r instanceof SWAC.DPC.Data) ? r.access(uuid) : undefined);\r\n          },\r\n          flags: function () {\r\n            _isDirty();\r\n            return _getPermissions();\r\n          },\r\n          onRemoved: _onRemoved.event,\r\n          onAdded: _onAdded.event\r\n        };\r\n\r\n    // Requires permission: read\r\n\r\n    if (_mine(uuid) || ((_getflags() & SWAC.DPC.Permissions.Read) === SWAC.DPC.Permissions.Read)) {\r\n      var getter = function (key) {\r\n        _isDirty();\r\n        return _get(uuid, key);\r\n      };\r\n      if (_isProxy && _mustForward(uuid)) {\r\n        accessor.beginGet = getter;\r\n      } else {\r\n        accessor.get = getter;\r\n        accessor.onBeforeValueChanged = _onBeforeValueChanged.event;\r\n      }\r\n      accessor.onValueChanged = _onValueChanged.event;\r\n    }\r\n\r\n    // Requires permission: write\r\n\r\n    if (_mine(uuid) || ((_getflags() & SWAC.DPC.Permissions.Write) === SWAC.DPC.Permissions.Write)) {\r\n      accessor.set = function (key, value, type, flags) {\r\n        var forward = (arguments.length >= 5) ? arguments[4] : true;\r\n        var r = {};\r\n        _isDirty();\r\n        r = _set(uuid, key, value, type, flags, forward);\r\n        return (r instanceof SWAC.DPC.Data ? r.access(uuid) : undefined);\r\n\r\n      };\r\n      accessor.beginSet = function (key, value, type, flags) {\r\n        var forward = (arguments.length >= 5) ? arguments[4] : true;\r\n        var res = new SWAC.Defer();\r\n        if (_dirty()) {\r\n          res.reject(new SWAC.Reason(17002));\r\n          return res.promise;\r\n        }\r\n        return _beginSet(uuid, key, value, type, flags, forward);\r\n      };\r\n    }\r\n\r\n    // Only available on stubs (that is usually the original component within the iframe)\r\n    if (_canAdd(uuid)) { // Currently Add and Remove require same permissions\r\n      accessor.remove = function (key) {\r\n\r\n        _isDirty();\r\n        return _remove(uuid, key);\r\n      };\r\n      accessor.add = function (key, flags) {\r\n        var r = {};\r\n        _isDirty();\r\n        r = _add(uuid, key, flags);\r\n        return (r instanceof SWAC.DPC.Node ? r.access(uuid) : undefined);\r\n      };\r\n    }\r\n\r\n    return accessor;\r\n  };\r\n\r\n  if (parent instanceof SWAC.DPC.Node) {\r\n    if ((parent._internal.mine(uuid))) {\r\n      _parent = parent;\r\n      parent.add(uuid, key, flags, _that);\r\n    }\r\n    else {\r\n      throw new SWAC.AccessViolationException(2001);\r\n    }\r\n  }\r\n  else {\r\n    _parent = undefined;\r\n  }\r\n};\r\n\r\n/**\r\n* Compare two objects\r\n*\r\n* @private\r\n* @method _equals\r\n* @param {Object} object1 first object to compare\r\n* @param {Object} object2 second object to compare\r\n* @return {Bool} returns true if objects are equals, otherwise false\r\n*/\r\nSWAC.DPC.Node.prototype._equals = function (object1, object2) {\r\n  var retVal = true,\r\n    object1Type = typeof (object1),\r\n    object2Type = typeof (object2),\r\n    i,\r\n    object1PropList = null,\r\n    object2PropList = null;\r\n\r\n  if (object1Type !== object2Type) {\r\n    // different types\r\n    retVal = false;\r\n  }\r\n  else {\r\n    if (object1Type === 'object') {\r\n      if (SWAC._internal.Utils.isArray(object1) && SWAC._internal.Utils.isArray(object2)) {\r\n        // check for arrays\r\n        if (object1.length !== (object2.length)) {\r\n          // different array lengths\r\n          retVal = false;\r\n        }\r\n        else {\r\n          for (i = 0; i < object1.length; i++) {\r\n            if (!SWAC.DPC.Node.prototype._equals(object1[i], object2[i])) {\r\n              // different array items found\r\n              retVal = false;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        if (SWAC._internal.Utils.isArray(object1) || SWAC._internal.Utils.isArray(object2)) {\r\n          // different objects\r\n          retVal = false;\r\n        }\r\n        else {\r\n          //check first null\r\n          if (object1 === null && object2 === null) {\r\n            retVal = true;\r\n          }\r\n          else if (object1 === null || object2 === null) {\r\n            retVal = false;\r\n          }\r\n          else {\r\n            // check for objects               \r\n            object1PropList = SWAC._internal.Utils.getOwnPropertyNames(object1);\r\n            object2PropList = SWAC._internal.Utils.getOwnPropertyNames(object2);\r\n            if (object1PropList.length !== object2PropList.length) {\r\n              // different property counts\r\n              retVal = false;\r\n            }\r\n            else {\r\n              for (i = 0; i < object1PropList.length; i++) {\r\n                // check for property\r\n                if (object2PropList.indexOf(object1PropList[i]) === -1) {\r\n                  // property not found\r\n                  retVal = false;\r\n                  break;\r\n                }\r\n                else {\r\n                  // check for property value\r\n                  if (!SWAC.DPC.Node.prototype._equals(object1[object1PropList[i]], object2[object1PropList[i]])) {\r\n                    // different property value found\r\n                    retVal = false;\r\n                    break;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      retVal = (object1 === object2);\r\n    }\r\n  }\r\n\r\n  return retVal;\r\n};\r\n\r\n\r\n///////////////////////////////////////////\r\n// lib/base/dpc/permissions.js\r\n\r\n\r\n/**\r\n * Permissions flag for a dpc\r\n *\r\n * @class SWAC.DPC.Permissions\r\n * @constructor\r\n */\r\nSWAC.DPC.Permissions = {\r\n    /**\r\n     * No permission\r\n     *\r\n     * @property None\r\n     * @type Numeric\r\n     * @default 0\r\n     */\r\n    None: 0,\r\n    /**\r\n     * Read permission\r\n     *\r\n     * @property Read\r\n     * @type Numeric\r\n     * @default 1\r\n     */\r\n    Read: 1,\r\n    /**\r\n     * Write permission\r\n     *\r\n     * @property Write\r\n     * @type Numeric\r\n     * @default 2\r\n     */\r\n    Write: 2\r\n};\r\n\r\n\r\n    return SWAC;\r\n  };\r\n\r\n  try {\r\n    var SWACConstructor = function () { };\r\n\r\n    var _define = null;\r\n\r\n    if ((!window.SWAC) || (typeof window.SWAC === 'object' && typeof window.SWAC.Communication !== 'object') || (typeof window.SWAC === 'undefined')) {\r\n      swacBaseModule(SWACConstructor.prototype);\r\n      window.SWAC = new SWACConstructor();\r\n    }\r\n    else {\r\n      if (typeof window.SWAC.constructor.prototype.Communication !== 'undefined') {\r\n        // SWAC created with new(), get the constructor\r\n        SWACConstructor = window.SWAC.constructor;\r\n      }\r\n      else {\r\n        // old SWAC object, creates the constructor\r\n        for (var property in window.SWAC) {\r\n          if (window.SWAC.hasOwnProperty(property)) {\r\n            SWACConstructor.prototype[property] = window.SWAC[property];\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if ((typeof module !== 'undefined') && (typeof module.exports !== 'undefined')) {\r\n      module.exports = SWACConstructor;\r\n      module.exports['default'] = module.exports;\r\n    }\r\n    else if ((typeof SystemJS !== 'undefined') && (SystemJS.map.hasOwnProperty('@swac/boot') || SystemJS.map.hasOwnProperty('@swac/webcc-boot') || SystemJS.map.hasOwnProperty('@swac/base'))) {\r\n      _define = (typeof define !== 'undefined') ? define : SystemJS.amdDefine;\r\n      _define('@swac/base', [], function () {\r\n        return SWACConstructor;\r\n      });\r\n    }\r\n    else if ((typeof define === 'function') && (typeof define.amd !== 'undefined') && (typeof requirejs !== 'undefined') &&\r\n      ((typeof requirejs.s.contexts._.config.paths['@swac/boot'] !== 'undefined') ||\r\n      (typeof requirejs.s.contexts._.config.paths['@swac/webcc-boot'] !== 'undefined') ||\r\n      (typeof requirejs.s.contexts._.config.paths['@swac/base'] !== 'undefined'))) {\r\n      define('@swac/base', [], function () {\r\n        return SWACConstructor;\r\n      });\r\n    }\r\n  }\r\n  catch (e) { }\r\n\r\n})();"]}