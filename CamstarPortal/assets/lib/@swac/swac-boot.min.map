{"version":3,"sources":["swac-boot.min.js"],"names":["SWACInstance","_state","_bootStarted","_bootTimer","_p","_msgHandler","_content","_containerInfo","_injectionQueue","_extensionsAliasMap","_clearTimerAndListener","_jsLoadUtil","_createMessage","_checkSWAC","_bootstrap","SWACBoot","window","parent","clearTimeout","removeEventListener","detachEvent","url","success","failure","baselib","document","createElement","setAttribute","addEventListener","onreadystatechange","this","readyState","getElementsByTagName","appendChild","content","JSON","stringify","t","c","SWAC","Communication","version","auth","timeout","event","otherChannel","pingMsg","k","extensionList","setTimeout","message","self","swacNative","postMessage","external","_checkAlternativeCommunicationChannel","path","targetOrigin","transfer","succCallback","failedCb","done","p","aggregator","extension","data","regex","extensionCount","containerVersion","bootInstance","length","parse","Error","e","reason","swacPostMessage","isContainer","_script","injectionQueueCount","extensionObj","Hub","prototype","Extensions","Object","keys","ext","hasOwnProperty","_internal","Utils","checkVersion","pop","defineExtension","bind","extensions","unshift","BootInstance","module","exports","require","define","amd","requirejs","s","contexts","_","config","paths","SystemJS","map","System","import","then","undefined","replace","namespace","authentication","details","_receiveMessage","attachEvent","arguments","push","as","attributes","start","_timeout","_extensions","containerInfo"],"mappings":";;CAGA,WACE,IAmBIA,EAGAC,EAEAC,EAGAC,EAGAC,EAGAC,EAGAC,EAGAC,EAEAC,EAEAC,EAQAC,EAmBAC,EA6CAC,EAWAC,EA8RAC,EAlZFC,EAiiBF,SACiC,IAApBC,OAAOD,WAChBC,OAAOD,UA1hBPf,EAAe,KAKfE,IAFAD,EAAS,WAKTE,GAAc,EAGdC,EAAKY,OAAOC,OAMZX,EAHAD,EAAc,KAQdG,EAAkB,GAElBC,EAAsB,GAQtBC,EAAyB,WACvBM,OAAOE,aAAaf,GAChBa,OAAOG,oBACTH,OAAOG,oBAAoB,UAAWd,GAGtCW,OAAOI,YAAY,YAAaf,IAapCM,EAAc,SAAUU,EAAKC,EAASC,GACpC,IAAIC,EAAUC,SAASC,cAAc,UACrCF,EAAQG,aAAa,OAAQ,mBAC7BH,EAAQG,aAAa,MAAON,IAExBC,GAAWC,KACTC,EAAQI,kBACNN,GACFE,EAAQI,iBAAiB,OAAQN,GAE/BC,GACFC,EAAQI,iBAAiB,QAAS,WAAcL,EAAQ,kBAAoBF,EAAM,eAIhFC,IACFE,EAAQK,mBAAqB,WACH,WAApBC,KAAKC,YAA+C,aAApBD,KAAKC,WACvCT,IAGIC,GACFA,OAORE,SAASO,qBAAqB,QAChCP,SAASO,qBAAqB,QAAQ,GAAGC,YAAYT,GAGrDC,SAASO,qBAAqB,QAAQ,GAAGC,YAAYT,IAYzDZ,EAAiB,SAAUsB,GACzB,OAAOC,KAAKC,UAAU,CAAEC,EAAG,OAAQC,EAAGJ,KAUxCrB,EAAa,WACX,MAAoB,iBAAT0B,MAAmD,iBAAvBA,KAAKC,eA6R9C1B,EAAa,SAAUQ,EAASC,EAASkB,EAASC,EAAMC,GACtDF,EAAUA,GAAW,IACrBE,EAAUA,GAAW,IACrBpB,EAAUA,GAAW,SAAUqB,KAC/BF,EAAOA,GAAQ,KAEf,IAAIG,EACAC,EAEAC,EADAC,EAAgB,GAGpB,GAAe,SAAX/C,EAMC,GAAKC,EAIRc,OAAOiC,WAAW,WAChB1B,EAAQ,CAAE2B,QAAS,4BAClB,QAML,GAXEhD,GAAe,EASjB2C,EAxCsC,WACtC,GAAIzC,IAAO+C,KAAM,CACf,GAA0B,iBAAfC,YAA6D,mBAA3BA,WAAWC,YACtD,OAAOD,WAAWC,YAEf,GAAIrC,OAAOsC,UAAmD,mBAAhCtC,OAAOsC,SAASD,YACjD,OAAOrC,OAAOsC,SAASD,YAG3B,OAAO,KA+BQE,GAEXnD,IAAO+C,MAAgC,mBAAjBN,GAAoE,mBAA9B7B,OAAwB,gBACtFf,EAAS,SACTM,EAAwB,QAAI,CAC1BiD,KAAM,CAAC,WAETxC,OAAOiC,WAAW,WAChB1B,EAAQ,CAAE2B,QAAS,8CAClB,OAEA,CAiCH,GAhCyC,mBAA9BlC,OAAwB,kBAE/BA,OAAwB,gBADE,mBAAjB6B,EACmBA,EAGA,SAAUK,EAASO,EAAcC,GAC3D,OAAOtD,EAAGiD,YAAYH,EAASO,KAIrCpD,EAAc,SAAUuC,IA7TV,SAAUA,EAAOtB,EAASC,GAC1C,IACIoC,EACAC,EACAC,EACAC,EAEAC,EACAC,EAPAC,EAAO,GAKPC,EAAQ,KAGRC,EAAiB,KACjBC,EAAmB,KACnBC,EAAe,KAEnB,IAAe,YAAXpE,GAAmC,OAAXA,IACG,iBAAhB2C,EAAU,MAAwC,EAApBA,EAAMqB,KAAKK,OAAa,CACjE,IAGE,MADAL,EAAO9B,KAAKoC,MAAM3B,EAAMqB,QACVA,EAAK5B,GAAM4B,EAAK3B,GAC5B,MAAM,IAAIkC,MAAM,iCAEb,GAAe,SAAXP,EAAK5B,EACZ,MAAM,IAAImC,MAAM,6BAA+BP,EAAK5B,GAGxD,MAAOoC,GACL,OAUF,GAPAb,EAAW,SAAUc,GACnBzE,EAAS,SACTS,IACAa,EAAQ,CAAE2B,QAASwB,IACnBC,gBAAgB/D,EAAe,CAAEsC,QAAS,WAAa,MAGzC,SAAXe,EAAK5B,GAAqC,SAAnB4B,EAAK3B,EAAEY,QAAqB,CAqEtD,GApEAW,EAAO,WACL7D,EAAa4E,aAAc,EAC3B3E,EAAS,MACTK,EAAW2D,EAAK3B,GACP8B,iBAAmB9D,EAAS8D,kBAAoB,QACzDO,gBAAgB/D,EAAe,CAAEsC,QAAS,OAAS,MAGrDa,EAAa,WACX,IAAIc,EACFC,EAAsBtE,EAAgB8D,OACtCS,EAAe,GAEjB,QAAqD,IAA1C/E,EAAagF,IAAIC,UAAUC,WAAtC,CAYA,QAVuD,IAA1ClF,EAAagF,IAAIC,UAAUC,YAA0F,EAA5DC,OAAOC,KAAKpF,EAAagF,IAAIC,UAAUC,YAAYZ,SACrHS,EAAe/E,EAAagF,IAAIC,UAAUC,YASvB,OAAnBf,EACA,IAAK,IAAIkB,KAAON,EACVA,EAAaO,eAAeD,SACU,IAA7B5E,EAAoB4E,KAC7BN,EAAatE,EAAoB4E,IAAQN,EAAaM,UAC/CN,EAAaM,UACb5E,EAAoB4E,IAQV,IAAxBP,GACG9E,EAAauF,UAAUC,MAAMC,aAAarB,EAAkB,SAAW,EAE3EP,KAEA5D,EAAS,YACT4E,EAAUrE,EAAgBkF,MACK,oBAApBC,gBAEThF,EAAYkE,EAAS,WACY,oBAApBc,kBACTA,gBAAkBA,gBAAgBC,KAAK,CAAErD,KAAMvC,KAEjD+D,KACCH,GAIe,yBAAZiB,EACFd,KAGAI,EAAiBgB,OAAOC,KAAKL,GAAcT,OAC3C3D,EAAYkE,EAASd,EAAYA,UAzCvCF,KA+CAI,EAAK3B,EAAEuD,WACT,IAAK7B,KAAaC,EAAK3B,EAAEuD,WACnB5B,EAAK3B,EAAEuD,WAAWP,eAAetB,IACnCxD,EAAgBsF,QAAQ7B,EAAK3B,EAAEuD,WAAW7B,IAKhDI,EAAmBH,EAAK3B,EAAE8B,kBAAoB,QAE9CC,OAAoC,IAAbtD,EAA4BA,EAAW,UAEnC,IAAhBC,OAAOuB,KACZ1B,MACFb,EAAegB,OAAOuB,MACTwD,aAAe1B,EAC5BN,KAGAH,EAAS,oCAIY,oBAAXoC,aACiB,IAAnBA,OAAOC,SACoC,mBAA1CjG,EAAekG,QAAQ,iBAChClG,EAAeA,EAAaiF,WACfc,aAAe1B,EAC5BN,KAE0B,mBAAXoC,aACQ,IAAfA,OAAOC,KACO,oBAAdC,gBACsD,IAAtDA,UAAUC,EAAEC,SAASC,EAAEC,OAAOC,MAAM,cAC5CR,QAAQ,CAAC,cAAe,SAAUzB,IAChCzE,EAAeyE,EAAEQ,WACJc,aAAe1B,EAC5BN,MAG0B,oBAAb4C,UAA6BA,SAASC,IAAItB,eAAe,cACxEuB,OAAOC,OAAO,cAAcC,KAAK,SAAUtC,IACzCzE,EAAeyE,EAAEQ,WACJc,aAAe1B,EAC5BN,OAIFG,EAAQ,kBAEY8C,IAAf/C,EAAK3B,EAAEjB,KAAsC,OAAf4C,EAAK3B,EAAEjB,KAAoD,KAAlC4C,EAAK3B,EAAEjB,IAAI4F,QAAQ/C,EAAO,IACpFN,EAAS,sDAGTD,EAAe,WACQ,oBAATpB,WAAuD,IAArB0B,EAAK3B,EAAE4E,gBAAmE,IAA7BlG,OAAOiD,EAAK3B,EAAE4E,WACnGrG,MACFb,EAAeuC,MACFwD,aAAe1B,EAC5BN,KAGAH,EAAS,oCAKc,oBAAb+C,SACVE,OAAOC,OAAO,cAAcC,KAAK,SAAUtC,IACzCzE,EAAeyE,EAAEQ,WACJc,aAAe1B,EAC5BN,KACC,WACDH,EAAS,uDAGe,mBAAXuC,aAAiD,IAAfA,OAAOC,KAA4C,oBAAZF,SACxFA,QAAQ,CAAC,cAAe,SAAUzB,IAChCzE,EAAeyE,EAAEQ,WACJc,aAAe1B,EAC5BN,KACC,WACDH,EAAS,wDAMjB3D,EAAS,YAETU,EAAYsD,EAAK3B,EAAEjB,IAAKsC,EAAcC,IAExCM,EAAQ,WAIT,GAAgB,SAAXD,EAAK5B,GAAqC,QAAnB4B,EAAK3B,EAAEY,QAAoB,CAM1D,IAAKY,KAHL5D,IADAD,EAAS,QAGTS,IACUJ,EACJA,EAASgF,eAAexB,KAC1BvD,EAAeuD,GAAKxD,EAASwD,IAiBjC,IAAKA,KAbLxD,EAAS4C,QAAU,2BACnB5C,EAASoC,KAAOpC,EAAS6G,eACzB7G,EAASiC,KAAgC,iBAAjBvC,EAA6BA,EAAe,IAAIA,SACjEM,EAAS6G,sBACT7G,EAASe,WACTf,EAASuF,kBACTvF,EAAS4G,UACXjD,EAAK3B,EAAE8E,UACV7G,EAAwB,QAAI,CAC1BiD,KAAM,CAAC,YAIDS,EAAK3B,EACH,YAANwB,GAAmBG,EAAK3B,EAAEgD,eAAexB,KACtCvD,EAAe+E,eAAexB,KACjCvD,EAAeuD,GAAKG,EAAK3B,EAAEwB,YAK1BxD,EAASiF,UAEhBvF,EAAagF,IAAIC,UAAUb,iBAAmB9D,EAAS8D,iBAEvD9C,EAAQhB,OAEW,SAAX2D,EAAK5B,GAAqC,SAAnB4B,EAAK3B,EAAEY,UACtCxC,IACAa,EAAQ,CAAE2B,QAASe,EAAK3B,EAAEoC,WA4E5B2C,CAAgBzE,EAAOtB,EAASC,IAGlCtB,EAAS,UACLe,OAAOY,iBACTZ,OAAOY,iBAAiB,UAAWvB,GAAa,GAEhDW,OAAOsG,YAAY,YAAajH,GAGlCF,EAAaa,OAAOiC,WAAW,WACd,SAAXhD,IACFA,EAAS,WACTM,EAAwB,QAAI,CAC1BiD,KAAM,CAAC,WAET9C,IACAa,EAAQ,CAAE2B,QAAS,kCAEpBP,GAEmB,OAAjB4E,UAAU,SAAyC,IAAjBA,UAAU,GAE/C,IAAKxE,EAAI,EAAGA,EAAIwE,UAAU,GAAGjD,OAAQvB,IACJ,iBAApBwE,UAAU,GAAGxE,IACtBC,EAAcwE,KAAKD,UAAU,GAAGxE,GAAGiB,WACnCvD,EAAoB8G,UAAU,GAAGxE,GAAGiB,WAAauD,UAAU,GAAGxE,GAAG0E,IAGjEzE,EAAcwE,KAAKD,UAAU,GAAGxE,IAKtCD,EAAUlC,EAAe,CAAEsC,QAAS,OAAQT,QAASA,EAAS0E,eAAgBzE,EAAMgF,WAAYH,UAAU,GAAI1B,WAAY7C,IAC1H2B,gBAAgB7B,EAAS,UAzEzB9B,OAAOiC,WAAW,WAChB1B,EAAQ,CAAE2B,QAAS,6BAClB,KAhaTnC,EA2fK,CAWL4G,MA3BmB,SAAUrG,EAASC,EAASkB,EAASC,EAAMmD,EAAYlD,GAC1E,IAAIiF,EAAWjF,EACbkF,EAAchC,EAEU,iBAAfA,IACT+B,EAAW/B,EACXgC,EAAc,MAEhB/G,EAAWQ,EAASC,EAASkB,EAASC,EAAMkF,EAAU,KAAMC,IAqB5DtC,UAAW,CAQTuC,cAnfAvH,EAAiB,MA+fdkC,QAAU,QAER1B,IAQgB,oBAAXiF,aAAsD,IAAnBA,OAAOC,SACpDD,OAAOC,QAAUjF,OAAOD,SACxBiF,OAAOC,QAAiB,QAAID,OAAOC,SAET,mBAAXE,aAAgD,IAAfA,OAAOC,KAC/B,oBAAdC,gBACkC,IAAlCA,UAAUC,EAAEC,SAASC,EAAEC,aAC+B,IAAtDJ,UAAUC,EAAEC,SAASC,EAAEC,OAAOC,MAAM,cAC9CP,OAAO,WACL,OAAOnF,OAAOD,WAGY,oBAAb4F,UAA6BA,SAASC,IAAItB,eAAe,eACxEa,OAAO,WACL,OAAOnF,OAAOD,WAIpB,MAAO0D,KAnkBT","file":"swac-boot.min.js","sourcesContent":["/* Version 1.5.1, Boot version 1.5.1, copyright (C) 2019, Siemens AG. All Rights Reserved. */\r\n\r\n\r\n(function () {\r\n  var swacBootModule = function () {\r\n\r\n\r\n/**\r\n * Class that manages the boot of the component.\r\n *\r\n * @class SWACBoot\r\n * @constructor\r\n * \r\n */\r\nvar SWACBoot = (function () {\r\n  \r\n\r\n  //////////////\r\n  // PRIVATE  //\r\n  //////////////\r\n\r\n  var\r\n      //local SWAC object\r\n      SWACInstance = null,\r\n\r\n      // Current bootloader phase.\r\n      _state = 'pending',\r\n\r\n      _bootStarted = false,\r\n\r\n      // Timer for bootloader timeout.\r\n      _bootTimer = -1,\r\n\r\n      // parent window of the iframe component is hosted in.\r\n      _p = window.parent,\r\n\r\n      // Handler for incoming messages.\r\n      _msgHandler = null,\r\n\r\n      // Content with type, name and authentication info\r\n      _content = null,\r\n\r\n      // raw content received from container\r\n      _containerInfo = {},\r\n\r\n      _injectionQueue = [],\r\n\r\n      _extensionsAliasMap = {},\r\n\r\n      /**\r\n     * Clear timer and remove event listener\r\n     *\r\n     * @private\r\n     * @method _clearTimerAndListener\r\n     */\r\n      _clearTimerAndListener = function () {\r\n        window.clearTimeout(_bootTimer);\r\n        if (window.removeEventListener) {\r\n          window.removeEventListener('message', _msgHandler);\r\n        }\r\n        else {\r\n          window.detachEvent('onmessage', _msgHandler);\r\n        }\r\n      },\r\n\r\n     /**\r\n     * Load a Javascript\r\n     *\r\n     * @private\r\n     * @method _jsLoadUtil\r\n     * @param {string} url url for the script to load\r\n     * @param {function} success function to call when success\r\n     * @param {function} failure function to call when fail\r\n     */\r\n      _jsLoadUtil = function (url, success, failure) {\r\n        var baselib = document.createElement('script');\r\n        baselib.setAttribute('type', 'text/javascript');\r\n        baselib.setAttribute('src', url);\r\n\r\n        if (success || failure) {\r\n          if (baselib.addEventListener) {\r\n            if (success) {\r\n              baselib.addEventListener('load', success);\r\n            }\r\n            if (failure) {\r\n              baselib.addEventListener('error', function () { failure('Failed to load ' + url + ' library'); });\r\n            }\r\n          }\r\n          else {\r\n            if (success) {\r\n              baselib.onreadystatechange = function () {\r\n                if (this.readyState === 'loaded' || this.readyState === 'complete') {\r\n                  success();\r\n                }\r\n                else {\r\n                  if (failure) {\r\n                    failure();\r\n                  }\r\n                }\r\n              };\r\n            }\r\n          }\r\n        }\r\n        if (document.getElementsByTagName('head')) { //head is an optional tag\r\n          document.getElementsByTagName('head')[0].appendChild(baselib);\r\n        }\r\n        else {\r\n          document.getElementsByTagName('body')[0].appendChild(baselib);\r\n        }\r\n      },\r\n\r\n     /**\r\n     * Creates a message\r\n     *\r\n     * @private\r\n     * @method _createMessage\r\n     * @param {object} content content of the message\r\n     * @return {object} a JSON object containing the content of the message\r\n     */\r\n      _createMessage = function (content) {\r\n        return JSON.stringify({ t: 'boot', c: content });\r\n      },\r\n\r\n     /**\r\n     * Check if SWAC object is valid\r\n     *\r\n     * @private\r\n     * @method _checkSWAC\r\n     * @return {boolean} SWAC object is valid\r\n     */\r\n      _checkSWAC = function () {\r\n        if (typeof SWAC === 'object' && typeof SWAC.Communication === 'object') {\r\n          return true;\r\n        }\r\n        else {\r\n          return false;\r\n        }\r\n      },\r\n\r\n     /**\r\n     * Receives reply from container\r\n     *\r\n     * @private\r\n     * @method _receiveMessage\r\n     * @param {object} event Event object\r\n     * @param {function} success success callback\r\n     * @param {function} failure failure callback\r\n     */\r\n      _receiveMessage = function (event, success, failure) {\r\n        var data = {},\r\n            succCallback,\r\n            failedCb,\r\n            done,\r\n            p,\r\n            regex = null,\r\n            aggregator,\r\n            extension,\r\n            extensionCount = null,\r\n            containerVersion = null,\r\n            bootInstance = null;\r\n\r\n        if (_state === 'waiting' || _state === 'ok') {\r\n          if ((typeof (event.data) === 'string') && (event.data.length > 0)) {\r\n            try {\r\n              // Check for URL in response and start loading script\r\n              data = JSON.parse(event.data);\r\n              if (!data || !data.t || !data.c) {\r\n                throw new Error('Incompatible message received');\r\n              }\r\n              else if (data.t !== 'boot') {\r\n                throw new Error('Unknown message received: ' + data.t);\r\n              }\r\n            }\r\n            catch (e) {\r\n              return;\r\n            }\r\n\r\n            failedCb = function (reason) {\r\n              _state = 'failed';\r\n              _clearTimerAndListener();\r\n              failure({ message: reason });\r\n              swacPostMessage(_createMessage({ message: 'failed' }), '*');\r\n            };\r\n\r\n            if ((data.t === 'boot') && (data.c.message === 'pong')) {\r\n              done = function () {\r\n                SWACInstance.isContainer = false;\r\n                _state = 'ok';\r\n                _content = data.c;\r\n                _content.containerVersion = _content.containerVersion || '1.0.0';\r\n                swacPostMessage(_createMessage({ message: 'ok' }), '*');\r\n              };\r\n\r\n              aggregator = function () {\r\n                var _script,\r\n                  injectionQueueCount = _injectionQueue.length,\r\n                  extensionObj = {};\r\n\r\n                if (typeof SWACInstance.Hub.prototype.Extensions !== 'undefined'\r\n                  ) {\r\n                  if (typeof SWACInstance.Hub.prototype.Extensions !== 'undefined' && Object.keys(SWACInstance.Hub.prototype.Extensions).length > 0) {\r\n                    extensionObj = SWACInstance.Hub.prototype.Extensions;\r\n                  }\r\n                }\r\n                else {\r\n                  // Old container version, no extensions inject\r\n                  done();\r\n                  return;\r\n                }\r\n\r\n                if (extensionCount !== null) {\r\n                    for (var ext in extensionObj) {\r\n                      if (extensionObj.hasOwnProperty(ext)) {\r\n                        if (typeof _extensionsAliasMap[ext] !== 'undefined') {\r\n                          extensionObj[_extensionsAliasMap[ext]] = extensionObj[ext];\r\n                          delete extensionObj[ext];\r\n                          delete _extensionsAliasMap[ext];\r\n                        }\r\n                      }\r\n                    }\r\n                }\r\n\r\n                if\r\n                  (\r\n                  (injectionQueueCount === 0)\r\n                  || (SWACInstance._internal.Utils.checkVersion(containerVersion, '1.4.1') < 0))\r\n                {\r\n                  done();\r\n                } else {\r\n                  _state = 'upgrading';\r\n                  _script = _injectionQueue.pop();\r\n                  if (typeof defineExtension === 'undefined') {\r\n                    // Load defineExtension\r\n                    _jsLoadUtil(_script, function () {\r\n                      if (typeof defineExtension !== 'undefined') {\r\n                        defineExtension = defineExtension.bind({ SWAC: SWACInstance });\r\n                      }\r\n                      aggregator();\r\n                    }, failedCb);\r\n                  }\r\n                  else {\r\n                      // Load the extension\r\n                      if (_script === '$$unknownExtension$$') {\r\n                        aggregator();\r\n                      }\r\n                      else {\r\n                        extensionCount = Object.keys(extensionObj).length;\r\n                        _jsLoadUtil(_script, aggregator, aggregator);\r\n                      }\r\n                  }\r\n                }\r\n              };\r\n\r\n              if (data.c.extensions) {\r\n                for (extension in data.c.extensions) {\r\n                  if (data.c.extensions.hasOwnProperty(extension)) {\r\n                    _injectionQueue.unshift(data.c.extensions[extension]);\r\n                  }\r\n                }\r\n              }\r\n\r\n              containerVersion = data.c.containerVersion || '1.0.0';\r\n\r\n              bootInstance = (typeof SWACBoot !== 'undefined') ? SWACBoot : null;\r\n\r\n              if (typeof window.SWAC !== 'undefined') {\r\n                if (_checkSWAC()) {\r\n                  SWACInstance = window.SWAC;\r\n                  SWACInstance.BootInstance = bootInstance;\r\n                  aggregator();\r\n                }\r\n                else {\r\n                  failedCb('SWAC is a reserved variable name');\r\n                }\r\n              }\r\n              else {\r\n                if ((typeof module !== 'undefined') &&\r\n                  (typeof module.exports !== 'undefined') &&\r\n                  (typeof (SWACInstance = require('@swac/base')) === 'function')) {\r\n                  SWACInstance = SWACInstance.prototype;\r\n                  SWACInstance.BootInstance = bootInstance;\r\n                  aggregator();\r\n                }\r\n                else if ((typeof define === 'function') &&\r\n                  (typeof define.amd !== 'undefined') &&\r\n                  (typeof requirejs !== 'undefined') &&\r\n                  (typeof requirejs.s.contexts._.config.paths['@swac/base'] !== 'undefined')) {\r\n                  require(['@swac/base'], function (e) {\r\n                    SWACInstance = e.prototype;\r\n                    SWACInstance.BootInstance = bootInstance;\r\n                    aggregator();\r\n                  });\r\n                }\r\n                else if ((typeof SystemJS !== 'undefined') && SystemJS.map.hasOwnProperty('@swac/base')) {\r\n                  System.import('@swac/base').then(function (e) {\r\n                    SWACInstance = e.prototype;\r\n                    SWACInstance.BootInstance = bootInstance;\r\n                    aggregator();\r\n                  });\r\n                }\r\n                else {\r\n                  regex = /^\\s+|\\s+$/g;\r\n\r\n                  if ((data.c.url === undefined) || (data.c.url === null) || (data.c.url.replace(regex, '') === '')) {\r\n                    failedCb('Failed to load SWAC.Config.Container.URLs library');\r\n                  }\r\n                  else {\r\n                    succCallback = function () {\r\n                      if ((typeof SWAC !== 'undefined') || ((typeof data.c.namespace !== 'undefined') && (typeof window[data.c.namespace] !== 'undefined'))) {\r\n                        if (_checkSWAC()) {\r\n                          SWACInstance = SWAC;\r\n                          SWACInstance.BootInstance = bootInstance;\r\n                          aggregator();\r\n                        }\r\n                        else {\r\n                          failedCb('SWAC is a reserved variable name');\r\n                        }\r\n                      }\r\n                      else {\r\n                        // module.exports section not present because swac-base is injected so module is never defined\r\n                        if ((typeof SystemJS !== 'undefined')) {\r\n                          System.import('@swac/base').then(function (e) {\r\n                            SWACInstance = e.prototype;\r\n                            SWACInstance.BootInstance = bootInstance;\r\n                            aggregator();\r\n                          }, function () {\r\n                            failedCb('Failed to load SWAC.Config.Container.URLs library');\r\n                          });\r\n                        }\r\n                        else if ((typeof define === 'function') && (typeof define.amd !== 'undefined') && (typeof require !== 'undefined')) {\r\n                          require(['@swac/base'], function (e) {\r\n                            SWACInstance = e.prototype;\r\n                            SWACInstance.BootInstance = bootInstance;\r\n                            aggregator();\r\n                          }, function () {\r\n                            failedCb('Failed to load SWAC.Config.Container.URLs library');\r\n                          });\r\n                        }\r\n                      }\r\n                    };\r\n\r\n                    _state = 'upgrading';\r\n\r\n                    _jsLoadUtil(data.c.url, succCallback, failedCb);\r\n                  }\r\n                  regex = null;\r\n                }\r\n              }\r\n            }\r\n            else if ((data.t === 'boot') && (data.c.message === 'ok2')) {\r\n              // Container object has been created and is ready to be accepted\r\n              _state = 'done';\r\n              _bootStarted = false;\r\n\r\n              _clearTimerAndListener();\r\n              for (p in _content) {\r\n                if (_content.hasOwnProperty(p)) {\r\n                  _containerInfo[p] = _content[p];\r\n                }\r\n              }\r\n\r\n              _content.message = 'SWAC successfully loaded';\r\n              _content.auth = _content.authentication;\r\n              _content.SWAC = (typeof SWACInstance === 'object') ? SWACInstance : new SWACInstance();\r\n              delete _content.authentication;\r\n              delete _content.url;\r\n              delete _content.extensions;\r\n              delete _content.namespace;\r\n              if (!data.c.details) { //introduced in 1.4.0 for fullName \r\n                _containerInfo['details'] = {\r\n                  path: ['<root>']\r\n                };\r\n              }\r\n              //merge ok2 message info into containerInfo object\r\n              for (p in data.c) {\r\n                if (p !== 'message' && data.c.hasOwnProperty(p)) {\r\n                  if (!_containerInfo.hasOwnProperty(p)) {\r\n                    _containerInfo[p] = data.c[p]; //used first for fullName and designMode 18/07/2017\r\n                  }\r\n                }\r\n              }\r\n\r\n              delete _content._internal;\r\n\r\n              SWACInstance.Hub.prototype.containerVersion = _content.containerVersion;\r\n\r\n              success(_content);\r\n            }\r\n            else if ((data.t === 'boot') && (data.c.message === 'peng')) {\r\n              _clearTimerAndListener();\r\n              failure({ message: data.c.reason });\r\n            }\r\n          }\r\n        }\r\n      },\r\n\r\n     /**\r\n     * Check for alternative communication channel\r\n     *\r\n     * @private\r\n     * @method _checkAlternativeCommunicationChannel\r\n     * @return {function} function for communications\r\n     */\r\n      _checkAlternativeCommunicationChannel = function () {\r\n        if (_p === self) {\r\n          if (typeof swacNative === 'object' && typeof swacNative.postMessage === 'function') {\r\n            return swacNative.postMessage; //chromioum convention\r\n          }\r\n          else if (window.external && typeof window.external.postMessage === 'function') {\r\n            return window.external.postMessage; //IE convention\r\n          }\r\n        }\r\n        return null;\r\n      },\r\n\r\n      // Iniates the bootstrap mechanism with pre-checks and time-out.\r\n      _bootstrap = function (success, failure, version, auth, timeout) {\r\n        version = version || '*';                     // default is container's current\r\n        timeout = timeout || 1000;                    // default timeout is 1s\r\n        failure = failure || function (event) { };    // do nothing, if no onfailure callback was specified\r\n        auth = auth || 'no';                          // default is no authentication\r\n\r\n        var otherChannel,\r\n            pingMsg,\r\n            extensionList = [],\r\n            k;\r\n\r\n        if (_state === 'done') {\r\n          window.setTimeout(function () {\r\n            failure({ message: 'Boot phase already done' });\r\n          }, 0);\r\n          return;\r\n        }\r\n        else if (!_bootStarted) {\r\n          _bootStarted = true;\r\n        }\r\n        else {\r\n          window.setTimeout(function () {\r\n            failure({ message: 'Boot phase in progress' });\r\n          }, 0);\r\n          return;\r\n        }\r\n\r\n        otherChannel = _checkAlternativeCommunicationChannel();\r\n\r\n        if (_p === self && typeof otherChannel !== 'function' && typeof window['swacPostMessage'] !== 'function') {\r\n          _state = 'failed';\r\n          _containerInfo['details'] = {\r\n            path: ['<root>']\r\n          };\r\n          window.setTimeout(function () {\r\n            failure({ message: 'Component is not embedded into an iframe' });\r\n          }, 0);\r\n        }\r\n        else {\r\n          if (typeof window['swacPostMessage'] !== 'function') {\r\n            if (typeof otherChannel === 'function') {\r\n              window['swacPostMessage'] = otherChannel;\r\n            }\r\n            else {\r\n              window['swacPostMessage'] = function (message, targetOrigin, transfer) {\r\n                return _p.postMessage(message, targetOrigin);\r\n              };\r\n            }\r\n          }\r\n          _msgHandler = function (event) {\r\n            _receiveMessage(event, success, failure);\r\n          };\r\n\r\n          _state = 'waiting';\r\n          if (window.addEventListener) {\r\n            window.addEventListener('message', _msgHandler, false);\r\n          } else {\r\n            window.attachEvent('onmessage', _msgHandler);\r\n          }\r\n\r\n          _bootTimer = window.setTimeout(function () {\r\n            if (_state !== 'done') {\r\n              _state = 'timedout';\r\n              _containerInfo['details'] = {\r\n                path: ['<root>']\r\n              };\r\n              _clearTimerAndListener();\r\n              failure({ message: 'Bootload sequence timed out' });\r\n            }\r\n          }, timeout);\r\n\r\n          if ((arguments[6] !== null) && (typeof arguments[6] !== 'undefined')) {\r\n            // Normalize extension list to support old versions\r\n            for (k = 0; k < arguments[6].length; k++) {\r\n              if (typeof arguments[6][k] === 'object') {\r\n                extensionList.push(arguments[6][k].extension);\r\n                _extensionsAliasMap[arguments[6][k].extension] = arguments[6][k].as;\r\n              }\r\n              else {\r\n                extensionList.push(arguments[6][k]);\r\n              }\r\n            }\r\n          }\r\n\r\n          pingMsg = _createMessage({ message: 'ping', version: version, authentication: auth, attributes: arguments[5], extensions: extensionList });\r\n          swacPostMessage(pingMsg, '*'); // targetOrigin is application-specific, use * here.\r\n        }\r\n      };\r\n\r\n  var _bootstrapSWAC = function (success, failure, version, auth, extensions, timeout) {\r\n    var _timeout = timeout,\r\n      _extensions = extensions;\r\n\r\n    if (typeof extensions === 'number') {\r\n      _timeout = extensions;\r\n      _extensions = null;\r\n    }\r\n    _bootstrap(success, failure, version, auth, _timeout, null, _extensions);\r\n  };\r\n\r\n\r\n  //////////////\r\n  // PUBLIC   //\r\n  //////////////\r\n\r\n  return {\r\n    /**\r\n    * Initialize the SWAC component boot phase\r\n    *\r\n    * @method start\r\n    * @param {function} success success callback.\r\n    * @param {function} failure failure callback.\r\n    * @param {string} version SWAC version used to develop the component.\r\n    * @param {string} auth Specify if component require authentication.\r\n    * @param {number} timeout SWACBoot.start timeout in milliseconds.\r\n    */\r\n    start: _bootstrapSWAC,\r\n    \r\n    _internal: {\r\n      /**\r\n      * Container informations.\r\n      *\r\n      * @protected\r\n      * @property _internal.containerInfo\r\n      * @return {object} returns an object containing informations received from the container\r\n      */\r\n      containerInfo: _containerInfo\r\n    }\r\n  };\r\n\r\n}());\r\n\r\n/**\r\n* Provide the version of the object.\r\n*\r\n* @property version\r\n* @type String\r\n*/\r\nSWACBoot.version = '1.5.1';\r\n\r\n    return SWACBoot;\r\n  };\r\n\r\n  try {\r\n    if (typeof window.SWACBoot === 'undefined') {\r\n      window.SWACBoot = swacBootModule();\r\n    }\r\n\r\n    if ((typeof module !== 'undefined') && (typeof module.exports !== 'undefined')) {\r\n      module.exports = window.SWACBoot;\r\n      module.exports['default'] = module.exports;\r\n    }\r\n    else if ((typeof define === 'function' && (typeof define.amd !== 'undefined')) &&\r\n        (typeof requirejs !== 'undefined') &&\r\n        (typeof requirejs.s.contexts._.config !== 'undefined') &&\r\n        (typeof requirejs.s.contexts._.config.paths['@swac/boot'] !== 'undefined')) {\r\n      define(function () {\r\n        return window.SWACBoot;\r\n      });\r\n    }\r\n    else if ((typeof SystemJS !== 'undefined') && SystemJS.map.hasOwnProperty('@swac/boot')) {\r\n      define(function () {\r\n        return window.SWACBoot;\r\n      });\r\n    }\r\n  }\r\n  catch (e) { }\r\n\r\n})();"]}